{
  "components" : [
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-pgp/4.0.0B1-RELEASE/com/adaptris/security/pgp/PGPVerifyService.html",
      "fullClassName" : "com.adaptris.security.pgp.PGPVerifyService",
      "className" : "PGPVerifyService",
      "packageName" : "com.adaptris.security.pgp",
      "componentType" : "service",
      "alias" : "pgp-verify",
      "deprecated" : false,
      "jarFileName" : "interlok-pgp.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Verify sign data using a PGP/GPG public key",
        "tag" : "pgp,gpg,sign,signature,verify,public key"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Verify sign data using a PGP/GPG public key\",\n                  tag=\"pgp,gpg,sign,signature,verify,public key\",\n                  since=\"3.9.2\")\npublic class PGPVerifyService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Verify sign data using a PGP/GPG public key\",\n                  tag=\"pgp,gpg,sign,signature,verify,public key\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">PGPVerifyService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service provides a way to verify GPG/PGP signed messages. It requires the public key of whom signed the message, the signed message, and (if the signature is detached) the signature. It will will also optionally return the original/unsigned message (especially useful if the signature was not detached). \n    <pgp-verify>\n        <unique-id>jovial-elion</unique-id>\n        <public-key class=\"constant-data-input-parameter\">\n            <value>-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n    mQENBF2ckxABCAC5Kfu39ky3OIXkxwWOJx70G2dLRYvDMHXf3ZraUPNRMIhh3ZGx\n    -----END PGP PUBLIC KEY BLOCK-----</value>\n        </public-key>\n        <signed-message class=\"stream-payload-input-parameter\"/>         <!-- signed message (without signature, as it's detached) -->\n        <signature class=\"metadata-stream-input-parameter\">              <!-- detached signature comes into message metadata -->\n            <metadata-key>signature</metadata-key>\n        </signature>\n        <original-message class=\"string-payload-data-output-parameter\"/> <!-- optional original message, without signature -->\n    </pgp-verify>",
      "descriptionHtml" : "This service provides a way to verify GPG/PGP signed messages. It requires the public key of whom signed the message, the signed message, and (if the signature is detached) the signature. It will will also optionally return the original/unsigned message (especially useful if the signature was not detached). \n<pre><code>\n    &lt;pgp-verify&gt;\n        &lt;unique-id&gt;jovial-elion&lt;/unique-id&gt;\n        &lt;public-key class=\"constant-data-input-parameter\"&gt;\n            &lt;value&gt;-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n    mQENBF2ckxABCAC5Kfu39ky3OIXkxwWOJx70G2dLRYvDMHXf3ZraUPNRMIhh3ZGx\n    -----END PGP PUBLIC KEY BLOCK-----&lt;/value&gt;\n        &lt;/public-key&gt;\n        &lt;signed-message class=\"stream-payload-input-parameter\"/&gt;         &lt;!-- signed message (without signature, as it's detached) --&gt;\n        &lt;signature class=\"metadata-stream-input-parameter\"&gt;              &lt;!-- detached signature comes into message metadata --&gt;\n            &lt;metadata-key&gt;signature&lt;/metadata-key&gt;\n        &lt;/signature&gt;\n        &lt;original-message class=\"string-payload-data-output-parameter\"/&gt; &lt;!-- optional original message, without signature --&gt;\n    &lt;/pgp-verify&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Security/PGP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-pgp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultEventHandler.html",
      "fullClassName" : "com.adaptris.core.DefaultEventHandler",
      "className" : "DefaultEventHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "default-event-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Sends MessageLifecycleEvents to the specified location",
        "tag" : "base,events"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Sends MessageLifecycleEvents to the specified location\",\n                  tag=\"base,events\")\npublic class DefaultEventHandler\nextends EventHandlerBase",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Sends MessageLifecycleEvents to the specified location\",\n                  tag=\"base,events\")\npublic class <span class=\"typeNameLabel\">DefaultEventHandler</span>\nextends <a href=\"EventHandlerBase.html\" title=\"class in com.adaptris.core\" target=\"_new\">EventHandlerBase</a>",
      "description" : "Basic implementation of EventHandler.",
      "descriptionHtml" : "<p> Basic implementation of <code>EventHandler</code>. </p>",
      "inheritance" : [
        {
          "name" : "EventHandlerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/EventHandlerBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/LargeFsConsumer.html",
      "fullClassName" : "com.adaptris.core.lms.LargeFsConsumer",
      "className" : "LargeFsConsumer",
      "packageName" : "com.adaptris.core.lms",
      "componentType" : "consumer",
      "alias" : "large-fs-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "originalname",
          "fsFileSize",
          "lastmodified",
          "fsConsumeDir",
          "_interlokMessageConsumedFrom",
          "fsParentDir"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from the filesystem with large message support",
        "tag" : "consumer,fs,filesystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from the filesystem with large message support\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=NullConnection.class)\npublic class LargeFsConsumer\nextends FsConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from the filesystem with large message support\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">LargeFsConsumer</span>\nextends <a href=\"../fs/FsConsumer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\">FsConsumer</a>",
      "description" : "File system implementation of AdaptrisMessageConsumer with large message support. If a file based url is used. e.g. file:///c:/path/to/my/directory or file:////path/to/my/directory then the patch is considered to be fully qualified If just a path is returned, then it is considered to be relative to the current working directory. e.g. if /opt/fred is used, and the adapter is installed to /opt/adapter, then the fully qualified name is /opt/adapter/opt/fred. On windows based platforms, you should always use a file based url. Additionally the behaviour of this consumer is subtly different from the standard FsConsumer : Encoding is supported if you use a FileBackedMimeEncoder. The default AdaptrisMessageFactory implementation is FileBackedMessageFactory If, at runtime, the MessageFactory implementation is not FileBackedMessageFactory, then behaviour changes to be identical to to the existing FsConsumer and uses the configured FsWorker",
      "descriptionHtml" : "<p> File system implementation of <code>AdaptrisMessageConsumer</code> with large message support. </p> \n<ul> \n <li>If a <code>file</code> based url is used. e.g. file:///c:/path/to/my/directory or file:////path/to/my/directory then the patch is considered to be fully qualified</li> \n <li>If just a path is returned, then it is considered to be relative to the current working directory. e.g. if /opt/fred is used, and the adapter is installed to /opt/adapter, then the fully qualified name is /opt/adapter/opt/fred.</li> \n</ul> \n<p> On windows based platforms, you should always use a file based url. </p> \n<p> Additionally the behaviour of this consumer is subtly different from the standard <a href=\"../fs/FsConsumer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\"><code>FsConsumer</code></a> : </p> \n<ul> \n <li>Encoding is supported if you use a <a href=\"FileBackedMimeEncoder.html\" title=\"class in com.adaptris.core.lms\" target=\"_new\"><code>FileBackedMimeEncoder</code></a>.</li> \n <li>The default AdaptrisMessageFactory implementation is <a href=\"FileBackedMessageFactory.html\" title=\"class in com.adaptris.core.lms\" target=\"_new\"><code>FileBackedMessageFactory</code></a></li> \n <li>If, at runtime, the MessageFactory implementation is not FileBackedMessageFactory, then behaviour changes to be identical to to the existing <a href=\"../fs/FsConsumer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\"><code>FsConsumer</code></a> and uses the configured FsWorker</li> \n</ul>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "FsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsConsumerImpl.html"
        },
        {
          "name" : "FsConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsConsumer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/XmlEdiStreamService.html",
      "fullClassName" : "com.adaptris.core.transform.edi.XmlEdiStreamService",
      "className" : "XmlEdiStreamService",
      "packageName" : "com.adaptris.core.transform.edi",
      "componentType" : "service",
      "alias" : "xml-edi-stream-service",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "XML to EDI (streaming) service.",
        "tag" : "service,transform,edi,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"XML to EDI (streaming) service.\",\n                  tag=\"service,transform,edi,xml\")\npublic class XmlEdiStreamService\nextends EdiCommonStreamService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"XML to EDI (streaming) service.\",\n                  tag=\"service,transform,edi,xml\")\npublic class <span class=\"typeNameLabel\">XmlEdiStreamService</span>\nextends <a href=\"EdiCommonStreamService.html\" title=\"class in com.adaptris.core.transform.edi\" target=\"_new\">EdiCommonStreamService</a>",
      "description" : "XML to EDI (streaming) service. Converts a XML file (edi data) into an EDI file given the EDI rule definition file (gXml) that informs us of the structure of the outgoing EDI document. Requires an EDI and TRANSFORM license Adapter Configuration Note no autodetection of settings is currently supported for the processing of XML documents, since the data is structured and well formed. Settings messageName name of the edi message we are expecting eg INVOIC messageVersion version of the edi message eg D96A messageOrganisation the EDIFACT governing body eg X12 or EDIFACT inputCharset Sets the encoding of the input edi document, this can be picked up from the incoming adapter message, or you can override it with this setting. Defaults to UTF-8 if no value set. outputCharset Sets the encoding of the generated XMl document, default to UTF-8 if not set. ediSeparatorSet Specifies the separator to use in the generation of the Edi document. The following classes are available: EdifactSeparatorSet - Default EDIFACT separators X12SeparatorSet - Default X12 separators TradacomsSeparatorSet - Default Tradacomm separators CustomSeparatorSet - Characters can be configured as desired xmlTagnames Specifies the XML tagname set to use parse the incoming XML document. Defaults to AdaptrisOriginalXMLTagnames, but see subclasses of: IXMLTagnames for a complete list. enableValidation Currently not supported for XML to Edi processing. enableGrammarFileCaching True by default, this avoid unnecessary processing of grammar files by ensuring that they are only read once. Since grammar files don't change once defined so no need to re-read them during processing. grammarCacheLimit This sets the maximum number of grammars that can be loaded in memory at any one given time. The default value should be fine for most instances and defaults to: ParserRulesRegistry.DEFAULT_MAX_RULES_CACHE_SIZE. Metadata config The following config items can be passed through the metadata. These would override any values from the config file. Specifying the message name EdiCommonStreamService.METADATA_KEYS.MESSAGE_NAME Specifying the message version EdiCommonStreamService.METADATA_KEYS.MESSAGE_VERSION Specifying the message organisation EdiCommonStreamService.METADATA_KEYS.MESSAGE_ORGANISATION Specifying the message grammar EdiCommonStreamService.METADATA_KEYS.MESSAGE_GXML, the message will be parsed against this file unless the other metadata items are specified. Simply put: you can pass the grammar file (url) in the metadata along with the message, and the message will be processed against it. If you do specify other metadata elements, then although the grammar will be loaded, the message will be parsed against the grammar indicated by these values rather than the supplied grammar.",
      "descriptionHtml" : "<p> XML to EDI (streaming) service. </p> \n<p> Converts a XML file (edi data) into an EDI file given the EDI rule definition file (gXml) that informs us of the structure of the outgoing EDI document. <strong>Requires an EDI and TRANSFORM license</strong> </p> \n<b>Adapter Configuration</b>\n<br> Note no autodetection of settings is currently supported for the processing of XML documents, since the data is structured and well formed.\n<br> \n<b>Settings</b>\n<br> \n<ul> \n <li><i>messageName</i><br> name of the edi message we are expecting eg INVOIC</li> \n <li><i>messageVersion</i><br> version of the edi message eg D96A</li> \n <li><i>messageOrganisation</i><br> the EDIFACT governing body eg X12 or EDIFACT</li> \n <li><i>inputCharset</i><br> Sets the encoding of the input edi document, this can be picked up from the incoming adapter message, or you can override it with this setting. Defaults to UTF-8 if no value set.</li> \n <li><i>outputCharset</i><br> Sets the encoding of the generated XMl document, default to UTF-8 if not set.</li> \n <li><i>ediSeparatorSet</i><br> Specifies the separator to use in the generation of the Edi document. The following classes are available: \n  <ul> \n   <li><a href=\"../../../adapter/edistream/parser/edi/EdifactSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\"><code>EdifactSeparatorSet</code></a> - Default EDIFACT separators</li> \n   <li><a href=\"../../../adapter/edistream/parser/edi/X12SeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\"><code>X12SeparatorSet</code></a> - Default X12 separators</li> \n   <li><a href=\"../../../adapter/edistream/parser/edi/TradacomsSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\"><code>TradacomsSeparatorSet</code></a> - Default Tradacomm separators</li> \n   <li><a href=\"../../../adapter/edistream/parser/edi/CustomSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\"><code>CustomSeparatorSet</code></a> - Characters can be configured as desired</li> \n  </ul> </li> \n <li><i>xmlTagnames</i><br> Specifies the XML tagname set to use parse the incoming XML document. Defaults to <a href=\"../../../adapter/edistream/parser/xml/tagnames/AdaptrisOriginalXMLTagnames.html\" title=\"class in com.adaptris.adapter.edistream.parser.xml.tagnames\" target=\"_new\"><code>AdaptrisOriginalXMLTagnames</code></a>, but see subclasses of: <a href=\"../../../adapter/edistream/parser/xml/tagnames/IXMLTagnames.html\" title=\"interface in com.adaptris.adapter.edistream.parser.xml.tagnames\" target=\"_new\"><code>IXMLTagnames</code></a> for a complete list.</li> \n <li><i>enableValidation</i><br> Currently not supported for XML to Edi processing.</li> \n <li><i>enableGrammarFileCaching</i><br> True by default, this avoid unnecessary processing of grammar files by ensuring that they are only read once. Since grammar files don't change once defined so no need to re-read them during processing.</li> \n <li><i>grammarCacheLimit</i><br> This sets the maximum number of grammars that can be loaded in memory at any one given time. The default value should be fine for most instances and defaults to: <a href=\"../../../adapter/edistream/parser/ParserRulesRegistry.html#DEFAULT_MAX_RULES_CACHE_SIZE\" target=\"_new\"><code>ParserRulesRegistry.DEFAULT_MAX_RULES_CACHE_SIZE</code></a>.</li> \n</ul> \n<p></p> \n<p> <b>Metadata config</b> </p> The following config items can be passed through the metadata. These would override any values from the config file. \n<ul> \n <li>Specifying the message name <a href=\"EdiCommonStreamService.METADATA_KEYS.html#MESSAGE_NAME\" target=\"_new\"><code>EdiCommonStreamService.METADATA_KEYS.MESSAGE_NAME</code></a></li> \n <li>Specifying the message version <a href=\"EdiCommonStreamService.METADATA_KEYS.html#MESSAGE_VERSION\" target=\"_new\"><code>EdiCommonStreamService.METADATA_KEYS.MESSAGE_VERSION</code></a></li> \n <li>Specifying the message organisation <a href=\"EdiCommonStreamService.METADATA_KEYS.html#MESSAGE_ORGANISATION\" target=\"_new\"><code>EdiCommonStreamService.METADATA_KEYS.MESSAGE_ORGANISATION</code></a></li> \n <li>Specifying the message grammar <a href=\"EdiCommonStreamService.METADATA_KEYS.html#MESSAGE_GXML\" target=\"_new\"><code>EdiCommonStreamService.METADATA_KEYS.MESSAGE_GXML</code></a>, the message will be parsed against this file unless the other metadata items are specified.</li> \n</ul> \n<p> Simply put: you can pass the grammar file (url) in the metadata along with the message, and the message will be processed against it. If you do specify other metadata elements, then although the grammar will be loaded, the message will be parsed against the grammar indicated by these values rather than the supplied grammar. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "LicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true"
        },
        {
          "name" : "EdiCommonStreamService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/EdiCommonStreamService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/AWSKeysAuthentication.html",
      "fullClassName" : "com.adaptris.aws.AWSKeysAuthentication",
      "className" : "AWSKeysAuthentication",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-keys-authentication",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Specify explicit keys for AWS access. Either the root keys for the AWS account (not recommended) or IAM keys.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Specify explicit keys for AWS access. Either the root keys for the AWS account (not recommended) or IAM keys.\")\npublic class AWSKeysAuthentication\nextends java.lang.Object\nimplements AWSAuthentication",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Specify explicit keys for AWS access. Either the root keys for the AWS account (not recommended) or IAM keys.\")\npublic class <span class=\"typeNameLabel\">AWSKeysAuthentication</span>\nextends java.lang.Object\nimplements <a href=\"AWSAuthentication.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">AWSAuthentication</a>",
      "description" : "Specify explicit keys for AWS access. Either the root keys for the AWS account (not recommended) or IAM keys. In the event that both the secret and access key are left blank; then this will not create any credentials which will cause the underlying system to default to a default AWS authentication chain",
      "descriptionHtml" : "Specify explicit keys for AWS access. Either the root keys for the AWS account (not recommended) or IAM keys. \n<p> In the event that both the secret and access key are left blank; then this will not create any credentials which will cause the underlying system to default to a default AWS authentication chain </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.ExampleServiceConfig",
      "className" : "ExampleServiceConfig",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "dummy-placeholder-service-element",
      "deprecated" : true,
      "removalVersion" : "4.0.0",
      "removalMessage" : "moved to com.adaptris.interlok.junit.scaffolding",
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyRoutingService.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JettyRoutingService",
      "className" : "JettyRoutingService",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "service",
      "alias" : "jetty-routing-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Specify the next branch based on the jettyURI and method",
        "tag" : "service,jetty,branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Specify the next branch based on the jettyURI and method\",\n                  tag=\"service,jetty,branching\",\n                  branchSelector=true)\npublic class JettyRoutingService\nextends BranchingServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Specify the next branch based on the jettyURI and method\",\n                  tag=\"service,jetty,branching\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">JettyRoutingService</span>\nextends <a href=\"../../BranchingServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">BranchingServiceImp</a>",
      "description" : "Use as part of a BranchingServiceCollection to branch based on the jetty URI and method. Takes the metadata values associated with CoreConstants.HTTP_METHOD and JettyConstants.JETTY_URI and matches them against a list of configured routes. If a route matches the URI and the http method (if specified) then the next service id is set appropriately.",
      "descriptionHtml" : "Use as part of a \n<a href=\"../../BranchingServiceCollection.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>BranchingServiceCollection</code></a> to branch based on the jetty URI and method. \n<p> Takes the metadata values associated with <a href=\"../../CoreConstants.html#HTTP_METHOD\" target=\"_new\"><code>CoreConstants.HTTP_METHOD</code></a> and <a href=\"JettyConstants.html#JETTY_URI\" target=\"_new\"><code>JettyConstants.JETTY_URI</code></a> and matches them against a list of configured routes. If a route matches the URI and the http method (if specified) then the next service id is set appropriately. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "BranchingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/BranchingServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/ChangeCharEncodingService.html",
      "fullClassName" : "com.adaptris.core.services.ChangeCharEncodingService",
      "className" : "ChangeCharEncodingService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "change-char-encoding-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Change the character encoding of a message",
        "tag" : "service,encoding"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Change the character encoding of a message\",\n                  tag=\"service,encoding\")\npublic class ChangeCharEncodingService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Change the character encoding of a message\",\n                  tag=\"service,encoding\")\npublic class <span class=\"typeNameLabel\">ChangeCharEncodingService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Changes the character encoding associated with a message. this service does nothing with the data, but simply changes the character encoding associated with the message using InterlokMessage.setContentEncoding(String). If this service is used, and there is no configured character encoding then the character encoding associated with the message is set to null (which forces the platform default encoding).",
      "descriptionHtml" : "Changes the character encoding associated with a message. \n<p> this service does nothing with the data, but simply changes the character encoding associated with the message using <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#setContentEncoding(java.lang.String)\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.setContentEncoding(String)</code></a>. If this service is used, and there is no configured character encoding then the character encoding associated with the message is set to null (which forces the platform default encoding). </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/Client.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.Client",
      "className" : "Client",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-client",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class Client\nextends java.lang.Object\nimplements Parameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Client</span>\nextends java.lang.Object\nimplements <a href=\"Parameter.html\" title=\"interface in com.adaptris.core.jms.solace.parameters\" target=\"_new\">Parameter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-rest-health-check/4.0.0B1-RELEASE/com/adaptris/rest/healthcheck/WorkflowState.html",
      "fullClassName" : "com.adaptris.rest.healthcheck.WorkflowState",
      "className" : "WorkflowState",
      "packageName" : "com.adaptris.rest.healthcheck",
      "componentType" : "object",
      "alias" : "workflow-state",
      "deprecated" : false,
      "jarFileName" : "interlok-rest-health-check.jar",
      "profile" : { },
      "annotationDetails" : "public class WorkflowState\nextends State",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">WorkflowState</span>\nextends <a href=\"State.html\" title=\"class in com.adaptris.rest.healthcheck\" target=\"_new\">State</a>",
      "inheritance" : [
        {
          "name" : "State",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-rest-health-check/4.0.0B1-RELEASE/com/adaptris/rest/healthcheck/State.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Management/REST: Health Check",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-rest-health-check",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/timestamp/LastMessageTimestampGenerator.html",
      "fullClassName" : "com.adaptris.core.services.metadata.timestamp.LastMessageTimestampGenerator",
      "className" : "LastMessageTimestampGenerator",
      "packageName" : "com.adaptris.core.services.metadata.timestamp",
      "componentType" : "object",
      "alias" : "last-message-timestamp-generator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LastMessageTimestampGenerator\nextends java.lang.Object\nimplements TimestampGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LastMessageTimestampGenerator</span>\nextends java.lang.Object\nimplements <a href=\"TimestampGenerator.html\" title=\"interface in com.adaptris.core.services.metadata.timestamp\" target=\"_new\">TimestampGenerator</a>",
      "description" : "Timestamp Generator implementation that returns the last Date a message passed through the service.",
      "descriptionHtml" : "Timestamp Generator implementation that returns the last \n<code>Date</code> a message passed through the service.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/fs/StandardWorker.html",
      "fullClassName" : "com.adaptris.fs.StandardWorker",
      "className" : "StandardWorker",
      "packageName" : "com.adaptris.fs",
      "componentType" : "object",
      "alias" : "fs-standard-worker",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StandardWorker\nextends java.lang.Object\nimplements FsWorker",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StandardWorker</span>\nextends java.lang.Object\nimplements <a href=\"FsWorker.html\" title=\"interface in com.adaptris.fs\" target=\"_new\">FsWorker</a>",
      "description" : "Implementation of FsWorker that uses standard java.io to perform put and get operations.",
      "descriptionHtml" : "Implementation of \n<a href=\"FsWorker.html\" title=\"interface in com.adaptris.fs\" target=\"_new\"><code>FsWorker</code></a> that uses standard java.io to perform put and get operations.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/StringMetadataConverter.html",
      "fullClassName" : "com.adaptris.core.jms.StringMetadataConverter",
      "className" : "StringMetadataConverter",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-string-metadata-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StringMetadataConverter\nextends MetadataConverter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringMetadataConverter</span>\nextends <a href=\"MetadataConverter.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MetadataConverter</a>",
      "description" : "MetadataElement key and value set as property of javax.jms.Message using setStringProperty(String key, String value).",
      "descriptionHtml" : "<code>MetadataElement</code> key and value set as property of \n<code>javax.jms.Message</code> using \n<code>setStringProperty(String key, String value)</code>.",
      "inheritance" : [
        {
          "name" : "MetadataConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MetadataConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MultiPayloadStreamInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MultiPayloadStreamInputParameter",
      "className" : "MultiPayloadStreamInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "multi-payload-stream-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MultiPayloadStreamInputParameter\nextends PayloadStreamInputParameter\nimplements DataInputParameter<java.io.InputStream>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultiPayloadStreamInputParameter</span>\nextends <a href=\"PayloadStreamInputParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">PayloadStreamInputParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.io.InputStream&gt;",
      "description" : "This MultiPayloadDataInputParameter is used when you want to source data from the MultiPayloadAdaptrisMessage payload.",
      "descriptionHtml" : "This \n<code>MultiPayloadDataInputParameter</code> is used when you want to source data from the \n<a href=\"../MultiPayloadAdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>MultiPayloadAdaptrisMessage</code></a> payload.",
      "inheritance" : [
        {
          "name" : "PayloadStreamInputParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/PayloadStreamInputParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/exception/ExceptionAsJson.html",
      "fullClassName" : "com.adaptris.core.json.exception.ExceptionAsJson",
      "className" : "ExceptionAsJson",
      "packageName" : "com.adaptris.core.json.exception",
      "componentType" : "object",
      "alias" : "exception-as-json",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Serialize an exception as JSON when using ExceptionReportService",
        "tag" : "json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Serialize an exception as JSON when using ExceptionReportService\",\n                  tag=\"json\")\npublic class ExceptionAsJson\nextends java.lang.Object\nimplements ExceptionSerializer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Serialize an exception as JSON when using ExceptionReportService\",\n                  tag=\"json\")\npublic class <span class=\"typeNameLabel\">ExceptionAsJson</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionSerializer.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.exception\" class=\"externalLink\" target=\"_new\">ExceptionSerializer</a>",
      "description" : "Write the exception as a JSON object using jackson-databind when using a ExceptionReportService. Writes the minimal amount of information possible which is the Throwable.getMessage(); the workflow from where the message was being processed (if available); and the location of the error (i.e. the service that threw the exception).",
      "descriptionHtml" : "Write the exception as a JSON object using \n<code>jackson-databind</code> when using a \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionReportService.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.exception\" class=\"externalLink\" target=\"_new\"><code>ExceptionReportService</code></a>. \n<p> Writes the minimal amount of information possible which is the <code>Throwable.getMessage()</code>; the workflow from where the message was being processed (if available); and the location of the error (i.e. the service that threw the exception). </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-wmq/4.0.0B1-RELEASE/com/adaptris/core/jms/xa/wmq/XaBasicMqSeriesImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.xa.wmq.XaBasicMqSeriesImplementation",
      "className" : "XaBasicMqSeriesImplementation",
      "packageName" : "com.adaptris.core.jms.xa.wmq",
      "componentType" : "object",
      "alias" : "xa-basic-mq-series-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-wmq.jar",
      "profile" : { },
      "annotationDetails" : "public class XaBasicMqSeriesImplementation\nextends BasicMqSeriesImplementation\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XaBasicMqSeriesImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-webspheremq/4.0.0B1-RELEASE/com/adaptris/core/jms/wmq/BasicMqSeriesImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms.wmq\" class=\"externalLink\" target=\"_new\">BasicMqSeriesImplementation</a>\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "BasicMqSeriesImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-webspheremq/4.0.0B1-RELEASE/com/adaptris/core/jms/wmq/BasicMqSeriesImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/WebsphereMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-wmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.FailFirstMockMessageProducer",
      "className" : "FailFirstMockMessageProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockSkipProducerService",
      "className" : "MockSkipProducerService",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "service",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/FindAndReplacePreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.FindAndReplacePreprocessor",
      "className" : "FindAndReplacePreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "find-and-replace-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class FindAndReplacePreprocessor\nextends java.lang.Object\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FindAndReplacePreprocessor</span>\nextends java.lang.Object\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/LongStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.LongStatementParameter",
      "className" : "LongStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-long-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LongStatementParameter\nextends TypedStatementParameter<java.lang.Long>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LongStatementParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.lang.Long&gt;",
      "description" : "Long Statement Parameter. If convert-null is true, then empty/blank/whitespace only values will default to 0.",
      "descriptionHtml" : "<code>Long</code> Statement Parameter. \n<p> If <code>convert-null</code> is true, then empty/blank/whitespace only values will default to 0. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/MysqlStatementCreator.html",
      "fullClassName" : "com.adaptris.jdbc.MysqlStatementCreator",
      "className" : "MysqlStatementCreator",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "mysql-statement-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MysqlStatementCreator\nextends java.lang.Object\nimplements CallableStatementCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MysqlStatementCreator</span>\nextends java.lang.Object\nimplements <a href=\"CallableStatementCreator.html\" title=\"interface in com.adaptris.jdbc\" target=\"_new\">CallableStatementCreator</a>",
      "description" : "MySQL CallableStatement generator. Depending on which version of the mysql jdbc driver you use, you can either use MysqlStatementCreator or DefaultStatementCreator",
      "descriptionHtml" : "MySQL CallableStatement generator. \n<p> Depending on which version of the mysql jdbc driver you use, you can either use <a href=\"MysqlStatementCreator.html\" title=\"class in com.adaptris.jdbc\" target=\"_new\"><code>MysqlStatementCreator</code></a> or <a href=\"DefaultStatementCreator.html\" title=\"class in com.adaptris.jdbc\" target=\"_new\"><code>DefaultStatementCreator</code></a> </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/transaction/XACachedJmsTransactionManager.html",
      "fullClassName" : "com.adaptris.xa.jms.transaction.XACachedJmsTransactionManager",
      "className" : "XACachedJmsTransactionManager",
      "packageName" : "com.adaptris.xa.jms.transaction",
      "componentType" : "object",
      "alias" : "xa-cached-jms-transaction-manager",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-atomikos.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transaction manager that caches XAResources, so only enlists and delists once per transaction.",
        "tag" : "transactions,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transaction manager that caches XAResources, so only enlists and delists once per transaction.\",\n                  tag=\"transactions,jms\")\npublic class XACachedJmsTransactionManager\nextends XAJmsTransactionManager",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transaction manager that caches XAResources, so only enlists and delists once per transaction.\",\n                  tag=\"transactions,jms\")\npublic class <span class=\"typeNameLabel\">XACachedJmsTransactionManager</span>\nextends <a href=\"XAJmsTransactionManager.html\" title=\"class in com.adaptris.xa.jms.transaction\" target=\"_new\">XAJmsTransactionManager</a>",
      "description" : "Transaction manager that attaches any created transactions to the current thread. Further, this transaction manager will ignore calls to enlist/delist resources that have already been enlisted for the current transaction. This attempts to increase performance by skipping enlisting and delisting when you using message batching (multiple messages per transaction). You can further configure the transaction manager by adding a transactions.properties file to your classpath. For this TransactionManager implementation you must set the following property in your transactions.properties file;  com.atomikos.icatch.automatic_resource_registration=true A typical transactions.properties file will look like the following;  com.atomikos.icatch.automatic_resource_registration=true\n com.atomikos.icatch.max_timeout=3600000\n com.atomikos.icatch.default_jta_timeout=3600000\n The two timeout values above must be set to a value greater than the time it takes your consumer to begin a transaction, process messages and finally commit/rollback the transaction.",
      "descriptionHtml" : "<p> Transaction manager that attaches any created transactions to the current thread. </p> \n<p> Further, this transaction manager will ignore calls to enlist/delist resources that have already been enlisted for the current transaction. This attempts to increase performance by skipping enlisting and delisting when you using message batching (multiple messages per transaction). </p> \n<p> You can further configure the transaction manager by adding a transactions.properties file to your classpath. </p> \n<p> For this TransactionManager implementation you must set the following property in your transactions.properties file; </p>\n<pre> com.atomikos.icatch.automatic_resource_registration=true </pre> \n<p></p> \n<p> A typical transactions.properties file will look like the following; </p>\n<pre> com.atomikos.icatch.automatic_resource_registration=true\n com.atomikos.icatch.max_timeout=3600000\n com.atomikos.icatch.default_jta_timeout=3600000\n </pre> \n<p></p> \n<p> The two timeout values above must be set to a value greater than the time it takes your consumer to begin a transaction, process messages and finally commit/rollback the transaction. </p>",
      "inheritance" : [
        {
          "name" : "XAJmsTransactionManager",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/transaction/XAJmsTransactionManager.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Atomikos",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-atomikos",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kinesis/4.0.0B1-RELEASE/com/adaptris/aws/kinesis/InlineProducerConfiguration.html",
      "fullClassName" : "com.adaptris.aws.kinesis.InlineProducerConfiguration",
      "className" : "InlineProducerConfiguration",
      "packageName" : "com.adaptris.aws.kinesis",
      "componentType" : "connection",
      "alias" : "aws-kinesis-kpl-inline-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-kinesis.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection for supporting connectivity to AWS Kinesis",
        "tag" : "connections,amazon,aws,kinesis"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection for supporting connectivity to AWS Kinesis\",\n                  tag=\"connections,amazon,aws,kinesis\")\npublic class InlineProducerConfiguration\nextends ProducerLibraryConnection\nimplements KinesisProducerWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection for supporting connectivity to AWS Kinesis\",\n                  tag=\"connections,amazon,aws,kinesis\")\npublic class <span class=\"typeNameLabel\">InlineProducerConfiguration</span>\nextends <a href=\"ProducerLibraryConnection.html\" title=\"class in com.adaptris.aws.kinesis\" target=\"_new\">ProducerLibraryConnection</a>\nimplements <a href=\"KinesisProducerWrapper.html\" title=\"interface in com.adaptris.aws.kinesis\" target=\"_new\">KinesisProducerWrapper</a>",
      "description" : "AdaptrisConnection implementation for Amazon Kinesis using the Kinesis Producer Library. This derives its connection information from configured properties. The key difference between this and ConnectionFromProperties is that this allows you to override the AWSCredentialsProvider with a custom one. Use this if a DefaultAWSCredentialsProviderChain is not appropriate in your environment.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnection</a> implementation for Amazon Kinesis using the Kinesis Producer Library. \n<p> This derives its connection information from configured properties. The key difference between this and <a href=\"ConnectionFromProperties.html\" title=\"class in com.adaptris.aws.kinesis\" target=\"_new\"><code>ConnectionFromProperties</code></a> is that this allows you to override the <code>AWSCredentialsProvider</code> with a custom one. Use this if a <code>DefaultAWSCredentialsProviderChain</code> is not appropriate in your environment. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "ProducerLibraryConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kinesis/4.0.0B1-RELEASE/com/adaptris/aws/kinesis/ProducerLibraryConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Kinesis",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-kinesis",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PerMessageProducerSessionFactory.html",
      "fullClassName" : "com.adaptris.core.jms.PerMessageProducerSessionFactory",
      "className" : "PerMessageProducerSessionFactory",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-per-message-producer-session",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PerMessageProducerSessionFactory\nextends ProducerSessionFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PerMessageProducerSessionFactory</span>\nextends <a href=\"ProducerSessionFactoryImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">ProducerSessionFactoryImpl</a>",
      "description" : "Implementation of ProducerSessionFactory that creates a new session every time is produced.",
      "descriptionHtml" : "Implementation of \n<a href=\"ProducerSessionFactory.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>ProducerSessionFactory</code></a> that creates a new session every time is produced.",
      "inheritance" : [
        {
          "name" : "ProducerSessionFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ProducerSessionFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/DiscardResponseHeaders.html",
      "fullClassName" : "com.adaptris.core.http.apache.DiscardResponseHeaders",
      "className" : "DiscardResponseHeaders",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-discard-response-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class DiscardResponseHeaders\nextends java.lang.Object\nimplements ResponseHeaderHandler<org.apache.http.HttpResponse>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DiscardResponseHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">ResponseHeaderHandler</a>&lt;org.apache.http.HttpResponse&gt;",
      "description" : "ResponseHeaderHandler implementation that discards the headers from the HTTP response.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>ResponseHeaderHandler</code></a> implementation that discards the headers from the HTTP response.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataKeyToUpperCase.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataKeyToUpperCase",
      "className" : "MetadataKeyToUpperCase",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-key-to-upper-case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Changes matching metadata keys to uppercase",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Changes matching metadata keys to uppercase\",\n                  tag=\"service,metadata\")\npublic class MetadataKeyToUpperCase\nextends ReformatMetadataKey",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Changes matching metadata keys to uppercase\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataKeyToUpperCase</span>\nextends <a href=\"ReformatMetadataKey.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadataKey</a>",
      "description" : "Implementation of ReformatMetadataKey that converts keys to upper case.",
      "descriptionHtml" : "Implementation of \n<a href=\"ReformatMetadataKey.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ReformatMetadataKey</code></a> that converts keys to upper case.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadataKey",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadataKey.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/services/CopyBookToXmlService.html",
      "fullClassName" : "com.adaptris.as400.services.CopyBookToXmlService",
      "className" : "CopyBookToXmlService",
      "packageName" : "com.adaptris.as400.services",
      "componentType" : "service",
      "alias" : "as400-copybook-to-xml-service",
      "deprecated" : false,
      "jarFileName" : "interlok-as400.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A service that will convert a copybook payload to xml.",
        "tag" : "service,as400"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A service that will convert a copybook payload to xml.\",\n                  tag=\"service,as400\")\npublic class CopyBookToXmlService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A service that will convert a copybook payload to xml.\",\n                  tag=\"service,as400\")\npublic class <span class=\"typeNameLabel\">CopyBookToXmlService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "A simple service that will take the current message payload, that will be a copybook and convert that payload to xml, replacing the payload content with the result.",
      "descriptionHtml" : "<p> A simple service that will take the current message payload, that will be a copybook and convert that payload to xml, replacing the payload content with the result. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OS/AS400",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-as400",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/flowcontrol/CustomFlowControlProvider.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.flowcontrol.CustomFlowControlProvider",
      "className" : "CustomFlowControlProvider",
      "packageName" : "com.adaptris.google.cloud.pubsub.flowcontrol",
      "componentType" : "object",
      "alias" : "custom-flow-control-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : { },
      "annotationDetails" : "public class CustomFlowControlProvider\nextends DefaultFlowControlProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CustomFlowControlProvider</span>\nextends <a href=\"DefaultFlowControlProvider.html\" title=\"class in com.adaptris.google.cloud.pubsub.flowcontrol\" target=\"_new\">DefaultFlowControlProvider</a>",
      "inheritance" : [
        {
          "name" : "FlowControlProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/flowcontrol/FlowControlProvider.html"
        },
        {
          "name" : "DefaultFlowControlProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/flowcontrol/DefaultFlowControlProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/BytesMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.BytesMessageTranslator",
      "className" : "BytesMessageTranslator",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "bytes-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BytesMessageTranslator\nextends MessageTypeTranslatorImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BytesMessageTranslator</span>\nextends <a href=\"MessageTypeTranslatorImp.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MessageTypeTranslatorImp</a>",
      "description" : "Translates between AdaptrisMessage and javax.jms.BytesMessages.",
      "descriptionHtml" : "<p> Translates between <code>AdaptrisMessage</code> and <code>javax.jms.BytesMessages</code>. </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/clients/ServiceProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.clients.ServiceProvider",
      "className" : "ServiceProvider",
      "packageName" : "com.adaptris.tester.runtime.clients",
      "componentType" : "object",
      "alias" : "service-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class ServiceProvider\nextends ServiceToTest",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ServiceProvider</span>\nextends <a href=\"../services/ServiceToTest.html\" title=\"class in com.adaptris.tester.runtime.services\" target=\"_new\">ServiceToTest</a>",
      "description" : "Extension of ServiceToTest purely for XStreamAlias purposes.",
      "descriptionHtml" : "Extension of \n<a href=\"../services/ServiceToTest.html\" title=\"class in com.adaptris.tester.runtime.services\" target=\"_new\"><code>ServiceToTest</code></a> purely for XStreamAlias purposes.",
      "inheritance" : [
        {
          "name" : "ServiceToTest",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/ServiceToTest.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/DefaultGoogleCloudPubSubTransformationDriver.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.DefaultGoogleCloudPubSubTransformationDriver",
      "className" : "DefaultGoogleCloudPubSubTransformationDriver",
      "packageName" : "com.adaptris.google.cloud.pubsub",
      "componentType" : "object",
      "alias" : "default-google-cloud-pubsub-tranform-driver",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultGoogleCloudPubSubTransformationDriver\nextends java.lang.Object\nimplements TransformationDriver",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultGoogleCloudPubSubTransformationDriver</span>\nextends java.lang.Object\nimplements <a href=\"TransformationDriver.html\" title=\"interface in com.adaptris.google.cloud.pubsub\" target=\"_new\">TransformationDriver</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/AlphabeticAscending.html",
      "fullClassName" : "com.adaptris.core.fs.enhanced.AlphabeticAscending",
      "className" : "AlphabeticAscending",
      "packageName" : "com.adaptris.core.fs.enhanced",
      "componentType" : "object",
      "alias" : "fs-sort-alphabetic",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AlphabeticAscending\nextends java.lang.Object\nimplements FileSorter, java.util.Comparator<java.io.File>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AlphabeticAscending</span>\nextends java.lang.Object\nimplements <a href=\"FileSorter.html\" title=\"interface in com.adaptris.core.fs.enhanced\" target=\"_new\">FileSorter</a>, java.util.Comparator&lt;java.io.File&gt;",
      "description" : "Sort the list of files alphabetically.",
      "descriptionHtml" : "Sort the list of files alphabetically.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/DoWhile.html",
      "fullClassName" : "com.adaptris.core.services.conditional.DoWhile",
      "className" : "DoWhile",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "service",
      "alias" : "do-while",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Runs the configured service/list repeatedly 'WHILE' the configured condition is met.",
        "tag" : "service,conditional,loop"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Runs the configured service/list repeatedly \\'WHILE\\' the configured condition is met.\",\n                  tag=\"service,conditional,loop\",\n                  since=\"3.8.4\")\npublic class DoWhile\nextends While",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Runs the configured service/list repeatedly \\'WHILE\\' the configured condition is met.\",\n                  tag=\"service,conditional,loop\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">DoWhile</span>\nextends <a href=\"While.html\" title=\"class in com.adaptris.core.services.conditional\" target=\"_new\">While</a>",
      "description" : "Simulate a do-while loop. It differs from While in the same way that a do{ } while(condition); differs from while(condition) { }.",
      "descriptionHtml" : "Simulate a do-while loop. \n<p> It differs from <a href=\"While.html\" title=\"class in com.adaptris.core.services.conditional\" target=\"_new\"><code>While</code></a> in the same way that a <code>do{ } while(condition);</code> differs from <code>while(condition) { }</code>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "While",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/While.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceList.html",
      "fullClassName" : "com.adaptris.core.ServiceList",
      "className" : "ServiceList",
      "packageName" : "com.adaptris.core",
      "componentType" : "service-collection",
      "alias" : "service-list",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A collection of services",
        "tag" : "service,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A collection of services\",\n                  tag=\"service,base\")\npublic class ServiceList\nextends ServiceListBase",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A collection of services\",\n                  tag=\"service,base\")\npublic class <span class=\"typeNameLabel\">ServiceList</span>\nextends <a href=\"ServiceListBase.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceListBase</a>",
      "description" : "Implementation of ServiceCollection with an ordered list of Services.",
      "descriptionHtml" : "Implementation of \n<code>ServiceCollection</code> with an ordered list of \n<a href=\"Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a>s.",
      "inheritance" : [
        {
          "name" : "Service",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Service.html"
        },
        {
          "name" : "ServiceCollectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceCollectionImp.html"
        },
        {
          "name" : "ServiceListBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceListBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-expressions/4.0.0B1-RELEASE/com/adaptris/expressions/MutableConstantDataParameter.html",
      "fullClassName" : "com.adaptris.expressions.MutableConstantDataParameter",
      "className" : "MutableConstantDataParameter",
      "packageName" : "com.adaptris.expressions",
      "componentType" : "object",
      "alias" : "mutable-constant-data-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-expressions.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A preconfigured value that may change during message processing.",
        "tag" : "parameter"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A preconfigured value that may change during message processing.\",\n                  tag=\"parameter\")\npublic class MutableConstantDataParameter\nextends java.lang.Object\nimplements DataDestination<java.lang.String,​java.lang.String>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A preconfigured value that may change during message processing.\",\n                  tag=\"parameter\")\npublic class <span class=\"typeNameLabel\">MutableConstantDataParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataDestination.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataDestination</a>&lt;java.lang.String,​java.lang.String&gt;",
      "description" : "Implementation of DataDestination that allows you to configure a starting value, that may change if you use this DataDestination object as the target of an expression evaluation.",
      "descriptionHtml" : "<p> Implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataDestination.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataDestination</code></a> that allows you to configure a starting value, that may change if you use this DataDestination object as the target of an expression evaluation. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Scripting/Expressions",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-expressions",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/PropertiesFileCredentialsBuilder.html",
      "fullClassName" : "com.adaptris.aws.PropertiesFileCredentialsBuilder",
      "className" : "PropertiesFileCredentialsBuilder",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-properties-file-credentials-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Credentials provider that loads credentials from a property file either from the filesystem or classpath",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Credentials provider that loads credentials from a property file either from the filesystem or classpath\",\n                  since=\"3.9.2\")\npublic class PropertiesFileCredentialsBuilder\nextends java.lang.Object\nimplements AWSCredentialsProviderBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Credentials provider that loads credentials from a property file either from the filesystem or classpath\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">PropertiesFileCredentialsBuilder</span>\nextends java.lang.Object\nimplements <a href=\"AWSCredentialsProviderBuilder.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">AWSCredentialsProviderBuilder</a>",
      "description" : "Credentials provider that loads credentials from a property file either from the filesystem or classpath. This class uses either com.amazonaws.auth.PropertiesFileCredentialsProvider or com.amazonaws.auth.ClasspathPropertiesFileCredentialsProvider depending on whether the specified file exists or not; if the file exists then we use PropertiesFileCredentialsProvider otherwise it is assumed to be on the classpath and we use ClasspathPropertiesFileCredentialsProvider. The documentation for those two classes should be considered canonical, but essentially the AWS access key ID is expected to be in the accessKey property and the AWS secret key is expected to be in the secretKey property.",
      "descriptionHtml" : "Credentials provider that loads credentials from a property file either from the filesystem or classpath. \n<p> This class uses either <code>com.amazonaws.auth.PropertiesFileCredentialsProvider</code> or <code>com.amazonaws.auth.ClasspathPropertiesFileCredentialsProvider</code> depending on whether the specified file exists or not; if the file exists then we use <code>PropertiesFileCredentialsProvider</code> otherwise it is assumed to be on the classpath and we use <code>ClasspathPropertiesFileCredentialsProvider</code>. </p> \n<p> The documentation for those two classes should be considered canonical, but essentially the AWS access key ID is expected to be in the <code>accessKey</code> property and the AWS secret key is expected to be in the <code>secretKey</code> property. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/mime/SelectByPosition.html",
      "fullClassName" : "com.adaptris.util.text.mime.SelectByPosition",
      "className" : "SelectByPosition",
      "packageName" : "com.adaptris.util.text.mime",
      "componentType" : "object",
      "alias" : "mime-select-by-position",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SelectByPosition\nextends java.lang.Object\nimplements PartSelector",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SelectByPosition</span>\nextends java.lang.Object\nimplements <a href=\"PartSelector.html\" title=\"interface in com.adaptris.util.text.mime\" target=\"_new\">PartSelector</a>",
      "description" : "Selects a MimeBodyPart based on its position within the Multipart.",
      "descriptionHtml" : "Selects a MimeBodyPart based on its position within the Multipart.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyNoBacklogInterceptor.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JettyNoBacklogInterceptor",
      "className" : "JettyNoBacklogInterceptor",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "interceptor",
      "alias" : "jetty-no-backlog-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.7.3",
        "summary" : "Interceptor that automatically returns a 503 if its parent workflow is busy.",
        "tag" : "interceptor,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that automatically returns a 503 if its parent workflow is busy.\",\n                  tag=\"interceptor,http,https\",\n                  since=\"3.7.3\")\npublic class JettyNoBacklogInterceptor\nextends WorkflowInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that automatically returns a 503 if its parent workflow is busy.\",\n                  tag=\"interceptor,http,https\",\n                  since=\"3.7.3\")\npublic class <span class=\"typeNameLabel\">JettyNoBacklogInterceptor</span>\nextends <a href=\"../../interceptor/WorkflowInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">WorkflowInterceptorImpl</a>",
      "description" : "WorkflowInterceptor that automatically returns a 503 if it knows there is nothing available to handle the inbound message in the parent workflow. Note that this interceptor only works with PoolingWorkflow; results are undefined when used with other workflows. What actually happens is that if the current message (during workflowStart()) increases the count of messages in flight over the maximum pool size then a 503 Server Busy is immediately returned. The message is also marked with CoreConstants.STOP_PROCESSING_KEY and CoreConstants.KEY_WORKFLOW_SKIP_PRODUCER which will cause the underlying workflow to skip processing the message (effectively the message will be discarded); you will see logging to that effect at TRACE/DEBUG level.",
      "descriptionHtml" : "WorkflowInterceptor that automatically returns a 503 if it knows there is nothing available to handle the inbound message in the parent workflow. \n<p> Note that this interceptor only works with <a href=\"../../PoolingWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>PoolingWorkflow</code></a>; results are undefined when used with other workflows. What actually happens is that if the current message (during workflowStart()) increases the count of messages in flight over the maximum pool size then a <code>503 Server Busy</code> is immediately returned. The message is also marked with <a href=\"../../CoreConstants.html#STOP_PROCESSING_KEY\" target=\"_new\"><code>CoreConstants.STOP_PROCESSING_KEY</code></a> and <a href=\"../../CoreConstants.html#KEY_WORKFLOW_SKIP_PRODUCER\" target=\"_new\"><code>CoreConstants.KEY_WORKFLOW_SKIP_PRODUCER</code></a> which will cause the underlying workflow to skip processing the message (effectively the message will be discarded); you will see logging to that effect at TRACE/DEBUG level. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/FloatStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.FloatStatementParameter",
      "className" : "FloatStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-float-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FloatStatementParameter\nextends TypedStatementParameter<java.lang.Float>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FloatStatementParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.lang.Float&gt;",
      "description" : "Float Statement Parameter. If convert-null is true, then empty/blank/whitespace only values will default to 0.",
      "descriptionHtml" : "<code>Float</code> Statement Parameter. \n<p> If <code>convert-null</code> is true, then empty/blank/whitespace only values will default to 0. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TruncatedParameterLogger.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.TruncatedParameterLogger",
      "className" : "TruncatedParameterLogger",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-truncated-parameter-logging",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Log parameters, but truncate them",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Log parameters, but truncate them\",\n                  since=\"3.8.4\")\npublic class TruncatedParameterLogger\nextends java.lang.Object\nimplements ParameterLogger",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Log parameters, but truncate them\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">TruncatedParameterLogger</span>\nextends java.lang.Object\nimplements <a href=\"ParameterLogger.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\">ParameterLogger</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/InsertJsonArray.html",
      "fullClassName" : "com.adaptris.core.json.jdbc.InsertJsonArray",
      "className" : "InsertJsonArray",
      "packageName" : "com.adaptris.core.json.jdbc",
      "componentType" : "service",
      "alias" : "json-array-jdbc-insert",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Insert a JSON array into a database",
        "tag" : "service,json,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Insert a JSON array into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class InsertJsonArray\nextends InsertJsonObjects",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Insert a JSON array into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">InsertJsonArray</span>\nextends <a href=\"InsertJsonObjects.html\" title=\"class in com.adaptris.core.json.jdbc\" target=\"_new\">InsertJsonObjects</a>",
      "description" : "Convenience service for inserting a JSON array into a database. This creates insert statements based on the contents of each JSON object inside the array. A new insert statement will generated for each JSON object in the array. You will get better performance from BatchInsertJsonArray; use this if the fields in the JSON object can change but you need to insert into the same table...  \n [\n   { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" },\n   { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" },\n   { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }\n ]\n will effectively execute the following statement INSERT INTO table (firstname,lastname,dob) VALUES (?,?,?) 3 times with no batching. Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so { \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}} would still be 3 parameters, the address parameter will be '{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'",
      "descriptionHtml" : "Convenience service for inserting a JSON array into a database. \n<p> This creates insert statements based on the contents of each JSON object inside the array. A new insert statement will generated for each JSON object in the array. You will get better performance from <a href=\"BatchInsertJsonArray.html\" title=\"class in com.adaptris.core.json.jdbc\" target=\"_new\"><code>BatchInsertJsonArray</code></a>; use this if the fields in the JSON object can change but you need to insert into the same table... </p> \n<pre> <code>\n [\n   { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" },\n   { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" },\n   { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }\n ]</code>\n </pre> will effectively execute the following statement \n<code>INSERT INTO table (firstname,lastname,dob) VALUES (?,?,?)</code> 3 times with no batching. \n<p></p> \n<p> Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so <code>{ \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}}</code> would still be 3 parameters, the address parameter will be <code>'{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'</code> </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html?is-external=true"
        },
        {
          "name" : "JdbcMapInsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapInsert.html?is-external=true"
        },
        {
          "name" : "InsertJsonObject",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/InsertJsonObject.html"
        },
        {
          "name" : "InsertJsonObjects",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/InsertJsonObjects.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/SimpleIdGenerator.html",
      "fullClassName" : "com.adaptris.util.SimpleIdGenerator",
      "className" : "SimpleIdGenerator",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "simple-id-generator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleIdGenerator\nextends PlainIdGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleIdGenerator</span>\nextends <a href=\"PlainIdGenerator.html\" title=\"class in com.adaptris.util\" target=\"_new\">PlainIdGenerator</a>",
      "description" : "Variation of PlainIdGenerator which uses the hostname instead of a random sequence of bytes. The ID is generated from a combination of the current hostname, hashcode of the object, and current timestamp.",
      "descriptionHtml" : "Variation of \n<a href=\"PlainIdGenerator.html\" title=\"class in com.adaptris.util\" target=\"_new\">PlainIdGenerator</a> which uses the hostname instead of a random sequence of bytes. \n<p> The ID is generated from a combination of the current hostname, hashcode of the object, and current timestamp. </p>",
      "inheritance" : [
        {
          "name" : "PlainIdGenerator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/PlainIdGenerator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataDataInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MetadataDataInputParameter",
      "className" : "MetadataDataInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "metadata-data-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataDataInputParameter\nextends java.lang.Object\nimplements DataInputParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataDataInputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.lang.String&gt;",
      "description" : "This DataInputParameter is used when you want to source data from the AdaptrisMessage metadata. An example might be specifying that the XPath expression required for the XPathService can be found in a particular metadata item of an AdaptrisMessage.",
      "descriptionHtml" : "<p> This <code>DataInputParameter</code> is used when you want to source data from the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata. </p> \n<p> An example might be specifying that the XPath expression required for the <a href=\"../services/path/XPathService.html\" title=\"class in com.adaptris.core.services.path\" target=\"_new\"><code>XPathService</code></a> can be found in a particular metadata item of an <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-okhttp/4.0.0B1-RELEASE/com/adaptris/okhttp/headers/request/ConfiguredRequestHeaders.html",
      "fullClassName" : "com.adaptris.okhttp.headers.request.ConfiguredRequestHeaders",
      "className" : "ConfiguredRequestHeaders",
      "packageName" : "com.adaptris.okhttp.headers.request",
      "componentType" : "object",
      "alias" : "okhttp-configured-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-okhttp.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<okhttp3.Request.Builder>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">RequestHeaderProvider</a>&lt;okhttp3.Request.Builder&gt;",
      "description" : "Implementation of RequestHeaderProvider that applies configured values as headers.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>RequestHeaderProvider</code></a> that applies configured values as headers.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/OkHttp",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-okhttp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshaller.html",
      "fullClassName" : "com.adaptris.core.XStreamMarshaller",
      "className" : "XStreamMarshaller",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "xstream-marshaller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XStreamMarshaller\nextends XStreamMarshallerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XStreamMarshaller</span>\nextends <a href=\"XStreamMarshallerImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">XStreamMarshallerImpl</a>",
      "description" : "XStream version of AdaptrisMarshaller",
      "descriptionHtml" : "XStream version of \n<a href=\"AdaptrisMarshaller.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMarshaller</code></a>",
      "inheritance" : [
        {
          "name" : "AbstractMarshaller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AbstractMarshaller.html"
        },
        {
          "name" : "XStreamMarshallerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshallerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowList.html",
      "fullClassName" : "com.adaptris.core.WorkflowList",
      "className" : "WorkflowList",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "workflow-list",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Collection of Workflows",
        "tag" : "base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Collection of Workflows\",\n                  tag=\"base\")\npublic final class WorkflowList\nextends java.util.AbstractCollection<Workflow>\nimplements ComponentLifecycle, ComponentLifecycleExtension, java.util.List<Workflow>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Collection of Workflows\",\n                  tag=\"base\")\npublic final class <span class=\"typeNameLabel\">WorkflowList</span>\nextends java.util.AbstractCollection&lt;<a href=\"Workflow.html\" title=\"interface in com.adaptris.core\" target=\"_new\">Workflow</a>&gt;\nimplements <a href=\"ComponentLifecycle.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycle</a>, <a href=\"ComponentLifecycleExtension.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycleExtension</a>, java.util.List&lt;<a href=\"Workflow.html\" title=\"interface in com.adaptris.core\" target=\"_new\">Workflow</a>&gt;",
      "description" : "Container for a collection of Workflows.",
      "descriptionHtml" : "<p> Container for a collection of <code>Workflow</code>s. </p>",
      "inheritance" : [
        {
          "name" : "Workflow",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Workflow.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/AlwaysMatchSyntaxIdentifier.html",
      "fullClassName" : "com.adaptris.core.services.routing.AlwaysMatchSyntaxIdentifier",
      "className" : "AlwaysMatchSyntaxIdentifier",
      "packageName" : "com.adaptris.core.services.routing",
      "componentType" : "object",
      "alias" : "routing-always-match-syntax-identifier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AlwaysMatchSyntaxIdentifier\nextends SyntaxIdentifierBase",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AlwaysMatchSyntaxIdentifier</span>\nextends <a href=\"SyntaxIdentifierBase.html\" title=\"class in com.adaptris.core.services.routing\" target=\"_new\">SyntaxIdentifierBase</a>",
      "description" : "Always match. Always returns true when isThisSyntax() is used. Since 3.10.0 this class implements Condition which means that it can be used as part of the conditional services; if used in such a manner, then configuration is contextual, get/setDestination will be ignored (but may still have to be configured due to validation",
      "descriptionHtml" : "Always match. \n<p> Always returns true when isThisSyntax() is used. </p> \n<p> Since <strong>3.10.0</strong> this class implements <a href=\"../conditional/Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> which means that it can be used as part of the conditional services; if used in such a manner, then configuration is contextual, get/setDestination will be ignored (but may still have to be configured due to validation </p>",
      "inheritance" : [
        {
          "name" : "SyntaxIdentifierBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/NoOpParameterHandler.html",
      "fullClassName" : "com.adaptris.core.http.jetty.NoOpParameterHandler",
      "className" : "NoOpParameterHandler",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-http-ignore-parameters",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoOpParameterHandler\nextends java.lang.Object\nimplements ParameterHandler<javax.servlet.http.HttpServletRequest>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoOpParameterHandler</span>\nextends java.lang.Object\nimplements <a href=\"../server/ParameterHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\">ParameterHandler</a>&lt;javax.servlet.http.HttpServletRequest&gt;",
      "description" : "ParameterHandler implementation that ignores HTTP parameters.",
      "descriptionHtml" : "<a href=\"../server/ParameterHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>ParameterHandler</code></a> implementation that ignores HTTP parameters.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/JdbcJsonOutput.html",
      "fullClassName" : "com.adaptris.core.json.jdbc.JdbcJsonOutput",
      "className" : "JdbcJsonOutput",
      "packageName" : "com.adaptris.core.json.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-json-first-resultset-output",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Output the first resultset as JSON",
        "tag" : "json,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Output the first resultset as JSON\",\n                  tag=\"json,jdbc\")\npublic class JdbcJsonOutput\nextends StyledResultTranslatorImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Output the first resultset as JSON\",\n                  tag=\"json,jdbc\")\npublic class <span class=\"typeNameLabel\">JdbcJsonOutput</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\">StyledResultTranslatorImp</a>",
      "description" : "Implementation of ResultSetTranslator that outputs the first result set as json. Takes the first result set and writes out each row as part of a json array. You should use this output implementation if you are executing a SELECT via JdbcDataQueryService.    \n   [{   \"firstName\": \"John\",\n        \"lastName\": \"Doe\"\n    }, \n    {\n        \"firstName\": \"Anna\",\n        \"lastName\": \"Smith\"\n    },\n    {\n        \"firstName\": \"Peter\",\n        \"lastName\": \"Jones\"\n   }]",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>ResultSetTranslator</code></a> that outputs the first result set as json. \n<p> Takes the first result set and writes out each row as part of a json array. You should use this output implementation if you are executing a SELECT via <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcDataQueryService.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>JdbcDataQueryService</code></a>. </p> \n<pre>   <code>\n   [{   \"firstName\": \"John\",\n        \"lastName\": \"Doe\"\n    }, \n    {\n        \"firstName\": \"Anna\",\n        \"lastName\": \"Smith\"\n    },\n    {\n        \"firstName\": \"Peter\",\n        \"lastName\": \"Jones\"\n   }]\n   </code>  \n </pre>",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html?is-external=true"
        },
        {
          "name" : "StyledResultTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/XpathMessageSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.XpathMessageSplitter",
      "className" : "XpathMessageSplitter",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "xpath-message-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathMessageSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathMessageSplitter</span>\nextends <a href=\"MessageSplitterImp.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "Implementation of MessageSplitter which splits an XML document based on an XPath. TheMessage must be an XML document and split is specified by an XPath which returns a repeating subset of the document. Given the following input document:  \n <envelope>\n   <document>one</document>\n   <document>two</document>\n   <document>three</document>\n </envelope>\n \n then the following XPath: /envelope/document will create 3 documents each of which will only contain the element. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "<p> Implementation of <a href=\"MessageSplitter.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\"><code>MessageSplitter</code></a> which splits an XML document based on an XPath. </p>\n<p> TheMessage must be an XML document and split is specified by an XPath which returns a repeating subset of the document. </p> \n<p> Given the following input document: </p>\n<pre> <code>\n &lt;envelope&gt;\n   &lt;document&gt;one&lt;/document&gt;\n   &lt;document&gt;two&lt;/document&gt;\n   &lt;document&gt;three&lt;/document&gt;\n &lt;/envelope&gt;\n </code>\n </pre> then the following XPath: \n<code>/envelope/document</code> will create 3 documents each of which will only contain the \n<code>\n <document></document></code> element. \n<p></p> \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/Base64EncodeMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.Base64EncodeMetadataService",
      "className" : "Base64EncodeMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-base64-encode",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Base64 encode an item of metadata",
        "tag" : "service,metadata,base64"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Base64 encode an item of metadata\",\n                  tag=\"service,metadata,base64\")\npublic class Base64EncodeMetadataService\nextends Base64MetadataService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Base64 encode an item of metadata\",\n                  tag=\"service,metadata,base64\")\npublic class <span class=\"typeNameLabel\">Base64EncodeMetadataService</span>\nextends <a href=\"Base64MetadataService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">Base64MetadataService</a>",
      "description" : "Base64 encode an item of metadata. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will be encoded, and the value overwitten with the bytes after translating it into a String with the specified encoding.",
      "descriptionHtml" : "Base64 encode an item of metadata. \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will be encoded, and the value overwitten with the bytes after translating it into a String with the specified encoding. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        },
        {
          "name" : "Base64MetadataService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/Base64MetadataService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/KieConnectionWithRules.html",
      "fullClassName" : "com.adaptris.kie.services.KieConnectionWithRules",
      "className" : "KieConnectionWithRules",
      "packageName" : "com.adaptris.kie.services",
      "componentType" : "connection",
      "alias" : "kie-connection-with-rules",
      "deprecated" : false,
      "jarFileName" : "interlok-kie.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.2",
        "summary" : "Drools connection that builds up a KieContainer iteratively, adding the specified rules",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Drools connection that builds up a KieContainer iteratively, adding the specified rules\",\n                  since=\"3.8.2\")\npublic class KieConnectionWithRules\nextends KieConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Drools connection that builds up a KieContainer iteratively, adding the specified rules\",\n                  since=\"3.8.2\")\npublic class <span class=\"typeNameLabel\">KieConnectionWithRules</span>\nextends <a href=\"KieConnection.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">KieConnection</a>",
      "description" : "Connection that builds up the KieContainer programatically rather than using a kjar+releaseId.",
      "descriptionHtml" : "Connection that builds up the \n<code>KieContainer</code> programatically rather than using a \n<code>kjar+releaseId</code>.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "KieConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/KieConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/KIE",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kie",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/PollingKafkaConsumer.html",
      "fullClassName" : "com.adaptris.kafka.PollingKafkaConsumer",
      "className" : "PollingKafkaConsumer",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "consumer",
      "alias" : "polling-apache-kafka-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Receive messages via Apache Kafka",
        "tag" : "consumer,kafka"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Receive messages via Apache Kafka\",\n                  tag=\"consumer,kafka\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class PollingKafkaConsumer\nextends AdaptrisPollingConsumer\nimplements LoggingContext",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Receive messages via Apache Kafka\",\n                  tag=\"consumer,kafka\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PollingKafkaConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisPollingConsumer</a>\nimplements <a href=\"LoggingContext.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\">LoggingContext</a>",
      "description" : "Wrapper around KafkaConsumer.",
      "descriptionHtml" : "Wrapper around \n<code>KafkaConsumer</code>.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/attachment/MimeMailCreator.html",
      "fullClassName" : "com.adaptris.core.mail.attachment.MimeMailCreator",
      "className" : "MimeMailCreator",
      "packageName" : "com.adaptris.core.mail.attachment",
      "componentType" : "object",
      "alias" : "mail-mime-content-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : { },
      "annotationDetails" : "public class MimeMailCreator\nextends java.lang.Object\nimplements MailContentCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MimeMailCreator</span>\nextends java.lang.Object\nimplements <a href=\"MailContentCreator.html\" title=\"interface in com.adaptris.core.mail.attachment\" target=\"_new\">MailContentCreator</a>",
      "description" : "MailCreator implementation that assumes the AdaptrisMessage is a MIME Multipart. The selected PartSelector will be used to extract the mime part that will form the body of the email message, the other parts will be added as attachments. It will attempt to interrogate the Content-Disposition and/or Content-Type header of each MIME part to find the correct filename to use for each attachment; if the headers could not be used to infer the correct filename a unique ID is generated for each attachment and that is used as the name.",
      "descriptionHtml" : "MailCreator implementation that assumes the AdaptrisMessage is a MIME Multipart. \n<p> The selected <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/mime/PartSelector.html?is-external=true\" title=\"class or interface in com.adaptris.util.text.mime\" class=\"externalLink\" target=\"_new\"><code>PartSelector</code></a> will be used to extract the mime part that will form the body of the email message, the other parts will be added as attachments. It will attempt to interrogate the Content-Disposition and/or Content-Type header of each MIME part to find the correct filename to use for each attachment; if the headers could not be used to infer the correct filename a unique ID is generated for each attachment and that is used as the name. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/channel/CustomChannelProvider.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.channel.CustomChannelProvider",
      "className" : "CustomChannelProvider",
      "packageName" : "com.adaptris.google.cloud.pubsub.channel",
      "componentType" : "object",
      "alias" : "custom-channel-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : { },
      "annotationDetails" : "public class CustomChannelProvider\nextends ChannelProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CustomChannelProvider</span>\nextends <a href=\"ChannelProvider.html\" title=\"class in com.adaptris.google.cloud.pubsub.channel\" target=\"_new\">ChannelProvider</a>",
      "inheritance" : [
        {
          "name" : "ChannelProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/channel/ChannelProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/ConfigurableSecurityHandler.html",
      "fullClassName" : "com.adaptris.core.http.jetty.ConfigurableSecurityHandler",
      "className" : "ConfigurableSecurityHandler",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-configurable-security-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfigurableSecurityHandler\nextends java.lang.Object\nimplements SecurityHandlerWrapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfigurableSecurityHandler</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/core/management/webserver/SecurityHandlerWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.core.management.webserver\" class=\"externalLink\" target=\"_new\">SecurityHandlerWrapper</a>",
      "description" : "Jetty Security Handler Wrapper which allows the configuration of different Login Service and Authenticators.",
      "descriptionHtml" : "Jetty Security Handler Wrapper which allows the configuration of different Login Service and Authenticators.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/LargeMessageConsumer.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.LargeMessageConsumer",
      "className" : "LargeMessageConsumer",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "consumer",
      "alias" : "sonic-large-message-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public class LargeMessageConsumer\nextends AdaptrisMessageConsumerImp\nimplements javax.jms.MessageListener, progress.message.jclient.ChannelListener, LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LargeMessageConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisMessageConsumerImp</a>\nimplements javax.jms.MessageListener, progress.message.jclient.ChannelListener, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Implementation of AdaptrisMessageConsumer which uses Sonic MQ Recoverable File Channels for Large Messages. See Sonic MQ Application Programming Guide Chapter 11 for a full description of this functionality. This should be configured with a jms-connection with the appropriate Sonic based VendorImplementation, otherwise results are undefined.",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageConsumer</code> which uses Sonic MQ <i>Recoverable File Channels for Large Messages</i>. See Sonic MQ Application Programming Guide Chapter 11 for a full description of this functionality. </p> \n<p> This should be configured with a jms-connection with the appropriate Sonic based VendorImplementation, otherwise results are undefined. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.StaticMockMessageProducer",
      "className" : "StaticMockMessageProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/While.html",
      "fullClassName" : "com.adaptris.core.services.conditional.While",
      "className" : "While",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "service",
      "alias" : "while",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Runs the configured service/list repeatedly 'WHILE' the configured condition is met.",
        "tag" : "service,conditional,loop"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Runs the configured service/list repeatedly \\'WHILE\\' the configured condition is met.\",\n                  tag=\"service,conditional,loop\")\npublic class While\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Runs the configured service/list repeatedly \\'WHILE\\' the configured condition is met.\",\n                  tag=\"service,conditional,loop\")\npublic class <span class=\"typeNameLabel\">While</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "This Service allows you to test boolean (true or false) Condition's, which if evaluate to \"true\" will run a configured set of services continuously until the configured conditions do not evaluate to true. You can also set a value for the maximum amount of times your services will run regardless of whether your conditions continue to evaluate to true.   <max-loops>57</max-loops>\n The default value for the max-loops is 10. Setting this value to 0, will loop forever until your configured conditions evaluate to false. Typically your Condition will test for equality, in-line expressions or whether values exist or not. The values to test will generally come from the payload or message metadata. Also note that some conditions can be nested, such that you can test that a value is equal to another AND / OR a value is equal/not to another value.",
      "descriptionHtml" : "<p> This <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> allows you to test boolean (true or false) <a href=\"Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a>'s, which if evaluate to \"true\" will run a configured set of services continuously until the configured conditions do not evaluate to true. </p> \n<p> You can also set a value for the maximum amount of times your services will run regardless of whether your conditions continue to evaluate to true. <br> </p>\n<pre>  &lt;max-loops&gt;57&lt;/max-loops&gt;\n </pre> The default value for the max-loops is 10. Setting this value to 0, will loop forever until your configured conditions evaluate to false. \n<p></p> \n<p> Typically your <a href=\"Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> will test for equality, in-line expressions or whether values exist or not. The values to test will generally come from the payload or message metadata. <br> Also note that some conditions can be nested, such that you can test that a value is equal to another AND / OR a value is equal/not to another value. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertMetadataMatchesRegex.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertMetadataMatchesRegex",
      "className" : "AssertMetadataMatchesRegex",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-metadata-matches-regex",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertMetadataMatchesRegex\nextends MetadataAssertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertMetadataMatchesRegex</span>\nextends <a href=\"MetadataAssertion.html\" title=\"class in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">MetadataAssertion</a>",
      "description" : "Checks if all keys and corresponding regular expression in values set in MetadataAssertion.getMessageHeaders() match TestMessage.getMessageHeaders().",
      "descriptionHtml" : "Checks if all keys and corresponding regular expression in values set in \n<a href=\"MetadataAssertion.html#getMessageHeaders()\" target=\"_new\"><code>MetadataAssertion.getMessageHeaders()</code></a> match \n<a href=\"../TestMessage.html#getMessageHeaders()\" target=\"_new\"><code>TestMessage.getMessageHeaders()</code></a>.",
      "inheritance" : [
        {
          "name" : "MetadataAssertion",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/MetadataAssertion.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/ConfiguredXpathNodeListQuery.html",
      "fullClassName" : "com.adaptris.core.services.metadata.xpath.ConfiguredXpathNodeListQuery",
      "className" : "ConfiguredXpathNodeListQuery",
      "packageName" : "com.adaptris.core.services.metadata.xpath",
      "componentType" : "object",
      "alias" : "configured-xpath-nodelist-query",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredXpathNodeListQuery\nextends ConfiguredXpathQueryImpl\nimplements XpathObjectQuery",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredXpathNodeListQuery</span>\nextends <a href=\"ConfiguredXpathQueryImpl.html\" title=\"class in com.adaptris.core.services.metadata.xpath\" target=\"_new\">ConfiguredXpathQueryImpl</a>\nimplements <a href=\"XpathObjectQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathObjectQuery</a>",
      "description" : "XpathObjectQuery implementation that returns a NodeList. Note that depending on the XPath engine; it is possible that XpathQueryImpl.setAllowEmptyResults(Boolean) may have no effect, as it may return a zero length NodeList.",
      "descriptionHtml" : "<a href=\"XpathObjectQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\"><code>XpathObjectQuery</code></a> implementation that returns a \n<code>NodeList</code>. \n<p> Note that depending on the XPath engine; it is possible that <a href=\"XpathQueryImpl.html#setAllowEmptyResults(java.lang.Boolean)\" target=\"_new\"><code>XpathQueryImpl.setAllowEmptyResults(Boolean)</code></a> may have no effect, as it may return a zero length NodeList. </p>",
      "inheritance" : [
        {
          "name" : "XpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/XpathQueryImpl.html"
        },
        {
          "name" : "ConfiguredXpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/ConfiguredXpathQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-tibco/4.0.0B1-RELEASE/com/adaptris/core/jms/xa/tibco/XaBasicTibcoEmsImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.xa.tibco.XaBasicTibcoEmsImplementation",
      "className" : "XaBasicTibcoEmsImplementation",
      "packageName" : "com.adaptris.core.jms.xa.tibco",
      "componentType" : "object",
      "alias" : "xa-basic-tibco-ems-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-tibco.jar",
      "profile" : { },
      "annotationDetails" : "public class XaBasicTibcoEmsImplementation\nextends BasicTibcoEmsImplementation\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XaBasicTibcoEmsImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/core/jms/tibco/BasicTibcoEmsImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms.tibco\" class=\"externalLink\" target=\"_new\">BasicTibcoEmsImplementation</a>\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "description" : "XaBasicTibcoEmsImplementation",
      "descriptionHtml" : "<p> <code>XaBasicTibcoEmsImplementation</code> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "BasicTibcoEmsImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/core/jms/tibco/BasicTibcoEmsImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Tibco",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-tibco",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-expressions/4.0.0B1-RELEASE/com/adaptris/expressions/BooleanResultFormatter.html",
      "fullClassName" : "com.adaptris.expressions.BooleanResultFormatter",
      "className" : "BooleanResultFormatter",
      "packageName" : "com.adaptris.expressions",
      "componentType" : "object",
      "alias" : "boolean-result-formatter",
      "deprecated" : false,
      "jarFileName" : "interlok-expressions.jar",
      "profile" : { },
      "annotationDetails" : "public class BooleanResultFormatter\nextends java.lang.Object\nimplements ResultFormatter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BooleanResultFormatter</span>\nextends java.lang.Object\nimplements <a href=\"ResultFormatter.html\" title=\"interface in com.adaptris.expressions\" target=\"_new\">ResultFormatter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Scripting/Expressions",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-expressions",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/rfc5849/GenerateRfc5849Header.html",
      "fullClassName" : "com.adaptris.core.oauth.rfc5849.GenerateRfc5849Header",
      "className" : "GenerateRfc5849Header",
      "packageName" : "com.adaptris.core.oauth.rfc5849",
      "componentType" : "service",
      "alias" : "oauth-rfc5849-header-service",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-generic.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Build an RFC5849 OAUTH Authorization header and store it as metadata",
        "tag" : "oauth,oauthv1,http,https"
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.8.4\",\n                  summary=\"Build an RFC5849 OAUTH Authorization header and store it as metadata\",\n                  tag=\"oauth,oauthv1,http,https\")\npublic class GenerateRfc5849Header\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.8.4\",\n                  summary=\"Build an RFC5849 OAUTH Authorization header and store it as metadata\",\n                  tag=\"oauth,oauthv1,http,https\")\npublic class <span class=\"typeNameLabel\">GenerateRfc5849Header</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Generate an RFC5849 Authorization Header based on RFC5849 and store the result as metadata. Normally, you would use ApacheRfc5849Authenticator as your ApacheRequestAuthenticator but since generation of the header does not rely on external connectivity, we can generate the header offline and store it as metadata. If the payload is going to be application/x-www-url-form-encoded then the request body also needs to be included in the signature base string. You would specify a filter that gives you the parameters; and subsequently use a FormDataFromMetadata to generate the payload.",
      "descriptionHtml" : "Generate an RFC5849 Authorization Header based on \n<a href=\"https://tools.ietf.org/html/rfc5849\" target=\"_new\">RFC5849</a> and store the result as metadata. \n<p> Normally, you would use <a href=\"ApacheRfc5849Authenticator.html\" title=\"class in com.adaptris.core.oauth.rfc5849\" target=\"_new\"><code>ApacheRfc5849Authenticator</code></a> as your <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ApacheRequestAuthenticator.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.apache\" class=\"externalLink\" target=\"_new\"><code>ApacheRequestAuthenticator</code></a> but since generation of the header does not rely on external connectivity, we can generate the header offline and store it as metadata. </p> \n<p> If the payload is going to be <code>application/x-www-url-form-encoded</code> then the request body also needs to be included in the signature base string. You would specify a filter that gives you the parameters; and subsequently use a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/FormDataFromMetadata.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.metadata\" class=\"externalLink\" target=\"_new\"><code>FormDataFromMetadata</code></a> to generate the payload. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Generic",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-generic",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/SequentialParameterApplicator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.SequentialParameterApplicator",
      "className" : "SequentialParameterApplicator",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "sequential-parameter-applicator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SequentialParameterApplicator\nextends java.lang.Object\nimplements ParameterApplicator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SequentialParameterApplicator</span>\nextends java.lang.Object\nimplements <a href=\"ParameterApplicator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\">ParameterApplicator</a>",
      "description" : "ParameterApplicator implementation that applies parameters sequentially. This applies StatementParameter instances in the order that they are declared in adapter configuration and is the default ParameterApplicator implementation",
      "descriptionHtml" : "<a href=\"ParameterApplicator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\"><code>ParameterApplicator</code></a> implementation that applies parameters sequentially. \n<p> This applies <a href=\"StatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>StatementParameter</code></a> instances in the order that they are declared in adapter configuration and is the default <a href=\"ParameterApplicator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\"><code>ParameterApplicator</code></a> implementation </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/findreplace/ConfiguredReplacementSource.html",
      "fullClassName" : "com.adaptris.core.services.findreplace.ConfiguredReplacementSource",
      "className" : "ConfiguredReplacementSource",
      "packageName" : "com.adaptris.core.services.findreplace",
      "componentType" : "object",
      "alias" : "configured-replacement-source",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredReplacementSource\nextends AbstractReplacementSource",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredReplacementSource</span>\nextends <a href=\"AbstractReplacementSource.html\" title=\"class in com.adaptris.core.services.findreplace\" target=\"_new\">AbstractReplacementSource</a>",
      "description" : "ReplacementSource implementation which returns the passed in value. Used with FindAndReplaceService to replace text in the message.",
      "descriptionHtml" : "<a href=\"ReplacementSource.html\" title=\"interface in com.adaptris.core.services.findreplace\" target=\"_new\"><code>ReplacementSource</code></a> implementation which returns the passed in value. \n<p> Used with <a href=\"FindAndReplaceService.html\" title=\"class in com.adaptris.core.services.findreplace\" target=\"_new\"><code>FindAndReplaceService</code></a> to replace text in the message. </p>",
      "inheritance" : [
        {
          "name" : "AbstractReplacementSource",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/findreplace/AbstractReplacementSource.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/NullMessageAggregator.html",
      "fullClassName" : "com.adaptris.core.services.aggregator.NullMessageAggregator",
      "className" : "NullMessageAggregator",
      "packageName" : "com.adaptris.core.services.aggregator",
      "componentType" : "object",
      "alias" : "null-message-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullMessageAggregator\nextends java.lang.Object\nimplements MessageAggregator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullMessageAggregator</span>\nextends java.lang.Object\nimplements <a href=\"MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\">MessageAggregator</a>",
      "description" : "Special implementation of MessageAggregator that does not aggregate messages. Although an edge case; it might be that you are using this as part of a PooledSplitJoinService and you simply wish to keep the original message and ignore everything else. This aggregator has an empty joinMessage(AdaptrisMessage, Collection) and aggregate(AdaptrisMessage, Iterable) method.",
      "descriptionHtml" : "Special implementation of \n<a href=\"MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>MessageAggregator</code></a> that does not aggregate messages. \n<p> Although an edge case; it might be that you are using this as part of a <a href=\"../splitter/PooledSplitJoinService.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\"><code>PooledSplitJoinService</code></a> and you simply wish to keep the original message and ignore everything else. This aggregator has an empty <a href=\"#joinMessage(com.adaptris.core.AdaptrisMessage,java.util.Collection)\" target=\"_new\">joinMessage(AdaptrisMessage, Collection)</a> and <a href=\"#aggregate(com.adaptris.core.AdaptrisMessage,java.lang.Iterable)\" target=\"_new\">aggregate(AdaptrisMessage, Iterable)</a> method. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/CompositeResponseHeaderProvider.html",
      "fullClassName" : "com.adaptris.core.http.jetty.CompositeResponseHeaderProvider",
      "className" : "CompositeResponseHeaderProvider",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-composite-response-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeResponseHeaderProvider\nextends java.lang.Object\nimplements ResponseHeaderProvider<javax.servlet.http.HttpServletResponse>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeResponseHeaderProvider</span>\nextends java.lang.Object\nimplements <a href=\"../server/ResponseHeaderProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\">ResponseHeaderProvider</a>&lt;javax.servlet.http.HttpServletResponse&gt;",
      "description" : "ResponseHeaderProvider implementation that uses a nested set of providers to private HTTP response headers.",
      "descriptionHtml" : "<a href=\"../server/ResponseHeaderProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>ResponseHeaderProvider</code></a> implementation that uses a nested set of providers to private HTTP response headers.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ExtractMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.ExtractMetadataService",
      "className" : "ExtractMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "extract-metadata-from-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Extract additional metadata values from an item of metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract additional metadata values from an item of metadata\",\n                  since=\"3.9.0\",\n                  tag=\"service,metadata\")\npublic class ExtractMetadataService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract additional metadata values from an item of metadata\",\n                  since=\"3.9.0\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">ExtractMetadataService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Extract additional metadata values from an item of metadata. Given a metadata key url containing /record/zeus/apollo if you have a regular expression /record/(.*)/(.*) with metadata keys recordId, childId then parentId=zeus, childId=apollo will be set when this service executes.",
      "descriptionHtml" : "Extract additional metadata values from an item of metadata. \n<p> Given a metadata key <code>url</code> containing <code>/record/zeus/apollo</code> if you have a regular expression <code>/record/(.*)/(.*)</code> with metadata keys <code>recordId, childId</code> then <code>parentId=zeus</code>, <code>childId=apollo</code> will be set when this service executes. </p>\n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/MetadataProperty.html",
      "fullClassName" : "com.adaptris.core.msmq.javonet.MetadataProperty",
      "className" : "MetadataProperty",
      "packageName" : "com.adaptris.core.msmq.javonet",
      "componentType" : "object",
      "alias" : "javonet-msmq-metadata-property",
      "deprecated" : false,
      "jarFileName" : "interlok-msmq-javonet.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataProperty\nextends MessageProperty",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataProperty</span>\nextends <a href=\"MessageProperty.html\" title=\"class in com.adaptris.core.msmq.javonet\" target=\"_new\">MessageProperty</a>",
      "description" : "Copy AdaptrisMessage metadata values to and from Message fields.",
      "descriptionHtml" : "Copy AdaptrisMessage metadata values to and from \n<a href=\"Message.html\" title=\"interface in com.adaptris.core.msmq.javonet\" target=\"_new\"><code>Message</code></a> fields.",
      "inheritance" : [
        {
          "name" : "MessageProperty",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/MessageProperty.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MSMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-msmq-javonet",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/ObjectMetadataParameterHandler.html",
      "fullClassName" : "com.adaptris.core.http.jetty.ObjectMetadataParameterHandler",
      "className" : "ObjectMetadataParameterHandler",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-http-parameters-as-object-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ObjectMetadataParameterHandler\nextends ParameterHandlerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ObjectMetadataParameterHandler</span>\nextends <a href=\"ParameterHandlerImpl.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">ParameterHandlerImpl</a>",
      "description" : "ParameterHandler implementation stores HTTP headers as object metadata.",
      "descriptionHtml" : "<a href=\"../server/ParameterHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>ParameterHandler</code></a> implementation stores HTTP headers as object metadata.",
      "inheritance" : [
        {
          "name" : "ParameterHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/ParameterHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/mime/NullPartSelector.html",
      "fullClassName" : "com.adaptris.util.text.mime.NullPartSelector",
      "className" : "NullPartSelector",
      "packageName" : "com.adaptris.util.text.mime",
      "componentType" : "object",
      "alias" : "mime-null-selector",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullPartSelector\nextends java.lang.Object\nimplements PartSelector",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullPartSelector</span>\nextends java.lang.Object\nimplements <a href=\"PartSelector.html\" title=\"interface in com.adaptris.util.text.mime\" target=\"_new\">PartSelector</a>",
      "description" : "PartSelector implementation that just selects an arbitrary part. No guarantees are made about the behaviour of this implementation; it is simply included for completenes",
      "descriptionHtml" : "<a href=\"PartSelector.html\" title=\"interface in com.adaptris.util.text.mime\" target=\"_new\"><code>PartSelector</code></a> implementation that just selects an arbitrary part. \n<p> No guarantees are made about the behaviour of this implementation; it is simply included for completenes </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/DateFormatBuilder.html",
      "fullClassName" : "com.adaptris.core.services.metadata.DateFormatBuilder",
      "className" : "DateFormatBuilder",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "object",
      "alias" : "date-format-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DateFormatBuilder\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DateFormatBuilder</span>\nextends java.lang.Object",
      "description" : "Builds a DateFormat instance for use with ReformatDateService and AddTimestampMetadataService.",
      "descriptionHtml" : "Builds a DateFormat instance for use with \n<a href=\"ReformatDateService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ReformatDateService</code></a> and \n<a href=\"AddTimestampMetadataService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>AddTimestampMetadataService</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltMetadataService.html",
      "fullClassName" : "com.adaptris.core.json.jslt.JsltMetadataService",
      "className" : "JsltMetadataService",
      "packageName" : "com.adaptris.core.json.jslt",
      "componentType" : "service",
      "alias" : "jslt-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-jslt.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.12.0",
        "summary" : "Execute a list of JSLT queries turning the result of each query into an item of metadata.",
        "tag" : "jslt,transform,json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a list of JSLT queries turning the result of each query into an item of metadata.\",\n                  tag=\"jslt,transform,json\",\n                  since=\"3.12.0\")\npublic class JsltMetadataService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a list of JSLT queries turning the result of each query into an item of metadata.\",\n                  tag=\"jslt,transform,json\",\n                  since=\"3.12.0\")\npublic class <span class=\"typeNameLabel\">JsltMetadataService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Execute a list of JSLT queries turning the result of each query into an item of metadata.",
      "descriptionHtml" : "Execute a list of JSLT queries turning the result of each query into an item of metadata.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSLT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jslt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/aggregator/CsvAggregator.html",
      "fullClassName" : "com.adaptris.csv.aggregator.CsvAggregator",
      "className" : "CsvAggregator",
      "packageName" : "com.adaptris.csv.aggregator",
      "componentType" : "object",
      "alias" : "csv-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3.1",
        "summary" : "Aggregate messages into a CSV, optionally prefixing a header",
        "tag" : "csv,aggregator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Aggregate messages into a CSV, optionally prefixing a header\",\n                  since=\"3.9.3.1\",\n                  tag=\"csv,aggregator\")\npublic class CsvAggregator\nextends CsvAggregating",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Aggregate messages into a CSV, optionally prefixing a header\",\n                  since=\"3.9.3.1\",\n                  tag=\"csv,aggregator\")\npublic class <span class=\"typeNameLabel\">CsvAggregator</span>\nextends <a href=\"CsvAggregating.html\" title=\"class in com.adaptris.csv.aggregator\" target=\"_new\">CsvAggregating</a>",
      "description" : "Attempts to aggregate messages into a CSV file. Note that this is not a validating CSV aggregator since it does not check that the data in the messages to be joined are in fact CSV documents (or in fact match). If the header is defined, then we emit the header, and then we simply append all the documents to be aggregated into the resulting document.",
      "descriptionHtml" : "Attempts to aggregate messages into a CSV file. \n<p> Note that this is not a validating CSV aggregator since it does not check that the data in the messages to be joined are in fact CSV documents (or in fact match). If the header is defined, then we emit the header, and then we simply append all the documents to be aggregated into the resulting document. </p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html?is-external=true"
        },
        {
          "name" : "CsvAggregating",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/aggregator/CsvAggregating.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/EncryptionSigningService.html",
      "fullClassName" : "com.adaptris.core.security.EncryptionSigningService",
      "className" : "EncryptionSigningService",
      "packageName" : "com.adaptris.core.security",
      "componentType" : "service",
      "alias" : "encrypt-and-sign-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Encrypt and sign a message",
        "tag" : "service,security"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Encrypt and sign a message\",\n                  tag=\"service,security\",\n                  branchSelector=true)\npublic class EncryptionSigningService\nextends EncryptionService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Encrypt and sign a message\",\n                  tag=\"service,security\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">EncryptionSigningService</span>\nextends <a href=\"EncryptionService.html\" title=\"class in com.adaptris.core.security\" target=\"_new\">EncryptionService</a>",
      "description" : "Perform encryption and signing. This may be used as part of a BranchingServiceCollection if both CoreSecurityService.setFailId(String) and CoreSecurityService.setSuccessId(String) are configured.",
      "descriptionHtml" : "Perform encryption and signing. \n<p> This may be used as part of a <a href=\"../BranchingServiceCollection.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>BranchingServiceCollection</code></a> if both <a href=\"CoreSecurityService.html#setFailId(java.lang.String)\" target=\"_new\"><code>CoreSecurityService.setFailId(String)</code></a> and <a href=\"CoreSecurityService.html#setSuccessId(java.lang.String)\" target=\"_new\"><code>CoreSecurityService.setSuccessId(String)</code></a> are configured. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CoreSecurityService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/CoreSecurityService.html"
        },
        {
          "name" : "EncryptionService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/EncryptionService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBFindProducer.html",
      "fullClassName" : "com.adaptris.core.mongodb.MongoDBFindProducer",
      "className" : "MongoDBFindProducer",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "producer",
      "alias" : "mongodb-find-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.mongodb.MongoDBConnection"
        ],
        "since" : "",
        "summary" : "Executes find MongoDB queries, results returned as JSON Array.",
        "tag" : "producer,mongodb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Executes find MongoDB queries, results returned as JSON Array.\",\n                  tag=\"producer,mongodb\",\n                  recommended=MongoDBConnection.class)\npublic class MongoDBFindProducer\nextends MongoDBRetrieveProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Executes find MongoDB queries, results returned as JSON Array.\",\n                  tag=\"producer,mongodb\",\n                  recommended=<a href=\"MongoDBConnection.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBConnection.class</a>)\npublic class <span class=\"typeNameLabel\">MongoDBFindProducer</span>\nextends <a href=\"MongoDBRetrieveProducer.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBRetrieveProducer</a>",
      "description" : "Producer that executes find MongoDB queries, results returned as JSON Array. Example Filter: Filters results stars greater than or equal to 2 and less that 5 with category of Bakery. Data:      \n     [\n       { \"name\" : \"Café Con Leche\", \"stars\" : 3, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] },\n       { \"name\" : \"Fred's\", \"stars\" : 1, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] }\n     ]\n     \n   Query:      \n     { \"stars\" : { \"$gte\" : 2, \"$lt\" : 5 }, \"categories\" : \"Bakery\" }\n     \n   Result:      \n     [ { \"name\" : \"Café Con Leche\", \"stars\" : 3, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] } ]",
      "descriptionHtml" : "Producer that executes find MongoDB queries, results returned as JSON Array. \n<p> <b>Example Filter:</b><br> Filters results stars greater than or equal to 2 and less that 5 with category of Bakery. </p> \n<p> Data: </p>\n<pre>     <code>\n     [\n       { \"name\" : \"Café Con Leche\", \"stars\" : 3, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] },\n       { \"name\" : \"Fred's\", \"stars\" : 1, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] }\n     ]\n     </code>\n   </pre> \n<p></p> \n<p> Query: </p>\n<pre>     <code>\n     { \"stars\" : { \"$gte\" : 2, \"$lt\" : 5 }, \"categories\" : \"Bakery\" }\n     </code>\n   </pre> \n<p></p> \n<p> Result: </p>\n<pre>     <code>\n     [ { \"name\" : \"Café Con Leche\", \"stars\" : 3, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] } ]\n     </code>\n   </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "MongoDBProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBProducer.html"
        },
        {
          "name" : "MongoDBRetrieveProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBRetrieveProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/CSVWithGeoPointBuilder.html",
      "fullClassName" : "com.adaptris.core.elastic.CSVWithGeoPointBuilder",
      "className" : "CSVWithGeoPointBuilder",
      "packageName" : "com.adaptris.core.elastic",
      "componentType" : "object",
      "alias" : "elastic-csv-geopoint-document-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Build documents for elasticsearch from a CSV document",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Build documents for elasticsearch from a CSV document\",\n                  since=\"3.9.1\")\npublic class CSVWithGeoPointBuilder\nextends CSVDocumentBuilderImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Build documents for elasticsearch from a CSV document\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">CSVWithGeoPointBuilder</span>\nextends <a href=\"CSVDocumentBuilderImpl.html\" title=\"class in com.adaptris.core.elastic\" target=\"_new\">CSVDocumentBuilderImpl</a>",
      "description" : "Builds a document for elastic search. The document that is created contains the following characteristics The first record of the CSV is assumed to be a header row, and is used as the fieldName for each entry. There is no equivalent of use-header-record from CSVDocumentBuilder since we have to know which fields will form the geo_point fields. The \"unique-id\" for the document is derived from the specified column, duplicates may have unexpected results depending on your configuration; generally will be an updated version number Any fields which matching \"latitude\"/\"longitude\" are aggregated and created as a geo_point field.",
      "descriptionHtml" : "Builds a document for elastic search. \n<p> The document that is created contains the following characteristics </p>\n<ul> \n <li>The first record of the CSV is assumed to be a header row, and is used as the fieldName for each entry. There is no equivalent of <code>use-header-record</code> from <a href=\"CSVDocumentBuilder.html\" title=\"class in com.adaptris.core.elastic\" target=\"_new\"><code>CSVDocumentBuilder</code></a> since we have to know which fields will form the <code>geo_point</code> fields.</li> \n <li>The \"unique-id\" for the document is derived from the specified column, duplicates may have unexpected results depending on your configuration; generally will be an updated version number</li> \n <li>Any fields which matching \"latitude\"/\"longitude\" are aggregated and created as a <code>geo_point</code> field. </li>\n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "CSVDocumentBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/CSVDocumentBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/StatisticMarshaller.html",
      "fullClassName" : "com.adaptris.core.interceptor.StatisticMarshaller",
      "className" : "StatisticMarshaller",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "object",
      "alias" : "statistic-marshaller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Serializer specifically used to create a human readable representation of a metric timeslice.",
        "tag" : "marshaller"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Serializer specifically used to create a human readable representation of a metric timeslice.\",\n                  tag=\"marshaller\")\npublic class StatisticMarshaller\nextends AbstractMarshaller",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Serializer specifically used to create a human readable representation of a metric timeslice.\",\n                  tag=\"marshaller\")\npublic class <span class=\"typeNameLabel\">StatisticMarshaller</span>\nextends <a href=\"../AbstractMarshaller.html\" title=\"class in com.adaptris.core\" target=\"_new\">AbstractMarshaller</a>",
      "description" : "This marshaller is designed for InterceptorStatistic and is used exclusively with the ProducingStatisticManager. We convert the InterceptorStatistic into a SerializableStatistic and then use the configured XStream marshaller to serialize the object. The defauilt XStream marshaller is for XML, but you can configure the JSON version by setting the property \"actual-marshaller\".",
      "descriptionHtml" : "<p> This marshaller is designed for <a href=\"InterceptorStatistic.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>InterceptorStatistic</code></a> and is used exclusively with the <a href=\"ProducingStatisticManager.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>ProducingStatisticManager</code></a>. </p> \n<p> We convert the <a href=\"InterceptorStatistic.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>InterceptorStatistic</code></a> into a <a href=\"SerializableStatistic.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>SerializableStatistic</code></a> and then use the configured XStream marshaller to serialize the object. <br> The defauilt XStream marshaller is for XML, but you can configure the JSON version by setting the property \"actual-marshaller\". </p>",
      "inheritance" : [
        {
          "name" : "AbstractMarshaller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AbstractMarshaller.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/BooleanStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.BooleanStatementParameter",
      "className" : "BooleanStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-boolean-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BooleanStatementParameter\nextends TypedStatementParameter<java.lang.Boolean>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BooleanStatementParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.lang.Boolean&gt;",
      "description" : "Boolean Statement Parameter. convert-null has no meaning, empty/blank/whitespace only values will default to false.",
      "descriptionHtml" : "<code>Boolean</code> Statement Parameter. \n<p> <code>convert-null</code> has no meaning, empty/blank/whitespace only values will default to false. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/arguments/XMLSprayFormat.html",
      "fullClassName" : "com.adaptris.hpcc.arguments.XMLSprayFormat",
      "className" : "XMLSprayFormat",
      "packageName" : "com.adaptris.hpcc.arguments",
      "componentType" : "object",
      "alias" : "spray-format-xml",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : { },
      "annotationDetails" : "public class XMLSprayFormat\nextends SprayFormat",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XMLSprayFormat</span>\nextends <a href=\"SprayFormat.html\" title=\"class in com.adaptris.hpcc.arguments\" target=\"_new\">SprayFormat</a>",
      "description" : "SprayFormat implementation that allows the configuration of command specific arguments for format=xml sprays. rowTag yes The XML tag identifying each record. N/A encoding no One of the following: utf8 utf8n utf16 utf16le utf16be utf32 utf32le utf32be utf8 maxrecordsize no The maximum size of each record, in bytes. 8192 NOTE: Defaults are driven by dfuplus command them selves, they will not be set unless explicitly set.",
      "descriptionHtml" : "SprayFormat implementation that allows the configuration of command specific arguments for \n<code>format=xml</code> sprays. \n<table> \n <tbody>\n  <tr>\n   <td>rowTag</td>\n   <td>yes</td>\n   <td>The XML tag identifying each record.</td>\n   <td>N/A</td>\n  </tr> \n  <tr>\n   <td>encoding</td>\n   <td>no</td>\n   <td>One of the following: utf8 utf8n utf16 utf16le utf16be utf32 utf32le utf32be</td>\n   <td>utf8</td>\n  </tr> \n  <tr>\n   <td>maxrecordsize</td>\n   <td>no</td>\n   <td>The maximum size of each record, in bytes.</td>\n   <td>8192</td>\n  </tr> \n </tbody>\n</table> \n<p>NOTE: Defaults are driven by dfuplus command them selves, they will not be set unless explicitly set.</p>",
      "inheritance" : [
        {
          "name" : "SprayFormat",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/arguments/SprayFormat.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/services/ServiceListWithPlugin.html",
      "fullClassName" : "com.adaptris.stax.services.ServiceListWithPlugin",
      "className" : "ServiceListWithPlugin",
      "packageName" : "com.adaptris.stax.services",
      "componentType" : "service-collection",
      "alias" : "stax-plugin-service-list",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Conditionally map from one format to another on entry and exit via STaX",
        "tag" : "xml,stax,json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Conditionally map from one format to another on entry and exit via STaX\",\n                  since=\"3.8.4\",\n                  tag=\"xml,stax,json\")\npublic class ServiceListWithPlugin\nextends ServiceList",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Conditionally map from one format to another on entry and exit via STaX\",\n                  since=\"3.8.4\",\n                  tag=\"xml,stax,json\")\npublic class <span class=\"typeNameLabel\">ServiceListWithPlugin</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceList.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceList</a>",
      "description" : "Allows you to optionally transform from one format to another upon entry and exit of this service. This allows you to transform the message payload from one format to another upon entry and exit to this ServiceList implementation. This means you that you can automatically convert between JSON and XML (using com.adaptris.core.json.streaming.JsonStreamingInputFactory and XmlOutputFactoryBuilder; do your services treating the payload as XML, and render the result as JSON automatically. The standard implementation of Plugin which is StaxTransformPlugin allows you to specify a rule under which you perform the transforms (an expression based metadata value against a regular expression). If the rule is true, then the transform is applied; otherwise it is a no-op operation. Note that this behaviour is achievable in a number of ways with Interlok itself already, most easily with the interlok-config-conditional package; this is simply a convenience. There will also be situations where streaming from JSON to XML won't work, such as when the incoming message is a JSON array (you may need to have additional post configuration) or when the XML has attributes.",
      "descriptionHtml" : "Allows you to optionally transform from one format to another upon entry and exit of this service. \n<p> This allows you to transform the message payload from one format to another upon entry and exit to this <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceList.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ServiceList</code></a> implementation. This means you that you can automatically convert between JSON and XML (using <code>com.adaptris.core.json.streaming.JsonStreamingInputFactory</code> and <code>XmlOutputFactoryBuilder</code>; do your services treating the payload as XML, and render the result as JSON automatically. </p> \n<p> The standard implementation of <a href=\"Plugin.html\" title=\"interface in com.adaptris.stax.services\" target=\"_new\"><code>Plugin</code></a> which is <a href=\"StaxTransformPlugin.html\" title=\"class in com.adaptris.stax.services\" target=\"_new\"><code>StaxTransformPlugin</code></a> allows you to specify a rule under which you perform the transforms (an expression based metadata value against a regular expression). If the rule is true, then the transform is applied; otherwise it is a no-op operation. </p> \n<p> Note that this behaviour is achievable in a number of ways with Interlok itself already, most easily with the <code>interlok-config-conditional</code> package; this is simply a convenience. There will also be situations where streaming from JSON to XML won't work, such as when the incoming message is a JSON array (you may need to have additional post configuration) or when the XML has attributes. </p>",
      "inheritance" : [
        {
          "name" : "Service",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Service.html?is-external=true"
        },
        {
          "name" : "ServiceCollectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceCollectionImp.html?is-external=true"
        },
        {
          "name" : "ServiceListBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceListBase.html?is-external=true"
        },
        {
          "name" : "ServiceList",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceList.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/path/RegexpService.html",
      "fullClassName" : "com.adaptris.core.services.path.RegexpService",
      "className" : "RegexpService",
      "packageName" : "com.adaptris.core.services.path",
      "componentType" : "service",
      "alias" : "regexp-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extract data via a regular expression and store it",
        "tag" : "service,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract data via a regular expression and store it\",\n                  tag=\"service,xml\")\npublic class RegexpService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract data via a regular expression and store it\",\n                  tag=\"service,xml\")\npublic class <span class=\"typeNameLabel\">RegexpService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "This service allows you to configure an regular expression which will be executed on source data, the result of which can be saved to multiple locations.",
      "descriptionHtml" : "<p> This service allows you to configure an regular expression which will be executed on source data, the result of which can be saved to multiple locations. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ConfiguredRequestMethodProvider.html",
      "fullClassName" : "com.adaptris.core.http.client.ConfiguredRequestMethodProvider",
      "className" : "ConfiguredRequestMethodProvider",
      "packageName" : "com.adaptris.core.http.client",
      "componentType" : "object",
      "alias" : "http-configured-request-method",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredRequestMethodProvider\nextends java.lang.Object\nimplements RequestMethodProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredRequestMethodProvider</span>\nextends java.lang.Object\nimplements <a href=\"RequestMethodProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\">RequestMethodProvider</a>",
      "description" : "Static implementation of RequestMethodProvider.",
      "descriptionHtml" : "Static implementation of \n<a href=\"RequestMethodProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>RequestMethodProvider</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/UrlEncodeMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.UrlEncodeMetadataService",
      "className" : "UrlEncodeMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "url-encode-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "URL Encode some metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"URL Encode some metadata\",\n                  tag=\"service,metadata\")\npublic class UrlEncodeMetadataService\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"URL Encode some metadata\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">UrlEncodeMetadataService</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "URLEncoder.encode(String, String) on metadata values.",
      "descriptionHtml" : "<code>URLEncoder.encode(String, String)</code> on metadata values.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/KieKjarConnection.html",
      "fullClassName" : "com.adaptris.kie.services.KieKjarConnection",
      "className" : "KieKjarConnection",
      "packageName" : "com.adaptris.kie.services",
      "componentType" : "connection",
      "alias" : "kie-kjar-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-kie.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.2",
        "summary" : "Drools connection that builds up a KieContainer based on KieService#newReleaseId()",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Drools connection that builds up a KieContainer based on KieService#newReleaseId()\",\n                  since=\"3.8.2\")\npublic class KieKjarConnection\nextends KieConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Drools connection that builds up a KieContainer based on KieService#newReleaseId()\",\n                  since=\"3.8.2\")\npublic class <span class=\"typeNameLabel\">KieKjarConnection</span>\nextends <a href=\"KieConnection.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">KieConnection</a>",
      "description" : "Connection that builds up a KieContainer based on KieServices#newReleaseId(String, String, String). If you have a custom repository then you may need to override maven behaviour with a custom settings.xml using the system property kie.maven.settings.custom. If you want to use a KieScanner then you will need to have the kie-ci artifact as well.",
      "descriptionHtml" : "Connection that builds up a KieContainer based on \n<code>KieServices#newReleaseId(String, String, String)</code>. \n<p> If you have a custom repository then you may need to override maven behaviour with a custom settings.xml using the system property <code>kie.maven.settings.custom</code>. If you want to use a <code>KieScanner</code> then you will need to have the <code>kie-ci</code> artifact as well. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "KieConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/KieConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/KIE",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kie",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StaticIdentitySequenceNumberService.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.StaticIdentitySequenceNumberService",
      "className" : "StaticIdentitySequenceNumberService",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "service",
      "alias" : "jdbc-sequence-number-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Create a sequence number using a database, the sequence number is associated with a static value",
        "tag" : "service,metadata,jdbc,sequence"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Create a sequence number using a database, the sequence number is associated with a static value\",\n                  tag=\"service,metadata,jdbc,sequence\")\npublic class StaticIdentitySequenceNumberService\nextends AbstractJdbcSequenceNumberService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Create a sequence number using a database, the sequence number is associated with a static value\",\n                  tag=\"service,metadata,jdbc,sequence\")\npublic class <span class=\"typeNameLabel\">StaticIdentitySequenceNumberService</span>\nextends <a href=\"AbstractJdbcSequenceNumberService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">AbstractJdbcSequenceNumberService</a>",
      "description" : "Implementation of AbstractJdbcSequenceNumberService where the identity is statically configured. The default database schema is assumed to be  \n CREATE TABLE SEQUENCES (ID VARCHAR(255) NOT NULL, SEQ_NUMBER INT)\n \n The default SQL statements reflect this; and provided that a table called 'SEQUENCES' contains at least those two columns then it should work without any changes to the SQL statements. Be aware that all statements default to upper-case which will have an impact if your database is case-sensitive (such as MySQL on Linux).",
      "descriptionHtml" : "Implementation of AbstractJdbcSequenceNumberService where the identity is statically configured. \n<p> The default database schema is assumed to be </p>\n<pre> <code>\n CREATE TABLE SEQUENCES (ID VARCHAR(255) NOT NULL, SEQ_NUMBER INT)\n </code>\n </pre> The default SQL statements reflect this; and provided that a table called 'SEQUENCES' contains at least those two columns then it should work without any changes to the SQL statements. Be aware that all statements default to upper-case which will have an impact if your database is case-sensitive (such as MySQL on Linux). \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html"
        },
        {
          "name" : "AbstractJdbcSequenceNumberService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/AbstractJdbcSequenceNumberService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/Base64ByteTranslator.html",
      "fullClassName" : "com.adaptris.util.text.Base64ByteTranslator",
      "className" : "Base64ByteTranslator",
      "packageName" : "com.adaptris.util.text",
      "componentType" : "object",
      "alias" : "base64-byte-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class Base64ByteTranslator\nextends ByteTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Base64ByteTranslator</span>\nextends <a href=\"ByteTranslator.html\" title=\"class in com.adaptris.util.text\" target=\"_new\">ByteTranslator</a>",
      "description" : "Simply convert to and from base64.",
      "descriptionHtml" : "Simply convert to and from base64.",
      "inheritance" : [
        {
          "name" : "ByteTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/ByteTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/SchemaViolations.html",
      "fullClassName" : "com.adaptris.core.transform.schema.SchemaViolations",
      "className" : "SchemaViolations",
      "packageName" : "com.adaptris.core.transform.schema",
      "componentType" : "object",
      "alias" : "schema-violations",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SchemaViolations\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SchemaViolations</span>\nextends java.lang.Object",
      "description" : "Object model representation of all the schema violations for rendering purposes.",
      "descriptionHtml" : "Object model representation of all the schema violations for rendering purposes.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBAggregateProducer.html",
      "fullClassName" : "com.adaptris.core.mongodb.MongoDBAggregateProducer",
      "className" : "MongoDBAggregateProducer",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "producer",
      "alias" : "mongodb-aggregate-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.mongodb.MongoDBConnection"
        ],
        "since" : "",
        "summary" : "Executes aggregate MongoDB queries, results returned as JSON Array.",
        "tag" : "producer,mongodb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Executes aggregate MongoDB queries, results returned as JSON Array.\",\n                  tag=\"producer,mongodb\",\n                  recommended=MongoDBConnection.class)\npublic class MongoDBAggregateProducer\nextends MongoDBRetrieveProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Executes aggregate MongoDB queries, results returned as JSON Array.\",\n                  tag=\"producer,mongodb\",\n                  recommended=<a href=\"MongoDBConnection.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBConnection.class</a>)\npublic class <span class=\"typeNameLabel\">MongoDBAggregateProducer</span>\nextends <a href=\"MongoDBRetrieveProducer.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBRetrieveProducer</a>",
      "description" : "Producer that executes aggregate MongoDB queries, results returned as JSON Array. Example Pipeline: Returns the count of stars Data:      \n     [\n       { \"name\" : \"Café Con Leche\", \"stars\" : 3, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] },\n       { \"name\" : \"Fred's\", \"stars\" : 1, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] }\n     ]\n     \n   Query:      \n     [{ \"$group\" : { \"_id\" : \"$stars\", \"count\" : { \"$sum\" : 1 } } }]\n     \n   Result:      \n     [ { \"_id\" : \"1\", \"count\" : \"1\" }, { \"_id\" : \"3\", \"count\" : \"1\" } ]",
      "descriptionHtml" : "Producer that executes aggregate MongoDB queries, results returned as JSON Array. \n<p> <b>Example Pipeline:</b><br> Returns the count of stars </p> \n<p> Data: </p>\n<pre>     <code>\n     [\n       { \"name\" : \"Café Con Leche\", \"stars\" : 3, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] },\n       { \"name\" : \"Fred's\", \"stars\" : 1, \"categories\" : [\"Bakery\", \"Coffee\", \"Pastries\"] }\n     ]\n     </code>\n   </pre> \n<p></p> \n<p> Query: </p>\n<pre>     <code>\n     [{ \"$group\" : { \"_id\" : \"$stars\", \"count\" : { \"$sum\" : 1 } } }]\n     </code>\n   </pre> \n<p></p> \n<p> Result: </p>\n<pre>     <code>\n     [ { \"_id\" : \"1\", \"count\" : \"1\" }, { \"_id\" : \"3\", \"count\" : \"1\" } ]\n     </code>\n   </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "MongoDBProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBProducer.html"
        },
        {
          "name" : "MongoDBRetrieveProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBRetrieveProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/StringValueConverter.html",
      "fullClassName" : "com.adaptris.core.mongodb.StringValueConverter",
      "className" : "StringValueConverter",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "object",
      "alias" : "mongodb-string-value-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : { },
      "annotationDetails" : "public class StringValueConverter\nextends ValueConverter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringValueConverter</span>\nextends <a href=\"ValueConverter.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">ValueConverter</a>&lt;java.lang.String&gt;",
      "inheritance" : [
        {
          "name" : "ValueConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/ValueConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsProducer.html",
      "fullClassName" : "com.adaptris.xa.jms.XAJmsProducer",
      "className" : "XAJmsProducer",
      "packageName" : "com.adaptris.xa.jms",
      "componentType" : "producer",
      "alias" : "xa-jms-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-atomikos.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.xa.jms.XAJmsConnection"
        ],
        "since" : "",
        "summary" : "Place message on a JMS queue or topic",
        "tag" : "producer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Place message on a JMS queue or topic\",\n                  tag=\"producer,jms\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class XAJmsProducer\nextends XAJmsProducerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Place message on a JMS queue or topic\",\n                  tag=\"producer,jms\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class <span class=\"typeNameLabel\">XAJmsProducer</span>\nextends <a href=\"XAJmsProducerImpl.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\">XAJmsProducerImpl</a>",
      "description" : "JMS Producer implementation that can target queues or topics via an RFC6167 style destination. This differs from the standard PtpProducer and PasProducer in that it supports a destination that is specified in RFC6167 style. For instance jms:queue:myQueueName will produce to a queue called myQueueName and jms:topic:myTopicName to a topic called myTopicName While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. The standard deliveryMode, timeToLive, priority, replyToName properties are supported. If not specified, then they will be inherited from the producers configuration. For instance you could have the following destinations: jms:queue:MyQueueName jms:topic:MyTopicName jms:queue:MyQueueName?replyToName=StaticReplyTo&priority=1&timeToLive=1234 jms:topic:MyTopicName?replyToName=StaticReplyTo As the RFC6167 string can specify priority, timeToLive and deliveryMode; this producer defaults JmsProducerImpl.getPerMessageProperties() to be true.",
      "descriptionHtml" : "JMS Producer implementation that can target queues or topics via an RFC6167 style destination. \n<p> This differs from the standard <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PtpProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>PtpProducer</code></a> and <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PasProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>PasProducer</code></a> in that it supports a destination that is specified in RFC6167 style. For instance <code>jms:queue:myQueueName</code> will produce to a queue called <code>myQueueName</code> and <code>jms:topic:myTopicName</code> to a topic called <code>myTopicName</code> </p> \n<p> While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. The standard deliveryMode, timeToLive, priority, replyToName properties are supported. If not specified, then they will be inherited from the producers configuration. For instance you could have the following destinations: </p>\n<ul> \n <li>jms:queue:MyQueueName</li> \n <li>jms:topic:MyTopicName</li> \n <li>jms:queue:MyQueueName?replyToName=StaticReplyTo&amp;priority=1&amp;timeToLive=1234</li> \n <li>jms:topic:MyTopicName?replyToName=StaticReplyTo</li> \n</ul> \n<p></p> \n<p> As the RFC6167 string can specify priority, timeToLive and deliveryMode; this producer defaults <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducerImpl.html?is-external=true#getPerMessageProperties()\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsProducerImpl.getPerMessageProperties()</code></a> to be true. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "JmsProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducerImpl.html?is-external=true"
        },
        {
          "name" : "JmsProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducer.html?is-external=true"
        },
        {
          "name" : "XAJmsProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsProducerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Atomikos",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-atomikos",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/DefaultValidationExceptionHandler.html",
      "fullClassName" : "com.adaptris.core.json.schema.DefaultValidationExceptionHandler",
      "className" : "DefaultValidationExceptionHandler",
      "packageName" : "com.adaptris.core.json.schema",
      "componentType" : "object",
      "alias" : "json-schema-validation-exception-default",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Throw an exception if validation fails during schema validation",
        "tag" : "json,validation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Throw an exception if validation fails during schema validation\",\n                  tag=\"json,validation\")\npublic class DefaultValidationExceptionHandler\nextends ValidationExceptionHandlerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Throw an exception if validation fails during schema validation\",\n                  tag=\"json,validation\")\npublic class <span class=\"typeNameLabel\">DefaultValidationExceptionHandler</span>\nextends <a href=\"ValidationExceptionHandlerImpl.html\" title=\"class in com.adaptris.core.json.schema\" target=\"_new\">ValidationExceptionHandlerImpl</a>",
      "description" : "Default implementation of ValidationExceptionHandler This creates a ServiceException from the ValidationException, but will include all the ValidationException#getCausingExceptions() messages as part of the message.",
      "descriptionHtml" : "Default implementation of \n<a href=\"ValidationExceptionHandler.html\" title=\"interface in com.adaptris.core.json.schema\" target=\"_new\"><code>ValidationExceptionHandler</code></a> \n<p> This creates a ServiceException from the ValidationException, but will include all the <code>ValidationException#getCausingExceptions()</code> messages as part of the message. </p>",
      "inheritance" : [
        {
          "name" : "ValidationExceptionHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/ValidationExceptionHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockMessageProducer",
      "className" : "MockMessageProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/BinaryStreamStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.BinaryStreamStatementParameter",
      "className" : "BinaryStreamStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-binary-stream-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BinaryStreamStatementParameter\nextends NamedStatementParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BinaryStreamStatementParameter</span>\nextends <a href=\"NamedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">NamedStatementParameter</a>",
      "description" : "Binary Stream Statement Parameter.",
      "descriptionHtml" : "Binary Stream Statement Parameter.",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/ElasticRestClientCreator.html",
      "fullClassName" : "com.adaptris.core.elastic.rest.ElasticRestClientCreator",
      "className" : "ElasticRestClientCreator",
      "packageName" : "com.adaptris.core.elastic.rest",
      "componentType" : "object",
      "alias" : "default-elastic-rest-client",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-rest.jar",
      "profile" : { },
      "annotationDetails" : "public class ElasticRestClientCreator\nextends java.lang.Object\nimplements ElasticClientCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ElasticRestClientCreator</span>\nextends java.lang.Object\nimplements <a href=\"ElasticClientCreator.html\" title=\"interface in com.adaptris.core.elastic.rest\" target=\"_new\">ElasticClientCreator</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: REST Client",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-rest",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/DefaultWriterFactory.html",
      "fullClassName" : "com.adaptris.stax.DefaultWriterFactory",
      "className" : "DefaultWriterFactory",
      "packageName" : "com.adaptris.stax",
      "componentType" : "object",
      "alias" : "stax-default-stream-writer",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultWriterFactory\nextends java.lang.Object\nimplements XmlOutputFactoryBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultWriterFactory</span>\nextends java.lang.Object\nimplements <a href=\"XmlOutputFactoryBuilder.html\" title=\"interface in com.adaptris.stax\" target=\"_new\">XmlOutputFactoryBuilder</a>",
      "description" : "Builds an XMLStreamWriter using XMLOutputFactory.",
      "descriptionHtml" : "Builds an \n<code>XMLStreamWriter</code> using \n<code>XMLOutputFactory</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/JsonObjectSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.json.JsonObjectSplitter",
      "className" : "JsonObjectSplitter",
      "packageName" : "com.adaptris.core.services.splitter.json",
      "componentType" : "object",
      "alias" : "json-object-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Split a JSON Object into individual JSON objects",
        "tag" : "json,splitting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a JSON Object into individual JSON objects\",\n                  tag=\"json,splitting\")\npublic class JsonObjectSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a JSON Object into individual JSON objects\",\n                  tag=\"json,splitting\")\npublic class <span class=\"typeNameLabel\">JsonObjectSplitter</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.splitter\" class=\"externalLink\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "Message splitter implementation that splits a JSON object so each entry forms a new message. If the message cannot be parsed as JSON then an exception will be thrown; If the message is an empty JSON object then the original message is returned. Note that because it operates on the entire payload, size of message considerations may be in order. For instance the JSON Object {\"entry\":[{\"location\":\"Seattle\",\"name\":\"Production System\"},{\"location\":\"New York\",\"name\":\"R&D sandbox\"}],\"notes\":\"Some Notes\",\"version\":0.5} would be split into 3 messages (the entry, notes and version). JSON arrays will be split so that each element of the array becomes a separate message, so [{colour: \"red\",value: \"#f00\"},{colour: \"green\",value: \"#0f0\"},{colour: \"blue\",value: \"#00f\"},{colour: \"black\",value: \"#000\"}] would be split into 4 messages.",
      "descriptionHtml" : "Message splitter implementation that splits a JSON object so each entry forms a new message. \n<p> If the message cannot be parsed as JSON then an exception will be thrown; If the message is an empty JSON object then the original message is returned. Note that because it operates on the entire payload, size of message considerations may be in order. </p> \n<p> For instance the JSON Object <code> {\"entry\":[{\"location\":\"Seattle\",\"name\":\"Production System\"},{\"location\":\"New York\",\"name\":\"R&amp;D sandbox\"}],\"notes\":\"Some Notes\",\"version\":0.5}</code> would be split into 3 messages (the <code>entry</code>, <code>notes</code> and <code>version</code>). JSON arrays will be split so that each element of the array becomes a separate message, so <code> [{colour: \"red\",value: \"#f00\"},{colour: \"green\",value: \"#0f0\"},{colour: \"blue\",value: \"#00f\"},{colour: \"black\",value: \"#000\"}]</code> would be split into 4 messages. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/PluggableJdbcPooledConnection.html",
      "fullClassName" : "com.adaptris.core.jdbc.PluggableJdbcPooledConnection",
      "className" : "PluggableJdbcPooledConnection",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "connection",
      "alias" : "pluggable-jdbc-pooled-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Connect to a database using a JDBC driver; connection pooling is pluggable",
        "tag" : "connections,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a database using a JDBC driver; connection pooling is pluggable\",\n                  tag=\"connections,jdbc\",\n                  since=\"3.9.2\")\npublic class PluggableJdbcPooledConnection\nextends JdbcPooledConnectionImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a database using a JDBC driver; connection pooling is pluggable\",\n                  tag=\"connections,jdbc\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">PluggableJdbcPooledConnection</span>\nextends <a href=\"JdbcPooledConnectionImpl.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">JdbcPooledConnectionImpl</a>",
      "description" : "Concrete JdbcPooledConnectionImpl that allows you to plug in connection pool implementations. Generally, we find that c3p0 is good enough; however, in some use-cases you might want to switch to a different connection pool implementation. This variant allows you to plug in different builder implementations for the underlying connection pool.",
      "descriptionHtml" : "Concrete \n<a href=\"JdbcPooledConnectionImpl.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>JdbcPooledConnectionImpl</code></a> that allows you to plug in connection pool implementations. \n<p> Generally, we find that c3p0 is good enough; however, in some use-cases you might want to switch to a different connection pool implementation. This variant allows you to plug in different builder implementations for the underlying connection pool. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html"
        },
        {
          "name" : "DatabaseConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DatabaseConnection.html"
        },
        {
          "name" : "JdbcPooledConnectionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcPooledConnectionImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PoolingWorkflow.html",
      "fullClassName" : "com.adaptris.core.PoolingWorkflow",
      "className" : "PoolingWorkflow",
      "packageName" : "com.adaptris.core",
      "componentType" : "workflow",
      "alias" : "pooling-workflow",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Workflow with a thread pool handling the service chain",
        "tag" : "workflow,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Workflow with a thread pool handling the service chain\",\n                  tag=\"workflow,base\")\npublic class PoolingWorkflow\nextends WorkflowWithObjectPool",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Workflow with a thread pool handling the service chain\",\n                  tag=\"workflow,base\")\npublic class <span class=\"typeNameLabel\">PoolingWorkflow</span>\nextends <a href=\"WorkflowWithObjectPool.html\" title=\"class in com.adaptris.core\" target=\"_new\">WorkflowWithObjectPool</a>",
      "description" : "A Workflow that pools ServiceCollections. Pooling of ServiceCollections is useful in situations where the services are considered the bottleneck for the throughput of messages (e.g. local FS to local FS, but with a slow JdbcService or WebServicesQueryService to extract data for lookups). If you specify min-idle, max-idle and pool-size to be equal to each other then you will effectively end up with a fixed size pool of the size requested. There are some instances where a fixed size pool is desirable, such as when the service list that is being pooled takes a significant amount of time to become ready to use (e.g. multiple database connections/JMS connections over a WAN). By making a pool size fixed you only pay the cost of initialisation once when the workflow is first started. Of course, using a fixed size pool can cause its own problems if long-lived connections are terminated silently by the remote system. If you are using SharedConnection within the service-collection, then it is advised that you use a fixed size pool; otherwise as workers are deactivated then this could cause the underlying connection instance to be closed, which will cause issues for other objects sharing the connection. If stop() is invoked then any messages that are currently being processed will be allowed to finish, however any new messages that enter the workflow via onAdaptrisMessage(AdaptrisMessage) before the AdaptrisMessageConsumer is succesfully stopped will be treated as bad messages and sent directly to the configured ProcessingExceptionHandler.",
      "descriptionHtml" : "A Workflow that pools ServiceCollections. \n<p> Pooling of <code>ServiceCollection</code>s is useful in situations where the services are considered the bottleneck for the throughput of messages (e.g. local FS to local FS, but with a slow JdbcService or WebServicesQueryService to extract data for lookups). </p> \n<p> If you specify min-idle, max-idle and pool-size to be equal to each other then you will effectively end up with a fixed size pool of the size requested. There are some instances where a fixed size pool is desirable, such as when the service list that is being pooled takes a significant amount of time to become ready to use (e.g. multiple database connections/JMS connections over a WAN). By making a pool size fixed you only pay the cost of initialisation once when the workflow is first started. Of course, using a fixed size pool can cause its own problems if long-lived connections are terminated silently by the remote system. If you are using <a href=\"SharedConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>SharedConnection</code></a> within the service-collection, then it is advised that you use a fixed size pool; otherwise as workers are deactivated then this could cause the underlying connection instance to be closed, which will cause issues for other objects sharing the connection. </p> \n<p> If <code>stop()</code> is invoked then any messages that are currently being processed will be allowed to finish, however any new messages that enter the workflow via <code>onAdaptrisMessage(AdaptrisMessage)</code> before the <code>AdaptrisMessageConsumer</code> is succesfully stopped will be treated as <b>bad</b> messages and sent directly to the configured <a href=\"ProcessingExceptionHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ProcessingExceptionHandler</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowImp.html"
        },
        {
          "name" : "WorkflowWithObjectPool",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowWithObjectPool.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpMetadataMapping.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.SolaceJcsmpMetadataMapping",
      "className" : "SolaceJcsmpMetadataMapping",
      "packageName" : "com.adaptris.core.jcsmp.solace",
      "componentType" : "object",
      "alias" : "solace-jcsmp-metadata-mapping",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "Used with the message translator to map Solace headers to Interlok metadata and the reverse.",
        "tag" : "solace,jcsmp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Used with the message translator to map Solace headers to Interlok metadata and the reverse.\",\n                  tag=\"solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class SolaceJcsmpMetadataMapping\nextends java.lang.Object",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Used with the message translator to map Solace headers to Interlok metadata and the reverse.\",\n                  tag=\"solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpMetadataMapping</span>\nextends java.lang.Object",
      "description" : "Used with the message translator to move headers and metedata between the Solace and Adaptris messages. When translating from Solace to Adaptris messages, the header keys will be used to generate a getter call. For example, if we set the headerKey to \"MessageId\" and the metadataKey to \"message-id\" then Interlok will call the getter getMessageId(), the value for which will be copied into the Adaptris Message metadata item with the key \"message-id\". When translating from Adaptris to Solace messages, the header keys will be used to generate a setter call. For example, if we set the headerKey to \"MessageId\" and the metadataKey to \"message-id\" then Interlok will call the setter setMessageId(value), the value for which will come from the Adaptris Message metadata item with the kay \"message-id\".",
      "descriptionHtml" : "<p> Used with the message translator to move headers and metedata between the Solace and Adaptris messages. </p> \n<p> When translating from Solace to Adaptris messages, the header keys will be used to generate a getter call. For example, if we set the headerKey to \"MessageId\" and the metadataKey to \"message-id\" then Interlok will call the getter <code>getMessageId()</code>, the value for which will be copied into the Adaptris Message metadata item with the key \"message-id\". </p> \n<p> When translating from Adaptris to Solace messages, the header keys will be used to generate a setter call. For example, if we set the headerKey to \"MessageId\" and the metadataKey to \"message-id\" then Interlok will call the setter <code>setMessageId(value)</code>, the value for which will come from the Adaptris Message metadata item with the kay \"message-id\". </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/StandardMsmqConsumer.html",
      "fullClassName" : "com.adaptris.core.msmq.javonet.StandardMsmqConsumer",
      "className" : "StandardMsmqConsumer",
      "packageName" : "com.adaptris.core.msmq.javonet",
      "componentType" : "consumer",
      "alias" : "javonet-standard-msmq-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-msmq-javonet.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Receive messages from MSMQ using .NET",
        "tag" : "consumer,msmq"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Receive messages from MSMQ using .NET\",\n                  tag=\"consumer,msmq\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class StandardMsmqConsumer\nextends AdaptrisPollingConsumer\nimplements LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Receive messages from MSMQ using .NET\",\n                  tag=\"consumer,msmq\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">StandardMsmqConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisPollingConsumer</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "MSMQ Polling Consumer. There is no AdaptrisConnection associated with this consumer so a NullConnection is appropriate; The string configured as getQueue() should be a MSMQ Queue name. Check MessageQueue Class for details of the format string. Note that this MSMQ implementation is built around Microsoft .NET Framework 4.5 so it will require that to be installed and also the Visual C++ Redistributable Packages for Visual Studio 2013",
      "descriptionHtml" : "MSMQ Polling Consumer. \n<p> There is no <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisConnection</code></a> associated with this consumer so a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>NullConnection</code></a> is appropriate; The string configured as <a href=\"#getQueue()\" target=\"_new\"><code>getQueue()</code></a> should be a MSMQ Queue name. Check <a href=\"http://msdn.microsoft.com/en-us/library/ch1d814t%28v=vs.110%29.aspx\" target=\"_new\">MessageQueue Class</a> for details of the format string. </p> \n<p> <strong>Note that this MSMQ implementation is built around <a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=30653\" target=\"_new\">Microsoft .NET Framework 4.5</a> so it will require that to be installed and also the <a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=40784\" target=\"_new\">Visual C++ Redistributable Packages for Visual Studio 2013</a></strong> </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MSMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-msmq-javonet",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/attachment/XmlMailCreator.html",
      "fullClassName" : "com.adaptris.core.mail.attachment.XmlMailCreator",
      "className" : "XmlMailCreator",
      "packageName" : "com.adaptris.core.mail.attachment",
      "componentType" : "object",
      "alias" : "mail-xml-content-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlMailCreator\nextends java.lang.Object\nimplements MailContentCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlMailCreator</span>\nextends java.lang.Object\nimplements <a href=\"MailContentCreator.html\" title=\"interface in com.adaptris.core.mail.attachment\" target=\"_new\">MailContentCreator</a>",
      "description" : "MailCreator implementation that assumes the AdaptrisMessage is an XML document.",
      "descriptionHtml" : "MailCreator implementation that assumes the AdaptrisMessage is an XML document.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/NoResultSetCallableStatementExecutor.html",
      "fullClassName" : "com.adaptris.jdbc.NoResultSetCallableStatementExecutor",
      "className" : "NoResultSetCallableStatementExecutor",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "no-resultset-callable-statement-executor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoResultSetCallableStatementExecutor\nextends java.lang.Object\nimplements CallableStatementExecutor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoResultSetCallableStatementExecutor</span>\nextends java.lang.Object\nimplements <a href=\"CallableStatementExecutor.html\" title=\"interface in com.adaptris.jdbc\" target=\"_new\">CallableStatementExecutor</a>",
      "description" : "Implementation of CallableStatementExecutor will use the PreparedStatement.execute() method.",
      "descriptionHtml" : "Implementation of CallableStatementExecutor will use the \n<code>PreparedStatement.execute()</code> method.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-azure/4.0.0B1-RELEASE/com/adaptris/core/oauth/azure/AzureAccessToken.html",
      "fullClassName" : "com.adaptris.core.oauth.azure.AzureAccessToken",
      "className" : "AzureAccessToken",
      "packageName" : "com.adaptris.core.oauth.azure",
      "componentType" : "object",
      "alias" : "azure-access-token",
      "deprecated" : true,
      "jarFileName" : "interlok-oauth-azure.jar",
      "profile" : { },
      "annotationDetails" : "@Deprecated\npublic class AzureAccessToken\nextends AzureUsernamePasswordAccessToken",
      "annotationDetailsHtml" : "@Deprecated\npublic class <span class=\"typeNameLabel\">AzureAccessToken</span>\nextends <a href=\"AzureUsernamePasswordAccessToken.html\" title=\"class in com.adaptris.core.oauth.azure\" target=\"_new\">AzureUsernamePasswordAccessToken</a>",
      "description" : "Wraps the azure OAuth authentication flow. Based on the example available from Azure-Samples and tested (eventually) with the Microsoft Graph API using https://graph.microsoft.com/v1.0/me/.",
      "descriptionHtml" : "Wraps the azure OAuth authentication flow. \n<p> Based on the example available from <a href=\"https://github.com/Azure-Samples/active-directory-java-native-headless\" target=\"_new\">Azure-Samples</a> and tested (eventually) with the <a href=\"https://graph.microsoft.com\" target=\"_new\">Microsoft Graph API</a> using <a href=\"https://graph.microsoft.com/v1.0/me/\" target=\"_new\">https://graph.microsoft.com/v1.0/me/</a>. </p>",
      "inheritance" : [
        {
          "name" : "AzureAccessTokenImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-azure/4.0.0B1-RELEASE/com/adaptris/core/oauth/azure/AzureAccessTokenImpl.html"
        },
        {
          "name" : "AzureUsernamePasswordAccessToken",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-azure/4.0.0B1-RELEASE/com/adaptris/core/oauth/azure/AzureUsernamePasswordAccessToken.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Azure",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-azure",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyRouteSpec.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JettyRouteSpec",
      "className" : "JettyRouteSpec",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-route-spec",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JettyRouteSpec\nextends java.lang.Object\nimplements ComponentLifecycle",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JettyRouteSpec</span>\nextends java.lang.Object\nimplements <a href=\"../../ComponentLifecycle.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycle</a>",
      "description" : "Used with JettyRoutingService to help decide which branch to execute. Since the URI itself may contain parameters that may need to be extracted as metadata, it is possible to do that as part of the matching process here. Given a URL of /record/zeus/apollo the following configuration will match provided the HTTP method is POST; the URL pattern will be parsed for capturing groups and the metadata parentId=zeus, childId=apollo will be set; the next service-id will be set to handleInsert.    \n      <jetty-route-spec>\n        <condition>\n          <url-pattern>^/record/(.*)/(.*)$</url-pattern>\n          <method>POST</method>\n          <metadata-key>parentId</metadata-key>\n          <metadata-key>childId</metadata-key>\n        </condition>\n        <service-id>handleInsert</service-id>\n      </jetty-route-spec>\n   \n You could achieve the same effect with a ExtractMetadataService as part of your normal service execution chain.",
      "descriptionHtml" : "Used with \n<a href=\"JettyRoutingService.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\"><code>JettyRoutingService</code></a> to help decide which branch to execute. \n<p> Since the URI itself may contain parameters that may need to be extracted as metadata, it is possible to do that as part of the matching process here. Given a URL of <code>/record/zeus/apollo</code> the following configuration will match provided the HTTP method is <code>POST</code>; the URL pattern will be parsed for capturing groups and the metadata <code>parentId=zeus</code>, <code>childId=apollo</code> will be set; the next service-id will be set to <code>handleInsert</code>. </p> \n<pre>   <code>\n      &lt;jetty-route-spec&gt;\n        &lt;condition&gt;\n          &lt;url-pattern&gt;^/record/(.*)/(.*)$&lt;/url-pattern&gt;\n          &lt;method&gt;POST&lt;/method&gt;\n          &lt;metadata-key&gt;parentId&lt;/metadata-key&gt;\n          &lt;metadata-key&gt;childId&lt;/metadata-key&gt;\n        &lt;/condition&gt;\n        &lt;service-id&gt;handleInsert&lt;/service-id&gt;\n      &lt;/jetty-route-spec&gt;\n   </code>\n </pre> You could achieve the same effect with a \n<a href=\"../../services/metadata/ExtractMetadataService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ExtractMetadataService</code></a> as part of your normal service execution chain. \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/services/EncodingConverterService.html",
      "fullClassName" : "com.adaptris.as400.services.EncodingConverterService",
      "className" : "EncodingConverterService",
      "packageName" : "com.adaptris.as400.services",
      "componentType" : "service",
      "alias" : "as400-encoding-converter-service",
      "deprecated" : false,
      "jarFileName" : "interlok-as400.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A service that will attempt to change the encoding of the AdaptrisMessage..",
        "tag" : "service,as400"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A service that will attempt to change the encoding of the AdaptrisMessage..\",\n                  tag=\"service,as400\")\npublic class EncodingConverterService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A service that will attempt to change the encoding of the AdaptrisMessage..\",\n                  tag=\"service,as400\")\npublic class <span class=\"typeNameLabel\">EncodingConverterService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "A service that will simply reset the current string payload bytes with a configured codepage.",
      "descriptionHtml" : "<p> A service that will simply reset the current string payload bytes with a configured codepage. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OS/AS400",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-as400",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/services/StatefulSessionStart.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.services.StatefulSessionStart",
      "className" : "StatefulSessionStart",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.services",
      "componentType" : "service",
      "alias" : "sapjco3-start-session-service",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Start a Stateful Session within SAP",
        "tag" : "service,sap,rfc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Start a Stateful Session within SAP\",\n                  tag=\"service,sap,rfc\")\npublic class StatefulSessionStart\nextends JcoDestinationService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Start a Stateful Session within SAP\",\n                  tag=\"service,sap,rfc\")\npublic class <span class=\"typeNameLabel\">StatefulSessionStart</span>\nextends <a href=\"JcoDestinationService.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.services\" target=\"_new\">JcoDestinationService</a>",
      "description" : "Service Implementation that uses object metadata to start a stateful session. This notifies the JCo Runtime about the start of a stateful call sequence on a specific destination. Between start() and end() the same connection will be used for all function calls.",
      "descriptionHtml" : "Service Implementation that uses object metadata to start a stateful session. \n<p> This notifies the JCo Runtime about the start of a stateful call sequence on a specific destination. Between start() and end() the same connection will be used for all function calls. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JcoDestinationService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/services/JcoDestinationService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xml-security/4.0.0B1-RELEASE/com/adaptris/xml/security/XmlEncryptionFactory.html",
      "fullClassName" : "com.adaptris.xml.security.XmlEncryptionFactory",
      "className" : "XmlEncryptionFactory",
      "packageName" : "com.adaptris.xml.security",
      "componentType" : "object",
      "alias" : "xml-encryption-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-xml-security.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlEncryptionFactory\nextends XmlEncFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlEncryptionFactory</span>\nextends <a href=\"XmlEncFactory.html\" title=\"class in com.adaptris.xml.security\" target=\"_new\">XmlEncFactory</a>",
      "description" : "Implementation of SecurityServiceFactory for handling XML Encryption. If using this factory, then the document to be encrypted is expected to already be an XML document. This means that any EncryptedData that are generated, will have an attribute Type=\"http://www.w3.org/2001/04/xmlenc#Element\". This may of course break some JSR106 implementations. If testing reveals that to be the case then you should use the RawXmlEncryptionFactory in preference which allows you to set the Type and MimeType respectively. THis is a pure XML Encryption implementation, any attempt to do signing will cause a UnsupportedOperationException to be thrown. The underlying encryption facility only allows for the following types of (the key length is implicit in the algorithm type and does not need to be specified) : TRIPLEDES_CBC AES256_CBC AES192_CBC AES192_CBC",
      "descriptionHtml" : "Implementation of SecurityServiceFactory for handling XML Encryption. \n<p> If using this factory, then the document to be encrypted is expected to already be an XML document. This means that any <code>EncryptedData</code> that are generated, will have an attribute <code>Type=\"http://www.w3.org/2001/04/xmlenc#Element\"</code>. This may of course break some JSR106 implementations. If testing reveals that to be the case then you should use the <code>RawXmlEncryptionFactory</code> in preference which allows you to set the Type and MimeType respectively. </p> \n<p> THis is a pure XML Encryption implementation, any attempt to do signing will cause a UnsupportedOperationException to be thrown. </p> \n<p> The underlying encryption facility only allows for the following types of (the key length is implicit in the algorithm type and does not need to be specified) : </p> \n<ul> \n <li>TRIPLEDES_CBC</li> \n <li>AES256_CBC</li> \n <li>AES192_CBC</li> \n <li>AES192_CBC</li> \n</ul>",
      "inheritance" : [
        {
          "name" : "SecurityServiceFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/SecurityServiceFactory.html?is-external=true"
        },
        {
          "name" : "XmlEncFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xml-security/4.0.0B1-RELEASE/com/adaptris/xml/security/XmlEncFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Security/XML",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xml-security",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/AdvancedSolaceImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.solace.AdvancedSolaceImplementation",
      "className" : "AdvancedSolaceImplementation",
      "packageName" : "com.adaptris.core.jms.solace",
      "componentType" : "object",
      "alias" : "advanced-solace-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedSolaceImplementation\nextends BasicSolaceImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedSolaceImplementation</span>\nextends <a href=\"BasicSolaceImplementation.html\" title=\"class in com.adaptris.core.jms.solace\" target=\"_new\">BasicSolaceImplementation</a>",
      "description" : "Solace implementation of VendorImplementation. This vendor implementation is a more complete adapter interface to Solace, designed to expose as many of the configuration properties as possible. Most settings are exposed as part of parameter objects added to the \"extraParameters\" list. This was built against Solace 7.1.0.207",
      "descriptionHtml" : "<p> Solace implementation of <code>VendorImplementation</code>. </p> \n<p> This vendor implementation is a more complete adapter interface to Solace, designed to expose as many of the configuration properties as possible. Most settings are exposed as part of parameter objects added to the \"extraParameters\" list. </p> \n<p> <b>This was built against Solace 7.1.0.207</b> </p> \n<p></p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "BasicSolaceImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/BasicSolaceImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/Kerberos.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.Kerberos",
      "className" : "Kerberos",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-kerberos",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class Kerberos\nextends java.lang.Object\nimplements Parameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Kerberos</span>\nextends java.lang.Object\nimplements <a href=\"Parameter.html\" title=\"interface in com.adaptris.core.jms.solace.parameters\" target=\"_new\">Parameter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/mail/Pop3ReceiverFactory.html",
      "fullClassName" : "com.adaptris.mail.Pop3ReceiverFactory",
      "className" : "Pop3ReceiverFactory",
      "packageName" : "com.adaptris.mail",
      "componentType" : "object",
      "alias" : "pop3-receiver-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : { },
      "annotationDetails" : "public class Pop3ReceiverFactory\nextends java.lang.Object\nimplements MailReceiverFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Pop3ReceiverFactory</span>\nextends java.lang.Object\nimplements <a href=\"MailReceiverFactory.html\" title=\"interface in com.adaptris.mail\" target=\"_new\">MailReceiverFactory</a>",
      "description" : "MailReceiverFactory that supports POP3 using the commons net POP3Client. This only supports POP3. Attempts to use POP3S/IMAP(S) will cause an exception. Because the underlying POP3 client needs to implement the existing MailReceiver interface, it will attempt to retrieve every message available int the POP3 mailbox before any filtering is performed. If the POP3 mailbox is large, or has many messages that need to be filtered; then performance may be impaired.",
      "descriptionHtml" : "<a href=\"MailReceiverFactory.html\" title=\"interface in com.adaptris.mail\" target=\"_new\"><code>MailReceiverFactory</code></a> that supports POP3 using the commons net \n<code>POP3Client</code>. \n<p> This only supports <code>POP3</code>. Attempts to use POP3S/IMAP(S) will cause an exception. </p> \n<p> Because the underlying POP3 client needs to implement the existing <a href=\"MailReceiver.html\" title=\"interface in com.adaptris.mail\" target=\"_new\"><code>MailReceiver</code></a> interface, it will attempt to retrieve every message available int the POP3 mailbox before any filtering is performed. If the POP3 mailbox is large, or has many messages that need to be filtered; then performance may be impaired. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-flyway/4.0.0B1-RELEASE/com/adaptris/jdbc/flyway/DefaultFlywayMigrator.html",
      "fullClassName" : "com.adaptris.jdbc.flyway.DefaultFlywayMigrator",
      "className" : "DefaultFlywayMigrator",
      "packageName" : "com.adaptris.jdbc.flyway",
      "componentType" : "object",
      "alias" : "flyway-jdbc-migrator",
      "deprecated" : false,
      "jarFileName" : "interlok-flyway.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Perform a database migration using flyway",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a database migration using flyway\",\n                  since=\"3.9.2\")\npublic class DefaultFlywayMigrator\nextends java.lang.Object\nimplements FlywayMigrator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a database migration using flyway\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">DefaultFlywayMigrator</span>\nextends java.lang.Object\nimplements <a href=\"FlywayMigrator.html\" title=\"interface in com.adaptris.jdbc.flyway\" target=\"_new\">FlywayMigrator</a>",
      "description" : "Perform a database migration using flyway",
      "descriptionHtml" : "Perform a database migration using flyway",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Flyway",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-flyway",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/SimpleExecutionContext.html",
      "fullClassName" : "com.adaptris.kie.services.SimpleExecutionContext",
      "className" : "SimpleExecutionContext",
      "packageName" : "com.adaptris.kie.services",
      "componentType" : "object",
      "alias" : "kie-simple-execution-context",
      "deprecated" : false,
      "jarFileName" : "interlok-kie.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleExecutionContext\nextends java.lang.Object\nimplements ExecutionContext",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleExecutionContext</span>\nextends java.lang.Object\nimplements <a href=\"ExecutionContext.html\" title=\"interface in com.adaptris.kie.services\" target=\"_new\">ExecutionContext</a>",
      "description" : "ExecutionContext using a configured AdaptrisMarshaller. When building the command array it does this : Use the configured marshaller to turn the AdaptrisMessage payload into an object Build a InsertObjectCommand using that object with the specified insertId Build a FireAllRulesCommand Build a QueryCommand using the specified queryName; you will also need to specify queryResultId, queryResultRowId in order to traverse the QueryResult object; if these are not configured, no QueryCommand is generated. When evalutating the results of the execution it does : Get the QueryResults object stored against queryResultId. If no query was ever generated, then insertId is used, assuming that what was inserted will have been modified Use the configured marshaller to turn the result into its String representation Use that as the payload",
      "descriptionHtml" : "ExecutionContext using a configured \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMarshaller.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMarshaller</code></a>. \n<p> When building the command array it does this : </p>\n<ul> \n <li>Use the configured marshaller to turn the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> payload into an object</li> \n <li>Build a <code>InsertObjectCommand</code> using that object with the specified <code>insertId</code></li> \n <li>Build a <code>FireAllRulesCommand</code></li> \n <li>Build a <code>QueryCommand</code> using the specified <code>queryName</code>; you will also need to specify <code>queryResultId, queryResultRowId</code> in order to traverse the <code>QueryResult</code> object; if these are not configured, no QueryCommand is generated.</li> \n</ul> \n<p></p> When evalutating the results of the execution it does : \n<ul> \n <li>Get the QueryResults object stored against <code>queryResultId</code>. If no query was ever generated, then <code>insertId</code> is used, assuming that what was inserted will have been modified</li> \n <li>Use the configured marshaller to turn the result into its String representation</li> \n <li>Use that as the payload</li> \n</ul>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/KIE",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kie",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/ListBlobs.html",
      "fullClassName" : "com.adaptris.jclouds.blobstore.ListBlobs",
      "className" : "ListBlobs",
      "packageName" : "com.adaptris.jclouds.blobstore",
      "componentType" : "service",
      "alias" : "jclouds-container-list",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-blobstore.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "List contents of an jclouds container as part of a polling-trigger",
        "tag" : "jclouds,polling"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"List contents of an jclouds container as part of a polling-trigger\",\n                  since=\"3.9.2\",\n                  tag=\"jclouds,polling\")\npublic class ListBlobs\nextends ServiceImp\nimplements DynamicPollingTemplate.TemplateProvider, ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"List contents of an jclouds container as part of a polling-trigger\",\n                  since=\"3.9.2\",\n                  tag=\"jclouds,polling\")\npublic class <span class=\"typeNameLabel\">ListBlobs</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DynamicPollingTemplate.TemplateProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">DynamicPollingTemplate.TemplateProvider</a>, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Query a cloud provider location for a list of blobs store there. Under the covers it re-uses BlobStoreService with a ListOperation and does a full lifecycle on the underlying service each time it is triggered. This is intended for use as part of a DynamicPollingTemplate; as a result keys are not intended to be resolved using the %message expression language; they will, however, be passed as-is into the underlying service (which may still resolve them).",
      "descriptionHtml" : "Query a cloud provider location for a list of blobs store there. \n<p> Under the covers it re-uses <a href=\"BlobStoreService.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\"><code>BlobStoreService</code></a> with a <a href=\"ListOperation.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\"><code>ListOperation</code></a> and does a full lifecycle on the underlying service each time it is triggered. This is intended for use as part of a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DynamicPollingTemplate.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>DynamicPollingTemplate</code></a>; as a result keys are not intended to be resolved using the <code>%message</code> expression language; they will, however, be passed as-is into the underlying service (which may still resolve them). </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Blobstore",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-blobstore",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/xml/tagnames/GXMLVersion8Tagnames.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.xml.tagnames.GXMLVersion8Tagnames",
      "className" : "GXMLVersion8Tagnames",
      "packageName" : "com.adaptris.adapter.edistream.parser.xml.tagnames",
      "componentType" : "object",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class GXMLVersion8Tagnames\nextends DefaultXMLTagnames",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">GXMLVersion8Tagnames</span>\nextends <a href=\"DefaultXMLTagnames.html\" title=\"class in com.adaptris.adapter.edistream.parser.xml.tagnames\" target=\"_new\">DefaultXMLTagnames</a>",
      "description" : "Created for GXML v8 file parsing, most element tag attributes are Camel case rather than lowercase",
      "descriptionHtml" : "Created for GXML v8 file parsing, most element tag attributes are Camel case rather than lowercase",
      "inheritance" : [
        {
          "name" : "DefaultXMLTagnames",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/xml/tagnames/DefaultXMLTagnames.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/ObjectMetadataHeaderHandler.html",
      "fullClassName" : "com.adaptris.core.http.jetty.ObjectMetadataHeaderHandler",
      "className" : "ObjectMetadataHeaderHandler",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-http-headers-as-object-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ObjectMetadataHeaderHandler\nextends HeaderHandlerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ObjectMetadataHeaderHandler</span>\nextends <a href=\"HeaderHandlerImpl.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">HeaderHandlerImpl</a>",
      "description" : "HeaderHandler implementation stores HTTP headers as object metadata.",
      "descriptionHtml" : "<a href=\"../server/HeaderHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>HeaderHandler</code></a> implementation stores HTTP headers as object metadata.",
      "inheritance" : [
        {
          "name" : "HeaderHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/HeaderHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/LargeMessageProducer.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.LargeMessageProducer",
      "className" : "LargeMessageProducer",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "producer",
      "alias" : "sonic-large-message-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public class LargeMessageProducer\nextends ProduceOnlyProducerImp\nimplements progress.message.jclient.ChannelListener, LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LargeMessageProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>\nimplements progress.message.jclient.ChannelListener, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Implementation of AdaptrisMessageProducer which uses Sonic MQ Recoverable File Channels for Large Messages. See Sonic MQ Application Programming Guide Chapter 11 for a full description of this functionality. This should be configured with a JmsConnection with the appropriate Sonic based VendorImplementation, otherwise results are undefined.",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageProducer</code> which uses Sonic MQ <i>Recoverable File Channels for Large Messages</i>. See Sonic MQ Application Programming Guide Chapter 11 for a full description of this functionality. </p> \n<p> This should be configured with a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsConnection</code></a> with the appropriate Sonic based VendorImplementation, otherwise results are undefined. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/MovingNonDeletingFsConsumer.html",
      "fullClassName" : "com.adaptris.core.fs.MovingNonDeletingFsConsumer",
      "className" : "MovingNonDeletingFsConsumer",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "consumer",
      "alias" : "moving-non-deleting-fs-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "originalname",
          "fsFileSize",
          "lastmodified",
          "fsConsumeDir",
          "_interlokMessageConsumedFrom",
          "fsParentDir"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from the filesystem and move them afterwards",
        "tag" : "consumer,fs,filesystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from the filesystem and move them afterwards\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=NullConnection.class)\npublic class MovingNonDeletingFsConsumer\nextends NonDeletingFsConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from the filesystem and move them afterwards\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">MovingNonDeletingFsConsumer</span>\nextends <a href=\"NonDeletingFsConsumer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\">NonDeletingFsConsumer</a>",
      "description" : "Extends the non-deleting FS consumer, and after processing stores files in a separate directory. This is similar to the FTP consumer. ../../../...",
      "descriptionHtml" : "Extends the non-deleting FS consumer, and after processing stores files in a separate directory. This is similar to the FTP consumer. ../../../...",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "FsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsConsumerImpl.html"
        },
        {
          "name" : "NonDeletingFsConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/NonDeletingFsConsumer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/CachedDestinationJndiImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.jndi.CachedDestinationJndiImplementation",
      "className" : "CachedDestinationJndiImplementation",
      "packageName" : "com.adaptris.core.jms.jndi",
      "componentType" : "object",
      "alias" : "cached-destination-jndi-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CachedDestinationJndiImplementation\nextends StandardJndiImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CachedDestinationJndiImplementation</span>\nextends <a href=\"StandardJndiImplementation.html\" title=\"class in com.adaptris.core.jms.jndi\" target=\"_new\">StandardJndiImplementation</a>",
      "description" : "Extension of StandardJndiImplementation that caches destinations in between calls. This cache is preserved across normal component lifecycle; e.g. the cache remains even if you invoke Channel.requestClose() and then Channel.requestStart(). The only way to reset the cache is to create a new instance. If this VendorImplementation is used as part of a StandaloneProducer then the cache is preserved across the component lifecycles. If used as part of a RetryOnceStandaloneProducer then the cache will be reset when underlying components is restarted (this producer specifically marshal/unmarshal it's components).",
      "descriptionHtml" : "Extension of \n<a href=\"StandardJndiImplementation.html\" title=\"class in com.adaptris.core.jms.jndi\" target=\"_new\"><code>StandardJndiImplementation</code></a> that caches destinations in between calls. \n<p> This cache is preserved across normal component lifecycle; e.g. the cache remains even if you invoke <a href=\"../../Channel.html#requestClose()\" target=\"_new\"><code>Channel.requestClose()</code></a> and then <a href=\"../../Channel.html#requestStart()\" target=\"_new\"><code>Channel.requestStart()</code></a>. <strong>The only way to reset the cache is to create a new instance.</strong> If this <a href=\"../VendorImplementation.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>VendorImplementation</code></a> is used as part of a <a href=\"../../StandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneProducer</code></a> then the cache is preserved across the component lifecycles. If used as part of a <a href=\"../../RetryOnceStandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>RetryOnceStandaloneProducer</code></a> then the cache will be reset when underlying components is restarted (this producer specifically marshal/unmarshal it's components). </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html"
        },
        {
          "name" : "BaseJndiImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/BaseJndiImplementation.html"
        },
        {
          "name" : "StandardJndiImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/StandardJndiImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertPayloadEquals.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertPayloadEquals",
      "className" : "AssertPayloadEquals",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-payload-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertPayloadEquals\nextends PayloadAssertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertPayloadEquals</span>\nextends <a href=\"PayloadAssertion.html\" title=\"class in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">PayloadAssertion</a>",
      "description" : "Checks if TestMessage.getPayload() equals PayloadAssertion.getPayload()",
      "descriptionHtml" : "Checks if \n<a href=\"../TestMessage.html#getPayload()\" target=\"_new\"><code>TestMessage.getPayload()</code></a> equals \n<a href=\"PayloadAssertion.html#getPayload()\" target=\"_new\"><code>PayloadAssertion.getPayload()</code></a>",
      "inheritance" : [
        {
          "name" : "PayloadAssertion",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/PayloadAssertion.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/event/ChannelRestartEvent.html",
      "fullClassName" : "com.adaptris.core.event.ChannelRestartEvent",
      "className" : "ChannelRestartEvent",
      "packageName" : "com.adaptris.core.event",
      "componentType" : "object",
      "alias" : "channel-restart-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ChannelRestartEvent\nextends AdapterLifecycleEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ChannelRestartEvent</span>\nextends <a href=\"../AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdapterLifecycleEvent</a>",
      "description" : "AdapterLifecycleEvent indicating a Channel restart.",
      "descriptionHtml" : "<p> <code>AdapterLifecycleEvent</code> indicating a <code>Channel</code> restart. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/system/OverwritePayload.html",
      "fullClassName" : "com.adaptris.core.services.system.OverwritePayload",
      "className" : "OverwritePayload",
      "packageName" : "com.adaptris.core.services.system",
      "componentType" : "object",
      "alias" : "system-command-overwrite-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class OverwritePayload\nextends java.lang.Object\nimplements CommandOutputCapture",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OverwritePayload</span>\nextends java.lang.Object\nimplements <a href=\"CommandOutputCapture.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\">CommandOutputCapture</a>",
      "description" : "Implementation of CommandOutputCapture that overwrites the existing message with the output.",
      "descriptionHtml" : "Implementation of \n<a href=\"CommandOutputCapture.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\"><code>CommandOutputCapture</code></a> that overwrites the existing message with the output.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/request/DateHeader.html",
      "fullClassName" : "com.adaptris.core.http.apache.request.DateHeader",
      "className" : "DateHeader",
      "packageName" : "com.adaptris.core.http.apache.request",
      "componentType" : "object",
      "alias" : "apache-http-add-date-to-request",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class DateHeader\nextends java.lang.Object\nimplements RequestInterceptorBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DateHeader</span>\nextends java.lang.Object\nimplements <a href=\"RequestInterceptorBuilder.html\" title=\"interface in com.adaptris.core.http.apache.request\" target=\"_new\">RequestInterceptorBuilder</a>",
      "description" : "Adds a Date header via RequestDate.",
      "descriptionHtml" : "Adds a Date header via \n<code>RequestDate</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sqs/4.0.0B1-RELEASE/com/adaptris/aws/sqs/UnbufferedSQSClientFactory.html",
      "fullClassName" : "com.adaptris.aws.sqs.UnbufferedSQSClientFactory",
      "className" : "UnbufferedSQSClientFactory",
      "packageName" : "com.adaptris.aws.sqs",
      "componentType" : "object",
      "alias" : "unbuffered-sqs-client-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-sqs.jar",
      "profile" : { },
      "annotationDetails" : "public class UnbufferedSQSClientFactory\nextends java.lang.Object\nimplements SQSClientFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">UnbufferedSQSClientFactory</span>\nextends java.lang.Object\nimplements <a href=\"SQSClientFactory.html\" title=\"interface in com.adaptris.aws.sqs\" target=\"_new\">SQSClientFactory</a>",
      "description" : "Unbuffered SQS Client Factory.",
      "descriptionHtml" : "Unbuffered SQS Client Factory.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/SQS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-sqs",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultMessageLogger.html",
      "fullClassName" : "com.adaptris.core.DefaultMessageLogger",
      "className" : "DefaultMessageLogger",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "message-logging-default",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Log unique-id & metadata only",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Log unique-id & metadata only\",\n                  since=\"3.8.4\")\npublic class DefaultMessageLogger\nextends MessageLoggerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Log unique-id &amp; metadata only\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">DefaultMessageLogger</span>\nextends <a href=\"MessageLoggerImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">MessageLoggerImpl</a>",
      "description" : "MessageLogger implementation that that logs unique-id and metadata.",
      "descriptionHtml" : "MessageLogger implementation that that logs unique-id and metadata.",
      "inheritance" : [
        {
          "name" : "MessageLoggerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MessageLoggerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetadataTotalsInterceptor.html",
      "fullClassName" : "com.adaptris.core.interceptor.MetadataTotalsInterceptor",
      "className" : "MetadataTotalsInterceptor",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "metadata-totals-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that adds the metadata value to an existing counter",
        "tag" : "interceptor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that adds the metadata value to an existing counter\",\n                  tag=\"interceptor\")\npublic class MetadataTotalsInterceptor\nextends MetadataMetricsInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that adds the metadata value to an existing counter\",\n                  tag=\"interceptor\")\npublic class <span class=\"typeNameLabel\">MetadataTotalsInterceptor</span>\nextends <a href=\"MetadataMetricsInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">MetadataMetricsInterceptorImpl</a>",
      "description" : "WorkflowInterceptor implementation that exposes metrics about integer metadata values via JMX. Each message that passes through the interceptor will be queried in turn for each configured key (getMetadataKeys()). The integer value associated with that key will be added to the existing total for that key within the given time period. The general use-case is when you capture a count of some description (e.g. number of lines), store it against metadata, and to keep a running total of that number for a given time interval. The counts are exposed via MetadataStatisticsMBean for capture and display. Note that if the metadata keys contain non-numeric values, then results are undefined (at the very least you will get NumberFormatException being thrown).",
      "descriptionHtml" : "WorkflowInterceptor implementation that exposes metrics about integer metadata values via JMX. \n<p> Each message that passes through the interceptor will be queried in turn for each configured key (<a href=\"#getMetadataKeys()\" target=\"_new\"><code>getMetadataKeys()</code></a>). The integer value associated with that key will be added to the existing total for that key within the given time period. </p> \n<p> The general use-case is when you capture a count of some description (e.g. number of lines), store it against metadata, and to keep a running total of that number for a given time interval. The counts are exposed via <a href=\"MetadataStatisticsMBean.html\" title=\"interface in com.adaptris.core.interceptor\" target=\"_new\"><code>MetadataStatisticsMBean</code></a> for capture and display. Note that if the metadata keys contain non-numeric values, then results are undefined (at the very least you will get <code>NumberFormatException</code> being thrown). </p>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        },
        {
          "name" : "MetricsInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetricsInterceptorImpl.html"
        },
        {
          "name" : "MetadataStatistic",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetadataStatistic.html"
        },
        {
          "name" : "MetadataMetricsInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetadataMetricsInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/auth/NoAuthentication.html",
      "fullClassName" : "com.adaptris.core.http.auth.NoAuthentication",
      "className" : "NoAuthentication",
      "packageName" : "com.adaptris.core.http.auth",
      "componentType" : "object",
      "alias" : "http-no-authentication",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoAuthentication\nextends java.lang.Object\nimplements HttpAuthenticator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoAuthentication</span>\nextends java.lang.Object\nimplements <a href=\"HttpAuthenticator.html\" title=\"interface in com.adaptris.core.http.auth\" target=\"_new\">HttpAuthenticator</a>",
      "description" : "No Authentication required.",
      "descriptionHtml" : "No Authentication required.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MultiPayloadStringInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MultiPayloadStringInputParameter",
      "className" : "MultiPayloadStringInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "multi-payload-string-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MultiPayloadStringInputParameter\nextends StringPayloadDataInputParameter\nimplements DataInputParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultiPayloadStringInputParameter</span>\nextends <a href=\"StringPayloadDataInputParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">StringPayloadDataInputParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.lang.String&gt;",
      "description" : "This MultiPayloadDataInputParameter is used when you want to source data from the MultiPayloadAdaptrisMessage payload. An example might be specifying that the XML content required for the XPathService can be found in the payload of an MultiPayloadAdaptrisMessage.",
      "descriptionHtml" : "This \n<code>MultiPayloadDataInputParameter</code> is used when you want to source data from the \n<a href=\"../MultiPayloadAdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>MultiPayloadAdaptrisMessage</code></a> payload. An example might be specifying that the XML content required for the \n<a href=\"../services/path/XPathService.html\" title=\"class in com.adaptris.core.services.path\" target=\"_new\"><code>XPathService</code></a> can be found in the payload of an \n<a href=\"../MultiPayloadAdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>MultiPayloadAdaptrisMessage</code></a>.",
      "inheritance" : [
        {
          "name" : "StringPayloadDataInputParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/StringPayloadDataInputParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/XsltTransformerFactory.html",
      "fullClassName" : "com.adaptris.util.text.xml.XsltTransformerFactory",
      "className" : "XsltTransformerFactory",
      "packageName" : "com.adaptris.util.text.xml",
      "componentType" : "object",
      "alias" : "xslt-transformer-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XsltTransformerFactory\nextends XmlTransformerFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XsltTransformerFactory</span>\nextends <a href=\"XmlTransformerFactoryImpl.html\" title=\"class in com.adaptris.util.text.xml\" target=\"_new\">XmlTransformerFactoryImpl</a>",
      "description" : "The XsltTransformerFactory is responsible for creating the Transformer. The Transformer is used to actually perform a document transformation.",
      "descriptionHtml" : "<p> The XsltTransformerFactory is responsible for creating the <code>Transformer</code>. </p> \n<p> The <code>Transformer</code> is used to actually perform a document transformation. </p>",
      "inheritance" : [
        {
          "name" : "XmlTransformerFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/XmlTransformerFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/FormDataFromMetadata.html",
      "fullClassName" : "com.adaptris.core.services.metadata.FormDataFromMetadata",
      "className" : "FormDataFromMetadata",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "www-url-form-encoded-payload-from-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Create a application/x-www-url-form-encoded payload from metadata",
        "tag" : "service,metadata,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Create a application/x-www-url-form-encoded payload from metadata\",\n                  tag=\"service,metadata,http,https\",\n                  since=\"3.9.0\")\npublic class FormDataFromMetadata\nextends UrlEncodedMetadataValues",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Create a application/x-www-url-form-encoded payload from metadata\",\n                  tag=\"service,metadata,http,https\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">FormDataFromMetadata</span>\nextends <a href=\"UrlEncodedMetadataValues.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">UrlEncodedMetadataValues</a>",
      "description" : "Service that creates something suitable to send as application/x-www-url-form-encoded from metadata.",
      "descriptionHtml" : "Service that creates something suitable to send as \n<code>application/x-www-url-form-encoded</code> from metadata.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "UrlEncodedMetadataValues",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/UrlEncodedMetadataValues.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/auth/MetadataUsernamePassword.html",
      "fullClassName" : "com.adaptris.core.http.auth.MetadataUsernamePassword",
      "className" : "MetadataUsernamePassword",
      "packageName" : "com.adaptris.core.http.auth",
      "componentType" : "object",
      "alias" : "http-metadata-username-password",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataUsernamePassword\nextends UserPassAuthentication",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataUsernamePassword</span>\nextends <a href=\"UserPassAuthentication.html\" title=\"class in com.adaptris.core.http.auth\" target=\"_new\">UserPassAuthentication</a>",
      "description" : "Authenticate using the standard PasswordAuthentication method with a username and password derived from metadata.",
      "descriptionHtml" : "Authenticate using the standard \n<code>PasswordAuthentication</code> method with a username and password derived from metadata.",
      "inheritance" : [
        {
          "name" : "UserPassAuthentication",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/auth/UserPassAuthentication.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jsr107-cache/4.0.0B1-RELEASE/com/adaptris/core/cache/jcache/NewCacheConfiguration.html",
      "fullClassName" : "com.adaptris.core.cache.jcache.NewCacheConfiguration",
      "className" : "NewCacheConfiguration",
      "packageName" : "com.adaptris.core.cache.jcache",
      "componentType" : "object",
      "alias" : "jsr107-new-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-jsr107-cache.jar",
      "profile" : { },
      "annotationDetails" : "public class NewCacheConfiguration\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NewCacheConfiguration</span>\nextends java.lang.Object",
      "description" : "Configuration that will be used when no cache is found by CacheManager.getCache(String, Class, Class).",
      "descriptionHtml" : "Configuration that will be used when no cache is found by \n<code>CacheManager.getCache(String, Class, Class)</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/JSR107",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jsr107-cache",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mqtt/4.0.0B1-RELEASE/com/adaptris/core/mqtt/MqttConnection.html",
      "fullClassName" : "com.adaptris.core.mqtt.MqttConnection",
      "className" : "MqttConnection",
      "packageName" : "com.adaptris.core.mqtt",
      "componentType" : "connection",
      "alias" : "mqtt-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-mqtt.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.5.0",
        "summary" : "Connect to a MQTT broker",
        "tag" : "connections,mqtt"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a MQTT broker\",\n                  tag=\"connections,mqtt\",\n                  since=\"3.5.0\")\npublic class MqttConnection\nextends AdaptrisConnectionImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a MQTT broker\",\n                  tag=\"connections,mqtt\",\n                  since=\"3.5.0\")\npublic class <span class=\"typeNameLabel\">MqttConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnectionImp</a>",
      "description" : "AdaptrisConnection implementation for Paho MQTT.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnection</a> implementation for Paho MQTT.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MQTT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mqtt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/Base64DecodeService.html",
      "fullClassName" : "com.adaptris.core.services.Base64DecodeService",
      "className" : "Base64DecodeService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "base64-decode-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Base64 decode the message",
        "tag" : "service,base64"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Base64 decode the message\",\n                  tag=\"service,base64\")\npublic class Base64DecodeService\nextends Base64Service",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Base64 decode the message\",\n                  tag=\"service,base64\")\npublic class <span class=\"typeNameLabel\">Base64DecodeService</span>\nextends <a href=\"Base64Service.html\" title=\"class in com.adaptris.core.services\" target=\"_new\">Base64Service</a>",
      "description" : "Base64 Decode the message.",
      "descriptionHtml" : "Base64 Decode the message.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "Base64Service",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/Base64Service.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-common/4.0.0B1-RELEASE/com/adaptris/jclouds/common/DefaultCredentialsBuilder.html",
      "fullClassName" : "com.adaptris.jclouds.common.DefaultCredentialsBuilder",
      "className" : "DefaultCredentialsBuilder",
      "packageName" : "com.adaptris.jclouds.common",
      "componentType" : "object",
      "alias" : "jclouds-default-credentials-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Provide credentials",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Provide credentials\")\npublic class DefaultCredentialsBuilder\nextends java.lang.Object\nimplements CredentialsBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Provide credentials\")\npublic class <span class=\"typeNameLabel\">DefaultCredentialsBuilder</span>\nextends java.lang.Object\nimplements <a href=\"CredentialsBuilder.html\" title=\"interface in com.adaptris.jclouds.common\" target=\"_new\">CredentialsBuilder</a>",
      "description" : "Default implementation of CredentialsBuilder for use with jclouds.",
      "descriptionHtml" : "Default implementation of \n<a href=\"CredentialsBuilder.html\" title=\"interface in com.adaptris.jclouds.common\" target=\"_new\"><code>CredentialsBuilder</code></a> for use with jclouds.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/OpenSSHConfigBuilder.html",
      "fullClassName" : "com.adaptris.sftp.OpenSSHConfigBuilder",
      "className" : "OpenSSHConfigBuilder",
      "packageName" : "com.adaptris.sftp",
      "componentType" : "object",
      "alias" : "openssh-config-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class OpenSSHConfigBuilder\nextends ConfigBuilderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OpenSSHConfigBuilder</span>\nextends <a href=\"ConfigBuilderImpl.html\" title=\"class in com.adaptris.sftp\" target=\"_new\">ConfigBuilderImpl</a>",
      "description" : "Builds a ConfigRepository based on an OpenSSH configuration file.",
      "descriptionHtml" : "Builds a \n<code>ConfigRepository</code> based on an OpenSSH configuration file.",
      "inheritance" : [
        {
          "name" : "ConfigBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/ConfigBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/NoOpResponseHeaderProvider.html",
      "fullClassName" : "com.adaptris.core.http.jetty.NoOpResponseHeaderProvider",
      "className" : "NoOpResponseHeaderProvider",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-no-response-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoOpResponseHeaderProvider\nextends java.lang.Object\nimplements ResponseHeaderProvider<javax.servlet.http.HttpServletResponse>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoOpResponseHeaderProvider</span>\nextends java.lang.Object\nimplements <a href=\"../server/ResponseHeaderProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\">ResponseHeaderProvider</a>&lt;javax.servlet.http.HttpServletResponse&gt;",
      "description" : "ResponseHeaderProvider implementation that does not add any HTTP response headers.",
      "descriptionHtml" : "<a href=\"../server/ResponseHeaderProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>ResponseHeaderProvider</code></a> implementation that does not add any HTTP response headers.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-jms/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsConnection.html",
      "fullClassName" : "com.adaptris.xa.jms.XAJmsConnection",
      "className" : "XAJmsConnection",
      "packageName" : "com.adaptris.xa.jms",
      "componentType" : "connection",
      "alias" : "xa-jms-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-jms.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a JMS 1.1 broker using XA transactions",
        "tag" : "connections,jms,xa"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a JMS 1.1 broker using XA transactions\",\n                  tag=\"connections,jms,xa\")\npublic class XAJmsConnection\nextends AllowsRetriesConnection\nimplements XAJmsConnectionConfig, ConnectionComparator<XAJmsConnection>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a JMS 1.1 broker using XA transactions\",\n                  tag=\"connections,jms,xa\")\npublic class <span class=\"typeNameLabel\">XAJmsConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AllowsRetriesConnection</a>\nimplements <a href=\"XAJmsConnectionConfig.html\" title=\"interface in com.adaptris.xa.jms\" target=\"_new\">XAJmsConnectionConfig</a>, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ConnectionComparator.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">ConnectionComparator</a>&lt;<a href=\"XAJmsConnection.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\">XAJmsConnection</a>&gt;",
      "description" : "JMS 1.1 standard XA JMS connection.",
      "descriptionHtml" : "JMS 1.1 standard XA JMS connection.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-jms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/SolaceConsumerConnectionErrorHandler.html",
      "fullClassName" : "com.adaptris.core.jms.solace.SolaceConsumerConnectionErrorHandler",
      "className" : "SolaceConsumerConnectionErrorHandler",
      "packageName" : "com.adaptris.core.jms.solace",
      "componentType" : "object",
      "alias" : "solace-consumer-connection-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A connection error handler that listens for Solace queue shutdown events.",
        "tag" : "consumer,jms,error-handler"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A connection error handler that listens for Solace queue shutdown events.\",\n                  tag=\"consumer,jms,error-handler\")\npublic class SolaceConsumerConnectionErrorHandler\nextends JmsConnectionErrorHandler\nimplements com.solacesystems.jms.SolConsumerEventListener",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A connection error handler that listens for Solace queue shutdown events.\",\n                  tag=\"consumer,jms,error-handler\")\npublic class <span class=\"typeNameLabel\">SolaceConsumerConnectionErrorHandler</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnectionErrorHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">JmsConnectionErrorHandler</a>\nimplements com.solacesystems.jms.SolConsumerEventListener",
      "description" : "A custom connection error handler that can be configured on your Solace consumers. This connection error handler uses the same standard JMSException listener, but additionally will listen for queue shutdown events, therefore triggering the exception handler. If you use this error handler and a JmsConsumer (rather than PtpConsumer or PasConsumer) then you will also need to set the advanced property of deferConsumerCreationToVendor to true on your JmsConsumer. This will allow us to continue to try to create the consumer on restart until the queue has been bought back up again.",
      "descriptionHtml" : "<p> A custom connection error handler that can be configured on your Solace consumers. </p> \n<p> This connection error handler uses the same standard JMSException listener, but additionally will listen for queue shutdown events, therefore triggering the exception handler. </p> \n<p> If you use this error handler and a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsConsumer</code></a> (rather than <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PtpConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>PtpConsumer</code></a> or <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PasConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>PasConsumer</code></a>) then you will also need to set the advanced property of deferConsumerCreationToVendor to true on your <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsConsumer</code></a>. This will allow us to continue to try to create the consumer on restart until the queue has been bought back up again. </p>",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true"
        },
        {
          "name" : "JmsConnectionErrorHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnectionErrorHandlerImpl.html?is-external=true"
        },
        {
          "name" : "JmsConnectionErrorHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnectionErrorHandler.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/generic/FormBasedAccessToken.html",
      "fullClassName" : "com.adaptris.core.oauth.generic.FormBasedAccessToken",
      "className" : "FormBasedAccessToken",
      "packageName" : "com.adaptris.core.oauth.generic",
      "componentType" : "object",
      "alias" : "oauth-access-token-via-form",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-generic.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Get a bearer token based on a URL Form based OAuth authentication flow.",
        "tag" : "oauth,http,https"
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.11.1\",\n                  summary=\"Get a bearer token based on a URL Form based OAuth authentication flow.\",\n                  tag=\"oauth,http,https\")\npublic class FormBasedAccessToken\nextends GenericAccessTokenImpl",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.11.1\",\n                  summary=\"Get a bearer token based on a URL Form based OAuth authentication flow.\",\n                  tag=\"oauth,http,https\")\npublic class <span class=\"typeNameLabel\">FormBasedAccessToken</span>\nextends <a href=\"GenericAccessTokenImpl.html\" title=\"class in com.adaptris.core.oauth.generic\" target=\"_new\">GenericAccessTokenImpl</a>",
      "description" : "Wraps the a URL Form based OAuth authentication flow. This class is designed for the situation where the OAUTH provider does not have a specific API that we can use. The sequence of events is : Filter the metadata to create a UrlEncodedFormEntity; the contents of the URL Form are determined solely by the metadata-filter. Post this to the configured URL. Extract the access token information via the configured OauthResponseHandler This then is your access token It is perfectly possible to achieve the same thing with standard configuration; it would be a combination of AddMetadataService + CreateQueryStringFromMetadata + (StandardHttpProducer || ApacheHttpProducer) + JsonPathService + AddFormattedMetadataService. This encapsulates all of that into a single class. If you have encoded passwords in your metadata, consider using a PasswordDecodeMetadataFilter as part of a CompositeMetadataFilter.",
      "descriptionHtml" : "Wraps the a URL Form based OAuth authentication flow. \n<p> This class is designed for the situation where the OAUTH provider does not have a specific API that we can use. The sequence of events is : </p> \n<ul> \n <li>Filter the metadata to create a <code>UrlEncodedFormEntity</code>; the contents of the URL Form are determined solely by the metadata-filter.</li> \n <li>Post this to the configured URL.</li> \n <li>Extract the access token information via the configured OauthResponseHandler</li> \n <li>This then is your access token</li> \n <p></p> \n <p> It is perfectly possible to achieve the same thing with standard configuration; it would be a combination of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/AddMetadataService.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.metadata\" class=\"externalLink\" target=\"_new\"><code>AddMetadataService</code></a> + <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/CreateQueryStringFromMetadata.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.metadata\" class=\"externalLink\" target=\"_new\"><code>CreateQueryStringFromMetadata</code></a> + (<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/StandardHttpProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client.net\" class=\"externalLink\" target=\"_new\"><code>StandardHttpProducer</code></a> || <code>ApacheHttpProducer</code>) + <code>JsonPathService</code> + <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/AddFormattedMetadataService.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.metadata\" class=\"externalLink\" target=\"_new\"><code>AddFormattedMetadataService</code></a>. This encapsulates all of that into a single class. If you have encoded passwords in your metadata, consider using a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/PasswordDecodeMetadataFilter.html?is-external=true\" title=\"class or interface in com.adaptris.core.metadata\" class=\"externalLink\" target=\"_new\"><code>PasswordDecodeMetadataFilter</code></a> as part of a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/CompositeMetadataFilter.html?is-external=true\" title=\"class or interface in com.adaptris.core.metadata\" class=\"externalLink\" target=\"_new\"><code>CompositeMetadataFilter</code></a>. </p>\n</ul>",
      "inheritance" : [
        {
          "name" : "GenericAccessTokenImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/generic/GenericAccessTokenImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Generic",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-generic",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/SMBConsumer.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.SMBConsumer",
      "className" : "SMBConsumer",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "consumer",
      "alias" : "smb-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "originalname",
          "fsFileSize",
          "fsConsumeDir",
          "_interlokMessageConsumedFrom"
        ],
        "recommended" : [
          "com.adaptris.filesystem.smbj.SMBConnection"
        ],
        "since" : "3.10.1",
        "summary" : "Consume from an SMB location",
        "tag" : "consumer,samba,smb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Consume from an SMB location\",\n                  tag=\"consumer,samba,smb\",\n                  recommended=SMBConnection.class,\n                  since=\"3.10.1\",\n                  metadata={\"originalname\",\"fsFileSize\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\"})\npublic class SMBConsumer\nextends AdaptrisPollingConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Consume from an SMB location\",\n                  tag=\"consumer,samba,smb\",\n                  recommended=<a href=\"SMBConnection.html\" title=\"class in com.adaptris.filesystem.smbj\" target=\"_new\">SMBConnection.class</a>,\n                  since=\"3.10.1\",\n                  metadata={\"originalname\",\"fsFileSize\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\"})\npublic class <span class=\"typeNameLabel\">SMBConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisPollingConsumer</a>",
      "description" : "Consume from a SMB share, deleting the file after consumption. For consistency with the other 'filesystem' style consumers (such as FsConsumer and FtpConsumer this will provide the same metadata keys containing the original file name (\"originalname\"); the directory ( \"fsConsumeDir\") - in this instance the directory will be UNC path so it will include the server/share-name; and the filesize (\"fsFileSize\"). The behaviour of this consumer is to not recurse into sub-directories and to ignore hidden files.",
      "descriptionHtml" : "Consume from a SMB share, deleting the file after consumption. \n<p> For consistency with the other 'filesystem' style consumers (such as <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.fs\" class=\"externalLink\" target=\"_new\"><code>FsConsumer</code></a> and <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FtpConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.ftp\" class=\"externalLink\" target=\"_new\"><code>FtpConsumer</code></a> this will provide the same metadata keys containing the original file name (<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/CoreConstants.html?is-external=true#ORIGINAL_NAME_KEY\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">\"originalname\"</a>); the directory ( <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/CoreConstants.html?is-external=true#FS_CONSUME_DIRECTORY\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">\"fsConsumeDir\"</a>) - in this instance the directory will be UNC path so it will include the server/share-name; and the filesize (<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/CoreConstants.html?is-external=true#FS_FILE_SIZE\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">\"fsFileSize\"</a>). </p> \n<p> The behaviour of this consumer is to not recurse into sub-directories and to ignore hidden files. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/AdvancedMessageSplitterService.html",
      "fullClassName" : "com.adaptris.core.services.splitter.AdvancedMessageSplitterService",
      "className" : "AdvancedMessageSplitterService",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "service",
      "alias" : "advanced-message-splitter-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Split a message and execute an arbitary number of services on the split message",
        "tag" : "service,splitter"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a message and execute an arbitary number of services on the split message\",\n                  tag=\"service,splitter\")\npublic class AdvancedMessageSplitterService\nextends MessageSplitterServiceImp\nimplements EventHandlerAware, ServiceWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a message and execute an arbitary number of services on the split message\",\n                  tag=\"service,splitter\")\npublic class <span class=\"typeNameLabel\">AdvancedMessageSplitterService</span>\nextends <a href=\"MessageSplitterServiceImp.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageSplitterServiceImp</a>\nimplements <a href=\"../../EventHandlerAware.html\" title=\"interface in com.adaptris.core\" target=\"_new\">EventHandlerAware</a>, <a href=\"../../ServiceWrapper.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ServiceWrapper</a>",
      "description" : "Splits incoming AdaptrisMessages into several using an implementation of MessageSplitter. Rather than directly producing the message to a producer, this allows the use of a ServiceCollection as the target for the resulting split messages.",
      "descriptionHtml" : "<p> Splits incoming <a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>s into several using an implementation of <a href=\"MessageSplitter.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\"><code>MessageSplitter</code></a>. </p> \n<p> Rather than directly producing the message to a producer, this allows the use of a <a href=\"../../ServiceCollection.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ServiceCollection</code></a> as the target for the resulting split messages. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MessageSplitterServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/aggregator/JsonArrayArrayAggregator.html",
      "fullClassName" : "com.adaptris.core.json.aggregator.JsonArrayArrayAggregator",
      "className" : "JsonArrayArrayAggregator",
      "packageName" : "com.adaptris.core.json.aggregator",
      "componentType" : "object",
      "alias" : "json-array-array-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Aggregate messages that are JSON Arrays.",
        "tag" : "json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Aggregate messages that are JSON Arrays.\",\n                  since=\"3.6.5\",\n                  tag=\"json\")\npublic class JsonArrayArrayAggregator\nextends JsonAggregatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Aggregate messages that are JSON Arrays.\",\n                  since=\"3.6.5\",\n                  tag=\"json\")\npublic class <span class=\"typeNameLabel\">JsonArrayArrayAggregator</span>\nextends <a href=\"JsonAggregatorImpl.html\" title=\"class in com.adaptris.core.json.aggregator\" target=\"_new\">JsonAggregatorImpl</a>",
      "description" : "MessageAggregator implementation that adds each message to a JSON array. The pre-split message is always ignored; the payloads from the collection are assumed to be JSON array or objects, and will be aggregated together as a single JSON array. Messages that are not JSON array or objects will be ignored .",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.aggregator\" class=\"externalLink\" target=\"_new\"><code>MessageAggregator</code></a> implementation that adds each message to a JSON array. \n<p> The pre-split message is always ignored; the payloads from the collection are assumed to be JSON array or objects, and will be aggregated together as a single JSON array. Messages that are not JSON array or objects will be ignored . </p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html?is-external=true"
        },
        {
          "name" : "JsonAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/aggregator/JsonAggregatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/SimpleJsonTransformationDriver.html",
      "fullClassName" : "com.adaptris.core.transform.json.SimpleJsonTransformationDriver",
      "className" : "SimpleJsonTransformationDriver",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "object",
      "alias" : "simple-transformation-driver",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Simple JSON/XML Transformation driver",
        "tag" : "json,xml,transformation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Simple JSON/XML Transformation driver\",\n                  tag=\"json,xml,transformation\")\npublic class SimpleJsonTransformationDriver\nextends java.lang.Object\nimplements TransformationDriver",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Simple JSON/XML Transformation driver\",\n                  tag=\"json,xml,transformation\")\npublic class <span class=\"typeNameLabel\">SimpleJsonTransformationDriver</span>\nextends java.lang.Object\nimplements <a href=\"TransformationDriver.html\" title=\"interface in com.adaptris.core.transform.json\" target=\"_new\">TransformationDriver</a>",
      "description" : "Simple XML to JSON converter. This uses the default json.org implementation to convert between JSON and XML. When converting to XML, it will add a root element called json (this is configurable via setJsonTag(String)) as the required XML root element. When converting from XML then it expects the same tag as the root element of the XML. If your input is a relatively JSON object, then this is the transformation driver to use; DefaultJsonTransformationDriver adds a layer of XML complexity that you may not need. The key differentiator is that where the output should be a JSON array with a single element; it will not be supported by this driver implementation. You can still use it, but you will have to execute a JsonTransformService afterwards to change the cardinality. If the input is a JSON array, then json-array (not configurable) will be added as the root element, that wraps the JSON array.",
      "descriptionHtml" : "Simple XML to JSON converter. \n<p> This uses the default <a href=\"http://www.json.org/java/index.html\" target=\"_new\">json.org implementation</a> to convert between JSON and XML. When converting <strong>to XML</strong>, it will add a root element called <code>json</code> (this is configurable via <a href=\"#setJsonTag(java.lang.String)\" target=\"_new\"><code>setJsonTag(String)</code></a>) as the required XML root element. When converting <strong>from XML</strong> then it expects the same tag as the root element of the XML. </p> \n<p> If your input is a relatively JSON object, then this is the transformation driver to use; <code>DefaultJsonTransformationDriver</code> adds a layer of XML complexity that you may not need. The key differentiator is that where the output <strong>should be</strong> a JSON array with a single element; it will not be supported by this driver implementation. You can still use it, but you will have to execute a <a href=\"JsonTransformService.html\" title=\"class in com.adaptris.core.transform.json\" target=\"_new\"><code>JsonTransformService</code></a> afterwards to change the cardinality. </p> \n<p> If the input is a JSON array, then <code>json-array</code> (not configurable) will be added as the root element, that wraps the JSON array. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/system/DefaultCommandBuilder.html",
      "fullClassName" : "com.adaptris.core.services.system.DefaultCommandBuilder",
      "className" : "DefaultCommandBuilder",
      "packageName" : "com.adaptris.core.services.system",
      "componentType" : "object",
      "alias" : "default-system-command-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultCommandBuilder\nextends java.lang.Object\nimplements CommandBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultCommandBuilder</span>\nextends java.lang.Object\nimplements <a href=\"CommandBuilder.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\">CommandBuilder</a>",
      "description" : "Default implementation of CommandBuilder",
      "descriptionHtml" : "Default implementation of \n<a href=\"CommandBuilder.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\"><code>CommandBuilder</code></a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/Assertions.html",
      "fullClassName" : "com.adaptris.tester.runtime.Assertions",
      "className" : "Assertions",
      "packageName" : "com.adaptris.tester.runtime",
      "componentType" : "object",
      "alias" : "assertions",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class Assertions\nextends java.util.AbstractCollection<Assertion>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Assertions</span>\nextends java.util.AbstractCollection&lt;<a href=\"messages/assertion/Assertion.html\" title=\"interface in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">Assertion</a>&gt;",
      "inheritance" : [
        {
          "name" : "Assertion",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/Assertion.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/Base58ByteTranslator.html",
      "fullClassName" : "com.adaptris.util.text.Base58ByteTranslator",
      "className" : "Base58ByteTranslator",
      "packageName" : "com.adaptris.util.text",
      "componentType" : "object",
      "alias" : "base58-byte-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class Base58ByteTranslator\nextends ByteTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Base58ByteTranslator</span>\nextends <a href=\"ByteTranslator.html\" title=\"class in com.adaptris.util.text\" target=\"_new\">ByteTranslator</a>",
      "description" : "Simply convert to and from base58.",
      "descriptionHtml" : "Simply convert to and from base58.",
      "inheritance" : [
        {
          "name" : "ByteTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/ByteTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockRequestReplyProducer",
      "className" : "MockRequestReplyProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/params/MetadataCommandParameter.html",
      "fullClassName" : "com.adaptris.as400.params.MetadataCommandParameter",
      "className" : "MetadataCommandParameter",
      "packageName" : "com.adaptris.as400.params",
      "componentType" : "object",
      "alias" : "as400-metadata-command-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-as400.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataCommandParameter\nextends CommandParameter\nimplements ServiceOutputParameter, ServiceInputParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataCommandParameter</span>\nextends <a href=\"CommandParameter.html\" title=\"class in com.adaptris.as400.params\" target=\"_new\">CommandParameter</a>\nimplements <a href=\"ServiceOutputParameter.html\" title=\"interface in com.adaptris.as400.params\" target=\"_new\">ServiceOutputParameter</a>, <a href=\"ServiceInputParameter.html\" title=\"interface in com.adaptris.as400.params\" target=\"_new\">ServiceInputParameter</a>",
      "inheritance" : [
        {
          "name" : "CommandParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/params/CommandParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OS/AS400",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-as400",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBUpdateProducer.html",
      "fullClassName" : "com.adaptris.core.mongodb.MongoDBUpdateProducer",
      "className" : "MongoDBUpdateProducer",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "producer",
      "alias" : "mongodb-update-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.mongodb.MongoDBConnection"
        ],
        "since" : "",
        "summary" : "Update JSON objects into MongoDB.",
        "tag" : "producer,mongodb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Update JSON objects into MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=MongoDBConnection.class)\npublic class MongoDBUpdateProducer\nextends MongoDBUpdateReplaceProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Update JSON objects into MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=<a href=\"MongoDBConnection.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBConnection.class</a>)\npublic class <span class=\"typeNameLabel\">MongoDBUpdateProducer</span>\nextends <a href=\"MongoDBUpdateReplaceProducer.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBUpdateReplaceProducer</a>",
      "description" : "Producer that updates JSON objects into MongoDB, if a JSON array is given the array will be split and inserted as individual JSON objects. Producer assumes you've formatted the json in required format: Result:      \n     [ { \"$set\" : { \"stars\" : \"4\" } } ]",
      "descriptionHtml" : "Producer that updates JSON objects into MongoDB, if a JSON array is given the array will be split and inserted as individual JSON objects. Producer assumes you've formatted the json in required format: \n<p> Result: </p>\n<pre>     <code>\n     [ { \"$set\" : { \"stars\" : \"4\" } } ]\n     </code>\n   </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "MongoDBProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBProducer.html"
        },
        {
          "name" : "MongoDBArrayProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBArrayProducer.html"
        },
        {
          "name" : "MongoDBUpdateReplaceProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBUpdateReplaceProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/ReadFileService.html",
      "fullClassName" : "com.adaptris.core.services.ReadFileService",
      "className" : "ReadFileService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "read-file-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Read a file from a specific path into the message payload",
        "tag" : "service,file"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Read a file from a specific path into the message payload\",\n                  tag=\"service,file\")\npublic class ReadFileService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Read a file from a specific path into the message payload\",\n                  tag=\"service,file\")\npublic class <span class=\"typeNameLabel\">ReadFileService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Read a file from a specific path into the message payload.",
      "descriptionHtml" : "Read a file from a specific path into the message payload.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/XmlBasicValidator.html",
      "fullClassName" : "com.adaptris.core.transform.XmlBasicValidator",
      "className" : "XmlBasicValidator",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "object",
      "alias" : "xml-basic-validator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlBasicValidator\nextends MessageValidatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlBasicValidator</span>\nextends <a href=\"MessageValidatorImpl.html\" title=\"class in com.adaptris.core.transform\" target=\"_new\">MessageValidatorImpl</a>",
      "description" : "Used with XmlValidationService to validate that a message is in fact XML.",
      "descriptionHtml" : "Used with \n<a href=\"XmlValidationService.html\" title=\"class in com.adaptris.core.transform\" target=\"_new\"><code>XmlValidationService</code></a> to validate that a message is in fact XML.",
      "inheritance" : [
        {
          "name" : "MessageValidatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/MessageValidatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/async/XAWorkflowAsync.html",
      "fullClassName" : "com.adaptris.xa.jms.async.XAWorkflowAsync",
      "className" : "XAWorkflowAsync",
      "packageName" : "com.adaptris.xa.jms.async",
      "componentType" : "workflow",
      "alias" : "xa-async-workflow",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-atomikos.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Basic Single Threaded Workflow",
        "tag" : "workflow,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Basic Single Threaded Workflow\",\n                  tag=\"workflow,base\")\npublic class XAWorkflowAsync\nextends StandardWorkflow",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Basic Single Threaded Workflow\",\n                  tag=\"workflow,base\")\npublic class <span class=\"typeNameLabel\">XAWorkflowAsync</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflow.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">StandardWorkflow</a>",
      "description" : "An async workflow based on a standard implementation of Workflow that configures the callback on the consumer when the producer sends messages.",
      "descriptionHtml" : "<p> An async workflow based on a standard implementation of <code>Workflow</code> that configures the callback on the consumer when the producer sends messages. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowImp.html?is-external=true"
        },
        {
          "name" : "StandardWorkflowImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflowImpl.html?is-external=true"
        },
        {
          "name" : "StandardWorkflow",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflow.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Atomikos",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-atomikos",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/DirectoryEntity.html",
      "fullClassName" : "com.adaptris.filesystem.DirectoryEntity",
      "className" : "DirectoryEntity",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "object",
      "alias" : "Entity",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : { },
      "annotationDetails" : "public class DirectoryEntity\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DirectoryEntity</span>\nextends java.lang.Object",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MultiProducerWorkflow.html",
      "fullClassName" : "com.adaptris.core.MultiProducerWorkflow",
      "className" : "MultiProducerWorkflow",
      "packageName" : "com.adaptris.core",
      "componentType" : "workflow",
      "alias" : "multi-producer-workflow",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Workflow that has multiple additional producers in addition to the normal producer",
        "tag" : "workflow,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Workflow that has multiple additional producers in addition to the normal producer\",\n                  tag=\"workflow,base\")\npublic class MultiProducerWorkflow\nextends StandardWorkflow",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Workflow that has multiple additional producers in addition to the normal producer\",\n                  tag=\"workflow,base\")\npublic class <span class=\"typeNameLabel\">MultiProducerWorkflow</span>\nextends <a href=\"StandardWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\">StandardWorkflow</a>",
      "description" : "Implementation of Workflow that contains multiple producers. Implementation of Workflow that over-rides sendProcessedMessage to use a List of StandaloneProducers. NB the main 'produce', from which the success or failure of the workflow is determined, is still configured in Workflow itself, and any failures producing below are only logged.",
      "descriptionHtml" : "Implementation of \n<a href=\"Workflow.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Workflow</code></a> that contains multiple producers. \n<p> Implementation of <code>Workflow</code> that over-rides <code>sendProcessedMessage</code> to use a <code>List</code> of <code>StandaloneProducer</code>s. NB the main 'produce', from which the success or failure of the workflow is determined, is still configured in <code>Workflow</code> itself, and any failures producing below are only logged. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowImp.html"
        },
        {
          "name" : "StandardWorkflowImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflowImpl.html"
        },
        {
          "name" : "StandardWorkflow",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflow.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/legacy/X12SeparatorMetadataService.html",
      "fullClassName" : "com.adaptris.core.transform.edi.legacy.X12SeparatorMetadataService",
      "className" : "X12SeparatorMetadataService",
      "packageName" : "com.adaptris.core.transform.edi.legacy",
      "componentType" : "service",
      "alias" : "edi-x12-separator-parser",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : { },
      "annotationDetails" : "public class X12SeparatorMetadataService\nextends LicensedService",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">X12SeparatorMetadataService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedService</a>",
      "description" : "Class that extracts X12 separators from an ISA record and sets them as metadata. It is designed for use with EdiXmlService with a CharacterSetFactory implementation (probably one of MetadataCharacterSetFactory or HexMetadataCharacterSetFactory). Note the this class does not set any metadata for the EDI composite field separator as it only parses the characters at 4, 105 and 106. The EDI Composite field separator should be set separately. In the adapter configuration file this class is aliased as edi-x12-separator-parser which is the preferred alternative to the fully qualified classname when building your configuration.",
      "descriptionHtml" : "Class that extracts X12 separators from an ISA record and sets them as metadata. \n<p> It is designed for use with <a href=\"EdiXmlService.html\" title=\"class in com.adaptris.core.transform.edi.legacy\" target=\"_new\"><code>EdiXmlService</code></a> with a <a href=\"CharacterSetFactory.html\" title=\"interface in com.adaptris.core.transform.edi.legacy\" target=\"_new\"><code>CharacterSetFactory</code></a> implementation (probably one of <a href=\"MetadataCharacterSetFactory.html\" title=\"class in com.adaptris.core.transform.edi.legacy\" target=\"_new\"><code>MetadataCharacterSetFactory</code></a> or <a href=\"HexMetadataCharacterSetFactory.html\" title=\"class in com.adaptris.core.transform.edi.legacy\" target=\"_new\"><code>HexMetadataCharacterSetFactory</code></a>). Note the this class does not set any metadata for the EDI composite field separator as it only parses the characters at 4, 105 and 106. The EDI Composite field separator should be set separately. </p> \n<p> In the adapter configuration file this class is aliased as <b>edi-x12-separator-parser</b> which is the preferred alternative to the fully qualified classname when building your configuration. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "LicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-geode/4.0.0B1-RELEASE/com/adaptris/core/cache/geode/GeodeCache.html",
      "fullClassName" : "com.adaptris.core.cache.geode.GeodeCache",
      "className" : "GeodeCache",
      "packageName" : "com.adaptris.core.cache.geode",
      "componentType" : "object",
      "alias" : "geode-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-geode.jar",
      "profile" : { },
      "annotationDetails" : "public class GeodeCache\nextends java.lang.Object\nimplements Cache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">GeodeCache</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/Cache.html?is-external=true\" title=\"class or interface in com.adaptris.core.cache\" class=\"externalLink\" target=\"_new\">Cache</a>",
      "description" : "Interlok Apache Geode Cache Implementation. You can configure this component via the following options: Cache file, region name and region type Host, port, region name and region type Configuration parameters: regionName - Name of the region where items will be cached hostname - geode server hostname port - integer, geode server port clientRegionShortcut - String value region type as defined: ClientRegionShortcut cacheFileName - String - simple file name of the geode config cache file which resides on the classpath isDurable - boolean - maintain your durable queues after the client cache is closed",
      "descriptionHtml" : "<p> Interlok Apache Geode Cache Implementation.<br> You can configure this component via the following options: </p> \n<ul> \n <li>Cache file, region name and region type</li> \n <li>Host, port, region name and region type</li> \n</ul> \n<p> Configuration parameters: </p> \n<ul> \n <li>regionName - Name of the region where items will be cached</li> \n <li>hostname - geode server hostname</li> \n <li>port - integer, geode server port</li> \n <li>clientRegionShortcut - String value region type as defined: <code>ClientRegionShortcut</code></li> \n <li>cacheFileName - String - simple file name of the geode config cache file which resides on the classpath</li> \n <li>isDurable - boolean - maintain your durable queues after the client cache is closed</li> \n</ul> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/Apache Geode",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-geode",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-swift/4.0.0B1-RELEASE/com/adaptris/core/transform/swift/XmlSwiftService.html",
      "fullClassName" : "com.adaptris.core.transform.swift.XmlSwiftService",
      "className" : "XmlSwiftService",
      "packageName" : "com.adaptris.core.transform.swift",
      "componentType" : "service",
      "alias" : "xml-swift-service",
      "deprecated" : false,
      "jarFileName" : "interlok-swift.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transform a XML message to SWIFT",
        "tag" : "service,transform,xml,swift"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform a XML message to SWIFT\",\n                  tag=\"service,transform,xml,swift\")\npublic class XmlSwiftService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform a XML message to SWIFT\",\n                  tag=\"service,transform,xml,swift\")\npublic class <span class=\"typeNameLabel\">XmlSwiftService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Parse an incoming XML message and create an SWIFT representation of it.",
      "descriptionHtml" : "Parse an incoming XML message and create an SWIFT representation of it.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/SWIFT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-swift",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxRoutingService.html",
      "fullClassName" : "com.adaptris.core.services.routing.SyntaxRoutingService",
      "className" : "SyntaxRoutingService",
      "packageName" : "com.adaptris.core.services.routing",
      "componentType" : "service",
      "alias" : "syntax-routing-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Identify a message, and set a metadata key based on the identifier",
        "tag" : "service,routing"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Identify a message, and set a metadata key based on the identifier\",\n                  tag=\"service,routing\")\npublic class SyntaxRoutingService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Identify a message, and set a metadata key based on the identifier\",\n                  tag=\"service,routing\")\npublic class <span class=\"typeNameLabel\">SyntaxRoutingService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Extracts data from an AdaptrisMessage and stores it against metadata. This is somewhat similar to the available MetadataService, however it uses a list of SyntaxIdentifiers in order to determine the value that should be stored against a particular metadata key. Each SyntaxIdentifier is tried in turn, until true is returned by the method isThisSyntax(AdaptrisMessage). At this point, the value returned by getDestination() is stored against the configured key.",
      "descriptionHtml" : "Extracts data from an AdaptrisMessage and stores it against metadata. \n<p> This is somewhat similar to the available MetadataService, however it uses a list of <code>SyntaxIdentifiers</code> in order to determine the value that should be stored against a particular metadata key. </p> \n<p> Each <code>SyntaxIdentifier</code> is tried in turn, until <b>true</b> is returned by the method <code>isThisSyntax(AdaptrisMessage)</code>. At this point, the value returned by <code>getDestination()</code> is stored against the configured key. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing-demo/4.0.0B1-RELEASE/com/adaptris/core/licensed/DummyBasicLicensedService.html",
      "fullClassName" : "com.adaptris.core.licensed.DummyBasicLicensedService",
      "className" : "DummyBasicLicensedService",
      "packageName" : "com.adaptris.core.licensed",
      "componentType" : "service",
      "alias" : "dummy-basic-licensed-service",
      "deprecated" : false,
      "jarFileName" : "interlok-licensing-demo.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "no-op service that simply requires a license (Basic)",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"no-op service that simply requires a license (Basic)\",\n                  since=\"3.9.0\")\npublic class DummyBasicLicensedService\nextends DummyLicensedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"no-op service that simply requires a license (Basic)\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">DummyBasicLicensedService</span>\nextends <a href=\"DummyLicensedService.html\" title=\"class in com.adaptris.core.licensed\" target=\"_new\">DummyLicensedService</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "DummyLicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing-demo/4.0.0B1-RELEASE/com/adaptris/core/licensed/DummyLicensedService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok License/Examples",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-licensing-demo",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StringStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.StringStatementParameter",
      "className" : "StringStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-string-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StringStatementParameter\nextends TypedStatementParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringStatementParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.lang.String&gt;",
      "description" : "String Statement Parameter.",
      "descriptionHtml" : "<code>String</code> Statement Parameter.",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/retry/S3RetryStore.html",
      "fullClassName" : "com.adaptris.aws.s3.retry.S3RetryStore",
      "className" : "S3RetryStore",
      "packageName" : "com.adaptris.aws.s3.retry",
      "componentType" : "object",
      "alias" : "amazon-s3-retry-store",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.s3.AmazonS3Connection"
        ],
        "since" : "3.11.1",
        "summary" : "Supporting implementation for using S3 as your failed message store",
        "tag" : "retry,amazon,s3"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Supporting implementation for using S3 as your failed message store\",\n                  tag=\"retry,amazon,s3\",\n                  since=\"3.11.1\",\n                  recommended=AmazonS3Connection.class)\npublic class S3RetryStore\nextends java.lang.Object\nimplements RetryStore",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Supporting implementation for using S3 as your failed message store\",\n                  tag=\"retry,amazon,s3\",\n                  since=\"3.11.1\",\n                  recommended=<a href=\"../AmazonS3Connection.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">AmazonS3Connection.class</a>)\npublic class <span class=\"typeNameLabel\">S3RetryStore</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/RetryStore.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.jetty.retry\" class=\"externalLink\" target=\"_new\">RetryStore</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/xa/solace/XaBasicSolaceImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.xa.solace.XaBasicSolaceImplementation",
      "className" : "XaBasicSolaceImplementation",
      "packageName" : "com.adaptris.core.jms.xa.solace",
      "componentType" : "object",
      "alias" : "xa-basic-solace-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class XaBasicSolaceImplementation\nextends BasicSolaceImplementation\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XaBasicSolaceImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/BasicSolaceImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms.solace\" class=\"externalLink\" target=\"_new\">BasicSolaceImplementation</a>\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "BasicSolaceImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/BasicSolaceImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/idoc/IdocProduceConnection.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.idoc.IdocProduceConnection",
      "className" : "IdocProduceConnection",
      "packageName" : "com.adaptris.core.sap.jco3.idoc",
      "componentType" : "connection",
      "alias" : "sapjco3-idoc-produce-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection type for supporting SAP JCO3 IDOC producers",
        "tag" : "connections,sap,idoc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection type for supporting SAP JCO3 IDOC producers\",\n                  tag=\"connections,sap,idoc\")\npublic class IdocProduceConnection\nextends IdocConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection type for supporting SAP JCO3 IDOC producers\",\n                  tag=\"connections,sap,idoc\")\npublic class <span class=\"typeNameLabel\">IdocProduceConnection</span>\nextends <a href=\"IdocConnection.html\" title=\"class in com.adaptris.core.sap.jco3.idoc\" target=\"_new\">IdocConnection</a>",
      "description" : "Class for managing connections when sending IDocs to SAP via ALE. This class indirectly provides a com.sap.conn.jco.ext.DestinationDataProvider and com.sap.conn.jco.ext.ServerDataProvider for the underlying RFC Connection. The following table is copied directly from the SAP Java Connector API documentation. Please use the appropriate settings for your SAP application landscape; no verification is performed on the properties. The following properties are supported: Key value Description jco.client.client SAP client jco.client.user Logon user jco.client.alias_user Logon user alias jco.client.passwd Logon password jco.client.lang Logon language jco.client.saprouter SAP router string to use for a system protected by a firewall jco.client.sysnr SAP system number jco.client.ashost SAP application server jco.client.mshost SAP message server jco.client.msserv optional: SAP message server port to use instead of the default sapms<sysid> jco.client.gwhost Gateway host jco.client.gwserv Gateway service jco.client.r3name System ID of the SAP system jco.client.group Group of SAP application servers jco.client.tpname Program ID of external server program jco.client.tphost Host of external server program jco.client.type Type of remote host 2 = R/2, 3 = R/3, E = External jco.client.trace Enable/disable RFC trace (0 or 1) jco.client.cpic_trace Enable/disable CPIC trace (-1 [take over environment value], 0 no trace, 1,2,3 different amount of trace) jco.client.use_sapgui Start a SAP GUI and associate with the connection. (0 - do not start [default], 1 start GUI, 2 start GUI and hide if not used) jco.client.codepage Initial codepage in SAP notation jco.client.getsso2 Get/Don't get a SSO ticket after logon (1 or 0) jco.client.mysapsso2 Use the specified SAP Cookie Version 2 as logon ticket jco.client.x509cert Use the specified X509 certificate as logon ticket jco.client.lcheck Enable/Disable logon check at open time, 1 (enable) or 0 (disable) jco.client.snc_mode Secure network connection (SNC) mode, 0 (off) or 1 (on) jco.client.snc_partnername SNC partner, e.g. p:CN=R3, O=XYZ-INC, C=EN jco.client.snc_qop SNC level of security, 1 to 9 jco.client.snc_myname SNC name. Overrides default SNC partner jco.client.snc_lib Path to library which provides SNC service jco.client.dsr Enable/Disable dsr support (0 or 1) jco.destination.peak_limit Maximum number of active connections that can be created for a destination simultaneously jco.destination.pool_capacity Maximum number of idle connections kept open by the destination. A value of 0 has the effect that there is no connection pooling. jco.destination.expiration_time Time in ms after that the connections hold by the internal pool can be closed jco.destination.expiration_check_period Interval in ms with which the timeout checker thread checks the connections in the pool for expiration jco.destination.max_get_client_time Max time in ms to wait for a connection, if the max allowed number of connections is allocated by the application jco.destination.repository_destination Specifies which destination should be used as repository, i.e. use this destination's repository jco.destination.repository.user Optional: If repository destination is not set, and this property is set, it will be used as user for repository calls. This allows using a different user for repository lookups jco.destination.repository.passwd The password for a repository user. Mandatory, if a repository user should be used. jco.destination.repository.snc_mode Optional: If SNC is used for this destination, it is possible to turn it off for repository connections, if this property is set to 0. Defaults to the value of jco.client.snc_mode",
      "descriptionHtml" : "Class for managing connections when sending IDocs to SAP via ALE. \n<p> This class indirectly provides a <code>com.sap.conn.jco.ext.DestinationDataProvider</code> and <code>com.sap.conn.jco.ext.ServerDataProvider</code> for the underlying RFC Connection. </p> \n<p> The following table is copied directly from the SAP Java Connector API documentation. Please use the appropriate settings for your SAP application landscape; no verification is performed on the properties. </p> \n<br> The following properties are supported: \n<p> </p>\n<table border=\"1\"> \n <tbody>\n  <tr> \n   <th>Key value</th> \n   <th>Description</th> \n  </tr> \n  <tr> \n   <td>jco.client.client</td> \n   <td>SAP client</td> \n  </tr> \n  <tr> \n   <td>jco.client.user</td> \n   <td>Logon user</td> \n  </tr> \n  <tr> \n   <td>jco.client.alias_user</td> \n   <td>Logon user alias</td> \n  </tr> \n  <tr> \n   <td>jco.client.passwd</td> \n   <td>Logon password</td> \n  </tr> \n  <tr> \n   <td>jco.client.lang</td> \n   <td>Logon language</td> \n  </tr> \n  <tr> \n   <td>jco.client.saprouter</td> \n   <td>SAP router string to use for a system protected by a firewall</td> \n  </tr> \n  <tr> \n   <td>jco.client.sysnr</td> \n   <td>SAP system number</td> \n  </tr> \n  <tr> \n   <td>jco.client.ashost</td> \n   <td>SAP application server</td> \n  </tr> \n  <tr> \n   <td>jco.client.mshost</td> \n   <td>SAP message server</td> \n  </tr> \n  <tr> \n   <td>jco.client.msserv</td> \n   <td>optional: SAP message server port to use instead of the default sapms&lt;sysid&gt;</td> \n  </tr> \n  <tr> \n   <td>jco.client.gwhost</td> \n   <td>Gateway host</td> \n  </tr> \n  <tr> \n   <td>jco.client.gwserv</td> \n   <td>Gateway service</td> \n  </tr> \n  <tr> \n   <td>jco.client.r3name</td> \n   <td>System ID of the SAP system</td> \n  </tr> \n  <tr> \n   <td>jco.client.group</td> \n   <td>Group of SAP application servers</td> \n  </tr> \n  <tr> \n   <td>jco.client.tpname</td> \n   <td>Program ID of external server program</td> \n  </tr> \n  <tr> \n   <td>jco.client.tphost</td> \n   <td>Host of external server program</td> \n  </tr> \n  <tr> \n   <td>jco.client.type</td> \n   <td>Type of remote host 2 = R/2, 3 = R/3, E = External</td> \n  </tr> \n  <tr> \n   <td>jco.client.trace</td> \n   <td>Enable/disable RFC trace (0 or 1)</td> \n  </tr> \n  <tr> \n   <td>jco.client.cpic_trace</td> \n   <td>Enable/disable CPIC trace (-1 [take over environment value], 0 no trace, 1,2,3 different amount of trace)</td> \n  </tr> \n  <tr> \n   <td>jco.client.use_sapgui</td> \n   <td>Start a SAP GUI and associate with the connection. (0 - do not start [default], 1 start GUI, 2 start GUI and hide if not used)</td> \n  </tr> \n  <tr> \n   <td>jco.client.codepage</td> \n   <td>Initial codepage in SAP notation</td> \n  </tr> \n  <tr> \n   <td>jco.client.getsso2</td> \n   <td>Get/Don't get a SSO ticket after logon (1 or 0)</td> \n  </tr> \n  <tr> \n   <td>jco.client.mysapsso2</td> \n   <td>Use the specified SAP Cookie Version 2 as logon ticket</td> \n  </tr> \n  <tr> \n   <td>jco.client.x509cert</td> \n   <td>Use the specified X509 certificate as logon ticket</td> \n  </tr> \n  <tr> \n   <td>jco.client.lcheck</td> \n   <td>Enable/Disable logon check at open time, 1 (enable) or 0 (disable)</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_mode</td> \n   <td>Secure network connection (SNC) mode, 0 (off) or 1 (on)</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_partnername</td> \n   <td>SNC partner, e.g. p:CN=R3, O=XYZ-INC, C=EN</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_qop</td> \n   <td>SNC level of security, 1 to 9</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_myname</td> \n   <td>SNC name. Overrides default SNC partner</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_lib</td> \n   <td>Path to library which provides SNC service</td> \n  </tr> \n  <tr> \n   <td>jco.client.dsr</td> \n   <td>Enable/Disable dsr support (0 or 1)</td> \n  </tr> \n  <tr> \n   <td>jco.destination.peak_limit</td> \n   <td>Maximum number of active connections that can be created for a destination simultaneously</td> \n  </tr> \n  <tr> \n   <td>jco.destination.pool_capacity</td> \n   <td>Maximum number of idle connections kept open by the destination. A value of <tt>0</tt> has the effect that there is no connection pooling.</td> \n  </tr> \n  <tr> \n   <td>jco.destination.expiration_time</td> \n   <td>Time in ms after that the connections hold by the internal pool can be closed</td> \n  </tr> \n  <tr> \n   <td>jco.destination.expiration_check_period</td> \n   <td>Interval in ms with which the timeout checker thread checks the connections in the pool for expiration</td> \n  </tr> \n  <tr> \n   <td>jco.destination.max_get_client_time</td> \n   <td>Max time in ms to wait for a connection, if the max allowed number of connections is allocated by the application</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository_destination</td> \n   <td>Specifies which destination should be used as repository, i.e. use this destination's repository</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository.user</td> \n   <td>Optional: If repository destination is not set, and this property is set, it will be used as user for repository calls. This allows using a different user for repository lookups</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository.passwd</td> \n   <td>The password for a repository user. Mandatory, if a repository user should be used.</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository.snc_mode</td> \n   <td>Optional: If SNC is used for this destination, it is possible to turn it off for repository connections, if this property is set to 0. Defaults to the value of jco.client.snc_mode</td> \n  </tr> \n </tbody>\n</table> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "JcoConnectionBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/JcoConnectionBase.html"
        },
        {
          "name" : "JcoConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/JcoConnection.html"
        },
        {
          "name" : "IdocConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/idoc/IdocConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/JmsPartOutputStreamWriter.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.JmsPartOutputStreamWriter",
      "className" : "JmsPartOutputStreamWriter",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "object",
      "alias" : "sonic-part-outputstream",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public class JmsPartOutputStreamWriter\nextends JmsPartWriterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JmsPartOutputStreamWriter</span>\nextends <a href=\"JmsPartWriterImpl.html\" title=\"class in com.adaptris.core.jms.sonic\" target=\"_new\">JmsPartWriterImpl</a>",
      "description" : "Write the contents of a Part. This uses the Part.getOutputStream() to write any output.",
      "descriptionHtml" : "Write the contents of a \n<code>Part</code>. \n<p> This uses the <code>Part.getOutputStream()</code> to write any output. </p>",
      "inheritance" : [
        {
          "name" : "JmsPartWriterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/JmsPartWriterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/apache/interceptor/ApacheSigningInterceptor.html",
      "fullClassName" : "com.adaptris.aws.apache.interceptor.ApacheSigningInterceptor",
      "className" : "ApacheSigningInterceptor",
      "packageName" : "com.adaptris.aws.apache.interceptor",
      "componentType" : "object",
      "alias" : "aws-apache-signing-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.2",
        "summary" : "Supplies an Apache HTTP Request Interceptor used to sign requests made to AWS using AWS4Signer",
        "tag" : "amazon,aws,elastic,elasticsearch"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Supplies an Apache HTTP Request Interceptor used to sign requests made to AWS using AWS4Signer\",\n                  tag=\"amazon,aws,elastic,elasticsearch\",\n                  since=\"3.10.2\")\npublic class ApacheSigningInterceptor\nextends java.lang.Object\nimplements com.adaptris.core.http.apache.request.RequestInterceptorBuilder, AWSCredentialsProviderBuilder.BuilderConfig",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Supplies an Apache HTTP Request Interceptor used to sign requests made to AWS using AWS4Signer\",\n                  tag=\"amazon,aws,elastic,elasticsearch\",\n                  since=\"3.10.2\")\npublic class <span class=\"typeNameLabel\">ApacheSigningInterceptor</span>\nextends java.lang.Object\nimplements com.adaptris.core.http.apache.request.RequestInterceptorBuilder, <a href=\"../../AWSCredentialsProviderBuilder.BuilderConfig.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">AWSCredentialsProviderBuilder.BuilderConfig</a>",
      "description" : "RequestInterceptorBuilder implementation that creates an interceptor to sign requests made to AWS using AWS4Signer Note that this uses the interceptor from this github project verbatim. It is in fact copied locally into a com.amazonaws.http package since it is not officially published in any publicly available artifact.",
      "descriptionHtml" : "<code>RequestInterceptorBuilder</code> implementation that creates an interceptor to sign requests made to AWS using AWS4Signer \n<p> Note that this uses the interceptor from <a href=\"https://github.com/awslabs/aws-request-signing-apache-interceptor/\" target=\"_new\">this github project</a> verbatim. It is in fact copied locally into a <code>com.amazonaws.http</code> package since it is not officially published in any publicly available artifact. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBConnection.html",
      "fullClassName" : "com.adaptris.core.mongodb.MongoDBConnection",
      "className" : "MongoDBConnection",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "connection",
      "alias" : "mongodb-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to MongoDB,",
        "tag" : "connections,mongodb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to MongoDB,\",\n                  tag=\"connections,mongodb\")\npublic class MongoDBConnection\nextends AllowsRetriesConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to MongoDB,\",\n                  tag=\"connections,mongodb\")\npublic class <span class=\"typeNameLabel\">MongoDBConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AllowsRetriesConnection</a>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcPooledConnection.html",
      "fullClassName" : "com.adaptris.core.jdbc.JdbcPooledConnection",
      "className" : "JdbcPooledConnection",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "connection",
      "alias" : "jdbc-pooled-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a database using a JDBC driver; connection pooling handled via C3P0",
        "tag" : "connections,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a database using a JDBC driver; connection pooling handled via C3P0\",\n                  tag=\"connections,jdbc\")\npublic class JdbcPooledConnection\nextends JdbcPooledConnectionImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a database using a JDBC driver; connection pooling handled via C3P0\",\n                  tag=\"connections,jdbc\")\npublic class <span class=\"typeNameLabel\">JdbcPooledConnection</span>\nextends <a href=\"JdbcPooledConnectionImpl.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">JdbcPooledConnectionImpl</a>",
      "description" : "A DatabaseConnection instance that provides connection pooling via c3p0.",
      "descriptionHtml" : "A \n<a href=\"DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>DatabaseConnection</code></a> instance that provides connection pooling via c3p0.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html"
        },
        {
          "name" : "DatabaseConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DatabaseConnection.html"
        },
        {
          "name" : "JdbcPooledConnectionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcPooledConnectionImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/translators/ObjectMetadataCacheValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.cache.translators.ObjectMetadataCacheValueTranslator",
      "className" : "ObjectMetadataCacheValueTranslator",
      "packageName" : "com.adaptris.core.services.cache.translators",
      "componentType" : "object",
      "alias" : "object-metadata-cache-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ObjectMetadataCacheValueTranslator\nextends java.lang.Object\nimplements CacheValueTranslator<java.lang.Object>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ObjectMetadataCacheValueTranslator</span>\nextends java.lang.Object\nimplements <a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheValueTranslator</a>&lt;java.lang.Object&gt;",
      "description" : "Implementation of CacheValueTranslator that retrieves and sets the arbitrary object metadata of a message. This can only be used with caches that allow insertion of non-Serializable objects as the objects are not guaranteed to be serializable. This is considered a generic replacement for JmsReplyToCacheValueTranslator which already uses object metadata.",
      "descriptionHtml" : "Implementation of \n<a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheValueTranslator</code></a> that retrieves and sets the arbitrary object metadata of a message. \n<p> This can only be used with caches that allow insertion of non-<code>Serializable</code> objects as the objects are not guaranteed to be serializable. This is considered a generic replacement for <a href=\"JmsReplyToCacheValueTranslator.html\" title=\"class in com.adaptris.core.services.cache.translators\" target=\"_new\"><code>JmsReplyToCacheValueTranslator</code></a> which already uses object metadata. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/AddFailureMetadata.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.bapi.AddFailureMetadata",
      "className" : "AddFailureMetadata",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.bapi",
      "componentType" : "object",
      "alias" : "sapjco3-bapireturn-add-failure-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class AddFailureMetadata\nextends ReturnParserImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AddFailureMetadata</span>\nextends <a href=\"ReturnParserImpl.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.bapi\" target=\"_new\">ReturnParserImpl</a>",
      "description" : "Sets the configured metadata key to be true, if the BAPI RETURN Type indicates such.",
      "descriptionHtml" : "Sets the configured metadata key to be true, if the BAPI RETURN Type indicates such.",
      "inheritance" : [
        {
          "name" : "ReturnParserImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/ReturnParserImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/MimeServiceExtractor.html",
      "fullClassName" : "com.adaptris.core.services.dynamic.MimeServiceExtractor",
      "className" : "MimeServiceExtractor",
      "packageName" : "com.adaptris.core.services.dynamic",
      "componentType" : "object",
      "alias" : "dynamic-mime-service-extractor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Select the service to executed based on a MIME selector on the message",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Select the service to executed based on a MIME selector on the message\")\npublic class MimeServiceExtractor\nextends ServiceExtractorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Select the service to executed based on a MIME selector on the message\")\npublic class <span class=\"typeNameLabel\">MimeServiceExtractor</span>\nextends <a href=\"ServiceExtractorImpl.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\">ServiceExtractorImpl</a>",
      "description" : "ServiceExtractor implementation that uses a PartSelector to extract where the service is.",
      "descriptionHtml" : "<a href=\"ServiceExtractor.html\" title=\"interface in com.adaptris.core.services.dynamic\" target=\"_new\"><code>ServiceExtractor</code></a> implementation that uses a \n<a href=\"../../../util/text/mime/PartSelector.html\" title=\"interface in com.adaptris.util.text.mime\" target=\"_new\"><code>PartSelector</code></a> to extract where the service is.",
      "inheritance" : [
        {
          "name" : "ServiceExtractorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceExtractorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/transform/validate/NotNullContentValidation.html",
      "fullClassName" : "com.adaptris.transform.validate.NotNullContentValidation",
      "className" : "NotNullContentValidation",
      "packageName" : "com.adaptris.transform.validate",
      "componentType" : "object",
      "alias" : "xml-content-not-null",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NotNullContentValidation\nextends java.lang.Object\nimplements ContentValidation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NotNullContentValidation</span>\nextends java.lang.Object\nimplements <a href=\"ContentValidation.html\" title=\"interface in com.adaptris.transform.validate\" target=\"_new\">ContentValidation</a>",
      "description" : "Check the content and ensure it is null.",
      "descriptionHtml" : "Check the content and ensure it is null.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/activemq/RedeliveryPolicyFactory.html",
      "fullClassName" : "com.adaptris.core.jms.activemq.RedeliveryPolicyFactory",
      "className" : "RedeliveryPolicyFactory",
      "packageName" : "com.adaptris.core.jms.activemq",
      "componentType" : "object",
      "alias" : "activemq-redelivery-policy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RedeliveryPolicyFactory\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RedeliveryPolicyFactory</span>\nextends java.lang.Object",
      "description" : "Proxy class for creating RedeliveryPolicy objects This class is simply a class that can be marshalled correctly. * If fields are not explicitly set, then the corresponding RedeliveryPolicy method will not be invoked.",
      "descriptionHtml" : "Proxy class for creating RedeliveryPolicy objects \n<p> This class is simply a class that can be marshalled correctly. </p> * \n<p> If fields are not explicitly set, then the corresponding <code>RedeliveryPolicy</code> method will not be invoked. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnectionErrorHandler.html",
      "fullClassName" : "com.adaptris.core.jms.JmsConnectionErrorHandler",
      "className" : "JmsConnectionErrorHandler",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-connection-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JmsConnectionErrorHandler\nextends JmsConnectionErrorHandlerImpl\nimplements javax.jms.ExceptionListener",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JmsConnectionErrorHandler</span>\nextends <a href=\"JmsConnectionErrorHandlerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnectionErrorHandlerImpl</a>\nimplements javax.jms.ExceptionListener",
      "description" : "Standard implementation of ConnectionErrorHandler which implements ExceptionListener.",
      "descriptionHtml" : "Standard implementation of ConnectionErrorHandler which implements \n<code>ExceptionListener</code>.",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html"
        },
        {
          "name" : "JmsConnectionErrorHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnectionErrorHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/TableToXmlMetadata.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.TableToXmlMetadata",
      "className" : "TableToXmlMetadata",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-table-to-xml-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class TableToXmlMetadata\nextends MetadataParameter\nimplements ExportParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TableToXmlMetadata</span>\nextends <a href=\"MetadataParameter.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">MetadataParameter</a>\nimplements <a href=\"../ExportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ExportParameter</a>",
      "description" : "Exports all the rows of a table into metadata converting it to XML.",
      "descriptionHtml" : "Exports all the rows of a table into metadata converting it to XML.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        },
        {
          "name" : "MetadataParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/MetadataParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/legacy/MetadataCharacterSetFactory.html",
      "fullClassName" : "com.adaptris.core.transform.edi.legacy.MetadataCharacterSetFactory",
      "className" : "MetadataCharacterSetFactory",
      "packageName" : "com.adaptris.core.transform.edi.legacy",
      "componentType" : "object",
      "alias" : "edi-metadata-character-set",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataCharacterSetFactory\nextends java.lang.Object\nimplements CharacterSetFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataCharacterSetFactory</span>\nextends java.lang.Object\nimplements <a href=\"CharacterSetFactory.html\" title=\"interface in com.adaptris.core.transform.edi.legacy\" target=\"_new\">CharacterSetFactory</a>",
      "description" : "An implementation of CharacterSetFactory that derives a CharacterSet implementation from metadata.",
      "descriptionHtml" : "An implementation of \n<a href=\"CharacterSetFactory.html\" title=\"interface in com.adaptris.core.transform.edi.legacy\" target=\"_new\"><code>CharacterSetFactory</code></a> that derives a \n<a href=\"../../../../edi/CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\"><code>CharacterSet</code></a> implementation from metadata.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/CacheEventLogger.html",
      "fullClassName" : "com.adaptris.core.cache.CacheEventLogger",
      "className" : "CacheEventLogger",
      "packageName" : "com.adaptris.core.cache",
      "componentType" : "object",
      "alias" : "cache-event-logger",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CacheEventLogger\nextends java.lang.Object\nimplements CacheEventListener",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CacheEventLogger</span>\nextends java.lang.Object\nimplements <a href=\"CacheEventListener.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\">CacheEventListener</a>",
      "description" : "Implementation that implements CacheEventListener and logs all the events.",
      "descriptionHtml" : "Implementation that implements \n<a href=\"CacheEventListener.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\"><code>CacheEventListener</code></a> and logs all the events.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TimestampStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.TimestampStatementParameter",
      "className" : "TimestampStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-timestamp-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class TimestampStatementParameter\nextends DatetimeStatementParameter<java.sql.Timestamp>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimestampStatementParameter</span>\nextends <a href=\"DatetimeStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">DatetimeStatementParameter</a>&lt;java.sql.Timestamp&gt;",
      "description" : "A Timestamp extension to StatementParameter. This ignores the query-class configuration, and always attempts to format the string into a java.sql.Timestamp using the configured date formatter; if convert-null is true, then empty/blank/whitespace only values will be substituted by System.currentTimeMillis().",
      "descriptionHtml" : "A \n<code>Timestamp</code> extension to StatementParameter. \n<p> This ignores the query-class configuration, and always attempts to format the string into a java.sql.Timestamp using the configured date formatter; if <code>convert-null</code> is true, then empty/blank/whitespace only values will be substituted by <code>System.currentTimeMillis()</code>. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        },
        {
          "name" : "DatetimeStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/DatetimeStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv-json/4.0.0B1-RELEASE/com/adaptris/core/transform/csvjson/JsonToFixedCSV.html",
      "fullClassName" : "com.adaptris.core.transform.csvjson.JsonToFixedCSV",
      "className" : "JsonToFixedCSV",
      "packageName" : "com.adaptris.core.transform.csvjson",
      "componentType" : "service",
      "alias" : "json-to-fixed-csv-service",
      "deprecated" : false,
      "jarFileName" : "interlok-csv-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transform a JSON document to CSV with fixed fields",
        "tag" : "service,transform,json,csv"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform a JSON document to CSV with fixed fields\",\n                  tag=\"service,transform,json,csv\")\npublic class JsonToFixedCSV\nextends JsonArrayToCSV",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform a JSON document to CSV with fixed fields\",\n                  tag=\"service,transform,json,csv\")\npublic class <span class=\"typeNameLabel\">JsonToFixedCSV</span>\nextends <a href=\"JsonArrayToCSV.html\" title=\"class in com.adaptris.core.transform.csvjson\" target=\"_new\">JsonArrayToCSV</a>",
      "description" : "Transfrom a JSON array into a CSV with only the specified fields.",
      "descriptionHtml" : "Transfrom a JSON array into a CSV with only the specified fields.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CSVConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv-json/4.0.0B1-RELEASE/com/adaptris/core/transform/csvjson/CSVConverter.html"
        },
        {
          "name" : "JsonArrayToCSV",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv-json/4.0.0B1-RELEASE/com/adaptris/core/transform/csvjson/JsonArrayToCSV.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON+CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sqs/4.0.0B1-RELEASE/com/adaptris/aws/sqs/jms/AmazonSQSImplementation.html",
      "fullClassName" : "com.adaptris.aws.sqs.jms.AmazonSQSImplementation",
      "className" : "AmazonSQSImplementation",
      "packageName" : "com.adaptris.aws.sqs.jms",
      "componentType" : "object",
      "alias" : "amazon-sqs-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-sqs.jar",
      "profile" : { },
      "annotationDetails" : "public class AmazonSQSImplementation\nextends VendorImplementationImp\nimplements com.adaptris.aws.AWSCredentialsProviderBuilder.BuilderConfig",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AmazonSQSImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">VendorImplementationImp</a>\nimplements com.adaptris.aws.AWSCredentialsProviderBuilder.BuilderConfig",
      "description" : "JMS VendorImplementation for Amazon SQS. This VendorImplementation uses the Amazon SQS JMS compatibility layer. When using this class, do not use the AmazonSQS Producer and Consumer classes. Use regular JMS consumers and producers instead.",
      "descriptionHtml" : "JMS VendorImplementation for Amazon SQS. \n<p> This VendorImplementation uses the Amazon SQS JMS compatibility layer. When using this class, do not use the AmazonSQS Producer and Consumer classes. Use regular JMS consumers and producers instead. </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/SQS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-sqs",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/BasicXmlSchemaValidator.html",
      "fullClassName" : "com.adaptris.core.transform.schema.BasicXmlSchemaValidator",
      "className" : "BasicXmlSchemaValidator",
      "packageName" : "com.adaptris.core.transform.schema",
      "componentType" : "object",
      "alias" : "basic-xml-schema-validator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.10.2",
        "summary" : "Validate an XML document against a schema",
        "tag" : "xml,schema"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Validate an XML document against a schema\",\n                  recommended=CacheConnection.class,\n                  since=\"3.10.2\",\n                  tag=\"xml,schema\")\npublic class BasicXmlSchemaValidator\nextends XmlSchemaValidatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Validate an XML document against a schema\",\n                  recommended=<a href=\"../../services/cache/CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>,\n                  since=\"3.10.2\",\n                  tag=\"xml,schema\")\npublic class <span class=\"typeNameLabel\">BasicXmlSchemaValidator</span>\nextends <a href=\"XmlSchemaValidatorImpl.html\" title=\"class in com.adaptris.core.transform.schema\" target=\"_new\">XmlSchemaValidatorImpl</a>",
      "description" : "Used with XmlValidationService to validate an XML message against a schema. This validates an input XML document against a schema and fails with an exception logging all the exceptions found.",
      "descriptionHtml" : "Used with \n<a href=\"../XmlValidationService.html\" title=\"class in com.adaptris.core.transform\" target=\"_new\"><code>XmlValidationService</code></a> to validate an XML message against a schema. \n<p> This validates an input XML document against a schema and fails with an exception logging all the exceptions found. </p>",
      "inheritance" : [
        {
          "name" : "MessageValidatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/MessageValidatorImpl.html"
        },
        {
          "name" : "XmlSchemaValidatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/XmlSchemaValidatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-webspheremq/4.0.0B1-RELEASE/com/adaptris/core/jms/wmq/BasicMqSeriesImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.wmq.BasicMqSeriesImplementation",
      "className" : "BasicMqSeriesImplementation",
      "packageName" : "com.adaptris.core.jms.wmq",
      "componentType" : "object",
      "alias" : "basic-mq-series-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-webspheremq.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicMqSeriesImplementation\nextends VendorImplementationImp\nimplements LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicMqSeriesImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">VendorImplementationImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Basic IBM MQ Series implementation. Depending on your WebsphereMQ configuration you will need at least the com.ibm.mq.jar, com.ibm.mqjms.jar, connector.jar, dhbcore.jar and jta.jar from your WebsphereMQ installation. If you intend on using bindings mode, then you may need to include additional jars such as com.ibm.mqbind.jar Note that if you require SSL support then you should use AdvancedMqSeriesImplementation which allows greater flexibility in configuration WebsphereMQ requires you to set the transport type for your connection. Although the transport type is an integer, we have provided a string mapping to make configuration more readable. So your transport type should be set to one of the following (for reference we include the internal integer mapping); Transport Type Value Internal integer mapping MQJMS_TP_BINDINGS_MQ 0 MQJMS_TP_CLIENT_MQ_TCPIP 1 MQJMS_TP_DIRECT_TCPIP 2 MQJMS_TP_MQJD 3 MQJMS_TP_DIRECT_HTTP 4 By default, all JMS clients to MQ Series will create what is known as an MQRFH2 Header that will form part of the Websphere MQ message. This is used to store (amongst other things) some of the JMS headers that you wanted to preserve using MessageTypeTranslatorImp.setMoveJmsHeaders(Boolean), and all the custom JMS properties that you may have chosen to preserve from AdaptrisMessage metadata by configuring com.adaptris.core.jms.MessageTypeTranslatorImp#setMoveMetadata(Boolean) to be true.This means that the message format internally within WebpshereMQ is MQRFH2 and not MQSTR format. Accordingly the receiving application needs to be able to parse MQRFH2 headers which may not be possible. If the MQRFH2 Header/format is not required or you need to change the message type to MQSTR, then you need to tell MQSeries to omit the MQRFH2 Header; this will mean that you'll lose all the JMS properties that are mapped into MQRFH2 as standard by MQSeries and also any custom JMS Properties that you might be sending. To omit the MQRFH2 header, then you need to add ?targetClient=1 after the queue name in your com.adaptris.core.ProduceDestination implementation. For example, if the queue that you need to produce to is called SampleQ1 then the string you need to use is queue:///SampleQ1?targetClient=1. More information about the mapping of JMS messages onto MQ Messages can be found at this link More generally speaking, the more powerful form of specifying a destination using uniform resource identifiers (URIs) is preferred. This form allows you to specify remote queues (queues on a queue manager other than the one to which you are connected). It also allows you to set the other properties contained in a com.ibm.mq.jms.MQQueue object. The URI for a queue begins with the sequence queue://, followed by the name of the queue manager on which the queue resides. This is followed by a further /, the name of the queue, and optionally, a list of name-value pairs that set the remaining Queue properties. For example: queue://Some_Other_Queue_Manager/SampleQ1?key1=value1&key2=value2. If you don't specify a queue manager in the URI then it is interpreted to be the queue manager to which you are currently connected to e.g. queue:///SampleQ1?key1=value1&key2=value2). Various name value pairs can be used as part of the URI; these include, but is not limited to (some of these values may have a direct correlation to standard JMS headers, if you specify both, then behaviour is dependent on how WebsphereMQ JMS is configured) Property Description Values CCSID Character set of the destination integers - valid values listed in base WebSphere MQ documentation encoding How to represent numeric fields An integer value as described in the base WebSphere MQ documentation expiry Lifetime of the message in milliseconds 0 for unlimited, positive integers for timeout (ms) - This might interfere with any TTL value you configure in the producer. multicast Sets multicast mode for direct connections -1=ASCF, 0=DISABLED, 3=NOTR, 5=RELIABLE, 7=ENABLED persistence Whether the message should be hardened to disk 1=non-persistent, 2=persistent, -1=QDEF (use the queue definition) priority Priority of the message 0 through 9, -1=QDEF (use the queue definition)- This might interfere with any priority value you configure in the producer. targetClient Whether the receiving application is JMS compliant 0=JMS, 1=MQ",
      "descriptionHtml" : "<p> Basic IBM MQ Series implementation. </p> \n<p> Depending on your WebsphereMQ configuration you will need at least the <code><b>com.ibm.mq.jar, com.ibm.mqjms.jar, connector.jar, dhbcore.jar and jta.jar</b></code> from your WebsphereMQ installation. If you intend on using bindings mode, then you may need to include additional jars such as <code>com.ibm.mqbind.jar</code> </p> \n<p> Note that if you require SSL support then you should use <a href=\"AdvancedMqSeriesImplementation.html\" title=\"class in com.adaptris.core.jms.wmq\" target=\"_new\"><code>AdvancedMqSeriesImplementation</code></a> which allows greater flexibility in configuration </p> \n<p> WebsphereMQ requires you to set the transport type for your connection. Although the transport type is an integer, we have provided a string mapping to make configuration more readable. So your transport type should be set to one of the following (for reference we include the internal integer mapping); </p>\n<table> \n <thead> \n  <tr>\n   <th>Transport Type Value</th>\n   <th>Internal integer mapping</th> \n  </tr>\n </thead> \n <tbody>\n  <tr> \n   <td>MQJMS_TP_BINDINGS_MQ</td>\n   <td>0</td> \n  </tr> \n  <tr> \n   <td>MQJMS_TP_CLIENT_MQ_TCPIP</td>\n   <td>1</td> \n  </tr> \n  <tr> \n   <td>MQJMS_TP_DIRECT_TCPIP</td>\n   <td>2</td> \n  </tr> \n  <tr> \n   <td>MQJMS_TP_MQJD</td>\n   <td>3</td> \n  </tr> \n  <tr> \n   <td>MQJMS_TP_DIRECT_HTTP</td>\n   <td>4</td> \n  </tr> \n </tbody>\n</table> \n<p></p> \n<p> By default, all JMS clients to MQ Series will create what is known as an MQRFH2 Header that will form part of the Websphere MQ message. This is used to store (amongst other things) some of the JMS headers that you wanted to preserve using <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html?is-external=true#setMoveJmsHeaders(java.lang.Boolean)\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>MessageTypeTranslatorImp.setMoveJmsHeaders(Boolean)</code></a>, and all the custom JMS properties that you may have chosen to preserve from AdaptrisMessage metadata by configuring <code>com.adaptris.core.jms.MessageTypeTranslatorImp#setMoveMetadata(Boolean)</code> to be true.<strong>This means that the message format internally within WebpshereMQ is MQRFH2 and not MQSTR format</strong>. Accordingly the receiving application needs to be able to parse MQRFH2 headers which may not be possible. </p> \n<p> If the MQRFH2 Header/format is not required or you need to change the message type to MQSTR, then you need to tell MQSeries to omit the MQRFH2 Header; this will mean that you'll lose all the JMS properties that are <a href=\"http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj25460_.htm\" target=\"_new\">mapped into MQRFH2 as standard</a> by MQSeries and also any custom JMS Properties that you might be sending. To omit the MQRFH2 header, then you need to add <code>?targetClient=1</code> after the queue name in your <code>com.adaptris.core.ProduceDestination</code> implementation. For example, if the queue that you need to produce to is called SampleQ1 then the string you need to use is <strong>queue:///SampleQ1?targetClient=1</strong>. More information about the mapping of JMS messages onto MQ Messages can be found <a href=\"http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj25430_.htm\" target=\"_new\">at this link</a> </p> \n<p> More generally speaking, the more powerful form of specifying a destination using uniform resource identifiers (URIs) is preferred. This form allows you to specify remote queues (queues on a queue manager other than the one to which you are connected). It also allows you to set the other properties contained in a com.ibm.mq.jms.MQQueue object. The URI for a queue begins with the sequence queue://, followed by the name of the queue manager on which the queue resides. This is followed by a further /, the name of the queue, and optionally, a list of name-value pairs that set the remaining Queue properties. For example: <strong>queue://Some_Other_Queue_Manager/SampleQ1?key1=value1&amp;key2=value2</strong>. If you don't specify a queue manager in the URI then it is interpreted to be the queue manager to which you are currently connected to e.g. <strong>queue:///SampleQ1?key1=value1&amp;key2=value2</strong>). </p> \n<p> Various name value pairs can be used as part of the URI; these include, but is not limited to (some of these values may have a direct correlation to standard JMS headers, if you specify both, then behaviour is dependent on how WebsphereMQ JMS is configured) </p>\n<table border=\"1\"> \n <thead> \n  <tr>\n   <th>Property</th> \n   <th>Description</th> \n   <th>Values</th> \n  </tr>\n </thead> \n <tbody>\n  <tr> \n   <td>CCSID</td> \n   <td>Character set of the destination</td> \n   <td>integers - valid values listed in base WebSphere MQ documentation</td> \n  </tr> \n  <tr> \n   <td>encoding</td> \n   <td>How to represent numeric fields</td> \n   <td>An integer value as described in the base WebSphere MQ documentation</td> \n  </tr> \n  <tr> \n   <td>expiry</td> \n   <td>Lifetime of the message in milliseconds</td> \n   <td>0 for unlimited, positive integers for timeout (ms) - This might interfere with any TTL value you configure in the producer.</td> \n  </tr> \n  <tr> \n   <td>multicast</td> \n   <td>Sets multicast mode for direct connections</td> \n   <td>-1=ASCF, 0=DISABLED, 3=NOTR, 5=RELIABLE, 7=ENABLED</td> \n  </tr> \n  <tr> \n   <td>persistence</td> \n   <td>Whether the message should be <i>hardened</i> to disk</td> \n   <td>1=non-persistent, 2=persistent, -1=QDEF (use the queue definition)</td> \n  </tr> \n  <tr> \n   <td>priority</td> \n   <td>Priority of the message</td> \n   <td>0 through 9, -1=QDEF (use the queue definition)- This might interfere with any priority value you configure in the producer.</td> \n  </tr> \n  <tr> \n   <td>targetClient</td> \n   <td>Whether the receiving application is JMS compliant</td> \n   <td>0=JMS, 1=MQ</td> \n  </tr> \n </tbody>\n</table>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/WebsphereMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-webspheremq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/util/PayloadMessageLogger.html",
      "fullClassName" : "com.adaptris.core.util.PayloadMessageLogger",
      "className" : "PayloadMessageLogger",
      "packageName" : "com.adaptris.core.util",
      "componentType" : "object",
      "alias" : "message-logging-with-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Log metadata and payload",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Log metadata and payload\",\n                  since=\"3.8.4\")\npublic class PayloadMessageLogger\nextends MessageLoggerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Log metadata and payload\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">PayloadMessageLogger</span>\nextends <a href=\"../MessageLoggerImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">MessageLoggerImpl</a>",
      "description" : "MessageLogger implementation that that logs unique-id, metadata and payload.",
      "descriptionHtml" : "MessageLogger implementation that that logs unique-id, metadata and payload.",
      "inheritance" : [
        {
          "name" : "MessageLoggerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MessageLoggerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertPayloadEqualsFile.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertPayloadEqualsFile",
      "className" : "AssertPayloadEqualsFile",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-payload-equals-file",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertPayloadEqualsFile\nextends java.lang.Object\nimplements Assertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertPayloadEqualsFile</span>\nextends java.lang.Object\nimplements <a href=\"Assertion.html\" title=\"interface in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">Assertion</a>",
      "description" : "Checks if TestMessage.getPayload() equals file contents. Assertions are used to validate the returned message is expected.",
      "descriptionHtml" : "Checks if \n<a href=\"../TestMessage.html#getPayload()\" target=\"_new\"><code>TestMessage.getPayload()</code></a> equals file contents. \n<p>Assertions are used to validate the returned message is expected.</p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/SecurityConstraint.html",
      "fullClassName" : "com.adaptris.core.http.jetty.SecurityConstraint",
      "className" : "SecurityConstraint",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-security-constraint",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SecurityConstraint\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SecurityConstraint</span>\nextends java.lang.Object",
      "description" : "A security constraint which allows you to place restrictions on a number of paths. Given a single or multiple paths, you can set the roles that allow access. By default we set a single path to \"/\". The list of paths can easily be overridden.",
      "descriptionHtml" : "<p> A security constraint which allows you to place restrictions on a number of paths. </p> \n<p> Given a single or multiple paths, you can set the roles that allow access. </p> \n<p> By default we set a single path to \"/\". The list of paths can easily be overridden. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/JsonPathSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.json.JsonPathSplitter",
      "className" : "JsonPathSplitter",
      "packageName" : "com.adaptris.core.services.splitter.json",
      "componentType" : "object",
      "alias" : "json-path-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Split a JSON Array specified by a JSON path into indvidual JSON objects",
        "tag" : "json,splitting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a JSON Array specified by a JSON path into indvidual JSON objects\",\n                  tag=\"json,splitting\")\npublic class JsonPathSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a JSON Array specified by a JSON path into indvidual JSON objects\",\n                  tag=\"json,splitting\")\npublic class <span class=\"typeNameLabel\">JsonPathSplitter</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.splitter\" class=\"externalLink\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "JSON path splitter.",
      "descriptionHtml" : "JSON path splitter.",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/exception/ExceptionMapping.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.bapi.exception.ExceptionMapping",
      "className" : "ExceptionMapping",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.bapi.exception",
      "componentType" : "object",
      "alias" : "sapjco3-exception-mapping",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class ExceptionMapping\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExceptionMapping</span>\nextends java.lang.Object",
      "description" : "Marshalled class that maps a specific exception to a TYPE, ID, and NUMBER.",
      "descriptionHtml" : "Marshalled class that maps a specific exception to a TYPE, ID, and NUMBER.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/StringPayloadDataInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.StringPayloadDataInputParameter",
      "className" : "StringPayloadDataInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "string-payload-data-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StringPayloadDataInputParameter\nextends java.lang.Object\nimplements DataInputParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringPayloadDataInputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.lang.String&gt;",
      "description" : "This DataInputParameter is used when you want to source data from the AdaptrisMessage payload. An example might be specifying that the XML content required for the XPathService can be found in the payload of an AdaptrisMessage.",
      "descriptionHtml" : "<p> This <code>DataInputParameter</code> is used when you want to source data from the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> payload. </p> \n<p> An example might be specifying that the XML content required for the <a href=\"../services/path/XPathService.html\" title=\"class in com.adaptris.core.services.path\" target=\"_new\"><code>XPathService</code></a> can be found in the payload of an <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sqs/4.0.0B1-RELEASE/com/adaptris/aws/sqs/AmazonSQSProducer.html",
      "fullClassName" : "com.adaptris.aws.sqs.AmazonSQSProducer",
      "className" : "AmazonSQSProducer",
      "packageName" : "com.adaptris.aws.sqs",
      "componentType" : "producer",
      "alias" : "amazon-sqs-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-sqs.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.sqs.AmazonSQSConnection"
        ],
        "since" : "",
        "summary" : "Send messages to Amazon SQS",
        "tag" : "producer,amazon,sqs"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send messages to Amazon SQS\",\n                  tag=\"producer,amazon,sqs\",\n                  recommended=AmazonSQSConnection.class)\npublic class AmazonSQSProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send messages to Amazon SQS\",\n                  tag=\"producer,amazon,sqs\",\n                  recommended=<a href=\"AmazonSQSConnection.html\" title=\"class in com.adaptris.aws.sqs\" target=\"_new\">AmazonSQSConnection.class</a>)\npublic class <span class=\"typeNameLabel\">AmazonSQSProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "AdaptrisMessageProducer implementation that sends messages to an Amazon Web Services (AWS) SQS queue. Amazon SQS receives only text therefore only the message payload is sent as a string.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducer</code></a> implementation that sends messages to an Amazon Web Services (AWS) SQS queue. \n<p> Amazon SQS receives only text therefore only the message payload is sent as a string. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/SQS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-sqs",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/oauth/MetadataAccessTokenWriter.html",
      "fullClassName" : "com.adaptris.core.http.oauth.MetadataAccessTokenWriter",
      "className" : "MetadataAccessTokenWriter",
      "packageName" : "com.adaptris.core.http.oauth",
      "componentType" : "object",
      "alias" : "oauth-access-token-to-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.1",
        "summary" : "Write the OAUTH token to metadata",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Write the OAUTH token to metadata\",\n                  since=\"3.10.1\")\npublic class MetadataAccessTokenWriter\nextends java.lang.Object\nimplements AccessTokenWriter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Write the OAUTH token to metadata\",\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">MetadataAccessTokenWriter</span>\nextends java.lang.Object\nimplements <a href=\"AccessTokenWriter.html\" title=\"interface in com.adaptris.core.http.oauth\" target=\"_new\">AccessTokenWriter</a>",
      "description" : "Write the token to metadata.",
      "descriptionHtml" : "Write the token to metadata.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-pgp/4.0.0B1-RELEASE/com/adaptris/security/pgp/PGPDecryptService.html",
      "fullClassName" : "com.adaptris.security.pgp.PGPDecryptService",
      "className" : "PGPDecryptService",
      "packageName" : "com.adaptris.security.pgp",
      "componentType" : "service",
      "alias" : "pgp-decrypt",
      "deprecated" : false,
      "jarFileName" : "interlok-pgp.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Decrypt data using a PGP/GPG private key",
        "tag" : "pgp,gpg,decrypt,private key"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Decrypt data using a PGP/GPG private key\",\n                  tag=\"pgp,gpg,decrypt,private key\",\n                  since=\"3.9.2\")\npublic class PGPDecryptService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Decrypt data using a PGP/GPG private key\",\n                  tag=\"pgp,gpg,decrypt,private key\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">PGPDecryptService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service provides a way to decrypt GPG/PGP encrypted messages. It requires a private key, the passphrase to unlock the key, and an encrypted message. \n    <pgp-decrypt>\n        <unique-id>trusting-mayer</unique-id>\n        <private-key class=\"constant-data-input-parameter\">\n            <value>-----BEGIN PGP PRIVATE KEY BLOCK-----\n\n    lQPGBF2ckxABCAC5Kfu39ky3OIXkxwWOJx70G2dLRYvDMHXf3ZraUPNRMIhh3ZGx\n    -----END PGP PRIVATE KEY BLOCK-----</value>\n        </private-key>\n        <passphrase class=\"constant-data-input-parameter\">\n            <value>my5ecr3tP455w0rd</value>\n        </passphrase>\n        <cipher-text class=\"stream-payload-input-parameter\"/>            <!-- cipher text comes from message payload -->\n        <clear-text class=\"stream-payload-output-parameter\"/>            <!-- clear text goes back into the message payload -->\n    </pgp-decrypt>",
      "descriptionHtml" : "This service provides a way to decrypt GPG/PGP encrypted messages. It requires a private key, the passphrase to unlock the key, and an encrypted message. \n<pre><code>\n    &lt;pgp-decrypt&gt;\n        &lt;unique-id&gt;trusting-mayer&lt;/unique-id&gt;\n        &lt;private-key class=\"constant-data-input-parameter\"&gt;\n            &lt;value&gt;-----BEGIN PGP PRIVATE KEY BLOCK-----\n\n    lQPGBF2ckxABCAC5Kfu39ky3OIXkxwWOJx70G2dLRYvDMHXf3ZraUPNRMIhh3ZGx\n    -----END PGP PRIVATE KEY BLOCK-----&lt;/value&gt;\n        &lt;/private-key&gt;\n        &lt;passphrase class=\"constant-data-input-parameter\"&gt;\n            &lt;value&gt;my5ecr3tP455w0rd&lt;/value&gt;\n        &lt;/passphrase&gt;\n        &lt;cipher-text class=\"stream-payload-input-parameter\"/&gt;            &lt;!-- cipher text comes from message payload --&gt;\n        &lt;clear-text class=\"stream-payload-output-parameter\"/&gt;            &lt;!-- clear text goes back into the message payload --&gt;\n    &lt;/pgp-decrypt&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Security/PGP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-pgp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionAsXml.html",
      "fullClassName" : "com.adaptris.core.services.exception.ExceptionAsXml",
      "className" : "ExceptionAsXml",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "exception-as-xml",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ExceptionAsXml\nextends java.lang.Object\nimplements ExceptionSerializer",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExceptionAsXml</span>\nextends java.lang.Object\nimplements <a href=\"ExceptionSerializer.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\">ExceptionSerializer</a>",
      "description" : "Use with ExceptionReportService to write the exception as part of an xml document.",
      "descriptionHtml" : "Use with \n<a href=\"ExceptionReportService.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionReportService</code></a> to write the exception as part of an xml document.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/SMBConnection.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.SMBConnection",
      "className" : "SMBConnection",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "connection",
      "alias" : "smb-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.1",
        "summary" : "Connection to a SMB Share",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection to a SMB Share\",\n                  since=\"3.10.1\")\npublic class SMBConnection\nextends NoOpConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection to a SMB Share\",\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">SMBConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">NoOpConnection</a>",
      "description" : "Wraps common functionality for both producers and consumers. Stores the authentication Stores SMB configuration (such as timeout) Keeps an (unconfigurable) cache of connections; 50 entries with an expiry of 15 minutes; to alleviate some of the overhead in create a connection to a remote SMB share.",
      "descriptionHtml" : "Wraps common functionality for both producers and consumers. \n<p> </p>\n<ul> \n <li>Stores the authentication</li> \n <li>Stores SMB configuration (such as timeout)</li> \n <li>Keeps an (unconfigurable) cache of connections; 50 entries with an expiry of 15 minutes; to alleviate some of the overhead in create a connection to a remote SMB share.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "NoOpConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/event/LicenseExpiryWarningEvent.html",
      "fullClassName" : "com.adaptris.core.event.LicenseExpiryWarningEvent",
      "className" : "LicenseExpiryWarningEvent",
      "packageName" : "com.adaptris.core.event",
      "componentType" : "object",
      "alias" : "license-expiry-warning-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LicenseExpiryWarningEvent\nextends AdapterLifecycleEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LicenseExpiryWarningEvent</span>\nextends <a href=\"../AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdapterLifecycleEvent</a>",
      "description" : "AdapterLifecycleEvent indicating that this Adapter's license is about to expire.",
      "descriptionHtml" : "<p> <code>AdapterLifecycleEvent</code> indicating that this Adapter's license is about to expire. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/findreplace/HexSequenceConfiguredReplacementSource.html",
      "fullClassName" : "com.adaptris.core.services.findreplace.HexSequenceConfiguredReplacementSource",
      "className" : "HexSequenceConfiguredReplacementSource",
      "packageName" : "com.adaptris.core.services.findreplace",
      "componentType" : "object",
      "alias" : "hex-sequence-configured-replacement-source",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class HexSequenceConfiguredReplacementSource\nextends AbstractReplacementSource",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">HexSequenceConfiguredReplacementSource</span>\nextends <a href=\"AbstractReplacementSource.html\" title=\"class in com.adaptris.core.services.findreplace\" target=\"_new\">AbstractReplacementSource</a>",
      "description" : "ReplacementSource implementation which assumes that the value is a byte sequence represented as a sequence of hexadecimal numbers (2 characters per byte). Used with FindAndReplaceService to replace text in the message; for instance if one of the values from FindAndReplaceService.getFindAndReplaceUnits() is 0d0a then this will generate an actual replacement value of carriage return linefeed. In most cases you will be using ConfiguredReplacementSource, however there may be times when the replacement value cannot be described as part of an XML configuration (for instance the 'vertical tab' character, 0x0B, is generally considered invalid depending on the version of the XML standard).",
      "descriptionHtml" : "<a href=\"ReplacementSource.html\" title=\"interface in com.adaptris.core.services.findreplace\" target=\"_new\"><code>ReplacementSource</code></a> implementation which assumes that the value is a byte sequence represented as a sequence of hexadecimal numbers (2 characters per byte). \n<p> Used with <a href=\"FindAndReplaceService.html\" title=\"class in com.adaptris.core.services.findreplace\" target=\"_new\"><code>FindAndReplaceService</code></a> to replace text in the message; for instance if one of the values from <a href=\"FindAndReplaceService.html#getFindAndReplaceUnits()\" target=\"_new\"><code>FindAndReplaceService.getFindAndReplaceUnits()</code></a> is 0d0a then this will generate an actual replacement value of carriage return linefeed. </p> \n<p> In most cases you will be using <a href=\"ConfiguredReplacementSource.html\" title=\"class in com.adaptris.core.services.findreplace\" target=\"_new\"><code>ConfiguredReplacementSource</code></a>, however there may be times when the replacement value cannot be described as part of an XML configuration (for instance the 'vertical tab' character, 0x0B, is generally considered invalid depending on the version of the XML standard). </p>",
      "inheritance" : [
        {
          "name" : "AbstractReplacementSource",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/findreplace/AbstractReplacementSource.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcBytePayloadParameter.html",
      "fullClassName" : "com.adaptris.core.jdbc.JdbcBytePayloadParameter",
      "className" : "JdbcBytePayloadParameter",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-byte-payload-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JdbcBytePayloadParameter\nextends AbstractParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JdbcBytePayloadParameter</span>\nextends <a href=\"AbstractParameter.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">AbstractParameter</a>",
      "description" : "Stored Procedure parameter implementation This implementation can only be used as an IN parameter; the entire payload (as a byte[]) is the parameter. Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in ParameterValueType",
      "descriptionHtml" : "Stored Procedure parameter implementation \n<p> This implementation can only be used as an IN parameter; the entire payload (as a byte[]) is the parameter. </p> \n<p> Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in <a href=\"../../jdbc/ParameterValueType.html\" title=\"enum in com.adaptris.jdbc\" target=\"_new\"><code>ParameterValueType</code></a> </p>",
      "inheritance" : [
        {
          "name" : "AbstractParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AbstractParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/MetadataIdentityVerifier.html",
      "fullClassName" : "com.adaptris.core.security.access.MetadataIdentityVerifier",
      "className" : "MetadataIdentityVerifier",
      "packageName" : "com.adaptris.core.security.access",
      "componentType" : "object",
      "alias" : "simple-metadata-user-identity-verifier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataIdentityVerifier\nextends IdentityVerifierImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataIdentityVerifier</span>\nextends <a href=\"IdentityVerifierImpl.html\" title=\"class in com.adaptris.core.security.access\" target=\"_new\">IdentityVerifierImpl</a>",
      "description" : "Identity verification based on matching metadata keys against other metadata keys. This IdentityVerifier iterates over each entry in the identity map from IdentityBuilder.build(AdaptrisMessage) and compares the value with the corresponding value from message metadata. The key in getMetadataMap() needs to match the key in the identity map. The value refers to the metadata key that will be used to perform the match. In the event that the IdentityBuilder builds a map containing non-strings; then results are undefined (most likely validate(IdentityBuilder, AdaptrisMessage) will return false).",
      "descriptionHtml" : "Identity verification based on matching metadata keys against other metadata keys. \n<p> This <a href=\"IdentityVerifier.html\" title=\"interface in com.adaptris.core.security.access\" target=\"_new\"><code>IdentityVerifier</code></a> iterates over each entry in the identity map from <a href=\"IdentityBuilder.html#build(com.adaptris.core.AdaptrisMessage)\" target=\"_new\"><code>IdentityBuilder.build(AdaptrisMessage)</code></a> and compares the value with the corresponding value from message metadata. </p> \n<p> The key in <a href=\"#getMetadataMap()\" target=\"_new\"><code>getMetadataMap()</code></a> needs to match the key in the identity map. The value refers to the metadata key that will be used to perform the match. In the event that the <a href=\"IdentityBuilder.html\" title=\"interface in com.adaptris.core.security.access\" target=\"_new\"><code>IdentityBuilder</code></a> builds a map containing non-strings; then results are undefined (most likely <a href=\"#validate(com.adaptris.core.security.access.IdentityBuilder,com.adaptris.core.AdaptrisMessage)\" target=\"_new\"><code>validate(IdentityBuilder, AdaptrisMessage)</code></a> will return false). </p>",
      "inheritance" : [
        {
          "name" : "IdentityVerifierImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/IdentityVerifierImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/mime/SelectByContentId.html",
      "fullClassName" : "com.adaptris.util.text.mime.SelectByContentId",
      "className" : "SelectByContentId",
      "packageName" : "com.adaptris.util.text.mime",
      "componentType" : "object",
      "alias" : "mime-select-by-content-id",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SelectByContentId\nextends java.lang.Object\nimplements PartSelector",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SelectByContentId</span>\nextends java.lang.Object\nimplements <a href=\"PartSelector.html\" title=\"interface in com.adaptris.util.text.mime\" target=\"_new\">PartSelector</a>",
      "description" : "PartSelector implementation that selects by the Content-Id header of the MimeBodyPart.",
      "descriptionHtml" : "<a href=\"PartSelector.html\" title=\"interface in com.adaptris.util.text.mime\" target=\"_new\"><code>PartSelector</code></a> implementation that selects by the Content-Id header of the MimeBodyPart.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/ConfiguredStatementCreator.html",
      "fullClassName" : "com.adaptris.jdbc.ConfiguredStatementCreator",
      "className" : "ConfiguredStatementCreator",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "configured-statement-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredStatementCreator\nextends java.lang.Object\nimplements CallableStatementCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredStatementCreator</span>\nextends java.lang.Object\nimplements <a href=\"CallableStatementCreator.html\" title=\"interface in com.adaptris.jdbc\" target=\"_new\">CallableStatementCreator</a>",
      "description" : "ConfiguredStatementCreator. With this implementation of the CallableStatementCreator, you can specify the entire statement string. An example of a full statement; { CALL procedureName(?, ?, ?); } You have the choice of hard-coding the procedure name as in the above example, or simply inserting the dollar ($) symbol to have the procedure name injected for you; { CALL $(?, ?, ?); }",
      "descriptionHtml" : "ConfiguredStatementCreator. \n<p> With this implementation of the CallableStatementCreator, you can specify the entire statement string. An example of a full statement; { CALL procedureName(?, ?, ?); } </p> \n<p> You have the choice of hard-coding the procedure name as in the above example, or simply inserting the dollar ($) symbol to have the procedure name injected for you; { CALL $(?, ?, ?); } </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionNever.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.ConditionNever",
      "className" : "ConditionNever",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "never",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "condition that is never true.",
        "tag" : "condition"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"condition that is never true.\",\n                  tag=\"condition\",\n                  since=\"3.9.0\")\npublic class ConditionNever\nextends java.lang.Object\nimplements Condition",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"condition that is never true.\",\n                  tag=\"condition\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">ConditionNever</span>\nextends java.lang.Object\nimplements <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Condition</a>",
      "description" : "Condition that is never true. This is included for completeness; it will never fire as a condition, so will be useless at runtime. You could use it to temporarily exclude switch cases from executing.",
      "descriptionHtml" : "Condition that is never true. \n<p> This is included for completeness; it will never fire as a condition, so will be useless at runtime. You could use it to temporarily exclude switch cases from executing. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/IfElse.html",
      "fullClassName" : "com.adaptris.core.services.conditional.IfElse",
      "className" : "IfElse",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "service",
      "alias" : "if-then-otherwise",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.7.3",
        "summary" : "Runs the configured service/list 'IF' the configured condition is met, otherwise will run the 'else' service/list.",
        "tag" : "service, conditional"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Runs the configured service/list \\'IF\\' the configured condition is met, otherwise will run the \\'else\\' service/list.\",\n                  tag=\"service, conditional\",\n                  since=\"3.7.3\")\npublic class IfElse\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Runs the configured service/list \\'IF\\' the configured condition is met, otherwise will run the \\'else\\' service/list.\",\n                  tag=\"service, conditional\",\n                  since=\"3.7.3\")\npublic class <span class=\"typeNameLabel\">IfElse</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "This Service allows you to test boolean (true or false) Condition's, which if evaluate to \"true\" will run a configured set of services, otherwise run a different set of services. Note, that although you must specify a service or list of services should the configured conditions pass, you do not have to configure services to run should the conditions fail. Typically your Condition will test for equality, in-line expressions or whether values exist or not. The values to test will generally come from the payload or message metadata. Also note that some conditions can be nested, such that you can test that a value is equal to another AND / OR a value is equal/not to another value.",
      "descriptionHtml" : "<p> This <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> allows you to test boolean (true or false) <a href=\"Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a>'s, which if evaluate to \"true\" will run a configured set of services, otherwise run a different set of services. </p> \n<p> Note, that although you must specify a service or list of services should the configured conditions pass, you do not have to configure services to run should the conditions fail. </p> \n<p> Typically your <a href=\"Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> will test for equality, in-line expressions or whether values exist or not. The values to test will generally come from the payload or message metadata. <br> Also note that some conditions can be nested, such that you can test that a value is equal to another AND / OR a value is equal/not to another value. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/aggregator/JsonArrayAggregator.html",
      "fullClassName" : "com.adaptris.core.json.aggregator.JsonArrayAggregator",
      "className" : "JsonArrayAggregator",
      "packageName" : "com.adaptris.core.json.aggregator",
      "componentType" : "object",
      "alias" : "json-array-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Aggregate multiple messages into a JSON Array",
        "tag" : "json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Aggregate multiple messages into a JSON Array\",\n                  since=\"3.6.5\",\n                  tag=\"json\")\npublic class JsonArrayAggregator\nextends JsonAggregatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Aggregate multiple messages into a JSON Array\",\n                  since=\"3.6.5\",\n                  tag=\"json\")\npublic class <span class=\"typeNameLabel\">JsonArrayAggregator</span>\nextends <a href=\"JsonAggregatorImpl.html\" title=\"class in com.adaptris.core.json.aggregator\" target=\"_new\">JsonAggregatorImpl</a>",
      "description" : "MessageAggregator implementation that adds each message to a JSON array. The pre-split message is always ignored; the payloads from the collection are assumed to be JSON objects, and will be aggregated together as a single JSON array. Messages that are not JSON objects will be ignored (JSON Arrays will also be ignored).",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.aggregator\" class=\"externalLink\" target=\"_new\"><code>MessageAggregator</code></a> implementation that adds each message to a JSON array. \n<p> The pre-split message is always ignored; the payloads from the collection are assumed to be JSON objects, and will be aggregated together as a single JSON array. Messages that are not JSON objects will be ignored (JSON Arrays will also be ignored). </p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html?is-external=true"
        },
        {
          "name" : "JsonAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/aggregator/JsonAggregatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/StopProcessingService.html",
      "fullClassName" : "com.adaptris.core.services.StopProcessingService",
      "className" : "StopProcessingService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "stop-processing-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Marks a message so that the processing chain is terminated",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Marks a message so that the processing chain is terminated\",\n                  tag=\"service\")\npublic class StopProcessingService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Marks a message so that the processing chain is terminated\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">StopProcessingService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "This service will cause the message to not be processed any further and will also request that the Workflows producer not be called. What happens will be dependent on the parent workflow and parent service collection implementation. See CoreConstants.STOP_PROCESSING_KEY and CoreConstants.KEY_WORKFLOW_SKIP_PRODUCER for more information.",
      "descriptionHtml" : "This service will cause the message to not be processed any further and will also request that the Workflows producer not be called. \n<p> What happens will be dependent on the parent workflow and parent service collection implementation. See <a href=\"../CoreConstants.html#STOP_PROCESSING_KEY\" target=\"_new\"><code>CoreConstants.STOP_PROCESSING_KEY</code></a> and <a href=\"../CoreConstants.html#KEY_WORKFLOW_SKIP_PRODUCER\" target=\"_new\"><code>CoreConstants.KEY_WORKFLOW_SKIP_PRODUCER</code></a> for more information. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/PayloadOutputStreamWrapper.html",
      "fullClassName" : "com.adaptris.core.common.PayloadOutputStreamWrapper",
      "className" : "PayloadOutputStreamWrapper",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "payload-output-stream-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "MessageWrapper implementation wraps the payload as an OutputStream",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MessageWrapper implementation wraps the payload as an OutputStream\",\n                  since=\"3.9.0\")\npublic class PayloadOutputStreamWrapper\nextends java.lang.Object\nimplements MessageWrapper<java.io.OutputStream>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MessageWrapper implementation wraps the payload as an OutputStream\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">PayloadOutputStreamWrapper</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\">MessageWrapper</a>&lt;java.io.OutputStream&gt;",
      "description" : "MessageWrapper implementation wraps the payload as an OutputStream.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>MessageWrapper</code></a> implementation wraps the payload as an \n<code>OutputStream</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/flowcontrol/DefaultFlowControlProvider.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.flowcontrol.DefaultFlowControlProvider",
      "className" : "DefaultFlowControlProvider",
      "packageName" : "com.adaptris.google.cloud.pubsub.flowcontrol",
      "componentType" : "object",
      "alias" : "default-flow-control-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultFlowControlProvider\nextends FlowControlProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultFlowControlProvider</span>\nextends <a href=\"FlowControlProvider.html\" title=\"class in com.adaptris.google.cloud.pubsub.flowcontrol\" target=\"_new\">FlowControlProvider</a>",
      "inheritance" : [
        {
          "name" : "FlowControlProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/flowcontrol/FlowControlProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sqs/4.0.0B1-RELEASE/com/adaptris/aws/sqs/BufferedSQSClientFactory.html",
      "fullClassName" : "com.adaptris.aws.sqs.BufferedSQSClientFactory",
      "className" : "BufferedSQSClientFactory",
      "packageName" : "com.adaptris.aws.sqs",
      "componentType" : "object",
      "alias" : "buffered-sqs-client-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-sqs.jar",
      "profile" : { },
      "annotationDetails" : "public class BufferedSQSClientFactory\nextends UnbufferedSQSClientFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BufferedSQSClientFactory</span>\nextends <a href=\"UnbufferedSQSClientFactory.html\" title=\"class in com.adaptris.aws.sqs\" target=\"_new\">UnbufferedSQSClientFactory</a>",
      "description" : "Buffered SQS Client Factory.",
      "descriptionHtml" : "Buffered SQS Client Factory.",
      "inheritance" : [
        {
          "name" : "UnbufferedSQSClientFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sqs/4.0.0B1-RELEASE/com/adaptris/aws/sqs/UnbufferedSQSClientFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/SQS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-sqs",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/DiscardValuesTooLongFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.DiscardValuesTooLongFilter",
      "className" : "DiscardValuesTooLongFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "discard-values-too-long-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Discard metadata where the length of the value exceeds the configured length",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Discard metadata where the length of the value exceeds the configured length\",\n                  since=\"3.8.4\")\npublic class DiscardValuesTooLongFilter\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Discard metadata where the length of the value exceeds the configured length\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">DiscardValuesTooLongFilter</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "Metadata Filter implementation that removes all metadata where the value exceeds the configured length.",
      "descriptionHtml" : "Metadata Filter implementation that removes all metadata where the value exceeds the configured length.",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/InputOutputService.html",
      "fullClassName" : "com.adaptris.core.services.InputOutputService",
      "className" : "InputOutputService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "input-output-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.7.1",
        "summary" : "Force IO to happen on a message.",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Force IO to happen on a message.\",\n                  tag=\"service\",\n                  since=\"3.7.1\")\npublic class InputOutputService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Force IO to happen on a message.\",\n                  tag=\"service\",\n                  since=\"3.7.1\")\npublic class <span class=\"typeNameLabel\">InputOutputService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Forces IO to happen from the message inputstream to outputstream. This service is only included for completeness as there are only a limited number of use-cases for it. For instance, if your message-factory is a ZipFileBackedMessageFactory (mode=Uncompress) and you do not do any IO on the message in the workflow then the message may still be compressed when you write it out to the filesystem. Using this service simply forces IO to happen on the message.",
      "descriptionHtml" : "Forces IO to happen from the message inputstream to outputstream. \n<p> This service is only included for completeness as there are only a limited number of use-cases for it. For instance, if your message-factory is a <a href=\"../lms/ZipFileBackedMessageFactory.html\" title=\"class in com.adaptris.core.lms\" target=\"_new\"><code>ZipFileBackedMessageFactory</code></a> (<code>mode=Uncompress</code>) and you do not do any IO on the message in the workflow then the message may still be compressed when you write it out to the filesystem. Using this service simply forces IO to happen on the message. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-okhttp/4.0.0B1-RELEASE/com/adaptris/okhttp/headers/request/NoRequestHeaders.html",
      "fullClassName" : "com.adaptris.okhttp.headers.request.NoRequestHeaders",
      "className" : "NoRequestHeaders",
      "packageName" : "com.adaptris.okhttp.headers.request",
      "componentType" : "object",
      "alias" : "okhttp-no-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-okhttp.jar",
      "profile" : { },
      "annotationDetails" : "public class NoRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<okhttp3.Request.Builder>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">RequestHeaderProvider</a>&lt;okhttp3.Request.Builder&gt;",
      "description" : "Implementation of RequestHeaderProvider that adds no additional headers",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>RequestHeaderProvider</code></a> that adds no additional headers",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/OkHttp",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-okhttp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/activemq/BasicActiveMqImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.activemq.BasicActiveMqImplementation",
      "className" : "BasicActiveMqImplementation",
      "packageName" : "com.adaptris.core.jms.activemq",
      "componentType" : "object",
      "alias" : "basic-active-mq-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicActiveMqImplementation\nextends UrlVendorImplementation\nimplements VendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicActiveMqImplementation</span>\nextends <a href=\"../UrlVendorImplementation.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">UrlVendorImplementation</a>\nimplements <a href=\"../VendorImplementation.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">VendorImplementation</a>",
      "description" : "ActiveMQ implementation of VendorImplementation. This was built against ActiveMQ 5.2.0",
      "descriptionHtml" : "<p> ActiveMQ implementation of <code>VendorImplementation</code>. </p> \n<p> <b>This was built against ActiveMQ 5.2.0</b> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MultiPayloadStringOutputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MultiPayloadStringOutputParameter",
      "className" : "MultiPayloadStringOutputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "multi-payload-string-output-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MultiPayloadStringOutputParameter\nextends StringPayloadDataOutputParameter\nimplements DataOutputParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultiPayloadStringOutputParameter</span>\nextends <a href=\"StringPayloadDataOutputParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">StringPayloadDataOutputParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataOutputParameter</a>&lt;java.lang.String&gt;",
      "description" : "This MultiPayloadDataOutputParameter is used when you want to insert data into the MultiPayloadAdaptrisMessage payload.",
      "descriptionHtml" : "This \n<code>MultiPayloadDataOutputParameter</code> is used when you want to insert data into the \n<a href=\"../MultiPayloadAdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>MultiPayloadAdaptrisMessage</code></a> payload.",
      "inheritance" : [
        {
          "name" : "StringPayloadDataOutputParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/StringPayloadDataOutputParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/DefaultServiceExtractor.html",
      "fullClassName" : "com.adaptris.core.services.dynamic.DefaultServiceExtractor",
      "className" : "DefaultServiceExtractor",
      "packageName" : "com.adaptris.core.services.dynamic",
      "componentType" : "object",
      "alias" : "dynamic-default-service-extractor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Treat the message body as the service to execute.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Treat the message body as the service to execute.\")\npublic class DefaultServiceExtractor\nextends ServiceExtractorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Treat the message body as the service to execute.\")\npublic class <span class=\"typeNameLabel\">DefaultServiceExtractor</span>\nextends <a href=\"ServiceExtractorImpl.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\">ServiceExtractorImpl</a>",
      "description" : "Default ServiceExtractor implementation that treats the entire payload as the service.",
      "descriptionHtml" : "Default \n<a href=\"ServiceExtractor.html\" title=\"interface in com.adaptris.core.services.dynamic\" target=\"_new\"><code>ServiceExtractor</code></a> implementation that treats the entire payload as the service.",
      "inheritance" : [
        {
          "name" : "ServiceExtractorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceExtractorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/ConfiguredField.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.ConfiguredField",
      "className" : "ConfiguredField",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-configured-field",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredField\nextends FieldMapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredField</span>\nextends <a href=\"FieldMapper.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">FieldMapper</a>",
      "description" : "Provide a statically configured field as a AdtMessage field.",
      "descriptionHtml" : "Provide a statically configured field as a AdtMessage field.",
      "inheritance" : [
        {
          "name" : "FieldMapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/FieldMapper.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/StringMetadataParameter.html",
      "fullClassName" : "com.adaptris.core.transform.StringMetadataParameter",
      "className" : "StringMetadataParameter",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "object",
      "alias" : "xml-transform-string-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StringMetadataParameter\nextends java.lang.Object\nimplements XmlTransformParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringMetadataParameter</span>\nextends java.lang.Object\nimplements <a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\">XmlTransformParameter</a>",
      "description" : "XmlTransformParameter implementation that filters metadata making matches available as String parameters.",
      "descriptionHtml" : "<a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\"><code>XmlTransformParameter</code></a> implementation that filters metadata making matches available as String parameters.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/RetryStoreWriteService.html",
      "fullClassName" : "com.adaptris.core.http.jetty.retry.RetryStoreWriteService",
      "className" : "RetryStoreWriteService",
      "packageName" : "com.adaptris.core.http.jetty.retry",
      "componentType" : "service",
      "alias" : "retry-store-write-message",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Write a message to the retry store for future retries",
        "tag" : "retry"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Write a message to the retry store for future retries\",\n                  since=\"3.11.1\",\n                  tag=\"retry\")\npublic class RetryStoreWriteService\nextends RetryStoreServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Write a message to the retry store for future retries\",\n                  since=\"3.11.1\",\n                  tag=\"retry\")\npublic class <span class=\"typeNameLabel\">RetryStoreWriteService</span>\nextends <a href=\"RetryStoreServiceImpl.html\" title=\"class in com.adaptris.core.http.jetty.retry\" target=\"_new\">RetryStoreServiceImpl</a>",
      "description" : "Write a message for retry with RetryFromJetty.",
      "descriptionHtml" : "Write a message for retry with \n<a href=\"RetryFromJetty.html\" title=\"class in com.adaptris.core.http.jetty.retry\" target=\"_new\"><code>RetryFromJetty</code></a>.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "RetryStoreServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/RetryStoreServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/generic/XmlResponseHandler.html",
      "fullClassName" : "com.adaptris.core.oauth.generic.XmlResponseHandler",
      "className" : "XmlResponseHandler",
      "packageName" : "com.adaptris.core.oauth.generic",
      "componentType" : "object",
      "alias" : "oauth-xml-response",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-generic.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.1",
        "summary" : "Handle an OAUTH XML response.",
        "tag" : "oauth,http,https"
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.8.1\",\n                  summary=\"Handle an OAUTH XML response.\",\n                  tag=\"oauth,http,https\")\npublic class XmlResponseHandler\nextends ResponseHandlerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.8.1\",\n                  summary=\"Handle an OAUTH XML response.\",\n                  tag=\"oauth,http,https\")\npublic class <span class=\"typeNameLabel\">XmlResponseHandler</span>\nextends <a href=\"ResponseHandlerImpl.html\" title=\"class in com.adaptris.core.oauth.generic\" target=\"_new\">ResponseHandlerImpl</a>",
      "description" : "Handle an OAUTH XML response. Configure the various token values using standard xpath notation; they will be extracted from the HTTP response to build the access token.",
      "descriptionHtml" : "Handle an OAUTH XML response. \n<p> Configure the various token values using standard <code>xpath</code> notation; they will be extracted from the HTTP response to build the access token. </p>",
      "inheritance" : [
        {
          "name" : "ResponseHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/generic/ResponseHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Generic",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-generic",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonXmlTransformService.html",
      "fullClassName" : "com.adaptris.core.transform.json.JsonXmlTransformService",
      "className" : "JsonXmlTransformService",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "service",
      "alias" : "json-xml-transform-service",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transform a JSON document to XML, or vice versa",
        "tag" : "service,transform,json,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform a JSON document to XML, or vice versa\",\n                  tag=\"service,transform,json,xml\")\npublic class JsonXmlTransformService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform a JSON document to XML, or vice versa\",\n                  tag=\"service,transform,json,xml\")\npublic class <span class=\"typeNameLabel\">JsonXmlTransformService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "XML to JSON converter and vice versa.",
      "descriptionHtml" : "XML to JSON converter and vice versa.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/edi/StandardEdifactCharacterSet.html",
      "fullClassName" : "com.adaptris.edi.StandardEdifactCharacterSet",
      "className" : "StandardEdifactCharacterSet",
      "packageName" : "com.adaptris.edi",
      "componentType" : "object",
      "alias" : "edi-standard-edifact",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : { },
      "annotationDetails" : "public class StandardEdifactCharacterSet\nextends java.lang.Object\nimplements CharacterSet",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StandardEdifactCharacterSet</span>\nextends java.lang.Object\nimplements <a href=\"CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\">CharacterSet</a>",
      "description" : "Standard EDIFACT CharacterSet implementation.",
      "descriptionHtml" : "Standard EDIFACT \n<a href=\"CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\"><code>CharacterSet</code></a> implementation.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/DynamicAdtMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.DynamicAdtMessageTranslator",
      "className" : "DynamicAdtMessageTranslator",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-dynamic-adt-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public final class DynamicAdtMessageTranslator\nextends MessageTypeTranslatorImp\nimplements AdtMessageTranslator",
      "annotationDetailsHtml" : "public final class <span class=\"typeNameLabel\">DynamicAdtMessageTranslator</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">MessageTypeTranslatorImp</a>\nimplements <a href=\"AdtMessageTranslator.html\" title=\"interface in com.adaptris.core.jms.oracle\" target=\"_new\">AdtMessageTranslator</a>",
      "description" : "Translates between oracle.jms.AdtMessages and AdaptrisMessages and vice versa. This translator makes use of reflection in order to map specific fields from the AdaptrisMessage object to the AdtMessage object. Prior to using this generic message translator, you will need to use the Oracle JPublisher tool to create a java class that can be used as the AdtMessage. If you have created an abstract data type and queue within Oracle thus:   CREATE TYPE queue_message_type_clob AS OBJECT (\n    no NUMBER,\n    title VARCHAR2(30),\n    text CLOB\n  );\n  /\n  EXEC DBMS_AQADM.CREATE_QUEUE_TABLE (queue_table => 'queue_message_table', queue_payload_type => 'aqadm.queue_message_type_clob');\n  EXEC DBMS_AQADM.CREATE_QUEUE (queue_name => 'message_queue', queue_table => 'queue_message_table');\n Then run the jpublisher tool (e.g. jpub -user=aqadm/aqadm -input=input.txt) where input.txt simply contains SQL QUEUE_MESSAGE_TYPE_CLOB GENERATE QueueMessageTypeClob. This will output a number of files, the most important of which is QueueMessageTypeClob.java which will contain something along the lines of public class QueueMessageTypeClob implements ORAData, ORADataFactory {\n  public static final String _SQL_NAME = \"AQADM.QUEUE_MESSAGE_TYPE_CLOB\";\n  public static final int _SQL_TYPECODE = OracleTypes.STRUCT;\n\n  protected MutableStruct _struct;\n\n  private static int[] _sqlType =\n  {\n      2, 12, 2005\n  };\n  private static ORADataFactory[] _factory = new ORADataFactory[3];\n  protected static final QueueMessageTypeClob _QueueMessageTypeClobFactory = new QueueMessageTypeClob();\n\n  public static ORADataFactory getORADataFactory() {\n    return _QueueMessageTypeClobFactory;\n  }\n\n  protected void _init_struct(boolean init) {\n    if (init) _struct = new MutableStruct(new Object[3], _sqlType, _factory);\n  }\n\n  public QueueMessageTypeClob() {\n    _init_struct(true);\n  }\n\n  public QueueMessageTypeClob(java.math.BigDecimal no, String title,\n                              oracle.sql.CLOB text) throws SQLException {\n    _init_struct(true);\n    setNo(no);\n    setTitle(title);\n    setText(text);\n  }\n\n  public Datum toDatum(Connection c) throws SQLException {\n    return _struct.toDatum(c, _SQL_NAME);\n  }\n\n  public ORAData create(Datum d, int sqlType) throws SQLException {\n    return create(null, d, sqlType);\n  }\n\n  protected ORAData create(QueueMessageTypeClob o, Datum d, int sqlType)\n      throws SQLException {\n    if (d == null) return null;\n    if (o == null) o = new QueueMessageTypeClob();\n    o._struct = new MutableStruct((STRUCT) d, _sqlType, _factory);\n    return o;\n  }\n\n  public java.math.BigDecimal getNo() throws SQLException {\n    return (java.math.BigDecimal) _struct.getAttribute(0);\n  }\n\n  public void setNo(java.math.BigDecimal no) throws SQLException {\n    _struct.setAttribute(0, no);\n  }\n\n  public String getTitle() throws SQLException {\n    return (String) _struct.getAttribute(1);\n  }\n\n  public void setTitle(String title) throws SQLException {\n    _struct.setAttribute(1, title);\n  }\n\n  public oracle.sql.CLOB getText() throws SQLException {\n    return (oracle.sql.CLOB) _struct.getOracleAttribute(2);\n  }\n\n  public void setText(oracle.sql.CLOB text) throws SQLException {\n    _struct.setOracleAttribute(2, text);\n  }\n\n}\n  This class needs to be compiled and made available on the classpath of the adapter, the fully qualified classname becomes the field adtClassname",
      "descriptionHtml" : "<p> Translates between <code>oracle.jms.AdtMessage</code>s and <code>AdaptrisMessage</code>s and vice versa. </p> \n<p> This translator makes use of reflection in order to map specific fields from the AdaptrisMessage object to the AdtMessage object. Prior to using this generic message translator, you will need to use the Oracle JPublisher tool to create a java class that can be used as the AdtMessage. </p> \n<p> If you have created an abstract data type and queue within Oracle thus: </p> \n<code><pre>  CREATE TYPE queue_message_type_clob AS OBJECT (\n    no NUMBER,\n    title VARCHAR2(30),\n    text CLOB\n  );\n  /\n  EXEC DBMS_AQADM.CREATE_QUEUE_TABLE (queue_table =&gt; 'queue_message_table', queue_payload_type =&gt; 'aqadm.queue_message_type_clob');\n  EXEC DBMS_AQADM.CREATE_QUEUE (queue_name =&gt; 'message_queue', queue_table =&gt; 'queue_message_table');\n </pre></code> \n<p> Then run the jpublisher tool (e.g. <code>jpub -user=aqadm/aqadm -input=input.txt</code>) where input.txt simply contains <code>SQL QUEUE_MESSAGE_TYPE_CLOB GENERATE QueueMessageTypeClob</code>. This will output a number of files, the most important of which is QueueMessageTypeClob.java which will contain something along the lines of </p> \n<code><pre>public class QueueMessageTypeClob implements ORAData, ORADataFactory {\n  public static final String _SQL_NAME = \"AQADM.QUEUE_MESSAGE_TYPE_CLOB\";\n  public static final int _SQL_TYPECODE = OracleTypes.STRUCT;\n\n  protected MutableStruct _struct;\n\n  private static int[] _sqlType =\n  {\n      2, 12, 2005\n  };\n  private static ORADataFactory[] _factory = new ORADataFactory[3];\n  protected static final QueueMessageTypeClob _QueueMessageTypeClobFactory = new QueueMessageTypeClob();\n\n  public static ORADataFactory getORADataFactory() {\n    return _QueueMessageTypeClobFactory;\n  }\n\n  protected void _init_struct(boolean init) {\n    if (init) _struct = new MutableStruct(new Object[3], _sqlType, _factory);\n  }\n\n  public QueueMessageTypeClob() {\n    _init_struct(true);\n  }\n\n  public QueueMessageTypeClob(java.math.BigDecimal no, String title,\n                              oracle.sql.CLOB text) throws SQLException {\n    _init_struct(true);\n    setNo(no);\n    setTitle(title);\n    setText(text);\n  }\n\n  public Datum toDatum(Connection c) throws SQLException {\n    return _struct.toDatum(c, _SQL_NAME);\n  }\n\n  public ORAData create(Datum d, int sqlType) throws SQLException {\n    return create(null, d, sqlType);\n  }\n\n  protected ORAData create(QueueMessageTypeClob o, Datum d, int sqlType)\n      throws SQLException {\n    if (d == null) return null;\n    if (o == null) o = new QueueMessageTypeClob();\n    o._struct = new MutableStruct((STRUCT) d, _sqlType, _factory);\n    return o;\n  }\n\n  public java.math.BigDecimal getNo() throws SQLException {\n    return (java.math.BigDecimal) _struct.getAttribute(0);\n  }\n\n  public void setNo(java.math.BigDecimal no) throws SQLException {\n    _struct.setAttribute(0, no);\n  }\n\n  public String getTitle() throws SQLException {\n    return (String) _struct.getAttribute(1);\n  }\n\n  public void setTitle(String title) throws SQLException {\n    _struct.setAttribute(1, title);\n  }\n\n  public oracle.sql.CLOB getText() throws SQLException {\n    return (oracle.sql.CLOB) _struct.getOracleAttribute(2);\n  }\n\n  public void setText(oracle.sql.CLOB text) throws SQLException {\n    _struct.setOracleAttribute(2, text);\n  }\n\n}\n  </pre></code> \n<p> This class needs to be compiled and made available on the classpath of the adapter, the fully qualified classname becomes the field adtClassname </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/RemoveLoggingContext.html",
      "fullClassName" : "com.adaptris.core.services.RemoveLoggingContext",
      "className" : "RemoveLoggingContext",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "remove-logging-context-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Remove a mapped diagnostic context for logging; useful for filtering",
        "tag" : "service,logging,debug"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Remove a mapped diagnostic context for logging; useful for filtering\",\n                  tag=\"service,logging,debug\")\npublic class RemoveLoggingContext\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Remove a mapped diagnostic context for logging; useful for filtering\",\n                  tag=\"service,logging,debug\")\npublic class <span class=\"typeNameLabel\">RemoveLoggingContext</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Remove a mapped diagnostic context via MDC.remove(String). If you have a large number of workflows then it may be useful to use a mapped diagnostic context to provide additional information into your logfile.",
      "descriptionHtml" : "Remove a mapped diagnostic context via \n<code>MDC.remove(String)</code>. \n<p> If you have a large number of workflows then it may be useful to use a mapped diagnostic context to provide additional information into your logfile. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/NotNull.html",
      "fullClassName" : "com.adaptris.core.services.conditional.operator.NotNull",
      "className" : "NotNull",
      "packageName" : "com.adaptris.core.services.conditional.operator",
      "componentType" : "object",
      "alias" : "not-null",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a value exists (is not null).",
        "tag" : "conditional,operator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a value exists (is not null).\",\n                  tag=\"conditional,operator\")\npublic class NotNull\nextends java.lang.Object\nimplements Operator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a value exists (is not null).\",\n                  tag=\"conditional,operator\")\npublic class <span class=\"typeNameLabel\">NotNull</span>\nextends java.lang.Object\nimplements <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Operator</a>",
      "description" : "This Operator simply tests a single value is not null. The value used in the not-null test is the Condition that this Operator is configured for; which could be the message payload or a metadata item for example.",
      "descriptionHtml" : "<p> This <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> simply tests a single value is not null. </p> \n<p> The value used in the not-null test is the <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> that this <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> is configured for; which could be the message payload or a metadata item for example. <br> </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sqs/4.0.0B1-RELEASE/com/adaptris/aws/sqs/jms/AdvancedSQSImplementation.html",
      "fullClassName" : "com.adaptris.aws.sqs.jms.AdvancedSQSImplementation",
      "className" : "AdvancedSQSImplementation",
      "packageName" : "com.adaptris.aws.sqs.jms",
      "componentType" : "object",
      "alias" : "advanced-amazon-sqs-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-sqs.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedSQSImplementation\nextends AmazonSQSImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedSQSImplementation</span>\nextends <a href=\"AmazonSQSImplementation.html\" title=\"class in com.adaptris.aws.sqs.jms\" target=\"_new\">AmazonSQSImplementation</a>",
      "description" : "JMS VendorImplementation for Amazon SQS. This VendorImplementation uses the Amazon SQS JMS compatibility layer. When using this class, do not use the AmazonSQS Producer and Consumer classes. Use regular JMS consumers and producers instead. The key from the client-configuration-properties element should match the name of the underlying ClientConfiguration property. So if you wanted to control the user-agent you would configure  \n   <client-configuration-properties>\n     <key-value-pair>\n        <key>UserAgent</key>\n        <value>My User Agent</value>\n     </key-value-pair>\n   </client-configuration-properties>",
      "descriptionHtml" : "JMS VendorImplementation for Amazon SQS. \n<p> This VendorImplementation uses the Amazon SQS JMS compatibility layer. When using this class, do not use the AmazonSQS Producer and Consumer classes. Use regular JMS consumers and producers instead. </p> \n<p> The key from the <code>client-configuration-properties</code> element should match the name of the underlying ClientConfiguration property. So if you wanted to control the user-agent you would configure </p> \n<pre> <code>\n   &lt;client-configuration-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;UserAgent&lt;/key&gt;\n        &lt;value&gt;My User Agent&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/client-configuration-properties&gt;\n </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "AmazonSQSImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sqs/4.0.0B1-RELEASE/com/adaptris/aws/sqs/jms/AmazonSQSImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/SQS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-sqs",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/AdvancedConfigBuilder.html",
      "fullClassName" : "com.adaptris.kafka.AdvancedConfigBuilder",
      "className" : "AdvancedConfigBuilder",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "object",
      "alias" : "kafka-advanced-config-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedConfigBuilder\nextends java.lang.Object\nimplements ConfigBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedConfigBuilder</span>\nextends java.lang.Object\nimplements <a href=\"ConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\">ConfigBuilder</a>",
      "description" : "Implementation of ConfigBuilder that exposes all configuration. Exposes all possible settings via a KeyValuePairSet. No checking of values is performed other than for the various SSL passwords (such as \"ssl.key.password\") which will be resolved and decoded using ExternalResolver.resolve(String) and Password.decode(String) appropriately. Because no checking is done, it will be possible to get some warnings about unused configuration (e.g. you have configured linger.ms on a connection that is used for both producers and consumer) being logged. These can be safely ignored or filtered from logging (filter the classes org.apache.kafka.clients.consumer.ConsumerConfig and {code org.apache.kafka.clients.producer.ProducerConfig} If not explicitly configured; the key.deserializer property is fixed to be a StringDeserializer; and the value.deserializer property is an AdaptrisMessageDeserializer.",
      "descriptionHtml" : "Implementation of \n<a href=\"ConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\"><code>ConfigBuilder</code></a> that exposes all configuration. \n<p> Exposes all possible settings via a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairSet.html?is-external=true\" title=\"class or interface in com.adaptris.util\" class=\"externalLink\" target=\"_new\"><code>KeyValuePairSet</code></a>. No checking of values is performed other than for the various SSL passwords (such as \"ssl.key.password\") which will be resolved and decoded using <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/resolver/ExternalResolver.html?is-external=true#resolve(java.lang.String)\" title=\"class or interface in com.adaptris.interlok.resolver\" class=\"externalLink\" target=\"_new\"><code>ExternalResolver.resolve(String)</code></a> and <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/password/Password.html?is-external=true#decode(java.lang.String)\" title=\"class or interface in com.adaptris.security.password\" class=\"externalLink\" target=\"_new\"><code>Password.decode(String)</code></a> appropriately. Because no checking is done, it will be possible to get some warnings about unused configuration (e.g. you have configured <code>linger.ms</code> on a connection that is used for both producers and consumer) being logged. These can be safely ignored or filtered from logging (filter the classes <code>org.apache.kafka.clients.consumer.ConsumerConfig</code> and {code org.apache.kafka.clients.producer.ProducerConfig} </p> \n<p> If not explicitly configured; the <code>key.deserializer</code> property is fixed to be a <code>StringDeserializer</code>; and the <code>value.deserializer</code> property is an <a href=\"AdaptrisMessageDeserializer.html\" title=\"class in com.adaptris.kafka\" target=\"_new\"><code>AdaptrisMessageDeserializer</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageIdCorrelationIdSource.html",
      "fullClassName" : "com.adaptris.core.jms.MessageIdCorrelationIdSource",
      "className" : "MessageIdCorrelationIdSource",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "message-id-correlation-id-source",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.7.3",
        "summary" : "",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.7.3\")\npublic class MessageIdCorrelationIdSource\nextends java.lang.Object\nimplements CorrelationIdSource",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.7.3\")\npublic class <span class=\"typeNameLabel\">MessageIdCorrelationIdSource</span>\nextends java.lang.Object\nimplements <a href=\"CorrelationIdSource.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">CorrelationIdSource</a>",
      "description" : "Attempts to use the InterlokMessage.getUniqueId() as the JMSCorrelationID and vice versa.",
      "descriptionHtml" : "Attempts to use the \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#getUniqueId()\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.getUniqueId()</code></a> as the \n<code>JMSCorrelationID</code> and vice versa.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/ClobType.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.ClobType",
      "className" : "ClobType",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-clob-type",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class ClobType\nextends java.lang.Object\nimplements TypeWrapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ClobType</span>\nextends java.lang.Object\nimplements <a href=\"TypeWrapper.html\" title=\"interface in com.adaptris.core.jms.oracle\" target=\"_new\">TypeWrapper</a>",
      "description" : "Handles CLOB fields. When creating a clob, this creates a temporary clob in which to store data.",
      "descriptionHtml" : "Handles CLOB fields. \n<p> When creating a clob, this creates a temporary clob in which to store data. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-triggered/4.0.0B1-RELEASE/com/adaptris/core/triggered/Trigger.html",
      "fullClassName" : "com.adaptris.core.triggered.Trigger",
      "className" : "Trigger",
      "packageName" : "com.adaptris.core.triggered",
      "componentType" : "consumer",
      "alias" : "trigger",
      "deprecated" : false,
      "jarFileName" : "interlok-triggered.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Standalone wrapper for a consumer and connection and is intended for use within a TriggeredChannel",
        "tag" : "consumer,triggered"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Standalone wrapper for a consumer and connection and is intended for use within a TriggeredChannel\",\n                  tag=\"consumer,triggered\")\npublic class Trigger\nextends StandaloneConsumer\nimplements LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Standalone wrapper for a consumer and connection and is intended for use within a TriggeredChannel\",\n                  tag=\"consumer,triggered\")\npublic class <span class=\"typeNameLabel\">Trigger</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">StandaloneConsumer</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Component that triggers an instance of TriggeredChannel",
      "descriptionHtml" : "Component that triggers an instance of TriggeredChannel",
      "inheritance" : [
        {
          "name" : "StandaloneConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Misc/Triggered",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-triggered",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/AddFormattedMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.AddFormattedMetadataService",
      "className" : "AddFormattedMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "add-formatted-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Add a formatted metadata item to a Message",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Add a formatted metadata item to a Message\",\n                  tag=\"service,metadata\")\npublic class AddFormattedMetadataService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Add a formatted metadata item to a Message\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">AddFormattedMetadataService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Add a formatted metadata item to a Message. Allows you to add a new metadata key using String.format() as the syntax.",
      "descriptionHtml" : "Add a formatted metadata item to a Message. \n<p> Allows you to add a new metadata key using <code>String.format()</code> as the syntax. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/NoConnectionManagement.html",
      "fullClassName" : "com.adaptris.core.http.apache.NoConnectionManagement",
      "className" : "NoConnectionManagement",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "no-connection-management-apache-http-client-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class NoConnectionManagement\nextends java.lang.Object\nimplements HttpClientBuilderConfigurator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoConnectionManagement</span>\nextends java.lang.Object\nimplements <a href=\"HttpClientBuilderConfigurator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\">HttpClientBuilderConfigurator</a>",
      "description" : "Remove any connection management from the underlying HttpClientBuilder instance. This effectively sets the following properties. HttpClientBuilder#setConnectionManagerShared(boolean) = false HttpClientBuilder#setConnectionManager(HttpClientConnectionManager) = BasicHttpClientConnectionManager HttpClientBuilder#setConnectionReuseStrategy(ConnectionReuseStrategy) = NoConnectionReuseStrategy#INSTANCE",
      "descriptionHtml" : "<p> Remove any connection management from the underlying <code>HttpClientBuilder</code> instance. </p> This effectively sets the following properties. \n<ul> \n <li><code>HttpClientBuilder#setConnectionManagerShared(boolean)</code> = false</li> \n <li><code>HttpClientBuilder#setConnectionManager(HttpClientConnectionManager)</code> = <code>BasicHttpClientConnectionManager</code></li> \n <li><code>HttpClientBuilder#setConnectionReuseStrategy(ConnectionReuseStrategy)</code> = <code>NoConnectionReuseStrategy#INSTANCE</code></li> \n</ul>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/ElasticRestConnection.html",
      "fullClassName" : "com.adaptris.core.elastic.rest.ElasticRestConnection",
      "className" : "ElasticRestConnection",
      "packageName" : "com.adaptris.core.elastic.rest",
      "componentType" : "connection",
      "alias" : "elastic-rest-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-rest.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Connect to elasticsearch via their high level REST client",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to elasticsearch via their high level REST client\",\n                  since=\"3.9.1\")\npublic class ElasticRestConnection\nextends NoOpConnection\nimplements TransportClientProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to elasticsearch via their high level REST client\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">ElasticRestConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">NoOpConnection</a>\nimplements <a href=\"TransportClientProvider.html\" title=\"interface in com.adaptris.core.elastic.rest\" target=\"_new\">TransportClientProvider</a>",
      "description" : "Connect to elasticsearch via their high level REST client",
      "descriptionHtml" : "Connect to elasticsearch via their high level REST client",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "NoOpConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: REST Client",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-rest",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/NoOpSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.NoOpSplitter",
      "className" : "NoOpSplitter",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "no-op-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoOpSplitter\nextends java.lang.Object\nimplements MessageSplitter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoOpSplitter</span>\nextends java.lang.Object\nimplements <a href=\"MessageSplitter.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\">MessageSplitter</a>",
      "description" : "A MessageSplitter implementation that doesn't actually split. Effectively, using this splitter implementation just returns the original message as the split message on a 1:1 basis",
      "descriptionHtml" : "A \n<a href=\"MessageSplitter.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\"><code>MessageSplitter</code></a> implementation that doesn't actually split. \n<p> Effectively, using this splitter implementation just returns the original message as the split message on a 1:1 basis </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/PollThor.html",
      "fullClassName" : "com.adaptris.hpcc.PollThor",
      "className" : "PollThor",
      "packageName" : "com.adaptris.hpcc",
      "componentType" : "producer",
      "alias" : "poll-thor",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.hpcc.DfuplusConnection"
        ],
        "since" : "",
        "summary" : "Poll HPCC for the existence of a logical file",
        "tag" : "producer,hpcc,dfuplus,thor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Poll HPCC for the existence of a logical file\",\n                  tag=\"producer,hpcc,dfuplus,thor\",\n                  recommended=DfuplusConnection.class)\npublic class PollThor\nextends SingleFileRequest",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Poll HPCC for the existence of a logical file\",\n                  tag=\"producer,hpcc,dfuplus,thor\",\n                  recommended=<a href=\"DfuplusConnection.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">DfuplusConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PollThor</span>\nextends <a href=\"SingleFileRequest.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">SingleFileRequest</a>",
      "description" : "Poll Thor for the existence of a logical file. The use case for this service is, if there is a long-running Job on Thor (scheduled or otherwise) that creates a logical file; you need to wait for the existence of this file before carrying on with the rest of the adapter workflow (usually despraying the logical file that was created). Note that although this is an implementation of AdaptrisMessageProducerImp the AdaptrisMessageProducer#produce() methods will throw a UnsupportedOperationException. It should be used as part of a StandaloneRequestor where the SingleFileRequest.getLogicalFilename() returns the logical filename of the file that you wish to retrieve.",
      "descriptionHtml" : "Poll Thor for the existence of a logical file. \n<p> The use case for this service is, if there is a long-running Job on Thor (scheduled or otherwise) that creates a logical file; you need to wait for the existence of this file before carrying on with the rest of the adapter workflow (usually despraying the logical file that was created). </p> \n<p> Note that although this is an implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducerImp</code></a> the <code>AdaptrisMessageProducer#produce()</code> methods will throw a <code>UnsupportedOperationException</code>. It should be used as part of a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneRequestor.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneRequestor</code></a> where the <a href=\"SingleFileRequest.html#getLogicalFilename()\" target=\"_new\"><code>SingleFileRequest.getLogicalFilename()</code></a> returns the logical filename of the file that you wish to retrieve. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "DfuPlusWrapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/DfuPlusWrapper.html"
        },
        {
          "name" : "RequestOnlyImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/RequestOnlyImpl.html"
        },
        {
          "name" : "SingleFileRequest",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/SingleFileRequest.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/config/PreProcessingXStreamMarshaller.html",
      "fullClassName" : "com.adaptris.core.config.PreProcessingXStreamMarshaller",
      "className" : "PreProcessingXStreamMarshaller",
      "packageName" : "com.adaptris.core.config",
      "componentType" : "object",
      "alias" : "xstream-marshaller-with-pre-processing",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PreProcessingXStreamMarshaller\nextends XStreamMarshaller",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PreProcessingXStreamMarshaller</span>\nextends <a href=\"../XStreamMarshaller.html\" title=\"class in com.adaptris.core\" target=\"_new\">XStreamMarshaller</a>",
      "description" : "XStream version of AdaptrisMarshaller that supports additional config pre-processors when unmarshalling.",
      "descriptionHtml" : "XStream version of \n<a href=\"../AdaptrisMarshaller.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMarshaller</code></a> that supports additional config pre-processors when unmarshalling.",
      "inheritance" : [
        {
          "name" : "AbstractMarshaller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AbstractMarshaller.html"
        },
        {
          "name" : "XStreamMarshallerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshallerImpl.html"
        },
        {
          "name" : "XStreamMarshaller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshaller.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceFromDataInputParameter.html",
      "fullClassName" : "com.adaptris.core.services.dynamic.ServiceFromDataInputParameter",
      "className" : "ServiceFromDataInputParameter",
      "packageName" : "com.adaptris.core.services.dynamic",
      "componentType" : "object",
      "alias" : "dynamic-service-from-data-input",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Extract the service to execute from a DataInputParameter",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract the service to execute from a DataInputParameter\",\n                  since=\"3.8.4\")\npublic class ServiceFromDataInputParameter\nextends ServiceExtractorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract the service to execute from a DataInputParameter\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">ServiceFromDataInputParameter</span>\nextends <a href=\"ServiceExtractorImpl.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\">ServiceExtractorImpl</a>",
      "description" : "Extract the service to execute based on the configured DataInputParameter Wraps DataInputParameter<String> so you can use any of those implementations as the source of your executable service.",
      "descriptionHtml" : "Extract the service to execute based on the configured \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataInputParameter</code></a> \n<p> Wraps <code>DataInputParameter&lt;String&gt;</code> so you can use any of those implementations as the source of your executable service. </p>",
      "inheritance" : [
        {
          "name" : "ServiceExtractorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceExtractorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/AddFirstReturnToMetadata.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.bapi.AddFirstReturnToMetadata",
      "className" : "AddFirstReturnToMetadata",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.bapi",
      "componentType" : "object",
      "alias" : "sapjco3-bapireturn-add-first-to-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class AddFirstReturnToMetadata\nextends ReturnParserImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AddFirstReturnToMetadata</span>\nextends <a href=\"ReturnParserImpl.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.bapi\" target=\"_new\">ReturnParserImpl</a>",
      "description" : "Simply takes all the fields from the first BAPIRETURN export param / table and adds them as metadata. No parsing is done of the fields, they are added as is. The metadata key corresponds to the field name in the structure with the configured prefix",
      "descriptionHtml" : "Simply takes all the fields from the first BAPIRETURN export param / table and adds them as metadata. \n<p> No parsing is done of the fields, they are added as is. The metadata key corresponds to the field name in the structure with the configured prefix </p>",
      "inheritance" : [
        {
          "name" : "ReturnParserImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/ReturnParserImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/UnzipService.html",
      "fullClassName" : "com.adaptris.filesystem.UnzipService",
      "className" : "UnzipService",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "service",
      "alias" : "unzip-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Zip the contents of the message",
        "tag" : "service,zip,unzip"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Zip the contents of the message\",\n                  tag=\"service,zip,unzip\")\npublic class UnzipService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Zip the contents of the message\",\n                  tag=\"service,zip,unzip\")\npublic class <span class=\"typeNameLabel\">UnzipService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Unzip a file and set the path to the root directory of the unzipped data in the payload.",
      "descriptionHtml" : "Unzip a file and set the path to the root directory of the unzipped data in the payload.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MultiPayloadMessageSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.MultiPayloadMessageSplitter",
      "className" : "MultiPayloadMessageSplitter",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "multi-payload-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10",
        "summary" : "Split a multi-payload message so that each payload can be serviced independently",
        "tag" : "multi-payload,splitter"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a multi-payload message so that each payload can be serviced independently\",\n                  tag=\"multi-payload,splitter\",\n                  since=\"3.10\")\npublic class MultiPayloadMessageSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a multi-payload message so that each payload can be serviced independently\",\n                  tag=\"multi-payload,splitter\",\n                  since=\"3.10\")\npublic class <span class=\"typeNameLabel\">MultiPayloadMessageSplitter</span>\nextends <a href=\"MessageSplitterImp.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "Split a multi-payload Adaptris message into its various payloads and return a list of standard Adaptris messages. This will copy all additional metadata; all split messages will have identical metadata to the original. \n <split-join-service>\n   <unique-id>split-join-id</unique-id>\n   <service class=\"shared-service\">\n     <lookup-name>for-each-service-list-id</lookup-name>\n     <unique-id>for-each-service-list-id</unique-id>\n   </service>\n   <splitter class=\"multi-payload-splitter\"/>\n   <aggregator class=\"multi-payload-aggregator\">\n     <replace-original-message>false</replace-original-message>\n   </aggregator>\n </split-join-service>",
      "descriptionHtml" : "Split a multi-payload Adaptris message into its various payloads and return a list of standard Adaptris messages. This will copy all additional metadata; all split messages will have identical metadata to the original. \n<pre><code>\n &lt;split-join-service&gt;\n   &lt;unique-id&gt;split-join-id&lt;/unique-id&gt;\n   &lt;service class=\"shared-service\"&gt;\n     &lt;lookup-name&gt;for-each-service-list-id&lt;/lookup-name&gt;\n     &lt;unique-id&gt;for-each-service-list-id&lt;/unique-id&gt;\n   &lt;/service&gt;\n   &lt;splitter class=\"multi-payload-splitter\"/&gt;\n   &lt;aggregator class=\"multi-payload-aggregator\"&gt;\n     &lt;replace-original-message&gt;false&lt;/replace-original-message&gt;\n   &lt;/aggregator&gt;\n &lt;/split-join-service&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/UrlDecodeMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.UrlDecodeMetadataService",
      "className" : "UrlDecodeMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "url-decode-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "URL Decode some metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"URL Decode some metadata\",\n                  tag=\"service,metadata\")\npublic class UrlDecodeMetadataService\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"URL Decode some metadata\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">UrlDecodeMetadataService</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "URLDecoder.decode(String, String) on metadata values.",
      "descriptionHtml" : "<code>URLDecoder.decode(String, String)</code> on metadata values.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/CustomEndpoint.html",
      "fullClassName" : "com.adaptris.aws.CustomEndpoint",
      "className" : "CustomEndpoint",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-custom-endpoint",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : { },
      "annotationDetails" : "public class CustomEndpoint\nextends java.lang.Object\nimplements EndpointBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CustomEndpoint</span>\nextends java.lang.Object\nimplements <a href=\"EndpointBuilder.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">EndpointBuilder</a>",
      "description" : "Wraps AwsClientBuilder.EndpointConfiguration for configuration purposes.",
      "descriptionHtml" : "Wraps \n<code>AwsClientBuilder.EndpointConfiguration</code> for configuration purposes.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/Utf8BomRemover.html",
      "fullClassName" : "com.adaptris.core.services.Utf8BomRemover",
      "className" : "Utf8BomRemover",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "utf8-bom-remover",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Remove a UTF-8 BOM",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Remove a UTF-8 BOM\",\n                  tag=\"service\")\npublic class Utf8BomRemover\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Remove a UTF-8 BOM\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">Utf8BomRemover</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Service that removes UTF8 byte order marks that may be present. This is only really useful when Windows (.NET application or otherwise) generated files are being processed by the adapter. In almost all situations, windows will output a redundant UTF-8 BOM which may cause issues with certain types of XML processing. In the event that no BOM is detected, then nothing is done to the message. This is a workaround for This Sun JVM bug.",
      "descriptionHtml" : "Service that removes UTF8 byte order marks that may be present. \n<p> This is only really useful when Windows (.NET application or otherwise) generated files are being processed by the adapter. In almost all situations, windows will output a redundant UTF-8 BOM which may cause issues with certain types of XML processing. In the event that no BOM is detected, then nothing is done to the message. </p> \n<p> This is a workaround for <a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\" target=\"_new\">This Sun JVM bug</a>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jmx/JmxConnection.html",
      "fullClassName" : "com.adaptris.core.jmx.JmxConnection",
      "className" : "JmxConnection",
      "packageName" : "com.adaptris.core.jmx",
      "componentType" : "connection",
      "alias" : "jmx-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a JMX MBeanServer instance",
        "tag" : "connections,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a JMX MBeanServer instance\",\n                  tag=\"connections,jmx\")\npublic class JmxConnection\nextends AllowsRetriesConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a JMX MBeanServer instance\",\n                  tag=\"connections,jmx\")\npublic class <span class=\"typeNameLabel\">JmxConnection</span>\nextends <a href=\"../AllowsRetriesConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">AllowsRetriesConnection</a>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/MimeHeadersAsMetadataService.html",
      "fullClassName" : "com.adaptris.core.mail.MimeHeadersAsMetadataService",
      "className" : "MimeHeadersAsMetadataService",
      "packageName" : "com.adaptris.core.mail",
      "componentType" : "service",
      "alias" : "mime-headers-as-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Parse a MimeMessage and add its headers as metadata",
        "tag" : "service,mail,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Parse a MimeMessage and add its headers as metadata\",\n                  tag=\"service,mail,metadata\",\n                  since=\"3.6.5\")\npublic class MimeHeadersAsMetadataService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Parse a MimeMessage and add its headers as metadata\",\n                  tag=\"service,mail,metadata\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">MimeHeadersAsMetadataService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Add headers from a mime message as metadata. If you have previously used RawMailConsumer or similar, then you will have a MimeMessage that can be parsed for its header information, if you have not previously used a MailConsumerImp.setHeaderHandler(MailHeaderHandler) at the point of entry, then nows your chance.",
      "descriptionHtml" : "Add headers from a mime message as metadata. \n<p> If you have previously used <a href=\"RawMailConsumer.html\" title=\"class in com.adaptris.core.mail\" target=\"_new\"><code>RawMailConsumer</code></a> or similar, then you will have a MimeMessage that can be parsed for its header information, if you have not previously used a <a href=\"MailConsumerImp.html#setHeaderHandler(com.adaptris.core.mail.MailHeaderHandler)\" target=\"_new\"><code>MailConsumerImp.setHeaderHandler(MailHeaderHandler)</code></a> at the point of entry, then nows your chance. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-jms/4.0.0B1-RELEASE/com/adaptris/xa/jms/exception/XAWorkflowMessageErrorHandler.html",
      "fullClassName" : "com.adaptris.xa.jms.exception.XAWorkflowMessageErrorHandler",
      "className" : "XAWorkflowMessageErrorHandler",
      "packageName" : "com.adaptris.xa.jms.exception",
      "componentType" : "object",
      "alias" : "xa-processing-exception-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-jms.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A configurable exception handling instance for XA transactions",
        "tag" : "error-handling,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A configurable exception handling instance for XA transactions\",\n                  tag=\"error-handling,base\")\npublic class XAWorkflowMessageErrorHandler\nextends RootProcessingExceptionHandler",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A configurable exception handling instance for XA transactions\",\n                  tag=\"error-handling,base\")\npublic class <span class=\"typeNameLabel\">XAWorkflowMessageErrorHandler</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RootProcessingExceptionHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">RootProcessingExceptionHandler</a>",
      "description" : "ProcessingExceptionHandler implementation that will attempt to rollback the current threads transaction.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProcessingExceptionHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProcessingExceptionHandler</a> implementation that will attempt to rollback the current threads transaction.",
      "inheritance" : [
        {
          "name" : "RootProcessingExceptionHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RootProcessingExceptionHandler.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-jms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/fs/OverwriteIfExistsWorker.html",
      "fullClassName" : "com.adaptris.fs.OverwriteIfExistsWorker",
      "className" : "OverwriteIfExistsWorker",
      "packageName" : "com.adaptris.fs",
      "componentType" : "object",
      "alias" : "fs-overwrite-file",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class OverwriteIfExistsWorker\nextends NioWorker",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OverwriteIfExistsWorker</span>\nextends <a href=\"NioWorker.html\" title=\"class in com.adaptris.fs\" target=\"_new\">NioWorker</a>",
      "description" : "Implementation of FsWorker that uses overwrites the file if it already exists.",
      "descriptionHtml" : "Implementation of \n<a href=\"FsWorker.html\" title=\"interface in com.adaptris.fs\" target=\"_new\"><code>FsWorker</code></a> that uses overwrites the file if it already exists.",
      "inheritance" : [
        {
          "name" : "StandardWorker",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/fs/StandardWorker.html"
        },
        {
          "name" : "NioWorker",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/fs/NioWorker.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/transform/validate/NotInListContentValidation.html",
      "fullClassName" : "com.adaptris.transform.validate.NotInListContentValidation",
      "className" : "NotInListContentValidation",
      "packageName" : "com.adaptris.transform.validate",
      "componentType" : "object",
      "alias" : "xml-content-not-in-list",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NotInListContentValidation\nextends ListContentValidation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NotInListContentValidation</span>\nextends <a href=\"ListContentValidation.html\" title=\"class in com.adaptris.transform.validate\" target=\"_new\">ListContentValidation</a>",
      "description" : "Makes sure that the content is not in the specified list.",
      "descriptionHtml" : "Makes sure that the content is not in the specified list.",
      "inheritance" : [
        {
          "name" : "ListContentValidation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/transform/validate/ListContentValidation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ServerSideEncryption.html",
      "fullClassName" : "com.adaptris.aws.s3.meta.S3ServerSideEncryption",
      "className" : "S3ServerSideEncryption",
      "packageName" : "com.adaptris.aws.s3.meta",
      "componentType" : "object",
      "alias" : "s3-serverside-encryption",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : { },
      "annotationDetails" : "public class S3ServerSideEncryption\nextends S3ObjectMetadata",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">S3ServerSideEncryption</span>\nextends <a href=\"S3ObjectMetadata.html\" title=\"class in com.adaptris.aws.s3.meta\" target=\"_new\">S3ObjectMetadata</a>",
      "description" : "Enable S3 Server Side Encryption with AWS managed keys",
      "descriptionHtml" : "Enable S3 Server Side Encryption with AWS managed keys",
      "inheritance" : [
        {
          "name" : "S3ObjectMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ObjectMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/ExcludeJmsHeaders.html",
      "fullClassName" : "com.adaptris.core.metadata.ExcludeJmsHeaders",
      "className" : "ExcludeJmsHeaders",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "exclude-jms-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ExcludeJmsHeaders\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExcludeJmsHeaders</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "Metadata filter implementation that removes metadata where the key matches ^JMS.*$. Some brokers dislike any message properties that start with JMS. For instance, producing a message to WebsphereMQ that contains JMS_isMultiPart as a string property will fail (JMS_isMultiPart is populated by SonicMQ when using their MulitpartMessages implementations). You can configure this on a producer to automatically exclude any JMS style headers from being added. Of course, you could configure the pattern as part of a RegexMetadataFilter instead.",
      "descriptionHtml" : "Metadata filter implementation that removes metadata where the key matches \n<code>^JMS.*$</code>. \n<p> Some brokers dislike any message properties that start with <code>JMS</code>. For instance, producing a message to WebsphereMQ that contains <code>JMS_isMultiPart</code> as a string property will fail (<code>JMS_isMultiPart</code> is populated by SonicMQ when using their <code>MulitpartMessages</code> implementations). You can configure this on a producer to automatically exclude any JMS style headers from being added. Of course, you could configure the pattern as part of a <a href=\"RegexMetadataFilter.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\"><code>RegexMetadataFilter</code></a> instead. </p>",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/PostgresStatementCreator.html",
      "fullClassName" : "com.adaptris.jdbc.PostgresStatementCreator",
      "className" : "PostgresStatementCreator",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "postgresql-statement-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PostgresStatementCreator\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PostgresStatementCreator</span>\nextends java.lang.Object",
      "description" : "Create a string similar to SELECT my_stored_procedure(?,?,?)",
      "descriptionHtml" : "Create a string similar to \n<code>SELECT my_stored_procedure(?,?,?)</code>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/system/SystemCommandExecutorService.html",
      "fullClassName" : "com.adaptris.core.services.system.SystemCommandExecutorService",
      "className" : "SystemCommandExecutorService",
      "packageName" : "com.adaptris.core.services.system",
      "componentType" : "service",
      "alias" : "system-command-executor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Execute an arbitrary system command (DANGER!)",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute an arbitrary system command (DANGER!)\",\n                  tag=\"service\")\npublic class SystemCommandExecutorService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute an arbitrary system command (DANGER!)\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">SystemCommandExecutorService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Service that runs the specified system executable with the provided arguments, optionally capturing the output. Note that no checking is peformed on the command to be executed; it will be executed as-is. If used in combination with DynamicServiceExecutor then you might have a large security hole if it is improperly configured or validated. The following behaviour is non-configurable: The exitcode is stored against the metadata key \"SystemCommandExecutorService.ReturnValue\" if the service does not throw an exception. If a timeout occurs then a ServiceException is thrown, output that was captured before the timeout should still be available",
      "descriptionHtml" : "Service that runs the specified system executable with the provided arguments, optionally capturing the output. \n<p> Note that no checking is peformed on the command to be executed; it will be executed as-is. If used in combination with <a href=\"../dynamic/DynamicServiceExecutor.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\"><code>DynamicServiceExecutor</code></a> then you might have a large security hole if it is improperly configured or validated. </p> \n<p> The following behaviour is non-configurable: </p>\n<ul> \n <li>The exitcode is stored against the metadata key <a href=\"#COMMAND_RETURN_VALUE_METADATA_KEY\" target=\"_new\">\"SystemCommandExecutorService.ReturnValue\"</a> if the service does not throw an exception.</li> \n <li>If a timeout occurs then a ServiceException is thrown, output that was captured before the timeout should still be available</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/CaseDefault.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.CaseDefault",
      "className" : "CaseDefault",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "case-default",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "condition that is always true.",
        "tag" : "condition"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"condition that is always true.\",\n                  tag=\"condition\",\n                  since=\"3.9.0\")\npublic class CaseDefault\nextends java.lang.Object\nimplements Condition",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"condition that is always true.\",\n                  tag=\"condition\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">CaseDefault</span>\nextends java.lang.Object\nimplements <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Condition</a>",
      "description" : "Condition that is always true. The use case for this is to simulate the 'default' branch of a Switch service; add this conditional as the last Condition configuration in your Switch service to have a default set of services that are executed.",
      "descriptionHtml" : "Condition that is always true. \n<p> The use case for this is to simulate the 'default' branch of a <a href=\"../Switch.html\" title=\"class in com.adaptris.core.services.conditional\" target=\"_new\"><code>Switch</code></a> service; add this conditional as the last <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> configuration in your <a href=\"../Switch.html\" title=\"class in com.adaptris.core.services.conditional\" target=\"_new\"><code>Switch</code></a> service to have a default set of services that are executed. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedParameterApplicator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.NamedParameterApplicator",
      "className" : "NamedParameterApplicator",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "named-parameter-applicator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NamedParameterApplicator\nextends java.lang.Object\nimplements ParameterApplicator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NamedParameterApplicator</span>\nextends java.lang.Object\nimplements <a href=\"ParameterApplicator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\">ParameterApplicator</a>",
      "description" : "ParameterApplicator implementation that allows referencing by name. Using a NamedParameterApplicator implementation means that you can modify your SQL statement to reference named statement parameter making it no longer depending on declaration order. For instance:  SELECT * FROM mytable WHERE field1=#param1 AND field2=#param2 AND field3=#param3 AND field4=#param4 AND field5=#param5\n If you then named your statement parameters as param1, param2, param3, param4, param5 using NamedStatementParameter.setName(String) then the order of parameters as they appear in configuration no longer matters.",
      "descriptionHtml" : "<a href=\"ParameterApplicator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\"><code>ParameterApplicator</code></a> implementation that allows referencing by name. \n<p> Using a <a href=\"NamedParameterApplicator.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>NamedParameterApplicator</code></a> implementation means that you can modify your SQL statement to reference named statement parameter making it no longer depending on declaration order. </p> \n<p> For instance: </p>\n<pre> <code>SELECT * FROM mytable WHERE field1=#param1 AND field2=#param2 AND field3=#param3 AND field4=#param4 AND field5=#param5</code>\n </pre> If you then named your statement parameters as \n<code>param1, param2, param3, param4, param5</code> using \n<a href=\"NamedStatementParameter.html#setName(java.lang.String)\" target=\"_new\"><code>NamedStatementParameter.setName(String)</code></a> then the order of parameters as they appear in configuration no longer matters. \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/ObjectMetadataValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jmx.ObjectMetadataValueTranslator",
      "className" : "ObjectMetadataValueTranslator",
      "packageName" : "com.adaptris.core.services.jmx",
      "componentType" : "object",
      "alias" : "jmx-object-metadata-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ObjectMetadataValueTranslator\nextends ValueTranslatorImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ObjectMetadataValueTranslator</span>\nextends <a href=\"ValueTranslatorImp.html\" title=\"class in com.adaptris.core.services.jmx\" target=\"_new\">ValueTranslatorImp</a>",
      "description" : "This implementation of ValueTranslator will pull an object metadata value from the AdaptrisMessage to be used as a Jmx operation parameter. Conversely we can also take a string result from a Jmx operation call and create a new/overwrite an existing object metadata item with the new value. Note that no data conversion will take place. The object class being pulled from object metadata will be used as is to source the jmx operation parameter.",
      "descriptionHtml" : "<p> This implementation of <a href=\"ValueTranslator.html\" title=\"interface in com.adaptris.core.services.jmx\" target=\"_new\"><code>ValueTranslator</code></a> will pull an object metadata value from the <a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> to be used as a Jmx operation parameter. Conversely we can also take a string result from a Jmx operation call and create a new/overwrite an existing object metadata item with the new value. </p> \n<p> Note that no data conversion will take place. The object class being pulled from object metadata will be used as is to source the jmx operation parameter. </p>",
      "inheritance" : [
        {
          "name" : "ValueTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/ValueTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/IgnoreMetadataParameter.html",
      "fullClassName" : "com.adaptris.core.transform.IgnoreMetadataParameter",
      "className" : "IgnoreMetadataParameter",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "object",
      "alias" : "xml-transform-no-parameters",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class IgnoreMetadataParameter\nextends java.lang.Object\nimplements XmlTransformParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IgnoreMetadataParameter</span>\nextends java.lang.Object\nimplements <a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\">XmlTransformParameter</a>",
      "description" : "XmlTransformParameter implementation that returns a null map.",
      "descriptionHtml" : "<a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\"><code>XmlTransformParameter</code></a> implementation that returns a null map.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataStreamInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MetadataStreamInputParameter",
      "className" : "MetadataStreamInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "metadata-stream-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataStreamInputParameter\nextends MetadataStreamParameter\nimplements DataInputParameter<java.io.InputStream>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataStreamInputParameter</span>\nextends <a href=\"MetadataStreamParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">MetadataStreamParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.io.InputStream&gt;",
      "description" : "This DataInputParameter is used when you want to read some data from metadata.",
      "descriptionHtml" : "This \n<code>DataInputParameter</code> is used when you want to read some data from metadata.",
      "inheritance" : [
        {
          "name" : "MetadataStreamParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataStreamParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/HexStringByteTranslator.html",
      "fullClassName" : "com.adaptris.util.text.HexStringByteTranslator",
      "className" : "HexStringByteTranslator",
      "packageName" : "com.adaptris.util.text",
      "componentType" : "object",
      "alias" : "hex-string-byte-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class HexStringByteTranslator\nextends ByteTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">HexStringByteTranslator</span>\nextends <a href=\"ByteTranslator.html\" title=\"class in com.adaptris.util.text\" target=\"_new\">ByteTranslator</a>",
      "description" : "Simply converts to and from a Hex String",
      "descriptionHtml" : "Simply converts to and from a Hex String",
      "inheritance" : [
        {
          "name" : "ByteTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/ByteTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportError.html",
      "fullClassName" : "com.adaptris.tester.report.junit.JUnitReportError",
      "className" : "JUnitReportError",
      "packageName" : "com.adaptris.tester.report.junit",
      "componentType" : "object",
      "alias" : "error",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "@XStreamConverter(value=com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter.class,\n                  strings=\"text\")\npublic class JUnitReportError\nextends JUnitReportTestIssueTyped",
      "annotationDetailsHtml" : "@XStreamConverter(value=com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter.class,\n                  strings=\"text\")\npublic class <span class=\"typeNameLabel\">JUnitReportError</span>\nextends <a href=\"JUnitReportTestIssueTyped.html\" title=\"class in com.adaptris.tester.report.junit\" target=\"_new\">JUnitReportTestIssueTyped</a>",
      "description" : "Error implementation of JUnitReportTestIssue used in JUnitReportTestCase for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. NOTE: The difference between failure and error, is a failure meant something expected didn't happen, where as error means something unexpected happened. When tests are executed via TestCase.execute(String, TestClient, ServiceToTest, ServiceTestConfig) this class is used to set the test issue using: JUnitReportTestCase.setTestIssue(JUnitReportTestIssue).",
      "descriptionHtml" : "Error implementation of \n<a href=\"JUnitReportTestIssue.html\" title=\"interface in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestIssue</code></a> used in \n<a href=\"JUnitReportTestCase.html\" title=\"class in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestCase</code></a> for storing results. \n<p> The intention of class and classes in the hierarchy is to produce JUnit style XML. </p> \n<p> NOTE: The difference between failure and error, is a failure meant something expected didn't happen, where as error means something unexpected happened. </p> \n<p> When tests are executed via <a href=\"../../runtime/TestCase.html#execute(java.lang.String,com.adaptris.tester.runtime.clients.TestClient,com.adaptris.tester.runtime.services.ServiceToTest,com.adaptris.tester.runtime.ServiceTestConfig)\" target=\"_new\"><code>TestCase.execute(String, TestClient, ServiceToTest, ServiceTestConfig)</code></a> this class is used to set the test issue using: <a href=\"JUnitReportTestCase.html#setTestIssue(com.adaptris.tester.report.junit.JUnitReportTestIssue)\" target=\"_new\"><code>JUnitReportTestCase.setTestIssue(JUnitReportTestIssue)</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "JUnitReportTestIssueTyped",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportTestIssueTyped.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CheckAndRetrieve.html",
      "fullClassName" : "com.adaptris.core.services.cache.CheckAndRetrieve",
      "className" : "CheckAndRetrieve",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "service",
      "alias" : "check-cache-and-retrieve",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.6.4",
        "summary" : "Check the cache for a key and retrieve it if it exists",
        "tag" : "service,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Check the cache for a key and retrieve it if it exists\",\n                  tag=\"service,cache\",\n                  branchSelector=true,\n                  since=\"3.6.4\",\n                  recommended=CacheConnection.class)\npublic class CheckAndRetrieve\nextends CheckCacheService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Check the cache for a key and retrieve it if it exists\",\n                  tag=\"service,cache\",\n                  branchSelector=true,\n                  since=\"3.6.4\",\n                  recommended=<a href=\"CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">CheckAndRetrieve</span>\nextends <a href=\"CheckCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CheckCacheService</a>",
      "description" : "Service implementation that checks if specific key(s) exist in the cache and retrieves.",
      "descriptionHtml" : "<a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> implementation that checks if specific key(s) exist in the cache and retrieves.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CacheServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceImpl.html"
        },
        {
          "name" : "CacheServiceBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceBase.html"
        },
        {
          "name" : "CheckCacheService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CheckCacheService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sqs/4.0.0B1-RELEASE/com/adaptris/aws/sqs/AmazonSQSConnection.html",
      "fullClassName" : "com.adaptris.aws.sqs.AmazonSQSConnection",
      "className" : "AmazonSQSConnection",
      "packageName" : "com.adaptris.aws.sqs",
      "componentType" : "connection",
      "alias" : "amazon-sqs-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-sqs.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.sqs.AmazonSQSConsumer",
          "com.adaptris.aws.sqs.AmazonSQSProducer"
        ],
        "since" : "",
        "summary" : "Connection for supporting native connectivity to Amazon SQS",
        "tag" : "connections,amazon,sqs"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection for supporting native connectivity to Amazon SQS\",\n                  tag=\"connections,amazon,sqs\",\n                  recommended={AmazonSQSConsumer.class,AmazonSQSProducer.class})\npublic class AmazonSQSConnection\nextends com.adaptris.aws.AWSConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection for supporting native connectivity to Amazon SQS\",\n                  tag=\"connections,amazon,sqs\",\n                  recommended={<a href=\"AmazonSQSConsumer.html\" title=\"class in com.adaptris.aws.sqs\" target=\"_new\">AmazonSQSConsumer.class</a>,<a href=\"AmazonSQSProducer.html\" title=\"class in com.adaptris.aws.sqs\" target=\"_new\">AmazonSQSProducer.class</a>})\npublic class <span class=\"typeNameLabel\">AmazonSQSConnection</span>\nextends com.adaptris.aws.AWSConnection",
      "description" : "AdaptrisConnection implementation for Amazon SQS. This class directly exposes almost all the getter and setters that are available in ClientConfiguration via the AWSConnection.getClientConfiguration() property for maximum flexibility in configuration. The key from the client-configuration element should match the name of the underlying ClientConfiguration property; so if you wanted to control the user-agent you would do :  \n   <client-configuration>\n     <key-value-pair>\n        <key>UserAgent</key>\n        <value>My User Agent</value>\n     </key-value-pair>\n   </client-configuration>",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnection</a> implementation for Amazon SQS. \n<p> This class directly exposes almost all the getter and setters that are available in <code>ClientConfiguration</code> via the <code>AWSConnection.getClientConfiguration()</code> property for maximum flexibility in configuration. </p> \n<p> The key from the <code>client-configuration</code> element should match the name of the underlying ClientConfiguration property; so if you wanted to control the user-agent you would do : </p> \n<pre> <code>\n   &lt;client-configuration&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;UserAgent&lt;/key&gt;\n        &lt;value&gt;My User Agent&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/client-configuration&gt;\n </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/SQS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-sqs",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/LongMetadataConverter.html",
      "fullClassName" : "com.adaptris.core.jms.LongMetadataConverter",
      "className" : "LongMetadataConverter",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-long-metadata-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LongMetadataConverter\nextends MetadataConverter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LongMetadataConverter</span>\nextends <a href=\"MetadataConverter.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MetadataConverter</a>",
      "description" : "MetadataElement key and value set as property of javax.jms.Message using setLongProperty(String key, long value).",
      "descriptionHtml" : "<code>MetadataElement</code> key and value set as property of \n<code>javax.jms.Message</code> using \n<code>setLongProperty(String key, long value)</code>.",
      "inheritance" : [
        {
          "name" : "MetadataConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MetadataConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/legacy/XmlEdiService.html",
      "fullClassName" : "com.adaptris.core.transform.edi.legacy.XmlEdiService",
      "className" : "XmlEdiService",
      "packageName" : "com.adaptris.core.transform.edi.legacy",
      "componentType" : "service",
      "alias" : "xml-edi-service",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "XML to EDI (legacy) service.",
        "tag" : "service,transform,edi,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"XML to EDI (legacy) service.\",\n                  tag=\"service,transform,edi,xml\")\npublic class XmlEdiService\nextends EdiService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"XML to EDI (legacy) service.\",\n                  tag=\"service,transform,edi,xml\")\npublic class <span class=\"typeNameLabel\">XmlEdiService</span>\nextends <a href=\"EdiService.html\" title=\"class in com.adaptris.core.transform.edi.legacy\" target=\"_new\">EdiService</a>",
      "description" : "XML to EDI service. Performing XML to EDI transformation depends heavily on having access to the correct gXML file (guideline XML). Further details on gXML are available from Edifecs",
      "descriptionHtml" : "<p> XML to EDI service. </p> \n<p> Performing XML to EDI transformation depends heavily on having access to the correct gXML file (guideline XML). Further details on gXML are available from <a href=\"http://www.edifecs.com\" target=\"_new\">Edifecs</a> </p>\n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "LicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true"
        },
        {
          "name" : "EdiService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/legacy/EdiService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-flyway/4.0.0B1-RELEASE/com/adaptris/jdbc/flyway/FlywayPluggableConnection.html",
      "fullClassName" : "com.adaptris.jdbc.flyway.FlywayPluggableConnection",
      "className" : "FlywayPluggableConnection",
      "packageName" : "com.adaptris.jdbc.flyway",
      "componentType" : "connection",
      "alias" : "flyway-pluggable-jdbc-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-flyway.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Extension of PluggableJdbcPooledConnection which will run flyway migration on init.",
        "tag" : "connections,jdbc,flyway"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extension of PluggableJdbcPooledConnection which will run flyway migration on init.\",\n                  tag=\"connections,jdbc,flyway\",\n                  since=\"3.9.2\")\npublic class FlywayPluggableConnection\nextends PluggableJdbcPooledConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extension of PluggableJdbcPooledConnection which will run flyway migration on init.\",\n                  tag=\"connections,jdbc,flyway\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">FlywayPluggableConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/PluggableJdbcPooledConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jdbc\" class=\"externalLink\" target=\"_new\">PluggableJdbcPooledConnection</a>",
      "description" : "Extension of PluggableJdbcPooledConnection which will run flyway migration on init.",
      "descriptionHtml" : "Extension of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/PluggableJdbcPooledConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jdbc\" class=\"externalLink\" target=\"_new\"><code>PluggableJdbcPooledConnection</code></a> which will run flyway migration on init.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true"
        },
        {
          "name" : "DatabaseConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DatabaseConnection.html?is-external=true"
        },
        {
          "name" : "JdbcPooledConnectionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcPooledConnectionImpl.html?is-external=true"
        },
        {
          "name" : "PluggableJdbcPooledConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/PluggableJdbcPooledConnection.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Flyway",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-flyway",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/StringToXmlPayload.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.StringToXmlPayload",
      "className" : "StringToXmlPayload",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-string-to-xml-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class StringToXmlPayload\nextends XmlPayload",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringToXmlPayload</span>\nextends <a href=\"XmlPayload.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">XmlPayload</a>",
      "description" : "Exports a structure into the payload converting it into XML.",
      "descriptionHtml" : "Exports a structure into the payload converting it into XML.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        },
        {
          "name" : "PayloadParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/PayloadParameter.html"
        },
        {
          "name" : "XmlPayload",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/XmlPayload.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/Switch.html",
      "fullClassName" : "com.adaptris.core.services.conditional.Switch",
      "className" : "Switch",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "service",
      "alias" : "switch",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "A 'switch' statement in configuration; replaces some usecases for branching-service-collection",
        "tag" : "service, conditional"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A \\'switch\\' statement in configuration; replaces some usecases for branching-service-collection\",\n                  tag=\"service, conditional\",\n                  since=\"3.9.0\")\npublic class Switch\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A \\'switch\\' statement in configuration; replaces some usecases for branching-service-collection\",\n                  tag=\"service, conditional\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">Switch</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "A switch statement in configuration.",
      "descriptionHtml" : "A switch statement in configuration.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/GunzipService.html",
      "fullClassName" : "com.adaptris.core.services.GunzipService",
      "className" : "GunzipService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "gunzip-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "GUNZIP the contents of the message",
        "tag" : "service,zip"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"GUNZIP the contents of the message\",\n                  tag=\"service,zip\")\npublic class GunzipService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"GUNZIP the contents of the message\",\n                  tag=\"service,zip\")\npublic class <span class=\"typeNameLabel\">GunzipService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Unzip the given payload. This simply uses java.util.zip.GZIPInputStream in order to extract the un-compressed bytes. If the payload is not considered compressed, then a ServiceException will be thrown.",
      "descriptionHtml" : "Unzip the given payload. \n<p> This simply uses <code>java.util.zip.GZIPInputStream</code> in order to extract the un-compressed bytes. </p> \n<p> If the payload is not considered compressed, then a ServiceException will be thrown. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ClientAcknowledgementHandler.html",
      "fullClassName" : "com.adaptris.core.jms.ClientAcknowledgementHandler",
      "className" : "ClientAcknowledgementHandler",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "client-acknowledgement-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "JMS Acknowledgement handler that handles CLIENT_ACKNOWLEDGE mode.",
        "tag" : "jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JMS Acknowledgement handler that handles CLIENT_ACKNOWLEDGE mode.\",\n                  tag=\"jms\")\npublic class ClientAcknowledgementHandler\nextends java.lang.Object\nimplements AcknowledgementHandler",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JMS Acknowledgement handler that handles CLIENT_ACKNOWLEDGE mode.\",\n                  tag=\"jms\")\npublic class <span class=\"typeNameLabel\">ClientAcknowledgementHandler</span>\nextends java.lang.Object\nimplements <a href=\"AcknowledgementHandler.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">AcknowledgementHandler</a>",
      "description" : "AcknowledgementHandler implementation that handles acknowledging messages when in CLIENT_ACKNOWLEDGE mode.",
      "descriptionHtml" : "<p> <code>AcknowledgementHandler</code> implementation that handles acknowledging messages when in CLIENT_ACKNOWLEDGE mode. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionFromMetadata.html",
      "fullClassName" : "com.adaptris.core.services.exception.ExceptionFromMetadata",
      "className" : "ExceptionFromMetadata",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "exception-from-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ExceptionFromMetadata\nextends ExceptionFromMetadataImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExceptionFromMetadata</span>\nextends <a href=\"ExceptionFromMetadataImpl.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\">ExceptionFromMetadataImpl</a>",
      "description" : "ExceptionGenerator implementation that generates the exception from metadata. Use this class with ThrowExceptionService to throw an exception as part of a workflow. The exception message (i.e. Throwable.getMessage()) is derived from the configured metadata key. If the metadata key does not exist (or returns no value) then the default exception message is used to generate the exception. Note that this always throws an exception.",
      "descriptionHtml" : "<a href=\"ExceptionGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionGenerator</code></a> implementation that generates the exception from metadata. \n<p> Use this class with <a href=\"ThrowExceptionService.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\"><code>ThrowExceptionService</code></a> to throw an exception as part of a workflow. The exception message (i.e. <code>Throwable.getMessage()</code>) is derived from the configured metadata key. If the metadata key does not exist (or returns no value) then the default exception message is used to generate the exception. Note that this <strong>always</strong> throws an exception.</p>",
      "inheritance" : [
        {
          "name" : "ExceptionFromMetadataImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionFromMetadataImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/MetadataMailHeaders.html",
      "fullClassName" : "com.adaptris.core.mail.MetadataMailHeaders",
      "className" : "MetadataMailHeaders",
      "packageName" : "com.adaptris.core.mail",
      "componentType" : "object",
      "alias" : "mail-headers-as-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataMailHeaders\nextends java.lang.Object\nimplements MailHeaderHandler",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataMailHeaders</span>\nextends java.lang.Object\nimplements <a href=\"MailHeaderHandler.html\" title=\"interface in com.adaptris.core.mail\" target=\"_new\">MailHeaderHandler</a>",
      "description" : "Store mail headers as metadata. It's possible to have multiple mail headers of the same name (e.g. Received is often present many times indicating the path through various MTAs). In this instance, only 1 of them will be preserved.",
      "descriptionHtml" : "Store mail headers as metadata. \n<p> It's possible to have multiple mail headers of the same name (e.g. <code>Received</code> is often present many times indicating the path through various MTAs). In this instance, only 1 of them will be preserved. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockFailingConnection",
      "className" : "MockFailingConnection",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "connection",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.StateManagedStandaloneConsumer",
      "className" : "StateManagedStandaloneConsumer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "fullClassName" : "com.adaptris.interlok.junit.scaffolding.jms.MockProducer",
      "className" : "MockProducer",
      "packageName" : "com.adaptris.interlok.junit.scaffolding.jms",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockConnection",
      "className" : "MockConnection",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "connection",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/DefaultSerializableMessage.html",
      "fullClassName" : "com.adaptris.interlok.types.DefaultSerializableMessage",
      "className" : "DefaultSerializableMessage",
      "packageName" : "com.adaptris.interlok.types",
      "componentType" : "object",
      "alias" : "default-serializable-message",
      "deprecated" : false,
      "jarFileName" : "interlok-common.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultSerializableMessage\nextends java.lang.Object\nimplements SerializableMessage",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultSerializableMessage</span>\nextends java.lang.Object\nimplements <a href=\"SerializableMessage.html\" title=\"interface in com.adaptris.interlok.types\" target=\"_new\">SerializableMessage</a>",
      "description" : "Default SerializableMessage implementation for clients to use.",
      "descriptionHtml" : "Default \n<a href=\"SerializableMessage.html\" title=\"interface in com.adaptris.interlok.types\" target=\"_new\">SerializableMessage</a> implementation for clients to use.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpQueueConsumer.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.SolaceJcsmpQueueConsumer",
      "className" : "SolaceJcsmpQueueConsumer",
      "packageName" : "com.adaptris.core.jcsmp.solace",
      "componentType" : "consumer",
      "alias" : "solace-jcsmp-queue-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "A Solace native JCSMP component that consumes your messages from the Solace VPN.",
        "tag" : "queue,consumer,solace,jcsmp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP component that consumes your messages from the Solace VPN.\",\n                  tag=\"queue,consumer,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class SolaceJcsmpQueueConsumer\nextends SolaceJcsmpAbstractConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP component that consumes your messages from the Solace VPN.\",\n                  tag=\"queue,consumer,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpQueueConsumer</span>\nextends <a href=\"SolaceJcsmpAbstractConsumer.html\" title=\"class in com.adaptris.core.jcsmp.solace\" target=\"_new\">SolaceJcsmpAbstractConsumer</a>",
      "description" : "This implementation of AdaptrisMessageConsumer will use the Solace Jcsmp Api to consume messages from a Queue on your Solace router. There are four main components that you will need to configure; Destination: The Solace end point to consume messages from. End point permissions: Should match the Solace configured endpoint properties. End point access type: Should match either EXCLUSIVE or NONEXCLUSIVE Acknowledge mode: Should either be CLIENT or AUTO.",
      "descriptionHtml" : "<p> This implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageConsumer</code></a> will use the Solace Jcsmp Api to consume messages from a Queue on your Solace router. </p> \n<p> There are four main components that you will need to configure; </p>\n<ul> \n <li><b>Destination: </b> The Solace end point to consume messages from.</li> \n <li><b>End point permissions: </b> Should match the Solace configured endpoint properties.</li> \n <li><b>End point access type: </b> Should match either EXCLUSIVE or NONEXCLUSIVE</li> \n <li><b>Acknowledge mode: </b> Should either be CLIENT or AUTO.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "SolaceJcsmpAbstractConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpAbstractConsumer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpConnectionErrorHandler.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.SolaceJcsmpConnectionErrorHandler",
      "className" : "SolaceJcsmpConnectionErrorHandler",
      "packageName" : "com.adaptris.core.jcsmp.solace",
      "componentType" : "object",
      "alias" : "solace-jcsmp-connection-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "A Solace native JCSMP connection error handler, used to restart affected components on error.",
        "tag" : "ceh,connection,solace,jcsmp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP connection error handler, used to restart affected components on error.\",\n                  tag=\"ceh,connection,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class SolaceJcsmpConnectionErrorHandler\nextends ConnectionErrorHandlerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP connection error handler, used to restart affected components on error.\",\n                  tag=\"ceh,connection,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpConnectionErrorHandler</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectionErrorHandlerImp</a>",
      "description" : "The Interlok ConnectionErrorHandler implementation specifically for SolaceJcsmpConnection Should a connection be disconnected or report an error, this handler will fire, attempting to restart everything.",
      "descriptionHtml" : "<p> The Interlok <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ConnectionErrorHandler</code></a> implementation specifically for <a href=\"SolaceJcsmpConnection.html\" title=\"class in com.adaptris.core.jcsmp.solace\" target=\"_new\"><code>SolaceJcsmpConnection</code></a> </p> \n<p> Should a connection be disconnected or report an error, this handler will fire, attempting to restart everything. </p>",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/BasicPreferenceBuilder.html",
      "fullClassName" : "com.adaptris.csv.BasicPreferenceBuilder",
      "className" : "BasicPreferenceBuilder",
      "packageName" : "com.adaptris.csv",
      "componentType" : "object",
      "alias" : "csv-basic-preference-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicPreferenceBuilder\nextends java.lang.Object\nimplements PreferenceBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicPreferenceBuilder</span>\nextends java.lang.Object\nimplements <a href=\"PreferenceBuilder.html\" title=\"interface in com.adaptris.csv\" target=\"_new\">PreferenceBuilder</a>",
      "description" : "Implementation of PreferenceBuilder that maps the standard super-csv formats.",
      "descriptionHtml" : "Implementation of \n<a href=\"PreferenceBuilder.html\" title=\"interface in com.adaptris.csv\" target=\"_new\"><code>PreferenceBuilder</code></a> that maps the standard super-csv formats.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/SingleOperation.html",
      "fullClassName" : "com.adaptris.core.elastic.rest.SingleOperation",
      "className" : "SingleOperation",
      "packageName" : "com.adaptris.core.elastic.rest",
      "componentType" : "producer",
      "alias" : "elastic-rest-single-operation",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-rest.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.elastic.rest.ElasticRestConnection"
        ],
        "since" : "3.9.1",
        "summary" : "Use the REST API to interact with an ElasticSearch instance",
        "tag" : "producer,elastic,elasticsearch"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Use the REST API to interact with an ElasticSearch instance\",\n                  tag=\"producer,elastic,elasticsearch\",\n                  since=\"3.9.1\",\n                  recommended=ElasticRestConnection.class)\npublic class SingleOperation\nextends ElasticRestProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Use the REST API to interact with an ElasticSearch instance\",\n                  tag=\"producer,elastic,elasticsearch\",\n                  since=\"3.9.1\",\n                  recommended=<a href=\"ElasticRestConnection.html\" title=\"class in com.adaptris.core.elastic.rest\" target=\"_new\">ElasticRestConnection.class</a>)\npublic class <span class=\"typeNameLabel\">SingleOperation</span>\nextends <a href=\"ElasticRestProducer.html\" title=\"class in com.adaptris.core.elastic.rest\" target=\"_new\">ElasticRestProducer</a>",
      "description" : "INDEX/UPDATE/DELETE a document(s) to ElasticSearch. ElasticRestProducer.getIndex() should return the index of document that we are submitting to into ElasticSearch; the type will be derived from the DocumentWrapper itself. Of course, you can configure a ElasticDocumentBuilder implementation that creates multiple documents, but this will mean that all operations are made individually using the standard single document API rather than the BULK API. For performance reasons you should consider using BulkOperation where appropriate. The action for each document is driven by the configured ActionExtractor instance. In the event of an DocumentAction.UPSERT action then the same XContentBuilder from the DocumentWrapper is used as both the update and upsert document via source(XContentBuilder} and setUpsert(XContentBuilder). This makes the assumption that the document generated contains all the data required, not just a subset. If in doubt; stick to a normal DocumentAction.UPDATE which will correctly throw a DocumentMissingException.",
      "descriptionHtml" : "INDEX/UPDATE/DELETE a document(s) to ElasticSearch. \n<p> <a href=\"ElasticRestProducer.html#getIndex()\" target=\"_new\"><code>ElasticRestProducer.getIndex()</code></a> should return the index of document that we are submitting to into ElasticSearch; the <code>type</code> will be derived from the DocumentWrapper itself. </p> \n<p> Of course, you can configure a <code>ElasticDocumentBuilder</code> implementation that creates multiple documents, but this will mean that all operations are made individually using the standard single document API rather than the BULK API. For performance reasons you should consider using <a href=\"BulkOperation.html\" title=\"class in com.adaptris.core.elastic.rest\" target=\"_new\"><code>BulkOperation</code></a> where appropriate. </p> \n<p> The action for each document is driven by the configured <code>ActionExtractor</code> instance. In the event of an <code>DocumentAction.UPSERT</code> action then the same <code>XContentBuilder</code> from the <code>DocumentWrapper</code> is used as both the update and upsert document via <code>source(XContentBuilder</code>} and <code>setUpsert(XContentBuilder)</code>. This makes the assumption that the document generated contains all the data required, not just a subset. If in doubt; stick to a normal <code>DocumentAction.UPDATE</code> which will correctly throw a <code>DocumentMissingException</code>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "ElasticRestProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/ElasticRestProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: REST Client",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-rest",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PtpProducer.html",
      "fullClassName" : "com.adaptris.core.jms.PtpProducer",
      "className" : "PtpProducer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "producer",
      "alias" : "jms-queue-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Place message on a JMS Queue",
        "tag" : "producer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Place message on a JMS Queue\",\n                  tag=\"producer,jms\",\n                  recommended=JmsConnection.class)\npublic class PtpProducer\nextends DefinedJmsProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Place message on a JMS Queue\",\n                  tag=\"producer,jms\",\n                  recommended=<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PtpProducer</span>\nextends <a href=\"DefinedJmsProducer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">DefinedJmsProducer</a>",
      "description" : "AdaptrisMessageProducer implementation for Queue based JMS. This implementation baselines to JMS 1.1 for minimum API support and its behaviour and support for standard JMS Headers can be controlled in a number of ways. When converting from an AdaptrisMessage into a standard Message; you should choose an implementation of MessageTypeTranslator. The more common types are BytesMessageTranslator, TextMessageTranslator, ObjectMessageTranslator and MapMessageTranslator which correspond to BytesMessage, TextMessage, ObjectMessage and MapMessage respectively. Each MessageTypeTranslator will allow you to move some or all metadata from the AdaptrisMessage to the JMS Message. Of course, there are other vendor specific JMS message types can be used. The Message.getJMSCorrelationID() field is generally used for linking one message to with another. It typically links a reply message with the originating request message. If you need to handle the correlation id in some fashion then typically you would choose an implementation of CorrelationIdSource that explicitly handles the correlation ID; for instance MetadataCorrelationIdSource. Synchronous request/reply messaging behaviour is available for this producer and relies heavily on the Message.getJMSReplyTo() field. Normally if the adapter is initiating the request then a temporary destination is created and this is used as the JMSReplyTo field. Sometimes you may wish to specify your own JMSReplyTo field (where the JMS Vendor doesn't play nice with temporary queues). To do this, then you need to ensure that the metadata key \"JMSAsyncStaticReplyTo\" is set with the appropriate queue name; this will cause that message to be produced to the queue with a JMSReplyTo set to that queue. You may also use \"JMSAsyncStaticReplyTo\" in an asynchronous workflow; if the metadata key exists in the message then it will be used to populate the JMSReplyTo Field. By convention, the Message.getJMSPriority(), Message.getJMSDeliveryMode(), and Message.getJMSExpiration() are configured directly (expiration here is semantically equivalent to the element JmsProducerImpl.setTtl(Long) on the producer. It is possible to control it dynamically on a per message basis using the element JmsProducerImpl.setPerMessageProperties(Boolean). If you opt to control these fields on a per message basis then the following metadata keys are used : \"JMSPriority\" - This overrides the priority of the message and should be an integer value. \"JMSDeliveryMode\" - This overrides the delivery mode of the message, and can either be an integer or a string value understood by DeliveryMode \"JMSExpiration\" - This overrides the expiration of the message, and can either be an long value specifying when the message expires, or a string value in the form \"yyyy-MM-dd'T'HH:mm:ssZ\". It will be used to calculate the correct TTL.",
      "descriptionHtml" : "<a href=\"../AdaptrisMessageProducer.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessageProducer</code></a> implementation for Queue based JMS. \n<p> This implementation baselines to JMS 1.1 for minimum API support and its behaviour and support for standard JMS Headers can be controlled in a number of ways. </p> \n<p> When converting from an <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> into a standard <code>Message</code>; you should choose an implementation of <a href=\"MessageTypeTranslator.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>MessageTypeTranslator</code></a>. The more common types are <a href=\"BytesMessageTranslator.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>BytesMessageTranslator</code></a>, <a href=\"TextMessageTranslator.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>TextMessageTranslator</code></a>, <a href=\"ObjectMessageTranslator.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>ObjectMessageTranslator</code></a> and <a href=\"MapMessageTranslator.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>MapMessageTranslator</code></a> which correspond to <code>BytesMessage</code>, <code>TextMessage</code>, <code>ObjectMessage</code> and <code>MapMessage</code> respectively. Each <a href=\"MessageTypeTranslator.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>MessageTypeTranslator</code></a> will allow you to move some or all metadata from the AdaptrisMessage to the JMS Message. Of course, there are other vendor specific JMS message types can be used. </p> \n<p> The <code>Message.getJMSCorrelationID()</code> field is generally used for linking one message to with another. It typically links a reply message with the originating request message. If you need to handle the correlation id in some fashion then typically you would choose an implementation of <a href=\"CorrelationIdSource.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>CorrelationIdSource</code></a> that explicitly handles the correlation ID; for instance <a href=\"MetadataCorrelationIdSource.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>MetadataCorrelationIdSource</code></a>. </p> \n<p> Synchronous request/reply messaging behaviour is available for this producer and relies heavily on the <code>Message.getJMSReplyTo()</code> field. Normally if the adapter is initiating the request then a temporary destination is created and this is used as the JMSReplyTo field. Sometimes you may wish to specify your own JMSReplyTo field (where the JMS Vendor doesn't play nice with temporary queues). To do this, then you need to ensure that the metadata key <a href=\"JmsConstants.html#JMS_ASYNC_STATIC_REPLY_TO\" target=\"_new\">\"JMSAsyncStaticReplyTo\"</a> is set with the appropriate queue name; this will cause that message to be produced to the queue with a JMSReplyTo set to that queue. You may also use <a href=\"JmsConstants.html#JMS_ASYNC_STATIC_REPLY_TO\" target=\"_new\">\"JMSAsyncStaticReplyTo\"</a> in an asynchronous workflow; if the metadata key exists in the message then it will be used to populate the JMSReplyTo Field. </p> \n<p> By convention, the <code>Message.getJMSPriority()</code>, <code>Message.getJMSDeliveryMode()</code>, and <code>Message.getJMSExpiration()</code> are configured directly (expiration here is semantically equivalent to the element <a href=\"JmsProducerImpl.html#setTtl(java.lang.Long)\" target=\"_new\"><code>JmsProducerImpl.setTtl(Long)</code></a> on the producer. It is possible to control it dynamically on a per message basis using the element <a href=\"JmsProducerImpl.html#setPerMessageProperties(java.lang.Boolean)\" target=\"_new\"><code>JmsProducerImpl.setPerMessageProperties(Boolean)</code></a>. If you opt to control these fields on a per message basis then the following metadata keys are used : </p> \n<ul> \n <li><a href=\"JmsConstants.html#JMS_PRIORITY\" target=\"_new\">\"JMSPriority\"</a> - This overrides the priority of the message and should be an integer value.</li> \n <li><a href=\"JmsConstants.html#JMS_DELIVERY_MODE\" target=\"_new\">\"JMSDeliveryMode\"</a> - This overrides the delivery mode of the message, and can either be an integer or a string value understood by <a href=\"DeliveryMode.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>DeliveryMode</code></a></li> \n <li><a href=\"JmsConstants.html#JMS_EXPIRATION\" target=\"_new\">\"JMSExpiration\"</a> - This overrides the expiration of the message, and can either be an long value specifying when the message expires, or a string value in the form \"yyyy-MM-dd'T'HH:mm:ssZ\". It will be used to calculate the correct TTL.</li> \n</ul>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html"
        },
        {
          "name" : "JmsProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducerImpl.html"
        },
        {
          "name" : "DefinedJmsProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/DefinedJmsProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/JsonArraySplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.json.JsonArraySplitter",
      "className" : "JsonArraySplitter",
      "packageName" : "com.adaptris.core.services.splitter.json",
      "componentType" : "object",
      "alias" : "json-array-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Split a JSON Array into individual JSON objects",
        "tag" : "json,splitting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a JSON Array into individual JSON objects\",\n                  tag=\"json,splitting\")\npublic class JsonArraySplitter\nextends JsonObjectSplitter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a JSON Array into individual JSON objects\",\n                  tag=\"json,splitting\")\npublic class <span class=\"typeNameLabel\">JsonArraySplitter</span>\nextends <a href=\"JsonObjectSplitter.html\" title=\"class in com.adaptris.core.services.splitter.json\" target=\"_new\">JsonObjectSplitter</a>",
      "description" : "Message splitter implementation that splits a JSON array so that each element forms a new message. If the message cannot be parsed as JSON then an exception will be thrown; If the message is a JSON object but not a JSON array, then the original message is returned. Note that because it operates on the entire payload, size of message considerations may be in order. For instance the JSON array [{colour: \"red\",value: \"#f00\"},{colour: \"green\",value: \"#0f0\"},{colour: \"blue\",value: \"#00f\"},{colour: \"black\",value: \"#000\"}] would be split into 4 messages whereas {\"colours\" : [{colour: \"red\",value: \"#f00\"},{colour: \"green\",value: \"#0f0\"},{colour: \"blue\",value: \"#00f\"},{colour: \"black\",value: \"#000\"}] } would remain a single message.",
      "descriptionHtml" : "Message splitter implementation that splits a JSON array so that each element forms a new message. \n<p> If the message cannot be parsed as JSON then an exception will be thrown; If the message is a JSON object but not a JSON array, then the original message is returned. Note that because it operates on the entire payload, size of message considerations may be in order. </p> \n<p> For instance the JSON array <code> [{colour: \"red\",value: \"#f00\"},{colour: \"green\",value: \"#0f0\"},{colour: \"blue\",value: \"#00f\"},{colour: \"black\",value: \"#000\"}]</code> would be split into 4 messages whereas <code>{\"colours\" : [{colour: \"red\",value: \"#f00\"},{colour: \"green\",value: \"#0f0\"},{colour: \"blue\",value: \"#00f\"},{colour: \"black\",value: \"#000\"}] }</code> would remain a single message. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        },
        {
          "name" : "JsonObjectSplitter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/JsonObjectSplitter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataValueEscapeDoubleQuote.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataValueEscapeDoubleQuote",
      "className" : "MetadataValueEscapeDoubleQuote",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-value-escape-double-quote",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.1",
        "summary" : "Changes matching metadata double quote into escaped double quote",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Changes matching metadata double quote into escaped double quote\",\n                  tag=\"service,metadata\",\n                  since=\"3.10.1\")\npublic class MetadataValueEscapeDoubleQuote\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Changes matching metadata double quote into escaped double quote\",\n                  tag=\"service,metadata\",\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">MetadataValueEscapeDoubleQuote</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "Takes a metadata value and escapes double quote. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will be changed to escaped double quote",
      "descriptionHtml" : "Takes a metadata value and escapes double quote. \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will be changed to escaped double quote </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.interlok.junit.scaffolding.jms.MockConsumer",
      "className" : "MockConsumer",
      "packageName" : "com.adaptris.interlok.junit.scaffolding.jms",
      "componentType" : "consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/ReceiveChannelConfig.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.ReceiveChannelConfig",
      "className" : "ReceiveChannelConfig",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "object",
      "alias" : "sonic-receive-channel-config",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public final class ReceiveChannelConfig\nextends LargeMessageConfig",
      "annotationDetailsHtml" : "public final class <span class=\"typeNameLabel\">ReceiveChannelConfig</span>\nextends <a href=\"LargeMessageConfig.html\" title=\"class in com.adaptris.core.jms.sonic\" target=\"_new\">LargeMessageConfig</a>",
      "description" : "Additional configuration required for LargeMessageConsumer.",
      "descriptionHtml" : "Additional configuration required for \n<a href=\"LargeMessageConsumer.html\" title=\"class in com.adaptris.core.jms.sonic\" target=\"_new\"><code>LargeMessageConsumer</code></a>.",
      "inheritance" : [
        {
          "name" : "LargeMessageConfig",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/LargeMessageConfig.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RetryOnceStandaloneProducer.html",
      "fullClassName" : "com.adaptris.core.RetryOnceStandaloneProducer",
      "className" : "RetryOnceStandaloneProducer",
      "packageName" : "com.adaptris.core",
      "componentType" : "service",
      "alias" : "retry-once-standalone-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Produce a message where as part of a service chain; retrying once on failure",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Produce a message where as part of a service chain; retrying once on failure\",\n                  tag=\"service\")\npublic class RetryOnceStandaloneProducer\nextends StandaloneProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Produce a message where as part of a service chain; retrying once on failure\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">RetryOnceStandaloneProducer</span>\nextends <a href=\"StandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\">StandaloneProducer</a>",
      "description" : "An implementation of StandaloneProducer that on encountering an error producing a message, waits for a configurable period, re-initialises the underlying components, then tries to produce once one more. As some internal components have relationships that are persistent across their normal lifecycle, this class additionally marshals each connection and producer implementation to XML and back again prior to initialisation.",
      "descriptionHtml" : "An implementation of StandaloneProducer that on encountering an error producing a message, waits for a configurable period, re-initialises the underlying components, then tries to produce once one more. \n<p> As some internal components have relationships that are persistent across their normal lifecycle, this class additionally marshals each connection and producer implementation to XML and back again prior to initialisation. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "StandaloneProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/SafeMessageIdProperty.html",
      "fullClassName" : "com.adaptris.core.msmq.javonet.SafeMessageIdProperty",
      "className" : "SafeMessageIdProperty",
      "packageName" : "com.adaptris.core.msmq.javonet",
      "componentType" : "object",
      "alias" : "javonet-msmq-safe-message-id",
      "deprecated" : false,
      "jarFileName" : "interlok-msmq-javonet.jar",
      "profile" : { },
      "annotationDetails" : "public class SafeMessageIdProperty\nextends MessageIdProperty",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SafeMessageIdProperty</span>\nextends <a href=\"MessageIdProperty.html\" title=\"class in com.adaptris.core.msmq.javonet\" target=\"_new\">MessageIdProperty</a>",
      "description" : "Copies the AdaptrisMessage uniqueId to and from MSMQ Message fields. In some environments the System.Messaging.Message.Id property (and CorrelationId property) may not be safe to use as the AdaptrisMessage ID (it may contain a \\ which will cause problems when writing out to the filesystem. This class simply replaces all invalid characters with a - instead. Note that System.Messaging.Message does not allow you to set the Id property; it is always auto-assigned. As a result, if you attempt to map the AdaptrisMessage ID to this field, it will fail.",
      "descriptionHtml" : "Copies the AdaptrisMessage uniqueId to and from MSMQ Message fields. \n<p>In some environments the <code>System.Messaging.Message.Id</code> property (and CorrelationId property) may not be safe to use as the AdaptrisMessage ID (it may contain a <code>\\</code> which will cause problems when writing out to the filesystem. This class simply replaces all invalid characters with a <code>-</code> instead.</p> \n<p> Note that <code>System.Messaging.Message</code> does not allow you to set the <code>Id</code> property; it is always auto-assigned. As a result, if you attempt to map the AdaptrisMessage ID to this field, it will fail. </p>",
      "inheritance" : [
        {
          "name" : "MessageProperty",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/MessageProperty.html"
        },
        {
          "name" : "MessageIdProperty",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/MessageIdProperty.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MSMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-msmq-javonet",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/util/FullMessageLogger.html",
      "fullClassName" : "com.adaptris.core.util.FullMessageLogger",
      "className" : "FullMessageLogger",
      "packageName" : "com.adaptris.core.util",
      "componentType" : "object",
      "alias" : "message-logging-full",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Log everything, including payload and events",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Log everything, including payload and events\",\n                  since=\"3.8.4\")\npublic class FullMessageLogger\nextends MessageLoggerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Log everything, including payload and events\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">FullMessageLogger</span>\nextends <a href=\"../MessageLoggerImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">MessageLoggerImpl</a>",
      "description" : "MessageLogger implementation that that logs unique-id, metadata, payload, and events.",
      "descriptionHtml" : "MessageLogger implementation that that logs unique-id, metadata, payload, and events.",
      "inheritance" : [
        {
          "name" : "MessageLoggerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MessageLoggerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/Download.html",
      "fullClassName" : "com.adaptris.jclouds.blobstore.Download",
      "className" : "Download",
      "packageName" : "com.adaptris.jclouds.blobstore",
      "componentType" : "object",
      "alias" : "jclouds-blobstore-download",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-blobstore.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Download a blob",
        "tag" : "jclouds"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Download a blob\",\n                  tag=\"jclouds\")\npublic class Download\nextends OperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Download a blob\",\n                  tag=\"jclouds\")\npublic class <span class=\"typeNameLabel\">Download</span>\nextends <a href=\"OperationImpl.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\">OperationImpl</a>",
      "description" : "Download an object.",
      "descriptionHtml" : "Download an object.",
      "inheritance" : [
        {
          "name" : "ContainerOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/ContainerOperation.html"
        },
        {
          "name" : "OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/OperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Blobstore",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-blobstore",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/actions/MetadataAction.html",
      "fullClassName" : "com.adaptris.core.elastic.actions.MetadataAction",
      "className" : "MetadataAction",
      "packageName" : "com.adaptris.core.elastic.actions",
      "componentType" : "object",
      "alias" : "elastic-metadata-action",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Derive a document action from metadata",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Derive a document action from metadata\",\n                  since=\"3.9.1\")\npublic class MetadataAction\nextends java.lang.Object\nimplements ActionExtractor",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Derive a document action from metadata\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">MetadataAction</span>\nextends java.lang.Object\nimplements <a href=\"ActionExtractor.html\" title=\"interface in com.adaptris.core.elastic.actions\" target=\"_new\">ActionExtractor</a>",
      "description" : "Derive a document action from metadata.",
      "descriptionHtml" : "Derive a document action from metadata.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/ElementValueFormatter.html",
      "fullClassName" : "com.adaptris.core.metadata.ElementValueFormatter",
      "className" : "ElementValueFormatter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "element-value-formatter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ElementValueFormatter\nextends java.lang.Object\nimplements ElementFormatter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ElementValueFormatter</span>\nextends java.lang.Object\nimplements <a href=\"ElementFormatter.html\" title=\"interface in com.adaptris.core.metadata\" target=\"_new\">ElementFormatter</a>",
      "description" : "Default element formatter. Format is just the metadata value.",
      "descriptionHtml" : "Default element formatter. Format is just the metadata value.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MetadataProducerSessionFactory.html",
      "fullClassName" : "com.adaptris.core.jms.MetadataProducerSessionFactory",
      "className" : "MetadataProducerSessionFactory",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-metadata-producer-session",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataProducerSessionFactory\nextends ProducerSessionFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataProducerSessionFactory</span>\nextends <a href=\"ProducerSessionFactoryImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">ProducerSessionFactoryImpl</a>",
      "description" : "Implementation of ProducerSessionFactory that creates a new session/producer based on message size. This implementaton refreshes the session based whether an item of metadata evaluates to 'true'",
      "descriptionHtml" : "Implementation of \n<a href=\"ProducerSessionFactory.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>ProducerSessionFactory</code></a> that creates a new session/producer based on message size. \n<p> This implementaton refreshes the session based whether an item of metadata evaluates to 'true' </p>",
      "inheritance" : [
        {
          "name" : "ProducerSessionFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ProducerSessionFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/RetryStoreDeleteService.html",
      "fullClassName" : "com.adaptris.core.http.jetty.retry.RetryStoreDeleteService",
      "className" : "RetryStoreDeleteService",
      "packageName" : "com.adaptris.core.http.jetty.retry",
      "componentType" : "service",
      "alias" : "retry-store-delete-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Delete a message from the retry store",
        "tag" : "retry"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Delete a message from the retry store\",\n                  since=\"3.11.1\",\n                  tag=\"retry\")\npublic class RetryStoreDeleteService\nextends RetryStoreServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Delete a message from the retry store\",\n                  since=\"3.11.1\",\n                  tag=\"retry\")\npublic class <span class=\"typeNameLabel\">RetryStoreDeleteService</span>\nextends <a href=\"RetryStoreServiceImpl.html\" title=\"class in com.adaptris.core.http.jetty.retry\" target=\"_new\">RetryStoreServiceImpl</a>",
      "description" : "Delete a message from the configured retry store. While not tightly coupled it is designed as a supporting service for use with RetryFromJetty.",
      "descriptionHtml" : "Delete a message from the configured retry store. \n<p> While not tightly coupled it is designed as a supporting service for use with <a href=\"RetryFromJetty.html\" title=\"class in com.adaptris.core.http.jetty.retry\" target=\"_new\"><code>RetryFromJetty</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "RetryStoreServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/RetryStoreServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/BranchingHttpRequestService.html",
      "fullClassName" : "com.adaptris.core.http.apache.BranchingHttpRequestService",
      "className" : "BranchingHttpRequestService",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "service",
      "alias" : "branching-apache-http-request-service",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : {
        "author" : "Adaptris Ltd",
        "branchSelector" : "true",
        "metadata" : [
          "adphttpresponse"
        ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Make a HTTP(s) request to a remote server using the Apache HTTP Client",
        "tag" : "service,http,https,branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Make a HTTP(s) request to a remote server using the Apache HTTP Client\",\n                  tag=\"service,http,https,branching\",\n                  branchSelector=true,\n                  metadata=\"adphttpresponse\",\n                  author=\"Adaptris Ltd\")\npublic class BranchingHttpRequestService\nextends HttpRequestServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Make a HTTP(s) request to a remote server using the Apache HTTP Client\",\n                  tag=\"service,http,https,branching\",\n                  branchSelector=true,\n                  metadata=\"adphttpresponse\",\n                  author=\"Adaptris Ltd\")\npublic class <span class=\"typeNameLabel\">BranchingHttpRequestService</span>\nextends <a href=\"HttpRequestServiceImpl.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\">HttpRequestServiceImpl</a>",
      "description" : "Branch support for HTTP via interrogation of the HTTP status. This service allows you to branch based on the HTTP status code returned by the web server. Use a specific StatusEvaluator to determine the appropriate value for AdaptrisMessage.setNextServiceId(String). It differs from wrapping HttpRequestService with a BranchingServiceEnabler as it allows you more fine-grained control based on HTTP status codes. Note that this service just wraps a ApacheHttpProducer instance but doesn't expose all the possible settings available for the normal ApacheHttpProducer. If you need those features, than continue using the producer wrapped as a StandaloneProducer or StandaloneRequestor. String parameters in this service will use the InterlokMessage.resolve(String) which allows you to specify metadata values as part of a constant string e.g. setUrl(\"%message{http_url}\") will use the metadata value associated with the key http_url.",
      "descriptionHtml" : "Branch support for HTTP via interrogation of the HTTP status. \n<p> This service allows you to branch based on the <code>HTTP status code</code> returned by the web server. Use a specific <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/StatusEvaluator.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>StatusEvaluator</code></a> to determine the appropriate value for <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true#setNextServiceId(java.lang.String)\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage.setNextServiceId(String)</code></a>. It differs from wrapping <a href=\"HttpRequestService.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\"><code>HttpRequestService</code></a> with a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/BranchingServiceEnabler.html?is-external=true\" title=\"class or interface in com.adaptris.core.services\" class=\"externalLink\" target=\"_new\"><code>BranchingServiceEnabler</code></a> as it allows you more fine-grained control based on HTTP status codes. </p> \n<p> Note that this service just wraps a <a href=\"ApacheHttpProducer.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\"><code>ApacheHttpProducer</code></a> instance but doesn't expose all the possible settings available for the normal <a href=\"ApacheHttpProducer.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\"><code>ApacheHttpProducer</code></a>. If you need those features, than continue using the producer wrapped as a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneProducer</code></a> or <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneRequestor.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneRequestor</code></a>. </p> \n<p> String parameters in this service will use the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#resolve(java.lang.String)\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.resolve(String)</code></a> which allows you to specify metadata values as part of a constant string e.g. <code>setUrl(\"%message{http_url}\")</code> will use the metadata value associated with the key <code>http_url</code>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "HttpRequestServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/HttpRequestServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-azure/4.0.0B1-RELEASE/com/adaptris/core/oauth/azure/AzureClientSecretAccessToken.html",
      "fullClassName" : "com.adaptris.core.oauth.azure.AzureClientSecretAccessToken",
      "className" : "AzureClientSecretAccessToken",
      "packageName" : "com.adaptris.core.oauth.azure",
      "componentType" : "object",
      "alias" : "azure-client-secret-access-token",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-azure.jar",
      "profile" : { },
      "annotationDetails" : "public class AzureClientSecretAccessToken\nextends AzureAccessTokenImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AzureClientSecretAccessToken</span>\nextends <a href=\"AzureAccessTokenImpl.html\" title=\"class in com.adaptris.core.oauth.azure\" target=\"_new\">AzureAccessTokenImpl</a>",
      "description" : "Wraps the azure OAuth authentication flow. Based on the example available from Azure-Samples and tested (eventually) with the Microsoft Graph API using https://graph.microsoft.com/v1.0/me/.",
      "descriptionHtml" : "Wraps the azure OAuth authentication flow. \n<p> Based on the example available from <a href=\"https://github.com/Azure-Samples/active-directory-java-native-headless\" target=\"_new\">Azure-Samples</a> and tested (eventually) with the <a href=\"https://graph.microsoft.com\" target=\"_new\">Microsoft Graph API</a> using <a href=\"https://graph.microsoft.com/v1.0/me/\" target=\"_new\">https://graph.microsoft.com/v1.0/me/</a>. </p>",
      "inheritance" : [
        {
          "name" : "AzureAccessTokenImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-azure/4.0.0B1-RELEASE/com/adaptris/core/oauth/azure/AzureAccessTokenImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Azure",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-azure",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/Execution.html",
      "fullClassName" : "com.adaptris.core.common.Execution",
      "className" : "Execution",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "standard-execution",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class Execution\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Execution</span>\nextends java.lang.Object",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/BlobStoreConnection.html",
      "fullClassName" : "com.adaptris.jclouds.blobstore.BlobStoreConnection",
      "className" : "BlobStoreConnection",
      "packageName" : "com.adaptris.jclouds.blobstore",
      "componentType" : "connection",
      "alias" : "jclouds-blobstore-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-blobstore.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.jclouds.blobstore.BlobStoreConnection"
        ],
        "since" : "",
        "summary" : "Connect via apache jclouds to a pluggable cloud storage provider",
        "tag" : "blob,s3,azure,backblaze,cloud"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect via apache jclouds to a pluggable cloud storage provider\",\n                  recommended=BlobStoreConnection.class,\n                  tag=\"blob,s3,azure,backblaze,cloud\")\npublic class BlobStoreConnection\nextends com.adaptris.jclouds.common.JcloudsConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect via apache jclouds to a pluggable cloud storage provider\",\n                  recommended=<a href=\"BlobStoreConnection.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\">BlobStoreConnection.class</a>,\n                  tag=\"blob,s3,azure,backblaze,cloud\")\npublic class <span class=\"typeNameLabel\">BlobStoreConnection</span>\nextends com.adaptris.jclouds.common.JcloudsConnection",
      "description" : "Interacting with cloud storage via apache jclouds. You will need to also have one of the supported providers in your classpath to be able to use this connection. Use the associated provider in your configuration. Note that identity and credentials are not mandatory (and could be overriden via JcloudsConnection.setConfiguration(KeyValuePairSet) or system properties). If not explicitly configured, then those values are left to the underlying provider to make a choice about what credentials will be used to access cloud storage (for the aws-s3 provider, it will always fail if no identity/credentials are provided as it doesn't use the java AWS SDK to handle authentication). All the providers supported by jclouds are listed on their website. You should use that as the canonical reference. We have tested the blob storage with 3 different providers (the unit tests use the filesystem provider); and the operations have been confirmed to work. To access AWS-S3 via jclouds you will need to include the artefact org.apache.jclouds.provider:aws-s3:XYZ; where XYZ is the appropriate version; and use the provider aws-s3. This was tested for completeness, using the interlok-aws-s3 optional component is generally the better option. To access Backblaze via jclouds you will need to include the artefact org.apache.jclouds.provider:b2:XYZ; where XYZ is the appropriate version; and use the provider b2 To access MS Azure blob storage via jclouds you will need to include the artefact org.apache.jclouds.provider:azureblob:XYZ; where XYZ is the appropriate version; and use the provider azureblob",
      "descriptionHtml" : "Interacting with cloud storage via apache jclouds. \n<p> You will need to also have one of the <a href=\"https://jclouds.apache.org/reference/providers/#blobstore\" target=\"_new\">supported providers</a> in your classpath to be able to use this connection. Use the associated provider in your configuration. Note that <code>identity</code> and <code>credentials</code> are not mandatory (and could be overriden via <code>JcloudsConnection.setConfiguration(KeyValuePairSet)</code> or system properties). If not explicitly configured, then those values are left to the underlying provider to make a choice about what credentials will be used to access cloud storage (for the aws-s3 provider, it will always fail if no identity/credentials are provided as it doesn't use the java AWS SDK to handle authentication). </p> \n<p> All the providers supported by jclouds are listed on their <a href=\"https://jclouds.apache.org/reference/providers/\" target=\"_new\">website</a>. You should use that as the canonical reference. We have tested the blob storage with 3 different providers (the unit tests use the filesystem provider); and the operations have been confirmed to work. </p> \n<ul> \n <li>To access AWS-S3 via jclouds you will need to include the artefact <code>org.apache.jclouds.provider:aws-s3:XYZ</code>; where <code>XYZ</code> is the appropriate version; and use the provider <code>aws-s3</code>. This was tested for completeness, using the <code>interlok-aws-s3</code> optional component is generally the better option.</li> \n <li>To access Backblaze via jclouds you will need to include the artefact <code>org.apache.jclouds.provider:b2:XYZ</code>; where <code>XYZ</code> is the appropriate version; and use the provider <code>b2</code></li> \n <li>To access MS Azure blob storage via jclouds you will need to include the artefact <code>org.apache.jclouds.provider:azureblob:XYZ</code>; where <code>XYZ</code> is the appropriate version; and use the provider <code>azureblob</code></li> \n</ul>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Blobstore",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-blobstore",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/tibrv/CertifiedRendezvousClient.html",
      "fullClassName" : "com.adaptris.tibrv.CertifiedRendezvousClient",
      "className" : "CertifiedRendezvousClient",
      "packageName" : "com.adaptris.tibrv",
      "componentType" : "object",
      "alias" : "certified-rendezvous-client",
      "deprecated" : false,
      "jarFileName" : "interlok-tibco.jar",
      "profile" : { },
      "annotationDetails" : "public class CertifiedRendezvousClient\nextends RendezvousClientImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CertifiedRendezvousClient</span>\nextends <a href=\"RendezvousClientImp.html\" title=\"class in com.adaptris.tibrv\" target=\"_new\">RendezvousClientImp</a>",
      "description" : "Implementation of RendezvousClient which provides certified message delivery. Persistent messaging requires a ledger file name and request old to be set to true.",
      "descriptionHtml" : "<p> Implementation of <code>RendezvousClient</code> which provides certified message delivery. Persistent messaging requires a ledger file name and request old to be set to true. </p>",
      "inheritance" : [
        {
          "name" : "RendezvousClientImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/tibrv/RendezvousClientImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Tibco",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-tibco",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-streaming/4.0.0B1-RELEASE/com/adaptris/core/json/streaming/AdvancedStreamingTransformationDriver.html",
      "fullClassName" : "com.adaptris.core.json.streaming.AdvancedStreamingTransformationDriver",
      "className" : "AdvancedStreamingTransformationDriver",
      "packageName" : "com.adaptris.core.json.streaming",
      "componentType" : "object",
      "alias" : "advanced-streaming-transformation-driver",
      "deprecated" : false,
      "jarFileName" : "interlok-json-streaming.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "streaming xml/json driver that allows customisations",
        "tag" : "json,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"streaming xml/json driver that allows customisations\",\n                  tag=\"json,xml\",\n                  since=\"3.11.0\")\npublic class AdvancedStreamingTransformationDriver\nextends DefaultStreamingTransformationDriver",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"streaming xml/json driver that allows customisations\",\n                  tag=\"json,xml\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">AdvancedStreamingTransformationDriver</span>\nextends <a href=\"DefaultStreamingTransformationDriver.html\" title=\"class in com.adaptris.core.json.streaming\" target=\"_new\">DefaultStreamingTransformationDriver</a>",
      "description" : "TransformationDriver implementation that allows customisation of a JsonStreamingConfigBuilder.",
      "descriptionHtml" : "<code>TransformationDriver</code> implementation that allows customisation of a \n<a href=\"JsonStreamingConfigBuilder.html\" title=\"class in com.adaptris.core.json.streaming\" target=\"_new\"><code>JsonStreamingConfigBuilder</code></a>.",
      "inheritance" : [
        {
          "name" : "DefaultStreamingTransformationDriver",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-streaming/4.0.0B1-RELEASE/com/adaptris/core/json/streaming/DefaultStreamingTransformationDriver.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON Streaming",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-streaming",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/GenerateUniqueMetadataValueService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.GenerateUniqueMetadataValueService",
      "className" : "GenerateUniqueMetadataValueService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "generate-unique-metadata-value-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Generate a unique value and attach it as metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Generate a unique value and attach it as metadata\",\n                  tag=\"service,metadata\")\npublic class GenerateUniqueMetadataValueService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Generate a unique value and attach it as metadata\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">GenerateUniqueMetadataValueService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Service implementation that generates a unique item of metadata. Uses the configured IdGenerator instance to generate a unique value that is subsequently assigned to metadata. Note that this is not designed to replace the unique-id that is associated with an AdaptrisMessage, but is intended to be an additional way for you to generate unique ids that can be associated with a message.",
      "descriptionHtml" : "Service implementation that generates a unique item of metadata. \n<p> Uses the configured <a href=\"../../../util/IdGenerator.html\" title=\"interface in com.adaptris.util\" target=\"_new\"><code>IdGenerator</code></a> instance to generate a unique value that is subsequently assigned to metadata. Note that this is not designed to replace the unique-id that is associated with an AdaptrisMessage, but is intended to be an additional way for you to generate unique ids that can be associated with a message. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/JsonDocumentBuilder.html",
      "fullClassName" : "com.adaptris.core.elastic.JsonDocumentBuilder",
      "className" : "JsonDocumentBuilder",
      "packageName" : "com.adaptris.core.elastic",
      "componentType" : "object",
      "alias" : "elastic-json-document-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Build documents for elasticsearch from a existing JSON document",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Build documents for elasticsearch from a existing JSON document\",\n                  since=\"3.9.1\")\npublic class JsonDocumentBuilder\nextends JsonDocumentBuilderImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Build documents for elasticsearch from a existing JSON document\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">JsonDocumentBuilder</span>\nextends <a href=\"JsonDocumentBuilderImpl.html\" title=\"class in com.adaptris.core.elastic\" target=\"_new\">JsonDocumentBuilderImpl</a>",
      "description" : "Creates a JSON document for elastic search. The document that is created contains the following characteristics The message's uniqueID is used as the ID of the document. The message payload is assumed to be a JSON object (not an array) and becomes the document.. routing information if configured will be resolved via InterlokMessage.resolve(String).",
      "descriptionHtml" : "Creates a JSON document for elastic search. \n<p> The document that is created contains the following characteristics </p>\n<ul> \n <li>The message's uniqueID is used as the ID of the document.</li> \n <li>The message payload is assumed to be a JSON object (not an array) and becomes the document..</li> \n <li>routing information if configured will be resolved via <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#resolve(java.lang.String)\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.resolve(String)</code></a>.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "JsonDocumentBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/JsonDocumentBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/metadata/InlineMetadataProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.metadata.InlineMetadataProvider",
      "className" : "InlineMetadataProvider",
      "packageName" : "com.adaptris.tester.runtime.messages.metadata",
      "componentType" : "object",
      "alias" : "inline-metadata-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class InlineMetadataProvider\nextends MetadataProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InlineMetadataProvider</span>\nextends <a href=\"MetadataProvider.html\" title=\"class in com.adaptris.tester.runtime.messages.metadata\" target=\"_new\">MetadataProvider</a>",
      "inheritance" : [
        {
          "name" : "MetadataProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/metadata/MetadataProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-cosmosdb/4.0.0B1-RELEASE/com/adaptris/interlok/azure/cosmosdb/CosmosAuthorizationInterceptor.html",
      "fullClassName" : "com.adaptris.interlok.azure.cosmosdb.CosmosAuthorizationInterceptor",
      "className" : "CosmosAuthorizationInterceptor",
      "packageName" : "com.adaptris.interlok.azure.cosmosdb",
      "componentType" : "object",
      "alias" : "cosmosdb-authorization-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-cosmosdb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Builds an authorization header for Azure CosmosDB",
        "tag" : "azure,cosmosdb,cosmos,interceptor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Builds an authorization header for Azure CosmosDB\",\n                  since=\"3.9.2\",\n                  tag=\"azure,cosmosdb,cosmos,interceptor\")\npublic class CosmosAuthorizationInterceptor\nextends java.lang.Object\nimplements org.apache.http.HttpRequestInterceptor, com.adaptris.core.http.apache.request.RequestInterceptorBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Builds an authorization header for Azure CosmosDB\",\n                  since=\"3.9.2\",\n                  tag=\"azure,cosmosdb,cosmos,interceptor\")\npublic class <span class=\"typeNameLabel\">CosmosAuthorizationInterceptor</span>\nextends java.lang.Object\nimplements org.apache.http.HttpRequestInterceptor, com.adaptris.core.http.apache.request.RequestInterceptorBuilder",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/CosmosDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-cosmosdb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/BooleanColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.BooleanColumnTranslator",
      "className" : "BooleanColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-boolean-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BooleanColumnTranslator\nextends java.lang.Object\nimplements ColumnTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BooleanColumnTranslator</span>\nextends java.lang.Object\nimplements <a href=\"ColumnTranslator.html\" title=\"interface in com.adaptris.core.services.jdbc.types\" target=\"_new\">ColumnTranslator</a>",
      "description" : "Column Translator implementation for handling boolean types",
      "descriptionHtml" : "Column Translator implementation for handling boolean types",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-gcloud/4.0.0B1-RELEASE/com/adaptris/core/oauth/gcloud/GoogleCloudAccessTokenBuilder.html",
      "fullClassName" : "com.adaptris.core.oauth.gcloud.GoogleCloudAccessTokenBuilder",
      "className" : "GoogleCloudAccessTokenBuilder",
      "packageName" : "com.adaptris.core.oauth.gcloud",
      "componentType" : "object",
      "alias" : "google-cloud-access-token-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-gcloud.jar",
      "profile" : { },
      "annotationDetails" : "public class GoogleCloudAccessTokenBuilder\nextends java.lang.Object\nimplements AccessTokenBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">GoogleCloudAccessTokenBuilder</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/oauth/AccessTokenBuilder.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.oauth\" class=\"externalLink\" target=\"_new\">AccessTokenBuilder</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Google",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-gcloud",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/AutoConvertMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.AutoConvertMessageTranslator",
      "className" : "AutoConvertMessageTranslator",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "auto-convert-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AutoConvertMessageTranslator\nextends MessageTypeTranslatorImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AutoConvertMessageTranslator</span>\nextends <a href=\"MessageTypeTranslatorImp.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MessageTypeTranslatorImp</a>",
      "description" : "Perform a best guess routine on the JMSMessage when translating to an AdaptrisMessage. This handles the types TextMessage, BytesMessage, ObjectMessage by delegating to the correct MessageTypeTranslator implementation. The mapping from MapMessage to AdaptrisMessage is simplistic; the name value pairs (assumed to be String (or convertable to String)) are set as AdaptrisMessage metadata, the resulting payload is empty. The mapping from AdaptrisMessage to MapMessage results in all metadata being mapped as name value pairs in the MapMessage; the payload is ignored. If you have used this translator for your consumer we add a new meta-data item to the AdaptrisMessage} named \"adpmessagetype\". The value of this item will be one of \"Text\", \"Bytes\", \"Map\" or \"Object\". This allows you to set the following item; \"convert-back-to-consumed-type\" on the AutoConvertMessageTranslator for your JMS producer to \"true\" (default is false). In this case this translator will attempt to translate the produced message to the same message type we consumed. By default the metadata item \"adpmessagetype\" is removed before we convert the Adaptris message to a JMS message, so that the JMS message does not contain the key. You can override the removal of the key should you have multiple producers, by setting remove-original-message-type-key to \"true\". If this converter cannot find an appropriate translator then a very basic translation will be applied. This will NOT include any payload translation. You will also see a warning in the logs to notify you a basic translation has been applied. It is primarily a fallback translator to mitigate configuration errors.",
      "descriptionHtml" : "Perform a best guess routine on the JMSMessage when translating to an AdaptrisMessage. \n<p> This handles the types TextMessage, BytesMessage, ObjectMessage by delegating to the correct <a href=\"MessageTypeTranslator.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">MessageTypeTranslator</a> implementation. The mapping from MapMessage to AdaptrisMessage is simplistic; the name value pairs (assumed to be String (or convertable to String)) are set as AdaptrisMessage metadata, the resulting payload is empty. The mapping from AdaptrisMessage to MapMessage results in all metadata being mapped as name value pairs in the MapMessage; the payload is ignored. </p> \n<p> If you have used this translator for your consumer we add a new meta-data item to the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\">AdaptrisMessage</a>} named \"adpmessagetype\". The value of this item will be one of \"Text\", \"Bytes\", \"Map\" or \"Object\". This allows you to set the following item; \"convert-back-to-consumed-type\" on the AutoConvertMessageTranslator for your JMS producer to \"true\" (default is false). In this case this translator will attempt to translate the produced message to the same message type we consumed. </p> \n<p> By default the metadata item \"adpmessagetype\" is removed before we convert the Adaptris message to a JMS message, so that the JMS message does not contain the key. You can override the removal of the key should you have multiple producers, by setting remove-original-message-type-key to \"true\". </p> \n<p> If this converter cannot find an appropriate translator then a very basic translation will be applied. This will NOT include any payload translation. You will also see a warning in the logs to notify you a basic translation has been applied. </p> \n<p> It is primarily a fallback translator to mitigate configuration errors. </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/util/TruncateMetadata.html",
      "fullClassName" : "com.adaptris.core.util.TruncateMetadata",
      "className" : "TruncateMetadata",
      "packageName" : "com.adaptris.core.util",
      "componentType" : "object",
      "alias" : "message-logging-with-truncated-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Log unique-id & metadata (values are truncated) only",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Log unique-id & metadata (values are truncated) only\",\n                  since=\"3.8.4\")\npublic class TruncateMetadata\nextends MessageLoggerImpl\nimplements MetadataLogger",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Log unique-id &amp; metadata (values are truncated) only\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">TruncateMetadata</span>\nextends <a href=\"../MessageLoggerImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">MessageLoggerImpl</a>\nimplements <a href=\"../MetadataLogger.html\" title=\"interface in com.adaptris.core\" target=\"_new\">MetadataLogger</a>",
      "description" : "MessageLogger & MetadataLogger implementation that that logs unique-id and metadata but truncates metadata at the configured length.",
      "descriptionHtml" : "MessageLogger &amp; MetadataLogger implementation that that logs unique-id and metadata but truncates metadata at the configured length.",
      "inheritance" : [
        {
          "name" : "MessageLoggerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MessageLoggerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataDataOutputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MetadataDataOutputParameter",
      "className" : "MetadataDataOutputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "metadata-data-output-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataDataOutputParameter\nextends java.lang.Object\nimplements DataOutputParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataDataOutputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataOutputParameter</a>&lt;java.lang.String&gt;",
      "description" : "This DataOutputParameter is used when you want to write some data to the AdaptrisMessage metadata.",
      "descriptionHtml" : "This \n<code>DataOutputParameter</code> is used when you want to write some data to the \n<a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/SimpleExceptionReport.html",
      "fullClassName" : "com.adaptris.core.services.exception.SimpleExceptionReport",
      "className" : "SimpleExceptionReport",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "simple-exception-report",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleExceptionReport\nextends java.lang.Object\nimplements ExceptionReportGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleExceptionReport</span>\nextends java.lang.Object\nimplements <a href=\"ExceptionReportGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\">ExceptionReportGenerator</a>",
      "description" : "ExceptionReportGenerator implementation that inserts the entire stack trace of the exception as the configured element. Currently the only ExceptionReportGenerator implementation, this can be used as part of a ExceptionReportService to add the stack trace of the exception wrapped as an XML element of your choosing (as dictated by setElementName(String)). The data in the element itself is wrapped in a CDATA tag.",
      "descriptionHtml" : "<a href=\"ExceptionReportGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionReportGenerator</code></a> implementation that inserts the entire stack trace of the exception as the configured element. \n<p> Currently the only <a href=\"ExceptionReportGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionReportGenerator</code></a> implementation, this can be used as part of a <a href=\"ExceptionReportService.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionReportService</code></a> to add the stack trace of the exception wrapped as an XML element of your choosing (as dictated by <a href=\"#setElementName(java.lang.String)\" target=\"_new\"><code>setElementName(String)</code></a>). The data in the element itself is wrapped in a CDATA tag. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/util/DocumentBuilderFactoryBuilder.html",
      "fullClassName" : "com.adaptris.core.util.DocumentBuilderFactoryBuilder",
      "className" : "DocumentBuilderFactoryBuilder",
      "packageName" : "com.adaptris.core.util",
      "componentType" : "object",
      "alias" : "xml-document-builder-configuration",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DocumentBuilderFactoryBuilder\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DocumentBuilderFactoryBuilder</span>\nextends java.lang.Object",
      "description" : "Allows simple configuration of a DocumentBuilderFactory. For security reasons the default behaviour is to mitigate against XXE attacks and the like. It is still possible to explicitly configure whatever behaviour is required, but we no longer rely on the underlying DocumentBuilderFactory defaults. As a result the vanilla configuration for a DocumentBuilderFactory that is created by this class will have the following defaults: expandEntityReferences will be set to false if not otherwise specified The feature will be automatically set to true if not otherwise specified Note that the static convenience methods have also been modified to reflect this behaviour. There are the two new newLenientInstance() and newLenientInstanceIfNull(DocumentBuilderFactoryBuilder) methods if the more secure default is not appropriate.",
      "descriptionHtml" : "Allows simple configuration of a \n<code>DocumentBuilderFactory</code>. \n<p> For security reasons the default behaviour is to mitigate against XXE attacks and the like. It is still possible to explicitly configure whatever behaviour is required, but we no longer rely on the underlying <code>DocumentBuilderFactory</code> defaults. As a result the vanilla configuration for a <code>DocumentBuilderFactory</code> that is created by this class will have the following defaults: </p>\n<ul> \n <li>expandEntityReferences will be set to false if not otherwise specified</li> \n <li>The feature will be automatically set to true if not otherwise specified</li> \n</ul> \n<p></p> \n<p> Note that the static convenience methods have also been modified to reflect this behaviour. There are the two new <a href=\"#newLenientInstance()\" target=\"_new\"><code>newLenientInstance()</code></a> and <a href=\"#newLenientInstanceIfNull(com.adaptris.core.util.DocumentBuilderFactoryBuilder)\" target=\"_new\"><code>newLenientInstanceIfNull(DocumentBuilderFactoryBuilder)</code></a> methods if the more secure default is not appropriate. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.StubAdapterStartUpEvent",
      "className" : "StubAdapterStartUpEvent",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "object",
      "alias" : "stub-adapter-startup-event",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html",
      "fullClassName" : "com.adaptris.core.jms.JmsConnection",
      "className" : "JmsConnection",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "connection",
      "alias" : "jms-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a JMS 1.1 broker",
        "tag" : "connections,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a JMS 1.1 broker\",\n                  tag=\"connections,jms\")\npublic class JmsConnection\nextends AllowsRetriesConnection\nimplements JmsConnectionConfig, ConnectionComparator<JmsConnection>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a JMS 1.1 broker\",\n                  tag=\"connections,jms\")\npublic class <span class=\"typeNameLabel\">JmsConnection</span>\nextends <a href=\"../AllowsRetriesConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">AllowsRetriesConnection</a>\nimplements <a href=\"JmsConnectionConfig.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">JmsConnectionConfig</a>, <a href=\"ConnectionComparator.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">ConnectionComparator</a>&lt;<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection</a>&gt;",
      "description" : "JMS 1.1 standard JMS connection. In the adapter configuration file this class is aliased as jms-connection which is the preferred alternative to the fully qualified classname when building your configuration.",
      "descriptionHtml" : "JMS 1.1 standard JMS connection. \n<p> In the adapter configuration file this class is aliased as <b>jms-connection</b> which is the preferred alternative to the fully qualified classname when building your configuration. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/system/AddMetaDataValue.html",
      "fullClassName" : "com.adaptris.core.services.system.AddMetaDataValue",
      "className" : "AddMetaDataValue",
      "packageName" : "com.adaptris.core.services.system",
      "componentType" : "object",
      "alias" : "system-command-add-metadata-value",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AddMetaDataValue\nextends java.lang.Object\nimplements CommandOutputCapture",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AddMetaDataValue</span>\nextends java.lang.Object\nimplements <a href=\"CommandOutputCapture.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\">CommandOutputCapture</a>",
      "description" : "Implementation of CommandOutputCapture that saves the output of the system command to a metadata value",
      "descriptionHtml" : "Implementation of \n<a href=\"CommandOutputCapture.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\"><code>CommandOutputCapture</code></a> that saves the output of the system command to a metadata value",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-onedrive/4.0.0B1-RELEASE/com/adaptris/interlok/azure/onedrive/DocumentTransformService.html",
      "fullClassName" : "com.adaptris.interlok.azure.onedrive.DocumentTransformService",
      "className" : "DocumentTransformService",
      "packageName" : "com.adaptris.interlok.azure.onedrive",
      "componentType" : "service",
      "alias" : "azure-one-drive-document-transform-service",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-onedrive.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Retrieve the contents of an item in a specific format. Not all files can be converted into all formats.",
        "tag" : "file,o365,microsoft,office,365,one drive,transform"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Retrieve the contents of an item in a specific format. Not all files can be converted into all formats.\",\n                  tag=\"file,o365,microsoft,office,365,one drive,transform\")\npublic class DocumentTransformService\nextends DocumentDownloadService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Retrieve the contents of an item in a specific format. Not all files can be converted into all formats.\",\n                  tag=\"file,o365,microsoft,office,365,one drive,transform\")\npublic class <span class=\"typeNameLabel\">DocumentTransformService</span>\nextends <a href=\"DocumentDownloadService.html\" title=\"class in com.adaptris.interlok.azure.onedrive\" target=\"_new\">DocumentDownloadService</a>",
      "description" : "Retrieve the contents of an item in a specific format. Not all files can be converted into all formats. Supported formats and their original document type: glb Converts the item into GLB format from: cool, fbx, obj, ply, stl, 3mf html Converts the item into HTML format from: eml, md, msg jpg Converts the item into JPG format from: 3g2, 3gp, 3gp2, 3gpp, 3mf, ai, arw, asf, avi, bas, bash, bat, bmp, c, cbl, cmd, cool, cpp, cr2, crw, cs, css, csv, cur, dcm, dcm30, dic, dicm, dicom, dng, doc, docx, dwg, eml, epi, eps, epsf, epsi, epub, erf, fbx, fppx, gif, glb, h, hcp, heic, heif, htm, html, ico, icon, java, jfif, jpeg, jpg, js, json, key, log, m2ts, m4a, m4v, markdown, md, mef, mov, movie, mp3, mp4, mp4v, mrw, msg, mts, nef, nrw, numbers, obj, odp, odt, ogg, orf, pages, pano, pdf, pef, php, pict, pl, ply, png, pot, potm, potx, pps, ppsx, ppsxm, ppt, pptm, pptx, ps, ps1, psb, psd, py, raw, rb, rtf, rw1, rw2, sh, sketch, sql, sr2, stl, tif, tiff, ts, txt, vb, webm, wma, wmv, xaml, xbm, xcf, xd, xml, xpm, yaml, yml pdf Converts the item into PDF format from: doc, docx, epub, eml, htm, html, md, msg, odp, ods, odt, pps, ppsx, ppt, pptx, rtf, tif, tiff, xls, xlsm, xlsx",
      "descriptionHtml" : "Retrieve the contents of an item in a specific format. Not all files can be converted into all formats. Supported formats and their original document type: glb Converts the item into GLB format from: cool, fbx, obj, ply, stl, 3mf html Converts the item into HTML format from: eml, md, msg jpg Converts the item into JPG format from: 3g2, 3gp, 3gp2, 3gpp, 3mf, ai, arw, asf, avi, bas, bash, bat, bmp, c, cbl, cmd, cool, cpp, cr2, crw, cs, css, csv, cur, dcm, dcm30, dic, dicm, dicom, dng, doc, docx, dwg, eml, epi, eps, epsf, epsi, epub, erf, fbx, fppx, gif, glb, h, hcp, heic, heif, htm, html, ico, icon, java, jfif, jpeg, jpg, js, json, key, log, m2ts, m4a, m4v, markdown, md, mef, mov, movie, mp3, mp4, mp4v, mrw, msg, mts, nef, nrw, numbers, obj, odp, odt, ogg, orf, pages, pano, pdf, pef, php, pict, pl, ply, png, pot, potm, potx, pps, ppsx, ppsxm, ppt, pptm, pptx, ps, ps1, psb, psd, py, raw, rb, rtf, rw1, rw2, sh, sketch, sql, sr2, stl, tif, tiff, ts, txt, vb, webm, wma, wmv, xaml, xbm, xcf, xd, xml, xpm, yaml, yml pdf Converts the item into PDF format from: doc, docx, epub, eml, htm, html, md, msg, odp, ods, odt, pps, ppsx, ppt, pptx, rtf, tif, tiff, xls, xlsm, xlsx",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "DocumentDownloadService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-onedrive/4.0.0B1-RELEASE/com/adaptris/interlok/azure/onedrive/DocumentDownloadService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/OneDrive",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-onedrive",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/system/IgnoreOutput.html",
      "fullClassName" : "com.adaptris.core.services.system.IgnoreOutput",
      "className" : "IgnoreOutput",
      "packageName" : "com.adaptris.core.services.system",
      "componentType" : "object",
      "alias" : "system-command-ignore-output",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class IgnoreOutput\nextends java.lang.Object\nimplements CommandOutputCapture",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IgnoreOutput</span>\nextends java.lang.Object\nimplements <a href=\"CommandOutputCapture.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\">CommandOutputCapture</a>",
      "description" : "Null implementation of CommandOutputCapture",
      "descriptionHtml" : "Null implementation of \n<a href=\"CommandOutputCapture.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\"><code>CommandOutputCapture</code></a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataValueEscapeSingleQuote.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataValueEscapeSingleQuote",
      "className" : "MetadataValueEscapeSingleQuote",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-value-escape-single-quote",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.1",
        "summary" : "Changes matching metadata single quote into escaped single quote",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Changes matching metadata single quote into escaped single quote\",\n                  tag=\"service,metadata\",\n                  since=\"3.10.1\")\npublic class MetadataValueEscapeSingleQuote\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Changes matching metadata single quote into escaped single quote\",\n                  tag=\"service,metadata\",\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">MetadataValueEscapeSingleQuote</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "Takes a metadata value and escapes single quote. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will be changed to escaped single quote",
      "descriptionHtml" : "Takes a metadata value and escapes single quote. \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will be changed to escaped single quote </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/core/jms/tibco/BasicTibcoEmsImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.tibco.BasicTibcoEmsImplementation",
      "className" : "BasicTibcoEmsImplementation",
      "packageName" : "com.adaptris.core.jms.tibco",
      "componentType" : "object",
      "alias" : "basic-tibco-ems-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-tibco.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicTibcoEmsImplementation\nextends UrlVendorImplementation\nimplements LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicTibcoEmsImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">UrlVendorImplementation</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "BasicTibcoEmsImplementation",
      "descriptionHtml" : "<p> <code>BasicTibcoEmsImplementation</code> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Tibco",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-tibco",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertLinePayloadEqualsFile.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertLinePayloadEqualsFile",
      "className" : "AssertLinePayloadEqualsFile",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-line-payload-equals-file",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertLinePayloadEqualsFile\nextends AssertPayloadEqualsFile",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertLinePayloadEqualsFile</span>\nextends <a href=\"AssertPayloadEqualsFile.html\" title=\"class in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">AssertPayloadEqualsFile</a>",
      "description" : "Checks if TestMessage.getPayload() equals lines of AssertPayloadEqualsFile.getFile() Assertions are used to validate the returned message is expected.",
      "descriptionHtml" : "Checks if \n<a href=\"../TestMessage.html#getPayload()\" target=\"_new\"><code>TestMessage.getPayload()</code></a> equals lines of \n<a href=\"AssertPayloadEqualsFile.html#getFile()\" target=\"_new\"><code>AssertPayloadEqualsFile.getFile()</code></a> \n<p>Assertions are used to validate the returned message is expected.</p>",
      "inheritance" : [
        {
          "name" : "AssertPayloadEqualsFile",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertPayloadEqualsFile.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/Keepalive.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.Keepalive",
      "className" : "Keepalive",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-keepalive",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class Keepalive\nextends java.lang.Object\nimplements Parameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Keepalive</span>\nextends java.lang.Object\nimplements <a href=\"Parameter.html\" title=\"interface in com.adaptris.core.jms.solace.parameters\" target=\"_new\">Parameter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoRetries.html",
      "fullClassName" : "com.adaptris.core.NoRetries",
      "className" : "NoRetries",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "no-retries",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "The default NO-OP failed message retrier implementation",
        "tag" : "error-handling,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"The default NO-OP failed message retrier implementation\",\n                  tag=\"error-handling,base\")\npublic class NoRetries\nextends java.lang.Object\nimplements FailedMessageRetrier",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"The default NO-OP failed message retrier implementation\",\n                  tag=\"error-handling,base\")\npublic class <span class=\"typeNameLabel\">NoRetries</span>\nextends java.lang.Object\nimplements <a href=\"FailedMessageRetrier.html\" title=\"interface in com.adaptris.core\" target=\"_new\">FailedMessageRetrier</a>",
      "description" : "This is a dummy for marshalling purposes.",
      "descriptionHtml" : "This is a dummy for marshalling purposes.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertMetadataEquals.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertMetadataEquals",
      "className" : "AssertMetadataEquals",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-metadata-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertMetadataEquals\nextends MetadataAssertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertMetadataEquals</span>\nextends <a href=\"MetadataAssertion.html\" title=\"class in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">MetadataAssertion</a>",
      "description" : "Checks if MetadataAssertion.getMessageHeaders() equals TestMessage.getMessageHeaders() using Map.equals(Object).",
      "descriptionHtml" : "Checks if \n<a href=\"MetadataAssertion.html#getMessageHeaders()\" target=\"_new\"><code>MetadataAssertion.getMessageHeaders()</code></a> equals \n<a href=\"../TestMessage.html#getMessageHeaders()\" target=\"_new\"><code>TestMessage.getMessageHeaders()</code></a> using \n<code>Map.equals(Object)</code>.",
      "inheritance" : [
        {
          "name" : "MetadataAssertion",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/MetadataAssertion.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MillisecondsValueConverter.html",
      "fullClassName" : "com.adaptris.core.mongodb.MillisecondsValueConverter",
      "className" : "MillisecondsValueConverter",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "object",
      "alias" : "mongodb-milliseconds-value-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : { },
      "annotationDetails" : "public class MillisecondsValueConverter\nextends ValueConverter<java.lang.Long>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MillisecondsValueConverter</span>\nextends <a href=\"ValueConverter.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">ValueConverter</a>&lt;java.lang.Long&gt;",
      "inheritance" : [
        {
          "name" : "ValueConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/ValueConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheEntryEvaluator.html",
      "fullClassName" : "com.adaptris.core.services.cache.CacheEntryEvaluator",
      "className" : "CacheEntryEvaluator",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "object",
      "alias" : "cache-entry-evaluator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CacheEntryEvaluator\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CacheEntryEvaluator</span>\nextends java.lang.Object",
      "description" : "Evaluates cache keys and values for the various cache services.",
      "descriptionHtml" : "Evaluates cache keys and values for the various cache services.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/rfc5849/ApacheRfc5849Authenticator.html",
      "fullClassName" : "com.adaptris.core.oauth.rfc5849.ApacheRfc5849Authenticator",
      "className" : "ApacheRfc5849Authenticator",
      "packageName" : "com.adaptris.core.oauth.rfc5849",
      "componentType" : "object",
      "alias" : "oauth-apache-http-rfc5849-authenticator",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-generic.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Build an OAUTH Authorization header based on RFC5849",
        "tag" : "oauth,oauthv1,http,https"
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.8.4\",\n                  summary=\"Build an OAUTH Authorization header based on RFC5849\",\n                  tag=\"oauth,oauthv1,http,https\")\npublic class ApacheRfc5849Authenticator\nextends java.lang.Object\nimplements ApacheRequestAuthenticator",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.8.4\",\n                  summary=\"Build an OAUTH Authorization header based on RFC5849\",\n                  tag=\"oauth,oauthv1,http,https\")\npublic class <span class=\"typeNameLabel\">ApacheRfc5849Authenticator</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ApacheRequestAuthenticator.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.apache\" class=\"externalLink\" target=\"_new\">ApacheRequestAuthenticator</a>",
      "description" : "Generate an Authorization Header based on RFC5849 for use with HttpRequestService and ApacheHttpProducer. This has been verified to work with NetSuite OAUTH 1.0 (using HMAC-SHA1), but not any other OAUTH 1.0 providers. It is designed to generate an Authorization header based on each request that will be made, rather than retrieving a Bearer token or similar for re-use. It is implemented as an ApacheRequestAuthenticator implementation for you to add as the HttpRequestServiceImpl.setAuthenticator(HttpAuthenticator) or similar. Note that since this will not have access to payload; this particular implementation does not support the using the payload as part of the signature base string when the Content-Type is application/x-www-form-urlencoded. If that is the case then use a GenerateRfc5849Header with a metadata filter to pre-build an authorisation header.",
      "descriptionHtml" : "Generate an Authorization Header based on \n<a href=\"https://tools.ietf.org/html/rfc5849\" target=\"_new\">RFC5849</a> for use with \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/HttpRequestService.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.apache\" class=\"externalLink\" target=\"_new\"><code>HttpRequestService</code></a> and \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ApacheHttpProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.apache\" class=\"externalLink\" target=\"_new\"><code>ApacheHttpProducer</code></a>. \n<p> This has been verified to work with NetSuite OAUTH 1.0 (using HMAC-SHA1), but not any other OAUTH 1.0 providers. </p> \n<p> It is designed to generate an Authorization header based on each request that will be made, rather than retrieving a <code>Bearer token</code> or similar for re-use. It is implemented as an <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ApacheRequestAuthenticator.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.apache\" class=\"externalLink\" target=\"_new\"><code>ApacheRequestAuthenticator</code></a> implementation for you to add as the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/HttpRequestServiceImpl.html?is-external=true#setAuthenticator(com.adaptris.core.http.auth.HttpAuthenticator)\" title=\"class or interface in com.adaptris.core.http.apache\" class=\"externalLink\" target=\"_new\"><code>HttpRequestServiceImpl.setAuthenticator(HttpAuthenticator)</code></a> or similar. </p> \n<p> Note that since this will not have access to payload; this particular implementation does not support the using the payload as part of the signature base string when the <code>Content-Type</code> is <code>application/x-www-form-urlencoded</code>. If that is the case then use a <a href=\"GenerateRfc5849Header.html\" title=\"class in com.adaptris.core.oauth.rfc5849\" target=\"_new\"><code>GenerateRfc5849Header</code></a> with a metadata filter to pre-build an authorisation header. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Generic",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-generic",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/StringToHexService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.StringToHexService",
      "className" : "StringToHexService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "string-to-hex-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Turn a metadata value into a hex string using the specified character encoding",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Turn a metadata value into a hex string using the specified character encoding\",\n                  tag=\"service,metadata\")\npublic class StringToHexService\nextends HexToStringService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Turn a metadata value into a hex string using the specified character encoding\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">StringToHexService</span>\nextends <a href=\"HexToStringService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">HexToStringService</a>",
      "description" : "This class will encode a metadata value into its equivalent hex encoded metadata value(s) using the specified character encoding",
      "descriptionHtml" : "This class will encode a metadata value into its equivalent hex encoded metadata value(s) using the specified character encoding",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        },
        {
          "name" : "HexToStringService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/HexToStringService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltObjectVariables.html",
      "fullClassName" : "com.adaptris.core.json.jslt.JsltObjectVariables",
      "className" : "JsltObjectVariables",
      "packageName" : "com.adaptris.core.json.jslt",
      "componentType" : "object",
      "alias" : "jslt-object-variable",
      "deprecated" : false,
      "jarFileName" : "interlok-jslt.jar",
      "profile" : { },
      "annotationDetails" : "public class JsltObjectVariables\nextends java.lang.Object\nimplements JsltVariableBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JsltObjectVariables</span>\nextends java.lang.Object\nimplements <a href=\"JsltVariableBuilder.html\" title=\"interface in com.adaptris.core.json.jslt\" target=\"_new\">JsltVariableBuilder</a>",
      "description" : "Builds a map of variables for JSLT from object metadata. This allows you to use object metadata that is already of the type JsonNode; possibly via a previous execution of JsltMetadataService with a JsltQueryToObjectMetadata. If the key exists, but is not a JsonNode then an exception is likely.",
      "descriptionHtml" : "Builds a map of variables for JSLT from object metadata. \n<p> This allows you to use object metadata that is already of the type <code>JsonNode</code>; possibly via a previous execution of <a href=\"JsltMetadataService.html\" title=\"class in com.adaptris.core.json.jslt\" target=\"_new\"><code>JsltMetadataService</code></a> with a <a href=\"JsltQueryToObjectMetadata.html\" title=\"class in com.adaptris.core.json.jslt\" target=\"_new\"><code>JsltQueryToObjectMetadata</code></a>. If the key exists, but is not a JsonNode then an exception is likely. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSLT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jslt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/CassandraQueryService.html",
      "fullClassName" : "com.adaptris.core.cassandra.CassandraQueryService",
      "className" : "CassandraQueryService",
      "packageName" : "com.adaptris.core.cassandra",
      "componentType" : "service",
      "alias" : "cassandra-query-service",
      "deprecated" : false,
      "jarFileName" : "interlok-cassandra.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.cassandra.CassandraConnection"
        ],
        "since" : "",
        "summary" : "Execute CQL to query data from the databases tables",
        "tag" : "cassandra"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute CQL to query data from the databases tables\",\n                  recommended=CassandraConnection.class,\n                  tag=\"cassandra\")\npublic class CassandraQueryService\nextends CassandraServiceImp\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute CQL to query data from the databases tables\",\n                  recommended=<a href=\"CassandraConnection.html\" title=\"class in com.adaptris.core.cassandra\" target=\"_new\">CassandraConnection.class</a>,\n                  tag=\"cassandra\")\npublic class <span class=\"typeNameLabel\">CassandraQueryService</span>\nextends <a href=\"CassandraServiceImp.html\" title=\"class in com.adaptris.core.cassandra\" target=\"_new\">CassandraServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Built for Cassandra version 3.0+ This service allows us to fire CQL (Cassandra Query Language) queries at a Cassandra cluster, the results of which can be stored into the AdaptrisMessage. Specify the source of the CQL statement by configuring a DataInputParameter. Note that the CQL statement can contain parameters in one of 2 forms; the standard SQL form, using the character \"?\", or you can use named parameters. If you configure any parameters, using the standard SQL form, then you will need to configure a SequentialParameterApplicator, or should you wish to name your parameters for ease of configuration, especially when statements contain many parameters, then you will need to configure a NamedParameterApplicator. To configure the values of the parameters configure a StatementParameterList. You may also configure a StatementPrimer. Statement Primers are used to prepare a CQL statement before it is executed. Especially useful may be the CachedStatementPrimer. The default value for this service is the NullStatementPrimer. Finally the results of the query can be stored in the AdaptrisMessage, the format and location of which can be configured using ResultSetTranslator.",
      "descriptionHtml" : "<p> Built for Cassandra version 3.0+ </p> \n<p> This service allows us to fire CQL (Cassandra Query Language) queries at a Cassandra cluster, the results of which can be stored into the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a>. </p> \n<p> Specify the source of the CQL statement by configuring a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataInputParameter</code></a>. Note that the CQL statement can contain parameters in one of 2 forms; the standard SQL form, using the character \"?\", or you can use named parameters. <br> If you configure any parameters, using the standard SQL form, then you will need to configure a <a href=\"params/SequentialParameterApplicator.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>SequentialParameterApplicator</code></a>, or should you wish to name your parameters for ease of configuration, especially when statements contain many parameters, then you will need to configure a <a href=\"params/NamedParameterApplicator.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>NamedParameterApplicator</code></a>. </p> \n<p> To configure the values of the parameters configure a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterList.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>StatementParameterList</code></a>. </p> \n<p> You may also configure a <a href=\"params/StatementPrimer.html\" title=\"interface in com.adaptris.core.cassandra.params\" target=\"_new\"><code>StatementPrimer</code></a>. Statement Primers are used to prepare a CQL statement before it is executed. <br> Especially useful may be the <a href=\"params/CachedStatementPrimer.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>CachedStatementPrimer</code></a>. The default value for this service is the <a href=\"params/NullStatementPrimer.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>NullStatementPrimer</code></a>. </p> \n<p> Finally the results of the query can be stored in the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a>, the format and location of which can be configured using <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>ResultSetTranslator</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CassandraServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/CassandraServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Cassandra",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-cassandra",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/CheckExists.html",
      "fullClassName" : "com.adaptris.jclouds.blobstore.CheckExists",
      "className" : "CheckExists",
      "packageName" : "com.adaptris.jclouds.blobstore",
      "componentType" : "object",
      "alias" : "jclouds-blobstore-check-file-exists",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-blobstore.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Check a BLOB exists",
        "tag" : "jclouds"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Check a BLOB exists\",\n                  tag=\"jclouds\",\n                  since=\"3.9.2\")\npublic class CheckExists\nextends OperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Check a BLOB exists\",\n                  tag=\"jclouds\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">CheckExists</span>\nextends <a href=\"OperationImpl.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\">OperationImpl</a>",
      "description" : "Check an object exists exception otherwise.",
      "descriptionHtml" : "Check an object exists exception otherwise.",
      "inheritance" : [
        {
          "name" : "ContainerOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/ContainerOperation.html"
        },
        {
          "name" : "OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/OperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Blobstore",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-blobstore",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileInputMessageWrapper.html",
      "fullClassName" : "com.adaptris.core.common.FileInputMessageWrapper",
      "className" : "FileInputMessageWrapper",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "file-input-message-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "MessageWrapper implementation that wraps as an InputStream",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MessageWrapper implementation that wraps as an InputStream\",\n                  since=\"3.9.0\")\npublic class FileInputMessageWrapper\nextends FileParameter\nimplements MessageWrapper<java.io.InputStream>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MessageWrapper implementation that wraps as an InputStream\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">FileInputMessageWrapper</span>\nextends <a href=\"FileParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">FileParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\">MessageWrapper</a>&lt;java.io.InputStream&gt;",
      "description" : "MessageWrapper implementation that wraps an external file as an InputStream.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>MessageWrapper</code></a> implementation that wraps an external file as an \n<code>InputStream</code>.",
      "inheritance" : [
        {
          "name" : "FileParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MessageThresholdNotification.html",
      "fullClassName" : "com.adaptris.core.interceptor.MessageThresholdNotification",
      "className" : "MessageThresholdNotification",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "message-threshold-notification",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that issues a JMX notification if a message count threshold is exceeded",
        "tag" : "interceptor,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that issues a JMX notification if a message count threshold is exceeded\",\n                  tag=\"interceptor,jmx\")\npublic class MessageThresholdNotification\nextends NotifyingInterceptorByCount",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that issues a JMX notification if a message count threshold is exceeded\",\n                  tag=\"interceptor,jmx\")\npublic class <span class=\"typeNameLabel\">MessageThresholdNotification</span>\nextends <a href=\"NotifyingInterceptorByCount.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">NotifyingInterceptorByCount</a>",
      "description" : "Interceptor that emits a Notification if the number of messages has exceeded the specified threshold in the current timeslice. The Notification.setUserData(Object) part of the notification is a Properties object containing information about the various counts that exceeded the interceptors threshold. Note that notifications are emitted whenever a message is deemed to have exceeded the threshold; so you will get multiple notifications whenever a message causes the threshold to be exceeded until the next time-slice is activated.",
      "descriptionHtml" : "Interceptor that emits a \n<code>Notification</code> if the number of messages has exceeded the specified threshold in the current timeslice. \n<p> The <code>Notification.setUserData(Object)</code> part of the notification is a <code>Properties</code> object containing information about the various counts that exceeded the interceptors threshold. Note that notifications are emitted whenever a message is deemed to have exceeded the threshold; so you will get multiple notifications whenever a message causes the threshold to be exceeded until the next time-slice is activated. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        },
        {
          "name" : "NotifyingInterceptor",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/NotifyingInterceptor.html"
        },
        {
          "name" : "NotifyingInterceptorByCount",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/NotifyingInterceptorByCount.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertMetadataKeyNonExistent.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertMetadataKeyNonExistent",
      "className" : "AssertMetadataKeyNonExistent",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-metadata-key-does-not-exist",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertMetadataKeyNonExistent\nextends AssertMetadataKeyImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertMetadataKeyNonExistent</span>\nextends <a href=\"AssertMetadataKeyImpl.html\" title=\"class in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">AssertMetadataKeyImpl</a>",
      "description" : "Checks that a metadata key does not exist in TestMessage.getMessageHeaders()",
      "descriptionHtml" : "Checks that a metadata key does not exist in \n<a href=\"../TestMessage.html#getMessageHeaders()\" target=\"_new\"><code>TestMessage.getMessageHeaders()</code></a>",
      "inheritance" : [
        {
          "name" : "AssertMetadataKeyImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertMetadataKeyImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/FlattenJsonOutputSettings.html",
      "fullClassName" : "com.adaptris.core.mongodb.FlattenJsonOutputSettings",
      "className" : "FlattenJsonOutputSettings",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "object",
      "alias" : "mongodb-flatten-json-output-settings",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : { },
      "annotationDetails" : "public class FlattenJsonOutputSettings\nextends java.lang.Object\nimplements JsonOutputSettings",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FlattenJsonOutputSettings</span>\nextends java.lang.Object\nimplements <a href=\"JsonOutputSettings.html\" title=\"interface in com.adaptris.core.mongodb\" target=\"_new\">JsonOutputSettings</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/xml/tagnames/DefaultXMLTagnames.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.xml.tagnames.DefaultXMLTagnames",
      "className" : "DefaultXMLTagnames",
      "packageName" : "com.adaptris.adapter.edistream.parser.xml.tagnames",
      "componentType" : "object",
      "alias" : "edi-default-xml-tag-names",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultXMLTagnames\nextends java.lang.Object\nimplements IXMLTagnames",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultXMLTagnames</span>\nextends java.lang.Object\nimplements <a href=\"IXMLTagnames.html\" title=\"interface in com.adaptris.adapter.edistream.parser.xml.tagnames\" target=\"_new\">IXMLTagnames</a>",
      "description" : "Provides a default implementation of the XMLTagNames interface. The given Strings are the values that are currently used in our gxml files.",
      "descriptionHtml" : "Provides a default implementation of the XMLTagNames interface. The given Strings are the values that are currently used in our gxml files.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/HttpConnection.html",
      "fullClassName" : "com.adaptris.core.http.jetty.HttpConnection",
      "className" : "HttpConnection",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "connection",
      "alias" : "jetty-http-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection that creates its own jetty engine instance and listens on the specified port",
        "tag" : "connections,http,jetty"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection that creates its own jetty engine instance and listens on the specified port\",\n                  tag=\"connections,http,jetty\")\npublic class HttpConnection\nextends JettyConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection that creates its own jetty engine instance and listens on the specified port\",\n                  tag=\"connections,http,jetty\")\npublic class <span class=\"typeNameLabel\">HttpConnection</span>\nextends <a href=\"JettyConnection.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">JettyConnection</a>",
      "description" : "Concrete implementation of JettyConnection that allows HTTP traffic. By default all fields are left as null. This will cause Jetty to use its internal defaults. Consult the Jetty Documentation for information on the behaviour and configuration required. The key from the server-connector-properties element should match the name of the underlying ServerConnector setter.  \n   <server-connector-properties>\n     <key-value-pair>\n        <key>ReuseAddress</key>\n        <value>true</value>\n     </key-value-pair>\n   </server-connector-properties>\n \n will invoke ServerConnector#setReuseAddress(boolean), setting the ReuseAddress property to true. Note that no validation of the various properties is performed and will be passed as-is to the AbstractConnector with an attempt to transform into the correct type. Invalid combinations may result in undefined behaviour. Similarly additional HttpConfiguration properties can be configured via the http-connection element.",
      "descriptionHtml" : "Concrete implementation of JettyConnection that allows HTTP traffic. \n<p> By default all fields are left as null. This will cause Jetty to use its internal defaults. Consult the Jetty Documentation for information on the behaviour and configuration required. </p> \n<p> The key from the <code>server-connector-properties</code> element should match the name of the underlying <code>ServerConnector</code> setter. </p>\n<pre> <code>\n   &lt;server-connector-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;ReuseAddress&lt;/key&gt;\n        &lt;value&gt;true&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/server-connector-properties&gt;\n </code>\n </pre> will invoke \n<code>ServerConnector#setReuseAddress(boolean)</code>, setting the ReuseAddress property to true. Note that no validation of the various properties is performed and will be passed as-is to the \n<code>AbstractConnector</code> with an attempt to transform into the correct type. Invalid combinations may result in undefined behaviour. Similarly additional \n<code>HttpConfiguration</code> properties can be configured via the \n<code>http-connection</code> element. \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "JettyConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MultiPayloadByteArrayInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MultiPayloadByteArrayInputParameter",
      "className" : "MultiPayloadByteArrayInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "multi-payload-byte-array-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MultiPayloadByteArrayInputParameter\nextends java.lang.Object\nimplements DataInputParameter<byte[]>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultiPayloadByteArrayInputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;byte[]&gt;",
      "description" : "This MultiPayloadDataInputParameter is used when you want to source data from the MultiPayloadAdaptrisMessage payload.",
      "descriptionHtml" : "This \n<code>MultiPayloadDataInputParameter</code> is used when you want to source data from the \n<a href=\"../MultiPayloadAdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>MultiPayloadAdaptrisMessage</code></a> payload.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.DetectThreadMockMessageProducer",
      "className" : "DetectThreadMockMessageProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NoParameterLogging.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.NoParameterLogging",
      "className" : "NoParameterLogging",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-no-parameter-logging",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Never log parameters for JDBC Statement",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Never log parameters for JDBC Statement\",\n                  since=\"3.8.4\")\npublic class NoParameterLogging\nextends java.lang.Object\nimplements ParameterLogger",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Never log parameters for JDBC Statement\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">NoParameterLogging</span>\nextends java.lang.Object\nimplements <a href=\"ParameterLogger.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\">ParameterLogger</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamJsonMarshaller.html",
      "fullClassName" : "com.adaptris.core.XStreamJsonMarshaller",
      "className" : "XStreamJsonMarshaller",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "xstream-json-marshaller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XStreamJsonMarshaller\nextends XStreamMarshallerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XStreamJsonMarshaller</span>\nextends <a href=\"XStreamMarshallerImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">XStreamMarshallerImpl</a>",
      "description" : "JSON implementation of AdaptrisMarshaller using XStream. This implementation is not intended to be used for marshalling adapter configuration (although it might be possible), but is intended for use where JSON is the desired data format used for transfer between systems. It uses JettisonMappedXmlDriver which allows conversion to and from java objects. However, restrictions will apply as detailed in the XStream JSON Tutorial",
      "descriptionHtml" : "JSON implementation of \n<a href=\"AdaptrisMarshaller.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMarshaller</code></a> using XStream. \n<p> This implementation is not intended to be used for marshalling adapter configuration (although it might be possible), but is intended for use where JSON is the desired data format used for transfer between systems. It uses <code>JettisonMappedXmlDriver</code> which allows conversion to and from java objects. However, restrictions will apply as detailed in <a href=\"http://xstream.codehaus.org/json-tutorial.html\" target=\"_new\">the XStream JSON Tutorial</a> </p>",
      "inheritance" : [
        {
          "name" : "AbstractMarshaller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AbstractMarshaller.html"
        },
        {
          "name" : "XStreamMarshallerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshallerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileInputStreamDataInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.FileInputStreamDataInputParameter",
      "className" : "FileInputStreamDataInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "file-input-stream-data-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FileInputStreamDataInputParameter\nextends FileParameter\nimplements DataInputParameter<java.io.InputStream>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FileInputStreamDataInputParameter</span>\nextends <a href=\"FileParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">FileParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.io.InputStream&gt;",
      "description" : "DataInputParameter implementation that returns an input stream to a file.",
      "descriptionHtml" : "<code>DataInputParameter</code> implementation that returns an input stream to a file.",
      "inheritance" : [
        {
          "name" : "FileParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockStandaloneConsumer",
      "className" : "MockStandaloneConsumer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv-json/4.0.0B1-RELEASE/com/adaptris/core/transform/csvjson/JsonArrayToCSV.html",
      "fullClassName" : "com.adaptris.core.transform.csvjson.JsonArrayToCSV",
      "className" : "JsonArrayToCSV",
      "packageName" : "com.adaptris.core.transform.csvjson",
      "componentType" : "service",
      "alias" : "json-to-csv",
      "deprecated" : false,
      "jarFileName" : "interlok-csv-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transfrom a JSON Array/JSON Lines document into a CSV",
        "tag" : "service,csv,json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transfrom a JSON Array/JSON Lines document into a CSV\",\n                  tag=\"service,csv,json\")\npublic class JsonArrayToCSV\nextends CSVConverter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transfrom a JSON Array/JSON Lines document into a CSV\",\n                  tag=\"service,csv,json\")\npublic class <span class=\"typeNameLabel\">JsonArrayToCSV</span>\nextends <a href=\"CSVConverter.html\" title=\"class in com.adaptris.core.transform.csvjson\" target=\"_new\">CSVConverter</a>",
      "description" : "Transfrom a JSON array into a CSV. Takes a JSON array and renders it as a CSV document:  \n [\n   { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" },\n   { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" },\n   { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }\n ]\n will effectively render as  \n firstname, lastname, dob\n \"alice\",\"smith\", \"2017-01-01\"\n \"bob\", \"smith\", \"2017-01-02\"\n \"carol\",\"smith\", \"2017-01-03\"\n \n nested JSON objects will be rendered as strings before being passed into the appropriate statement; so { \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}} still only be 3 CSV columns the address column will be \"{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}\" *",
      "descriptionHtml" : "Transfrom a JSON array into a CSV. \n<p> Takes a JSON array and renders it as a CSV document: </p>\n<pre> <code>\n [\n   { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" },\n   { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" },\n   { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }\n ]</code>\n </pre> will effectively render as \n<pre> <code>\n firstname, lastname, dob\n \"alice\",\"smith\", \"2017-01-01\"\n \"bob\", \"smith\", \"2017-01-02\"\n \"carol\",\"smith\", \"2017-01-03\"\n </code>\n </pre> \n<p></p> \n<p> nested JSON objects will be rendered as strings before being passed into the appropriate statement; so <code>{ \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}}</code> still only be 3 CSV columns the address column will be <code>\"{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}\"</code> </p> * \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CSVConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv-json/4.0.0B1-RELEASE/com/adaptris/core/transform/csvjson/CSVConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON+CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/StandardResponseProducer.html",
      "fullClassName" : "com.adaptris.core.http.jetty.StandardResponseProducer",
      "className" : "StandardResponseProducer",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "producer",
      "alias" : "jetty-standard-response-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Write and commit the HTTP Response",
        "tag" : "producer,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Write and commit the HTTP Response\",\n                  tag=\"producer,http,https\",\n                  recommended=NullConnection.class)\npublic class StandardResponseProducer\nextends ResponseProducerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Write and commit the HTTP Response\",\n                  tag=\"producer,http,https\",\n                  recommended=<a href=\"../../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">StandardResponseProducer</span>\nextends <a href=\"ResponseProducerImpl.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">ResponseProducerImpl</a>",
      "description" : "Implementation of AdaptrisMessageProducer writes to the HttpServletResponse object metadata provided by the Jetty engine.",
      "descriptionHtml" : "Implementation of \n<a href=\"../../AdaptrisMessageProducer.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessageProducer</code></a> writes to the \n<code>HttpServletResponse</code> object metadata provided by the Jetty engine.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html"
        },
        {
          "name" : "ResponseProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/ResponseProducerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/XpathNodeIdentifier.html",
      "fullClassName" : "com.adaptris.core.services.routing.XpathNodeIdentifier",
      "className" : "XpathNodeIdentifier",
      "packageName" : "com.adaptris.core.services.routing",
      "componentType" : "object",
      "alias" : "routing-xpath-node-syntax-identifier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathNodeIdentifier\nextends XmlSyntaxIdentifierImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathNodeIdentifier</span>\nextends <a href=\"XmlSyntaxIdentifierImpl.html\" title=\"class in com.adaptris.core.services.routing\" target=\"_new\">XmlSyntaxIdentifierImpl</a>",
      "description" : "SyntaxIdentifier implementation using XPATH. This differs from the standard XpathSyntaxIdentifier in that, rather than attempting to resolve your XPath to a text value, it simply uses the XPath to try and resolve to a Node (or NodeList). This is more useful if you have an XML document that doesn't contain any values for elements If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. Since 3.10.0 this class implements Condition which means that it can be used as part of the conditional services; if used in such a manner, then configuration is contextual, get/setDestination will be ignored (but may still have to be configured due to validation",
      "descriptionHtml" : "SyntaxIdentifier implementation using XPATH. \n<p> This differs from the standard <a href=\"XpathSyntaxIdentifier.html\" title=\"class in com.adaptris.core.services.routing\" target=\"_new\"><code>XpathSyntaxIdentifier</code></a> in that, rather than attempting to resolve your XPath to a text value, it simply uses the XPath to try and resolve to a Node (or NodeList). This is more useful if you have an XML document that <b>doesn't contain any values for elements</b> </p> \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p> \n<p> Since <strong>3.10.0</strong> this class implements <a href=\"../conditional/Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> which means that it can be used as part of the conditional services; if used in such a manner, then configuration is contextual, get/setDestination will be ignored (but may still have to be configured due to validation </p>",
      "inheritance" : [
        {
          "name" : "SyntaxIdentifierBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierBase.html"
        },
        {
          "name" : "SyntaxIdentifierImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierImpl.html"
        },
        {
          "name" : "XmlSyntaxIdentifierImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/XmlSyntaxIdentifierImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/SafeJsonTransformationDriver.html",
      "fullClassName" : "com.adaptris.core.transform.json.SafeJsonTransformationDriver",
      "className" : "SafeJsonTransformationDriver",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "object",
      "alias" : "json-safe-transformation-driver",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.4",
        "summary" : "JSON/XML Transformation driver that strips spaces before rendering as JSON",
        "tag" : "json,xml,transformation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JSON/XML Transformation driver that strips spaces before rendering as JSON\",\n                  since=\"3.6.4\",\n                  tag=\"json,xml,transformation\")\npublic class SafeJsonTransformationDriver\nextends JsonlibTransformationDriver",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JSON/XML Transformation driver that strips spaces before rendering as JSON\",\n                  since=\"3.6.4\",\n                  tag=\"json,xml,transformation\")\npublic class <span class=\"typeNameLabel\">SafeJsonTransformationDriver</span>\nextends <a href=\"JsonlibTransformationDriver.html\" title=\"class in com.adaptris.core.transform.json\" target=\"_new\">JsonlibTransformationDriver</a>",
      "description" : "Alternative to DefaultJsonTransformationDriver that executes a transform to strip-spaces before rendering as JSON. This differs from DefaultJsonTransformationDriver in that it will execute a transform to strip spaces using the standard xsl:strip-space elements=\"*\" directive before attempting to serialize the XML as JSON. In some situations the default driver can be very sensitive to whitespace that may occur because of indenting and formatting. The transform used is stored in the jar file itself - \"META-INF/com.adaptris.core.transform.json.strip-spaces.xsl\"; it is very simple, and may not handle namespaces terribly well. If in doubt, execute a transform yourslef, and then use DefaultJsonTransformationDriver as usual.",
      "descriptionHtml" : "Alternative to \n<code>DefaultJsonTransformationDriver</code> that executes a transform to strip-spaces before rendering as JSON. \n<p> This differs from <code>DefaultJsonTransformationDriver</code> in that it will execute a transform to strip spaces using the standard <code>xsl:strip-space elements=\"*\"</code> directive before attempting to serialize the XML as JSON. In some situations the default driver can be very sensitive to whitespace that may occur because of indenting and formatting. </p> \n<p> The transform used is stored in the jar file itself - <a href=\"#STRIP_SPACES_XSLT\" target=\"_new\">\"META-INF/com.adaptris.core.transform.json.strip-spaces.xsl\"</a>; it is very simple, and may not handle namespaces terribly well. If in doubt, execute a transform yourslef, and then use <code>DefaultJsonTransformationDriver</code> as usual. </p>",
      "inheritance" : [
        {
          "name" : "JsonTransformationDriverImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonTransformationDriverImpl.html"
        },
        {
          "name" : "JsonlibTransformationDriver",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonlibTransformationDriver.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/OracleAqImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.OracleAqImplementation",
      "className" : "OracleAqImplementation",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class OracleAqImplementation\nextends UrlVendorImplementation\nimplements LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OracleAqImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">UrlVendorImplementation</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Implementation that treats Oracle AQ as a standard JMS Provider. Do not use this; if your OracleAQ JMS Driver is not JMS 1.1 compliant. If that is the case, then you should use either OracleAqQueueImplementation or OracleAqTopicImplementation instead. When using this implementation you should explicitly configure the broker-url in the appropriate JmsConnection. This should be the correct url for making a connection to the Oracle database in question e.g. jdbc:oracle:thin:@localhost:1521:<OracleSid> The oracle jar files are not shipped with the standard adapter installer, so you will need to provide your own jar files from your oracle installation. Depending on your configuration, you will need at least the aqapi and jdbc (JDK1.4) jar. When configuring the destination queue name you may use . to separate out the owner (sometimes referred to as schema) from the actual Queue name. In this instance the corresponding AQjmsSession.getTopic(String, String) and AQjmsSession.getQueue(String, String) methods will be used. This vendor implementation also overrides VendorImplementationImp.applyVendorSessionProperties(javax.jms.Session) so that specific Oracle session properties can be applied. The way of doing this is exactly the same as setting properties on the ConnectionFactory.    <session-properties>\n     <key-value-pair>\n        <key>CloseCheckInterval</key>\n        <value>15</value>\n     </key-value-pair>\n   </session-properties>\n would invoke AQjmsSession.setCloseCheckInterval(int) with 15.",
      "descriptionHtml" : "Implementation that treats Oracle AQ as a standard JMS Provider. \n<p> <strong>Do not use this; if your OracleAQ JMS Driver is not JMS 1.1 compliant</strong>. If that is the case, then you should use either <a href=\"OracleAqQueueImplementation.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\"><code>OracleAqQueueImplementation</code></a> or <a href=\"OracleAqTopicImplementation.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\"><code>OracleAqTopicImplementation</code></a> instead. </p> \n<p> When using this implementation you should explicitly configure the broker-url in the appropriate JmsConnection. This should be the correct url for making a connection to the Oracle database in question e.g. <code>jdbc:oracle:thin:@localhost:1521:&lt;OracleSid&gt;</code> </p> \n<p> The oracle jar files are not shipped with the standard adapter installer, so you will need to provide your own jar files from your oracle installation. Depending on your configuration, you will need at least the aqapi and jdbc (JDK1.4) jar. </p> \n<p> When configuring the destination queue name you may use <strong>.</strong> to separate out the <i>owner</i> (sometimes referred to as schema) from the actual Queue name. In this instance the corresponding <code>AQjmsSession.getTopic(String, String)</code> and <code>AQjmsSession.getQueue(String, String)</code> methods will be used. </p> \n<p> This vendor implementation also overrides <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true#applyVendorSessionProperties(javax.jms.Session)\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementationImp.applyVendorSessionProperties(javax.jms.Session)</code></a> so that specific Oracle session properties can be applied. The way of doing this is exactly the same as setting properties on the ConnectionFactory. <code> </code></p>\n<pre><code>   &lt;session-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;CloseCheckInterval&lt;/key&gt;\n        &lt;value&gt;15&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/session-properties&gt;\n </code></pre>\n<code> </code> would invoke \n<code>AQjmsSession.setCloseCheckInterval(int)</code> with 15. \n<p></p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcConstantParameter.html",
      "fullClassName" : "com.adaptris.core.jdbc.JdbcConstantParameter",
      "className" : "JdbcConstantParameter",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-constant-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JdbcConstantParameter\nextends AbstractParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JdbcConstantParameter</span>\nextends <a href=\"AbstractParameter.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">AbstractParameter</a>",
      "description" : "Stored Procedure parameter implementation, can be used only for IN Stored Procedure parameters. When this implementation is used for an IN parameter, then the constant value will be used as the parameter value. You will simply set the constant to be the value you wish to use as the Stored Procedure parameter value. Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in ParameterValueType",
      "descriptionHtml" : "Stored Procedure parameter implementation, can be used only for IN Stored Procedure parameters. \n<p> When this implementation is used for an IN parameter, then the constant value will be used as the parameter value. You will simply set the constant to be the value you wish to use as the Stored Procedure parameter value. </p> \n<p> Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in <a href=\"../../jdbc/ParameterValueType.html\" title=\"enum in com.adaptris.jdbc\" target=\"_new\"><code>ParameterValueType</code></a> </p>",
      "inheritance" : [
        {
          "name" : "AbstractParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AbstractParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/GoogleCloudPubSubConnection.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.GoogleCloudPubSubConnection",
      "className" : "GoogleCloudPubSubConnection",
      "packageName" : "com.adaptris.google.cloud.pubsub",
      "componentType" : "connection",
      "alias" : "google-cloud-pubsub-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Enables a connection to Google pubsub messaging",
        "tag" : "connections,gcloud,messaging"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Enables a connection to Google pubsub messaging\",\n                  tag=\"connections,gcloud,messaging\")\npublic class GoogleCloudPubSubConnection\nextends AdaptrisConnectionImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Enables a connection to Google pubsub messaging\",\n                  tag=\"connections,gcloud,messaging\")\npublic class <span class=\"typeNameLabel\">GoogleCloudPubSubConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnectionImp</a>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/UploadOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.UploadOperation",
      "className" : "UploadOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-upload",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Amazon S3 Upload using Transfer Manager",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Amazon S3 Upload using Transfer Manager\")\npublic class UploadOperation\nextends TransferOperation",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Amazon S3 Upload using Transfer Manager\")\npublic class <span class=\"typeNameLabel\">UploadOperation</span>\nextends <a href=\"TransferOperation.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">TransferOperation</a>",
      "description" : "Upload an object to S3 using TransferManager.",
      "descriptionHtml" : "Upload an object to S3 using \n<code>TransferManager</code>.",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        },
        {
          "name" : "ObjectOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ObjectOperationImpl.html"
        },
        {
          "name" : "TransferOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/TransferOperation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/idoc/IdocProducer.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.idoc.IdocProducer",
      "className" : "IdocProducer",
      "packageName" : "com.adaptris.core.sap.jco3.idoc",
      "componentType" : "producer",
      "alias" : "sapjco3-idoc-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.sap.jco3.idoc.IdocProduceConnection"
        ],
        "since" : "",
        "summary" : "Send an IDoc to SAP",
        "tag" : "producer,sap,idoc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send an IDoc to SAP\",\n                  tag=\"producer,sap,idoc\",\n                  recommended=IdocProduceConnection.class)\npublic class IdocProducer\nextends ProduceOnlyProducerImp\nimplements IdocContext, com.adaptris.core.licensing.LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send an IDoc to SAP\",\n                  tag=\"producer,sap,idoc\",\n                  recommended=<a href=\"IdocProduceConnection.html\" title=\"class in com.adaptris.core.sap.jco3.idoc\" target=\"_new\">IdocProduceConnection.class</a>)\npublic class <span class=\"typeNameLabel\">IdocProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>\nimplements <a href=\"IdocContext.html\" title=\"interface in com.adaptris.core.sap.jco3.idoc\" target=\"_new\">IdocContext</a>, com.adaptris.core.licensing.LicensedComponent",
      "description" : "Implementation of AdaptrisMessageProducer based on SAP JCO libraries. In order to use these classes you will have previously downloaded, installed and configured SAP Java Connector and SAP Java Connector IDoc Class Library. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. Note that because of the nature of the SAP libraries, the associated connection must be a IdocProduceConnection Note : The classes here were compiled against SAP Java Connector3 3.0.3, SAP IDoc Class Library 3.0.1 They will not work with SAP Java Connector 2.x and SAP Java Connector IDoc Class Library 1.x",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageProducer</code> based on SAP <code>JCO</code> libraries. </p> \n<p> In order to use these classes you will have previously downloaded, installed and configured SAP Java Connector and SAP Java Connector IDoc Class Library. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. </p> \n<p> Note that because of the nature of the SAP libraries, the associated connection must be a <a href=\"IdocProduceConnection.html\" title=\"class in com.adaptris.core.sap.jco3.idoc\" target=\"_new\"><code>IdocProduceConnection</code></a> </p> \n<p> <b>Note : The classes here were compiled against SAP Java Connector3 3.0.3, SAP IDoc Class Library 3.0.1 They will not work with SAP Java Connector 2.x and SAP Java Connector IDoc Class Library 1.x</b> </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/DynamicJmxOperationService.html",
      "fullClassName" : "com.adaptris.core.services.jmx.DynamicJmxOperationService",
      "className" : "DynamicJmxOperationService",
      "packageName" : "com.adaptris.core.services.jmx",
      "componentType" : "service",
      "alias" : "jmx-dynamic-operation-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Execute a JMX operation",
        "tag" : "service,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a JMX operation\",\n                  tag=\"service,jmx\",\n                  since=\"3.6.5\")\npublic class DynamicJmxOperationService\nextends JmxOperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a JMX operation\",\n                  tag=\"service,jmx\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">DynamicJmxOperationService</span>\nextends <a href=\"JmxOperationImpl.html\" title=\"class in com.adaptris.core.services.jmx\" target=\"_new\">JmxOperationImpl</a>",
      "description" : "Allows you to dynamically connect to different JMXServiceURLs and execute JMX Operations. Note that because of the dynamic nature of this service, it does not support username/password/jmx-environment that are supported by JmxConnection. If it can be defined in the URL, then it should be (e.g. jmx+jms rather than jmxmp). A small (configurable) cache of connections is kept for performance reasons. This is emptied whenever the service is stopped. Note that parameters are not configurable in the same way, so this is really designed for calling the same operation for different ObjectName instances on different JMXServiceURLs.",
      "descriptionHtml" : "Allows you to dynamically connect to different \n<code>JMXServiceURL</code>s and execute JMX Operations. \n<p> Note that because of the dynamic nature of this service, it does not support username/password/jmx-environment that are supported by <a href=\"../../jmx/JmxConnection.html\" title=\"class in com.adaptris.core.jmx\" target=\"_new\"><code>JmxConnection</code></a>. If it can be defined in the URL, then it should be (e.g. jmx+jms rather than jmxmp). A small (configurable) cache of connections is kept for performance reasons. This is emptied whenever the service is stopped. </p> \n<p> Note that parameters are not configurable in the same way, so this is really designed for calling the same <code>operation</code> for different <code>ObjectName</code> instances on different <code>JMXServiceURL</code>s. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "JmxOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/JmxOperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/aggregator/CsvValidatingAggregator.html",
      "fullClassName" : "com.adaptris.csv.aggregator.CsvValidatingAggregator",
      "className" : "CsvValidatingAggregator",
      "packageName" : "com.adaptris.csv.aggregator",
      "componentType" : "object",
      "alias" : "csv-validating-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.0",
        "summary" : "Aggregate messages into a CSV, optionally prefixing a header",
        "tag" : "csv,aggregator,validate"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Aggregate messages into a CSV, optionally prefixing a header\",\n                  since=\"3.10.0\",\n                  tag=\"csv,aggregator,validate\")\npublic class CsvValidatingAggregator\nextends CsvAggregating",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Aggregate messages into a CSV, optionally prefixing a header\",\n                  since=\"3.10.0\",\n                  tag=\"csv,aggregator,validate\")\npublic class <span class=\"typeNameLabel\">CsvValidatingAggregator</span>\nextends <a href=\"CsvAggregating.html\" title=\"class in com.adaptris.csv.aggregator\" target=\"_new\">CsvAggregating</a>",
      "description" : "Attempts to aggregate messages into a CSV file. This aggregator attempts to validate the CSV by making use of the Apache Commons CSV library. If a header is set then it defines how many columns each row should have, otherwise the first record in the first message dictates this. Each record is parsed using the Commons CSV Parser, which will (hopefully) ensure that the record is valid CSV.",
      "descriptionHtml" : "Attempts to aggregate messages into a CSV file. This aggregator attempts to validate the CSV by making use of the Apache Commons CSV library. If a header is set then it defines how many columns each row should have, otherwise the first record in the first message dictates this. Each record is parsed using the Commons CSV Parser, which will (hopefully) ensure that the record is valid CSV.",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html?is-external=true"
        },
        {
          "name" : "CsvAggregating",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/aggregator/CsvAggregating.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/MergeResultSetIntoXmlPayload.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.MergeResultSetIntoXmlPayload",
      "className" : "MergeResultSetIntoXmlPayload",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-merge-into-xml-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MergeResultSetIntoXmlPayload\nextends XmlPayloadTranslatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MergeResultSetIntoXmlPayload</span>\nextends <a href=\"XmlPayloadTranslatorImpl.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">XmlPayloadTranslatorImpl</a>",
      "description" : "Merge the ResultSet contents into an existing XML Payload. If you want to see how many rows were processed you can set one/both of the following; Item Description Value result-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query Metadata item name update-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement Metadata item name",
      "descriptionHtml" : "Merge the ResultSet contents into an existing XML Payload. \n<p> If you want to see how many rows were processed you can set one/both of the following; </p>\n<table> \n <tbody>\n  <tr> \n   <th>Item</th> \n   <th>Description</th> \n   <th>Value</th> \n  </tr> \n  <tr> \n   <td>result-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query</td>\n   <td>Metadata item name</td> \n  </tr> \n  <tr> \n   <td>update-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement</td>\n   <td>Metadata item name</td> \n  </tr> \n </tbody>\n</table> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html"
        },
        {
          "name" : "StyledResultTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html"
        },
        {
          "name" : "ResultSetTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorImp.html"
        },
        {
          "name" : "XmlPayloadTranslatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/XmlPayloadTranslatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/timestamp/OffsetTimestampGenerator.html",
      "fullClassName" : "com.adaptris.core.services.metadata.timestamp.OffsetTimestampGenerator",
      "className" : "OffsetTimestampGenerator",
      "packageName" : "com.adaptris.core.services.metadata.timestamp",
      "componentType" : "object",
      "alias" : "offset-timestamp-generator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class OffsetTimestampGenerator\nextends java.lang.Object\nimplements TimestampGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OffsetTimestampGenerator</span>\nextends java.lang.Object\nimplements <a href=\"TimestampGenerator.html\" title=\"interface in com.adaptris.core.services.metadata.timestamp\" target=\"_new\">TimestampGenerator</a>",
      "description" : "Timestamp Generator implementation that mimics the default behaviour available in AddTimestampMetadataService.",
      "descriptionHtml" : "Timestamp Generator implementation that mimics the default behaviour available in \n<a href=\"../AddTimestampMetadataService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>AddTimestampMetadataService</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/AddAllToMetadata.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.bapi.AddAllToMetadata",
      "className" : "AddAllToMetadata",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.bapi",
      "componentType" : "object",
      "alias" : "sapjco3-bapireturn-add-all-to-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class AddAllToMetadata\nextends ReturnParserImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AddAllToMetadata</span>\nextends <a href=\"ReturnParserImpl.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.bapi\" target=\"_new\">ReturnParserImpl</a>",
      "description" : "Simply takes all the fields from the BAPIRETURN and adds them as metadata. No parsing is done of the fields, they are added as is. The metadata key corresponds to the field name in the structure with the configured prefix In the event of multiple RETURN rows, then the a count will be added to the prefix (starting from 0)",
      "descriptionHtml" : "Simply takes all the fields from the BAPIRETURN and adds them as metadata. \n<p> No parsing is done of the fields, they are added as is. The metadata key corresponds to the field name in the structure with the configured prefix </p> \n<p> In the event of multiple RETURN rows, then the a count will be added to the prefix (starting from 0) </p>",
      "inheritance" : [
        {
          "name" : "ReturnParserImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/ReturnParserImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/CustomTlsBuilder.html",
      "fullClassName" : "com.adaptris.core.http.apache.CustomTlsBuilder",
      "className" : "CustomTlsBuilder",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "custom-tls-apache-http-client-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class CustomTlsBuilder\nextends java.lang.Object\nimplements HttpClientBuilderConfigurator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CustomTlsBuilder</span>\nextends java.lang.Object\nimplements <a href=\"HttpClientBuilderConfigurator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\">HttpClientBuilderConfigurator</a>",
      "description" : "HttpClientBuilderConfigurator implementation that allows you to customise keystores etc.",
      "descriptionHtml" : "<a href=\"HttpClientBuilderConfigurator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\"><code>HttpClientBuilderConfigurator</code></a> implementation that allows you to customise keystores etc.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/AppendMode.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.AppendMode",
      "className" : "AppendMode",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "object",
      "alias" : "smb-append-mode",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Open the (or create a new) file and append to it",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Open the (or create a new) file and append to it\")\npublic class AppendMode\nextends java.lang.Object\nimplements WriteMode",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Open the (or create a new) file and append to it\")\npublic class <span class=\"typeNameLabel\">AppendMode</span>\nextends java.lang.Object\nimplements <a href=\"WriteMode.html\" title=\"interface in com.adaptris.filesystem.smbj\" target=\"_new\">WriteMode</a>",
      "description" : "Mode which overwrites if the file already exists Uses SMB2CreateDisposition#FILE_OPEN_IF.",
      "descriptionHtml" : "Mode which overwrites if the file already exists \n<p> Uses <code>SMB2CreateDisposition#FILE_OPEN_IF</code>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/StartsWith.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.StartsWith",
      "className" : "StartsWith",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "object",
      "alias" : "metadata-starts-with",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured metadata value starts with the supplied value.",
        "tag" : "operator,comparator,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured metadata value starts with the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class StartsWith\nextends ComparatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured metadata value starts with the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class <span class=\"typeNameLabel\">StartsWith</span>\nextends <a href=\"ComparatorImpl.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\">ComparatorImpl</a>",
      "description" : "Used with MetadataComparisonService.",
      "descriptionHtml" : "Used with \n<a href=\"MetadataComparisonService.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\"><code>MetadataComparisonService</code></a>.",
      "inheritance" : [
        {
          "name" : "ComparatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ComparatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/transcoding/EncodingService.html",
      "fullClassName" : "com.adaptris.core.services.transcoding.EncodingService",
      "className" : "EncodingService",
      "packageName" : "com.adaptris.core.services.transcoding",
      "componentType" : "service",
      "alias" : "encoding-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Encodes the message",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Encodes the message\",\n                  tag=\"service\")\npublic class EncodingService\nextends TranscodingService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Encodes the message\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">EncodingService</span>\nextends <a href=\"TranscodingService.html\" title=\"class in com.adaptris.core.services.transcoding\" target=\"_new\">TranscodingService</a>",
      "description" : "Encodes the in flight message and sets the payload to the encoded output.",
      "descriptionHtml" : "Encodes the in flight message and sets the payload to the encoded output.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "TranscodingService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/transcoding/TranscodingService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/IsIn.html",
      "fullClassName" : "com.adaptris.core.services.conditional.operator.IsIn",
      "className" : "IsIn",
      "packageName" : "com.adaptris.core.services.conditional.operator",
      "componentType" : "object",
      "alias" : "is-in",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Test whether a specified value matches any value in a list",
        "tag" : "conditional,operator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Test whether a specified value matches any value in a list\",\n                  tag=\"conditional,operator\")\npublic class IsIn\nextends java.lang.Object\nimplements Operator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Test whether a specified value matches any value in a list\",\n                  tag=\"conditional,operator\")\npublic class <span class=\"typeNameLabel\">IsIn</span>\nextends java.lang.Object\nimplements <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Operator</a>",
      "description" : "This Operator tests whether a specified value matches any value in a list Allows you to add multiple values for comparision",
      "descriptionHtml" : "<p> This <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> tests whether a specified value matches any value in a list </p> \n<p> Allows you to add multiple values for comparision </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ContentType.html",
      "fullClassName" : "com.adaptris.aws.s3.meta.S3ContentType",
      "className" : "S3ContentType",
      "packageName" : "com.adaptris.aws.s3.meta",
      "componentType" : "object",
      "alias" : "s3-content-type",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : { },
      "annotationDetails" : "public class S3ContentType\nextends S3ObjectMetadata",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">S3ContentType</span>\nextends <a href=\"S3ObjectMetadata.html\" title=\"class in com.adaptris.aws.s3.meta\" target=\"_new\">S3ObjectMetadata</a>",
      "inheritance" : [
        {
          "name" : "S3ObjectMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ObjectMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/transform/validate/ValidationStage.html",
      "fullClassName" : "com.adaptris.transform.validate.ValidationStage",
      "className" : "ValidationStage",
      "packageName" : "com.adaptris.transform.validate",
      "componentType" : "object",
      "alias" : "xml-validation-stage",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ValidationStage\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ValidationStage</span>\nextends java.lang.Object",
      "description" : "A Stage within the validation.",
      "descriptionHtml" : "A Stage within the validation.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-triggered/4.0.0B1-RELEASE/com/adaptris/core/triggered/TriggeredChannel.html",
      "fullClassName" : "com.adaptris.core.triggered.TriggeredChannel",
      "className" : "TriggeredChannel",
      "packageName" : "com.adaptris.core.triggered",
      "componentType" : "channel",
      "alias" : "triggered-channel",
      "deprecated" : false,
      "jarFileName" : "interlok-triggered.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Channel whose lifecycle is determined by an external configurable trigger",
        "tag" : "triggered"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Channel whose lifecycle is determined by an external configurable trigger\",\n                  tag=\"triggered\")\npublic final class TriggeredChannel\nextends Channel\nimplements AdaptrisMessageListener, LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Channel whose lifecycle is determined by an external configurable trigger\",\n                  tag=\"triggered\")\npublic final class <span class=\"typeNameLabel\">TriggeredChannel</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Channel.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">Channel</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageListener.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisMessageListener</a>, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "A Channel whose lifecycle is determined by an external configurable trigger. Workflows configured as part of a TriggeredChannel do not participate in the normal adapter lifecycle until such time as its trigger consumer consumes a message. At that point, the underlying connections and workflows are initialised, and started. After starting the workflows, the channel blocks and waits for the workflows to terminate, so that it can accept the next trigger. As a result of this behaviour, it only makes sense for the workflows to contain consumers that actively poll the back-end system such as AdaptrisPollingConsumer, rather than consumers that passively wait for activity. Failure to follow these guidelines may lead to undefined behaviour. Even when using an AdaptrisPollingConsumer implementation the Poller mechanism that should be used should have a finite lifespan such as OneTimePoller so that the workflows terminate as expected. If you opt not to use a poller with a finite lifespan then behaviour may be undefined. This type of channel also handles errors and events differently. A specific EventHandler may be specified to physically handle MessageLifecycleEvents that are created within the channel. If this is unspecified then the Adapter's EventHandler is used. The rationale behind this behaviour is to treat events as standard AdaptrisMessage objects which then allows message error handling logic to take place. Any ProcessingExceptionHandler implementation that is used with this Channel implementation must also implement the TriggeredProcessor interface, which simply allows this Channel to interrogate whether processing has been completed by the component or not. This ensures that the channel is not stopped prior to any messages that need to be retried from being retried, thus failing the messages before their time.",
      "descriptionHtml" : "A Channel whose lifecycle is determined by an external configurable trigger. \n<p> Workflows configured as part of a TriggeredChannel do not participate in the normal adapter lifecycle until such time as its trigger consumer consumes a message. At that point, the underlying connections and workflows are initialised, and started. </p> \n<p> After starting the workflows, the channel blocks and waits for the workflows to terminate, so that it can accept the next trigger. As a result of this behaviour, it only makes sense for the workflows to contain consumers that actively poll the back-end system such as <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisPollingConsumer</code></a>, rather than consumers that passively wait for activity. Failure to follow these guidelines may lead to undefined behaviour. </p> \n<p> Even when using an <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisPollingConsumer</code></a> implementation the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Poller.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>Poller</code></a> mechanism that should be used should have a finite lifespan such as <a href=\"OneTimePoller.html\" title=\"class in com.adaptris.core.triggered\" target=\"_new\"><code>OneTimePoller</code></a> so that the workflows terminate as expected. If you opt not to use a poller with a finite lifespan then behaviour may be undefined. </p> \n<p> This type of channel also handles errors and events differently. A specific EventHandler may be specified to physically handle MessageLifecycleEvents that are created within the channel. If this is unspecified then the Adapter's EventHandler is used. The rationale behind this behaviour is to treat events as standard AdaptrisMessage objects which then allows message error handling logic to take place. </p> \n<p> Any <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProcessingExceptionHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ProcessingExceptionHandler</code></a> implementation that is used with this Channel implementation must also implement the <a href=\"TriggeredProcessor.html\" title=\"interface in com.adaptris.core.triggered\" target=\"_new\"><code>TriggeredProcessor</code></a> interface, which simply allows this Channel to interrogate whether processing has been completed by the component or not. This ensures that the channel is not stopped prior to any messages that need to be retried from being retried, thus failing the messages before their time. </p>",
      "inheritance" : [
        {
          "name" : "Channel",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Channel.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Misc/Triggered",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-triggered",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/BasicProducerConfigBuilder.html",
      "fullClassName" : "com.adaptris.kafka.BasicProducerConfigBuilder",
      "className" : "BasicProducerConfigBuilder",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "object",
      "alias" : "kafka-basic-producer-config",
      "deprecated" : true,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : { },
      "annotationDetails" : "@Deprecated\npublic class BasicProducerConfigBuilder\nextends java.lang.Object\nimplements ProducerConfigBuilder",
      "annotationDetailsHtml" : "@Deprecated\npublic class <span class=\"typeNameLabel\">BasicProducerConfigBuilder</span>\nextends java.lang.Object\nimplements <a href=\"ProducerConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\">ProducerConfigBuilder</a>",
      "description" : "Basic implementation of ProducerConfigBuilder. Only \"high\" importance properties from the Apache Kafka Producer Config Documentation are exposed; all other properties are left as default. The key.serializer property is fixed to be a StringSerializer; and the value.serializer property is always an AdaptrisMessageSerializer.",
      "descriptionHtml" : "Basic implementation of \n<a href=\"ProducerConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\"><code>ProducerConfigBuilder</code></a>. \n<p> Only \"high\" importance properties from <a href=\"http://kafka.apache.org/documentation.html#producerconfigs\" target=\"_new\">the Apache Kafka Producer Config Documentation</a> are exposed; all other properties are left as default. The <code>key.serializer</code> property is fixed to be a <code>StringSerializer</code>; and the <code>value.serializer</code> property is always an <a href=\"AdaptrisMessageSerializer.html\" title=\"class in com.adaptris.kafka\" target=\"_new\"><code>AdaptrisMessageSerializer</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/StaxStreamingService.html",
      "fullClassName" : "com.adaptris.stax.StaxStreamingService",
      "className" : "StaxStreamingService",
      "packageName" : "com.adaptris.stax",
      "componentType" : "service",
      "alias" : "stax-streaming-service",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.3",
        "summary" : "Use STaX to stream from one format to another",
        "tag" : "service,stax,transform,xml,json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Use STaX to stream from one format to another\",\n                  tag=\"service,stax,transform,xml,json\",\n                  since=\"3.8.3\")\npublic class StaxStreamingService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Use STaX to stream from one format to another\",\n                  tag=\"service,stax,transform,xml,json\",\n                  since=\"3.8.3\")\npublic class <span class=\"typeNameLabel\">StaxStreamingService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Streaming service that takes using STaX events to stream to and from various XMLEventWriter implementations. The most common use case for this would be to stream XML into JSON or vice-versa making use of com.adaptris.core.json.streaming.JsonStreamingOutputFactory or com.adaptris.core.json.streaming.JsonStreamingInputFactory as the XmlOutputFactoryBuilder or XmlInputFactoryBuilder implementations respectively.",
      "descriptionHtml" : "Streaming service that takes using STaX events to stream to and from various XMLEventWriter implementations. \n<p> The most common use case for this would be to stream XML into JSON or vice-versa making use of <code>com.adaptris.core.json.streaming.JsonStreamingOutputFactory</code> or <code>com.adaptris.core.json.streaming.JsonStreamingInputFactory</code> as the <a href=\"XmlOutputFactoryBuilder.html\" title=\"interface in com.adaptris.stax\" target=\"_new\"><code>XmlOutputFactoryBuilder</code></a> or <a href=\"XmlInputFactoryBuilder.html\" title=\"interface in com.adaptris.stax\" target=\"_new\"><code>XmlInputFactoryBuilder</code></a> implementations respectively. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/PayloadInputStreamWrapper.html",
      "fullClassName" : "com.adaptris.core.common.PayloadInputStreamWrapper",
      "className" : "PayloadInputStreamWrapper",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "payload-input-stream-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "MessageWrapper implementation wraps the payload as an InputStream",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MessageWrapper implementation wraps the payload as an InputStream\",\n                  since=\"3.9.0\")\npublic class PayloadInputStreamWrapper\nextends java.lang.Object\nimplements MessageWrapper<java.io.InputStream>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MessageWrapper implementation wraps the payload as an InputStream\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">PayloadInputStreamWrapper</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\">MessageWrapper</a>&lt;java.io.InputStream&gt;",
      "description" : "MessageWrapper implementation wraps the payload as an InputStream.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>MessageWrapper</code></a> implementation wraps the payload as an \n<code>InputStream</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/StructureToXmlPayload.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.StructureToXmlPayload",
      "className" : "StructureToXmlPayload",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-structure-to-xml-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class StructureToXmlPayload\nextends XmlPayload",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StructureToXmlPayload</span>\nextends <a href=\"XmlPayload.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">XmlPayload</a>",
      "description" : "Exports a structure into the payload converting it into XML.",
      "descriptionHtml" : "Exports a structure into the payload converting it into XML.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        },
        {
          "name" : "PayloadParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/PayloadParameter.html"
        },
        {
          "name" : "XmlPayload",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/XmlPayload.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/tibrv/StandardRendezvousClient.html",
      "fullClassName" : "com.adaptris.tibrv.StandardRendezvousClient",
      "className" : "StandardRendezvousClient",
      "packageName" : "com.adaptris.tibrv",
      "componentType" : "object",
      "alias" : "standard-rendezvous-client",
      "deprecated" : false,
      "jarFileName" : "interlok-tibco.jar",
      "profile" : { },
      "annotationDetails" : "public class StandardRendezvousClient\nextends RendezvousClientImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StandardRendezvousClient</span>\nextends <a href=\"RendezvousClientImp.html\" title=\"class in com.adaptris.tibrv\" target=\"_new\">RendezvousClientImp</a>",
      "description" : "Implementation of RendezvousClient which provides reliable message delivery.",
      "descriptionHtml" : "<p> Implementation of <code>RendezvousClient</code> which provides reliable message delivery. </p>",
      "inheritance" : [
        {
          "name" : "RendezvousClientImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/tibrv/RendezvousClientImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Tibco",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-tibco",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/NullCorrelationIdSource.html",
      "fullClassName" : "com.adaptris.core.jms.NullCorrelationIdSource",
      "className" : "NullCorrelationIdSource",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "null-correlation-id-source",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullCorrelationIdSource\nextends java.lang.Object\nimplements CorrelationIdSource",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullCorrelationIdSource</span>\nextends java.lang.Object\nimplements <a href=\"CorrelationIdSource.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">CorrelationIdSource</a>",
      "description" : "Default implementation od CorrelationIdSource which does nothing.",
      "descriptionHtml" : "<p> Default implementation od <code>CorrelationIdSource</code> which does nothing. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/GoogleCloudPubSubProducer.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.GoogleCloudPubSubProducer",
      "className" : "GoogleCloudPubSubProducer",
      "packageName" : "com.adaptris.google.cloud.pubsub",
      "componentType" : "producer",
      "alias" : "google-cloud-pubsub-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.google.cloud.pubsub.GoogleCloudPubSubConnection"
        ],
        "since" : "",
        "summary" : "Publish a message to Google pubsub",
        "tag" : "producer,gcloud,messaging"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Publish a message to Google pubsub\",\n                  tag=\"producer,gcloud,messaging\",\n                  recommended=GoogleCloudPubSubConnection.class)\npublic class GoogleCloudPubSubProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Publish a message to Google pubsub\",\n                  tag=\"producer,gcloud,messaging\",\n                  recommended=<a href=\"GoogleCloudPubSubConnection.html\" title=\"class in com.adaptris.google.cloud.pubsub\" target=\"_new\">GoogleCloudPubSubConnection.class</a>)\npublic class <span class=\"typeNameLabel\">GoogleCloudPubSubProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/EqualsIgnoreCase.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.EqualsIgnoreCase",
      "className" : "EqualsIgnoreCase",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "object",
      "alias" : "metadata-equals-ignore-case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured metadata value equals the supplied value, ignoring case.",
        "tag" : "operator,comparator,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured metadata value equals the supplied value, ignoring case.\",\n                  tag=\"operator,comparator,metadata\")\npublic class EqualsIgnoreCase\nextends Equals",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured metadata value equals the supplied value, ignoring case.\",\n                  tag=\"operator,comparator,metadata\")\npublic class <span class=\"typeNameLabel\">EqualsIgnoreCase</span>\nextends <a href=\"Equals.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\">Equals</a>",
      "description" : "Used with MetadataComparisonService.",
      "descriptionHtml" : "Used with \n<a href=\"MetadataComparisonService.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\"><code>MetadataComparisonService</code></a>.",
      "inheritance" : [
        {
          "name" : "ComparatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ComparatorImpl.html"
        },
        {
          "name" : "Equals",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/Equals.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/CassandraConnection.html",
      "fullClassName" : "com.adaptris.core.cassandra.CassandraConnection",
      "className" : "CassandraConnection",
      "packageName" : "com.adaptris.core.cassandra",
      "componentType" : "connection",
      "alias" : "cassandra-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-cassandra.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a Cassandra database",
        "tag" : "connections,cassandra"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a Cassandra database\",\n                  tag=\"connections,cassandra\")\npublic class CassandraConnection\nextends AdaptrisConnectionImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a Cassandra database\",\n                  tag=\"connections,cassandra\")\npublic class <span class=\"typeNameLabel\">CassandraConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnectionImp</a>",
      "description" : "This connection is solely to be used with Adaptris cassandra components. Cassandra developer guides, suggest only a single session is required per application, therefore it is suggested to configure a single instance of this connection in the shared objects area. Example:  \n   <adapter>\n     <shared-components>\n       <connections>\n         <cassandra-connection>\n           <unique-id>single-cassandra-connection</unique-id>\n           <connection-url>localhost</connection-url>\n           <keyspace>a_keyspace</keyspace>\n         </cassandra-connection>\n       </connections>\n     </shared-components>\n     ...\n \n Then in each cassandra service instance, simply reference the shared connection;  \n   <cassandra-query-service>\n     <connection class=\"shared-connection\">\n       <lookup-name>single-cassandra-connection</lookup-name>\n     </connection>\n  ...",
      "descriptionHtml" : "<p> This connection is solely to be used with Adaptris cassandra components. </p> \n<p> Cassandra developer guides, suggest only a single session is required per application, therefore it is suggested to configure a single instance of this connection in the shared objects area. <br> Example: </p>\n<pre> <code>\n   &lt;adapter&gt;\n     &lt;shared-components&gt;\n       &lt;connections&gt;\n         &lt;cassandra-connection&gt;\n           &lt;unique-id&gt;single-cassandra-connection&lt;/unique-id&gt;\n           &lt;connection-url&gt;localhost&lt;/connection-url&gt;\n           &lt;keyspace&gt;a_keyspace&lt;/keyspace&gt;\n         &lt;/cassandra-connection&gt;\n       &lt;/connections&gt;\n     &lt;/shared-components&gt;\n     ...\n </code>\n </pre> \n<p></p> \n<p> Then in each cassandra service instance, simply reference the shared connection; </p>\n<pre> <code>\n   &lt;cassandra-query-service&gt;\n     &lt;connection class=\"shared-connection\"&gt;\n       &lt;lookup-name&gt;single-cassandra-connection&lt;/lookup-name&gt;\n     &lt;/connection&gt;\n  ...\n </code>\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Cassandra",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-cassandra",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/AlwaysFailService.html",
      "fullClassName" : "com.adaptris.core.services.AlwaysFailService",
      "className" : "AlwaysFailService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "always-fail-service",
      "deprecated" : true,
      "removalVersion" : "a future version",
      "removalMessage" : "{com.adaptris.validation.constraints.ConfigDeprecated.message}",
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Deprecated: use ThrowExceptionService instead",
        "tag" : "service"
      },
      "annotationDetails" : "@Deprecated\n@ComponentProfile(summary=\"Deprecated: use ThrowExceptionService instead\",\n                  tag=\"service\")\n@ConfigDeprecated(groups=java.lang.Deprecated.class)\npublic class AlwaysFailService\nextends ServiceImp",
      "annotationDetailsHtml" : "@Deprecated\n@ComponentProfile(summary=\"Deprecated: use ThrowExceptionService instead\",\n                  tag=\"service\")\n@ConfigDeprecated(groups=java.lang.Deprecated.class)\npublic class <span class=\"typeNameLabel\">AlwaysFailService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Always fail.",
      "descriptionHtml" : "Always fail.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StaticPollingTemplate.html",
      "fullClassName" : "com.adaptris.core.StaticPollingTemplate",
      "className" : "StaticPollingTemplate",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "static-polling-trigger-template",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StaticPollingTemplate\nextends java.lang.Object\nimplements PollingTrigger.MessageProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StaticPollingTemplate</span>\nextends java.lang.Object\nimplements <a href=\"PollingTrigger.MessageProvider.html\" title=\"interface in com.adaptris.core\" target=\"_new\">PollingTrigger.MessageProvider</a>",
      "description" : "Provides a static template for PollingTrigger.",
      "descriptionHtml" : "Provides a static template for \n<a href=\"PollingTrigger.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>PollingTrigger</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/transform/UncheckedCsvToXml.html",
      "fullClassName" : "com.adaptris.csv.transform.UncheckedCsvToXml",
      "className" : "UncheckedCsvToXml",
      "packageName" : "com.adaptris.csv.transform",
      "componentType" : "service",
      "alias" : "unchecked-csv-to-xml-transform",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "Easily transform a document from CSV to XML",
        "tag" : "service,transform,csv,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Easily transform a document from CSV to XML\",\n                  tag=\"service,transform,csv,xml\",\n                  since=\"3.11.0\")\npublic class UncheckedCsvToXml\nextends CsvToXmlServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Easily transform a document from CSV to XML\",\n                  tag=\"service,transform,csv,xml\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">UncheckedCsvToXml</span>\nextends <a href=\"CsvToXmlServiceImpl.html\" title=\"class in com.adaptris.csv.transform\" target=\"_new\">CsvToXmlServiceImpl</a>",
      "description" : "Unchecked CSV to XML using net.sf.supercsv:super-csv that replaces com.adaptris.core.transform.csv.RawCsvToXmlTransformService. This service does not attempt to make parsing decisions, so CSV files that have differing number of columns on each line would be perfectly acceptable. For example, given an input document :  \n HEADER,19052017\n PRODUCT-CODE,BARCODE,DP,PROMPRICE,DISCOUNT,INSTOCK,REPORT,REPORT-DATE,SOURCE\n XXXXXXXX,1234567890123,2.75,0.00,5.00,2,,,GSL\n TRAILER,4\n   \n Then the output would be  \n  <csv-xml>\n   <record>\n      <csv-field-1>HEADER<csv-field-1>\n      <csv-field-2>19052017</csv-field-2>\n   </record>\n   <record>\n      <csv-field-1>PRODUCT-CODE<csv-field-1>\n      <csv-field-2>BARCODE</csv-field-2>\n      <csv-field-3>DP</csv-field-3>\n      <csv-field-4>PROMPRICE</csv-field-4>\n      <csv-field-5>DISCOUNT</csv-field-5>\n      <csv-field-6>INSTOCK</csv-field-6>\n      <csv-field-7>REPORT</csv-field-7>\n      <csv-field-8>REPORT-DATE</csv-field-8>\n      <csv-field-9>SOURCE</csv-field-9>\n   </record>\n   <record>\n      <csv-field-1>XXXXXXXX<csv-field-1>\n      <csv-field-2>1234567890123</csv-field-2>\n      <csv-field-3>,2.75</csv-field-3>\n      <csv-field-4>0.00</csv-field-4>\n      <csv-field-5>5.00</csv-field-5>\n      <csv-field-6>2</csv-field-6>\n      <csv-field-7></csv-field-7>\n      <csv-field-8></csv-field-8>\n      <csv-field-9>GSL</csv-field-9>\n   </record>\n   <record>\n      <csv-field-1>TRAILER<csv-field-1>\n      <csv-field-2>4</csv-field-2>\n   </record>\n  </csv-xml>\n \n Because there is no verification that the CSV columns matchup; if the message type isn't a CSV (e.g. it's JSON or XML), then it will still be marked up into XML, so take that into account when using this as part of a workflow. Behaviour with rogue messages may not be as you expect.",
      "descriptionHtml" : "Unchecked CSV to XML using \n<code>net.sf.supercsv:super-csv</code> that replaces \n<code>com.adaptris.core.transform.csv.RawCsvToXmlTransformService</code>. \n<p> This service does not attempt to make parsing decisions, so CSV files that have differing number of columns on each line would be perfectly acceptable. </p> \n<p> For example, given an input document : </p>\n<pre> <code>\n HEADER,19052017\n PRODUCT-CODE,BARCODE,DP,PROMPRICE,DISCOUNT,INSTOCK,REPORT,REPORT-DATE,SOURCE\n XXXXXXXX,1234567890123,2.75,0.00,5.00,2,,,GSL\n TRAILER,4\n   </code>\n </pre> Then the output would be \n<pre> <code>\n  &lt;csv-xml&gt;\n   &lt;record&gt;\n      &lt;csv-field-1&gt;HEADER&lt;csv-field-1&gt;\n      &lt;csv-field-2&gt;19052017&lt;/csv-field-2&gt;\n   &lt;/record&gt;\n   &lt;record&gt;\n      &lt;csv-field-1&gt;PRODUCT-CODE&lt;csv-field-1&gt;\n      &lt;csv-field-2&gt;BARCODE&lt;/csv-field-2&gt;\n      &lt;csv-field-3&gt;DP&lt;/csv-field-3&gt;\n      &lt;csv-field-4&gt;PROMPRICE&lt;/csv-field-4&gt;\n      &lt;csv-field-5&gt;DISCOUNT&lt;/csv-field-5&gt;\n      &lt;csv-field-6&gt;INSTOCK&lt;/csv-field-6&gt;\n      &lt;csv-field-7&gt;REPORT&lt;/csv-field-7&gt;\n      &lt;csv-field-8&gt;REPORT-DATE&lt;/csv-field-8&gt;\n      &lt;csv-field-9&gt;SOURCE&lt;/csv-field-9&gt;\n   &lt;/record&gt;\n   &lt;record&gt;\n      &lt;csv-field-1&gt;XXXXXXXX&lt;csv-field-1&gt;\n      &lt;csv-field-2&gt;1234567890123&lt;/csv-field-2&gt;\n      &lt;csv-field-3&gt;,2.75&lt;/csv-field-3&gt;\n      &lt;csv-field-4&gt;0.00&lt;/csv-field-4&gt;\n      &lt;csv-field-5&gt;5.00&lt;/csv-field-5&gt;\n      &lt;csv-field-6&gt;2&lt;/csv-field-6&gt;\n      &lt;csv-field-7&gt;&lt;/csv-field-7&gt;\n      &lt;csv-field-8&gt;&lt;/csv-field-8&gt;\n      &lt;csv-field-9&gt;GSL&lt;/csv-field-9&gt;\n   &lt;/record&gt;\n   &lt;record&gt;\n      &lt;csv-field-1&gt;TRAILER&lt;csv-field-1&gt;\n      &lt;csv-field-2&gt;4&lt;/csv-field-2&gt;\n   &lt;/record&gt;\n  &lt;/csv-xml&gt;\n </code>\n </pre> \n<p></p> \n<p> Because there is no verification that the CSV columns matchup; if the message type isn't a CSV (e.g. it's JSON or XML), then it will still be marked up into XML, so take that into account when using this as part of a workflow. Behaviour with rogue messages may not be as you expect. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CsvXmlTransformImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/transform/CsvXmlTransformImpl.html"
        },
        {
          "name" : "CsvToXmlServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/transform/CsvToXmlServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/GzipService.html",
      "fullClassName" : "com.adaptris.core.services.GzipService",
      "className" : "GzipService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "gzip-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "GZIP the contents of the message",
        "tag" : "service,zip"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"GZIP the contents of the message\",\n                  tag=\"service,zip\")\npublic class GzipService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"GZIP the contents of the message\",\n                  tag=\"service,zip\")\npublic class <span class=\"typeNameLabel\">GzipService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Gzip the given payload. This simply uses GZIPOutputStream in order to create the compressed bytes.",
      "descriptionHtml" : "Gzip the given payload. \n<p> This simply uses <code>GZIPOutputStream</code> in order to create the compressed bytes. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/ReceiveTuning.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.ReceiveTuning",
      "className" : "ReceiveTuning",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-receive-tuning",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class ReceiveTuning\nextends java.lang.Object\nimplements Parameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ReceiveTuning</span>\nextends java.lang.Object\nimplements <a href=\"Parameter.html\" title=\"interface in com.adaptris.core.jms.solace.parameters\" target=\"_new\">Parameter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.EventHandlerAwareConsumer",
      "className" : "EventHandlerAwareConsumer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcBatchingDataCaptureService.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.JdbcBatchingDataCaptureService",
      "className" : "JdbcBatchingDataCaptureService",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "service",
      "alias" : "jdbc-batching-data-capture-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jdbc.DatabaseConnection"
        ],
        "since" : "",
        "summary" : "Capture data from the message and store it in a database",
        "tag" : "service,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Capture data from the message and store it in a database\",\n                  tag=\"service,jdbc\",\n                  recommended=DatabaseConnection.class)\npublic class JdbcBatchingDataCaptureService\nextends JdbcIteratingDataCaptureServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Capture data from the message and store it in a database\",\n                  tag=\"service,jdbc\",\n                  recommended=<a href=\"../../jdbc/DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">DatabaseConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JdbcBatchingDataCaptureService</span>\nextends <a href=\"JdbcIteratingDataCaptureServiceImpl.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">JdbcIteratingDataCaptureServiceImpl</a>",
      "description" : "Capture Data from a AdaptrisMessage and store it in a JDBC-compliant database. There is probably little or no point in having batches if your underlying database connection has auto-commit=true. No checks on the underling Connection so if DatabaseMetaData.supportsBatchUpdates() is likely to return false, then results may be undefined. With a setBatchWindow(Integer) of 1, then it will be functionally equivalent to JdbcDataCaptureService. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Capture Data from a AdaptrisMessage and store it in a JDBC-compliant database. \n<p> There is probably little or no point in having batches if your underlying database connection has <code>auto-commit=true</code>. No checks on the underling <code>Connection</code> so if <code>DatabaseMetaData.supportsBatchUpdates()</code> is likely to return false, then results may be undefined. </p> \n<p> With a <a href=\"#setBatchWindow(java.lang.Integer)\" target=\"_new\"><code>setBatchWindow(Integer)</code></a> of 1, then it will be functionally equivalent to <a href=\"JdbcDataCaptureService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataCaptureService</code></a>. </p> \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html"
        },
        {
          "name" : "JdbcServiceWithParameters",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcServiceWithParameters.html"
        },
        {
          "name" : "JdbcDataCaptureServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcDataCaptureServiceImpl.html"
        },
        {
          "name" : "JdbcIteratingDataCaptureServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcIteratingDataCaptureServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kinesis/4.0.0B1-RELEASE/com/adaptris/aws/kinesis/ConnectionFromProperties.html",
      "fullClassName" : "com.adaptris.aws.kinesis.ConnectionFromProperties",
      "className" : "ConnectionFromProperties",
      "packageName" : "com.adaptris.aws.kinesis",
      "componentType" : "connection",
      "alias" : "aws-kinesis-kpl-connection-from-properties",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-kinesis.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection for supporting connectivity to AWS Kinesis",
        "tag" : "connections,amazon,aws,kinesis"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection for supporting connectivity to AWS Kinesis\",\n                  tag=\"connections,amazon,aws,kinesis\")\npublic class ConnectionFromProperties\nextends ProducerLibraryConnection\nimplements KinesisProducerWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection for supporting connectivity to AWS Kinesis\",\n                  tag=\"connections,amazon,aws,kinesis\")\npublic class <span class=\"typeNameLabel\">ConnectionFromProperties</span>\nextends <a href=\"ProducerLibraryConnection.html\" title=\"class in com.adaptris.aws.kinesis\" target=\"_new\">ProducerLibraryConnection</a>\nimplements <a href=\"KinesisProducerWrapper.html\" title=\"interface in com.adaptris.aws.kinesis\" target=\"_new\">KinesisProducerWrapper</a>",
      "description" : "AdaptrisConnection implementation for Amazon Kinesis using the Kinesis Producer Library. This derives its connection information from a properties file such as this github sample. Configure the location as the setConfigLocation(String) and it will be used to build the producer. This effectively means that you will always be using a DefaultAWSCredentialsProviderChain since it is impossible to override the AWSCredentialsProvider via the property file.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnection</a> implementation for Amazon Kinesis using the Kinesis Producer Library. \n<p> This derives its connection information from a properties file such as this <a href=\"https://raw.githubusercontent.com/awslabs/amazon-kinesis-producer/master/java/amazon-kinesis-producer-sample/default_config.properties\" target=\"_new\">github sample</a>. Configure the location as the <a href=\"#setConfigLocation(java.lang.String)\" target=\"_new\"><code>setConfigLocation(String)</code></a> and it will be used to build the producer. This effectively means that you will always be using a <code>DefaultAWSCredentialsProviderChain</code> since it is impossible to override the <code>AWSCredentialsProvider</code> via the property file. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "ProducerLibraryConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kinesis/4.0.0B1-RELEASE/com/adaptris/aws/kinesis/ProducerLibraryConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Kinesis",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-kinesis",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-swift/4.0.0B1-RELEASE/com/adaptris/core/transform/swift/SwiftXmlService.html",
      "fullClassName" : "com.adaptris.core.transform.swift.SwiftXmlService",
      "className" : "SwiftXmlService",
      "packageName" : "com.adaptris.core.transform.swift",
      "componentType" : "service",
      "alias" : "swift-xml-service",
      "deprecated" : false,
      "jarFileName" : "interlok-swift.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transform a SWIFT message to XML",
        "tag" : "service,transform,xml,swift"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform a SWIFT message to XML\",\n                  tag=\"service,transform,xml,swift\")\npublic class SwiftXmlService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform a SWIFT message to XML\",\n                  tag=\"service,transform,xml,swift\")\npublic class <span class=\"typeNameLabel\">SwiftXmlService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Parse an incoming SWIFT message and create an XML representation of it.",
      "descriptionHtml" : "Parse an incoming SWIFT message and create an XML representation of it.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/SWIFT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-swift",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/ObjectMetadataParameter.html",
      "fullClassName" : "com.adaptris.core.transform.ObjectMetadataParameter",
      "className" : "ObjectMetadataParameter",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "object",
      "alias" : "xml-transform-object-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ObjectMetadataParameter\nextends java.lang.Object\nimplements XmlTransformParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ObjectMetadataParameter</span>\nextends java.lang.Object\nimplements <a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\">XmlTransformParameter</a>",
      "description" : "XmlTransformParameter implementation that makes object metadata available as transform parameters Internally, the adapter uses String keys for object metadata; however this is not enforced for custom services, so behaviour may vary depending on what custom components are in use as the key names may not be consistent or predictable.",
      "descriptionHtml" : "<a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\"><code>XmlTransformParameter</code></a> implementation that makes object metadata available as transform parameters \n<p> Internally, the adapter uses String keys for object metadata; however this is not enforced for custom services, so behaviour may vary depending on what custom components are in use as the key names may not be consistent or predictable. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/ReceiveFlags.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.ReceiveFlags",
      "className" : "ReceiveFlags",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-receive-flags",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class ReceiveFlags\nextends java.lang.Object\nimplements Parameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ReceiveFlags</span>\nextends java.lang.Object\nimplements <a href=\"Parameter.html\" title=\"interface in com.adaptris.core.jms.solace.parameters\" target=\"_new\">Parameter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/AlwaysRestartStrategy.html",
      "fullClassName" : "com.adaptris.core.services.AlwaysRestartStrategy",
      "className" : "AlwaysRestartStrategy",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "object",
      "alias" : "always-restart-strategy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AlwaysRestartStrategy\nextends java.lang.Object\nimplements RestartStrategy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AlwaysRestartStrategy</span>\nextends java.lang.Object\nimplements <a href=\"RestartStrategy.html\" title=\"interface in com.adaptris.core.services\" target=\"_new\">RestartStrategy</a>",
      "description" : "This RestartStrategy will always return true upon requiresRestart().",
      "descriptionHtml" : "<p> This RestartStrategy will always return true upon requiresRestart(). </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/idoc/IdocConsumeConnection.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.idoc.IdocConsumeConnection",
      "className" : "IdocConsumeConnection",
      "packageName" : "com.adaptris.core.sap.jco3.idoc",
      "componentType" : "connection",
      "alias" : "sapjco3-idoc-consume-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection type for supporting SAP JCO3 IDOC consumers",
        "tag" : "connections,sap,idoc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection type for supporting SAP JCO3 IDOC consumers\",\n                  tag=\"connections,sap,idoc\")\npublic class IdocConsumeConnection\nextends IdocConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection type for supporting SAP JCO3 IDOC consumers\",\n                  tag=\"connections,sap,idoc\")\npublic class <span class=\"typeNameLabel\">IdocConsumeConnection</span>\nextends <a href=\"IdocConnection.html\" title=\"class in com.adaptris.core.sap.jco3.idoc\" target=\"_new\">IdocConnection</a>",
      "description" : "Class for managing connections when receiving IDocs from SAP via ALE. This class indirectly provides a com.sap.conn.jco.ext.ServerDataProvider for the underlying connection. Due to the nature of the SAP JCO libraries, for each Channel containing an IdocConsumeConnection should only have a single Workflow within that channel. This avoids having multiple listeners registered with the same programid. In addition to the standard connection properties which are documented in IdocProduceConnection there are additional server properties which determine how the adapter registers itself as a program against SAP.",
      "descriptionHtml" : "Class for managing connections when receiving IDocs from SAP via ALE. \n<p> This class indirectly provides a <code>com.sap.conn.jco.ext.ServerDataProvider</code> for the underlying connection. Due to the nature of the SAP JCO libraries, for each <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Channel.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>Channel</code></a> containing an IdocConsumeConnection should only have a single <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Workflow.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>Workflow</code></a> within that channel. This avoids having multiple listeners registered with the same programid. </p> \n<p> In addition to the standard connection properties which are documented in <a href=\"IdocProduceConnection.html\" title=\"class in com.adaptris.core.sap.jco3.idoc\" target=\"_new\"><code>IdocProduceConnection</code></a> there are additional server properties which determine how the adapter registers itself as a program against SAP. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "JcoConnectionBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/JcoConnectionBase.html"
        },
        {
          "name" : "JcoConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/JcoConnection.html"
        },
        {
          "name" : "IdocConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/idoc/IdocConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/TableToXmlPayload.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.TableToXmlPayload",
      "className" : "TableToXmlPayload",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-table-to-xml-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class TableToXmlPayload\nextends XmlPayload",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TableToXmlPayload</span>\nextends <a href=\"XmlPayload.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">XmlPayload</a>",
      "description" : "Exports all the rows of a table into a payload converting it to XML.",
      "descriptionHtml" : "Exports all the rows of a table into a payload converting it to XML.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        },
        {
          "name" : "PayloadParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/PayloadParameter.html"
        },
        {
          "name" : "XmlPayload",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/XmlPayload.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/ConfiguredXpathQuery.html",
      "fullClassName" : "com.adaptris.core.services.metadata.xpath.ConfiguredXpathQuery",
      "className" : "ConfiguredXpathQuery",
      "packageName" : "com.adaptris.core.services.metadata.xpath",
      "componentType" : "object",
      "alias" : "configured-xpath-query",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredXpathQuery\nextends ConfiguredXpathQueryImpl\nimplements XpathQuery",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredXpathQuery</span>\nextends <a href=\"ConfiguredXpathQueryImpl.html\" title=\"class in com.adaptris.core.services.metadata.xpath\" target=\"_new\">ConfiguredXpathQueryImpl</a>\nimplements <a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a>",
      "description" : "XpathQuery implementation that retuns a single text item from the configured xpath.",
      "descriptionHtml" : "<a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a> implementation that retuns a single text item from the configured xpath.",
      "inheritance" : [
        {
          "name" : "XpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/XpathQueryImpl.html"
        },
        {
          "name" : "ConfiguredXpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/ConfiguredXpathQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PtpConsumer.html",
      "fullClassName" : "com.adaptris.core.jms.PtpConsumer",
      "className" : "PtpConsumer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "consumer",
      "alias" : "jms-queue-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Listen for JMS messages on the specified queue",
        "tag" : "consumer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue\",\n                  tag=\"consumer,jms\",\n                  recommended=JmsConnection.class)\npublic class PtpConsumer\nextends JmsConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue\",\n                  tag=\"consumer,jms\",\n                  recommended=<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PtpConsumer</span>\nextends <a href=\"JmsConsumerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConsumerImpl</a>",
      "description" : "JMS Queue implementation of AdaptrisMessageConsumer",
      "descriptionHtml" : "<p> JMS Queue implementation of <a href=\"../AdaptrisMessageConsumer.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessageConsumer</code></a> </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "JmsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockStateManagedComponent",
      "className" : "MockStateManagedComponent",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "object",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-triggered/4.0.0B1-RELEASE/com/adaptris/core/triggered/RetryMessageErrorHandler.html",
      "fullClassName" : "com.adaptris.core.triggered.RetryMessageErrorHandler",
      "className" : "RetryMessageErrorHandler",
      "packageName" : "com.adaptris.core.triggered",
      "componentType" : "object",
      "alias" : "triggered-retry-message-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-triggered.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "An exception handler instance that allows automated retries and is intended for use within a TriggeredChannel",
        "tag" : "error-handling,triggered"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"An exception handler instance that allows automated retries and is intended for use within a TriggeredChannel\",\n                  tag=\"error-handling,triggered\")\npublic class RetryMessageErrorHandler\nextends RetryMessageErrorHandlerImp\nimplements TriggeredProcessor",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"An exception handler instance that allows automated retries and is intended for use within a TriggeredChannel\",\n                  tag=\"error-handling,triggered\")\npublic class <span class=\"typeNameLabel\">RetryMessageErrorHandler</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RetryMessageErrorHandlerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">RetryMessageErrorHandlerImp</a>\nimplements <a href=\"TriggeredProcessor.html\" title=\"interface in com.adaptris.core.triggered\" target=\"_new\">TriggeredProcessor</a>",
      "description" : "MessageErrorHandler implementation that allows automatic retries for a problem message and is intended for use within a TriggeredChannel",
      "descriptionHtml" : "MessageErrorHandler implementation that allows automatic retries for a problem message and is intended for use within a TriggeredChannel",
      "inheritance" : [
        {
          "name" : "RootProcessingExceptionHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RootProcessingExceptionHandler.html?is-external=true"
        },
        {
          "name" : "StandardProcessingExceptionHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardProcessingExceptionHandler.html?is-external=true"
        },
        {
          "name" : "RetryMessageErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RetryMessageErrorHandlerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Misc/Triggered",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-triggered",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/ClearCacheService.html",
      "fullClassName" : "com.adaptris.core.services.cache.ClearCacheService",
      "className" : "ClearCacheService",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "service",
      "alias" : "clear-cache-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.10.2",
        "summary" : "Clear the contents of the configured cache",
        "tag" : "service,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Clear the contents of the configured cache\",\n                  since=\"3.10.2\",\n                  tag=\"service,cache\",\n                  recommended=CacheConnection.class)\npublic class ClearCacheService\nextends CacheServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Clear the contents of the configured cache\",\n                  since=\"3.10.2\",\n                  tag=\"service,cache\",\n                  recommended=<a href=\"CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">ClearCacheService</span>\nextends <a href=\"CacheServiceImpl.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheServiceImpl</a>",
      "description" : "Clear the contents of the specified cache. You may wish to invalidate the contents of the cache from time to time outside of the standard expiry conditions. You can use this service to clear the contents of the cache. Since Cache.clear() defaults to throwing an UnsupportedOperationException you can opt for this service to silently ignore that exception if the underlying cache doesn't support it.",
      "descriptionHtml" : "Clear the contents of the specified cache. \n<p> You may wish to invalidate the contents of the cache from time to time outside of the standard expiry conditions. You can use this service to clear the contents of the cache. Since <a href=\"../../cache/Cache.html#clear()\" target=\"_new\"><code>Cache.clear()</code></a> defaults to throwing an <code>UnsupportedOperationException</code> you can opt for this service to silently ignore that exception if the underlying cache doesn't support it. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CacheServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-ehcache/4.0.0B1-RELEASE/com/adaptris/core/cache/ehcache/EhcacheFromFile.html",
      "fullClassName" : "com.adaptris.core.cache.ehcache.EhcacheFromFile",
      "className" : "EhcacheFromFile",
      "packageName" : "com.adaptris.core.cache.ehcache",
      "componentType" : "object",
      "alias" : "ehcache-from-file",
      "deprecated" : false,
      "jarFileName" : "interlok-ehcache.jar",
      "profile" : { },
      "annotationDetails" : "public class EhcacheFromFile\nextends DefaultEhcache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EhcacheFromFile</span>\nextends <a href=\"DefaultEhcache.html\" title=\"class in com.adaptris.core.cache.ehcache\" target=\"_new\">DefaultEhcache</a>",
      "description" : "Implementation of Cache based on Ehcache. This uses the CacheManager.create(String) to create the cache manager which allows you to specify a specific ehcache.xsd compliant filename as the configuration file. In the event that the cache manager does not contain a cache that matches the name EhcacheCache.getCacheName(), then a new one will be implemented based on the additional parameters that are configured. If the cache already exists, then it is used as is, without any additional configuration.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/Cache.html?is-external=true\" title=\"class or interface in com.adaptris.core.cache\" class=\"externalLink\" target=\"_new\"><code>Cache</code></a> based on Ehcache. \n<p> This uses the <code>CacheManager.create(String)</code> to create the cache manager which allows you to specify a specific ehcache.xsd compliant filename as the configuration file. In the event that the cache manager does not contain a cache that matches the name <a href=\"EhcacheCache.html#getCacheName()\" target=\"_new\"><code>EhcacheCache.getCacheName()</code></a>, then a new one will be implemented based on the additional parameters that are configured. If the cache already exists, then it is used as is, without any additional configuration. </p>",
      "inheritance" : [
        {
          "name" : "EhcacheCache",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-ehcache/4.0.0B1-RELEASE/com/adaptris/core/cache/ehcache/EhcacheCache.html"
        },
        {
          "name" : "DefaultEhcache",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-ehcache/4.0.0B1-RELEASE/com/adaptris/core/cache/ehcache/DefaultEhcache.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/EHCache",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-ehcache",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/ViaSocks5Proxy.html",
      "fullClassName" : "com.adaptris.sftp.ViaSocks5Proxy",
      "className" : "ViaSocks5Proxy",
      "packageName" : "com.adaptris.sftp",
      "componentType" : "object",
      "alias" : "sftp-via-socks5-proxy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ViaSocks5Proxy\nextends ViaProxy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ViaSocks5Proxy</span>\nextends <a href=\"ViaProxy.html\" title=\"class in com.adaptris.sftp\" target=\"_new\">ViaProxy</a>",
      "description" : "Connect via a SOCKS5 proxy",
      "descriptionHtml" : "Connect via a SOCKS5 proxy",
      "inheritance" : [
        {
          "name" : "ViaProxy",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/ViaProxy.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/TimedInactivityRestartStrategy.html",
      "fullClassName" : "com.adaptris.core.services.TimedInactivityRestartStrategy",
      "className" : "TimedInactivityRestartStrategy",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "object",
      "alias" : "timed-inactivity-restart-strategy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class TimedInactivityRestartStrategy\nextends java.lang.Object\nimplements RestartStrategy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimedInactivityRestartStrategy</span>\nextends java.lang.Object\nimplements <a href=\"RestartStrategy.html\" title=\"interface in com.adaptris.core.services\" target=\"_new\">RestartStrategy</a>",
      "description" : "This RestartStrategy monitors the last usage of the service and if the last usage passes an inactivity period, then this strategy will return true upon requiresRestart().",
      "descriptionHtml" : "<p> This RestartStrategy monitors the last usage of the service and if the last usage passes an inactivity period, then this strategy will return true upon requiresRestart(). </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/ExtendedConfig.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.ExtendedConfig",
      "className" : "ExtendedConfig",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "object",
      "alias" : "smb-extended-config",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extended SMB configuration",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extended SMB configuration\")\npublic class ExtendedConfig\nextends java.lang.Object\nimplements ConfigProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extended SMB configuration\")\npublic class <span class=\"typeNameLabel\">ExtendedConfig</span>\nextends java.lang.Object\nimplements <a href=\"ConfigProvider.html\" title=\"interface in com.adaptris.filesystem.smbj\" target=\"_new\">ConfigProvider</a>",
      "description" : "Exposes additional seetings for SMB configuration. Generally if they are set, then the underlying SmbConfig#builder() will have those things set against it. No validation is done on the values and you should consult the Microsoft documentation to see what they mean.",
      "descriptionHtml" : "Exposes additional seetings for SMB configuration. \n<p> Generally if they are set, then the underlying <code>SmbConfig#builder()</code> will have those things set against it. No validation is done on the values and you should consult the Microsoft documentation to see what they mean. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/JdbcJsonArrayOutput.html",
      "fullClassName" : "com.adaptris.core.json.jdbc.JdbcJsonArrayOutput",
      "className" : "JdbcJsonArrayOutput",
      "packageName" : "com.adaptris.core.json.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-json-all-resultset-output",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Output all result sets as a JSON Array",
        "tag" : "json,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Output all result sets as a JSON Array\",\n                  tag=\"json,jdbc\")\npublic class JdbcJsonArrayOutput\nextends JdbcJsonOutput",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Output all result sets as a JSON Array\",\n                  tag=\"json,jdbc\")\npublic class <span class=\"typeNameLabel\">JdbcJsonArrayOutput</span>\nextends <a href=\"JdbcJsonOutput.html\" title=\"class in com.adaptris.core.json.jdbc\" target=\"_new\">JdbcJsonOutput</a>",
      "description" : "Implementation of ResultSetTranslator that iterates over all resultsets as a json array. This differs from JdbcJsonOutput in that it will iterate over all possible result sets returned by the JDBC operation; generally speaking for a select, it will only be 1, but for a Stored procedured it could be multiple; and outputs each result set as an element of a array. So if you have multiple result sets then this would be the output:    \n[{\n    \"result\": [{\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\"\n    }, {\n        \"firstName\": \"Anna\",\n        \"lastName\": \"Smith\"\n    }, {\n        \"firstName\": \"Peter\",\n        \"lastName\": \"Jones\"\n    }]\n}, {\n    \"result\": [{\n        \"firstName\": \"Sherlock\",\n        \"lastName\": \"Holmes\"\n    }, {\n        \"firstName\": \"John\",\n        \"lastName\": \"Watson\"\n    }, {\n        \"firstName\": \"Charles\",\n        \"lastName\": \"Darwin\"\n    }]\n}]",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>ResultSetTranslator</code></a> that iterates over all resultsets as a json array. \n<p> This differs from <a href=\"JdbcJsonOutput.html\" title=\"class in com.adaptris.core.json.jdbc\" target=\"_new\"><code>JdbcJsonOutput</code></a> in that it will iterate over all possible result sets returned by the JDBC operation; generally speaking for a select, it will only be 1, but for a Stored procedured it could be multiple; and outputs each result set as an element of a array. So if you have multiple result sets then this would be the output: </p> \n<pre>   <code>\n[{\n    \"result\": [{\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\"\n    }, {\n        \"firstName\": \"Anna\",\n        \"lastName\": \"Smith\"\n    }, {\n        \"firstName\": \"Peter\",\n        \"lastName\": \"Jones\"\n    }]\n}, {\n    \"result\": [{\n        \"firstName\": \"Sherlock\",\n        \"lastName\": \"Holmes\"\n    }, {\n        \"firstName\": \"John\",\n        \"lastName\": \"Watson\"\n    }, {\n        \"firstName\": \"Charles\",\n        \"lastName\": \"Darwin\"\n    }]\n}]  \n   </code>\n   \n </pre>",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html?is-external=true"
        },
        {
          "name" : "StyledResultTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html?is-external=true"
        },
        {
          "name" : "JdbcJsonOutput",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/JdbcJsonOutput.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/OnMaxNoOp.html",
      "fullClassName" : "com.adaptris.core.services.conditional.OnMaxNoOp",
      "className" : "OnMaxNoOp",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "object",
      "alias" : "max-loops-no-behaviour",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "MaxLoopBehaviour implementation that has no behaviour.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MaxLoopBehaviour implementation that has no behaviour.\",\n                  since=\"3.9.1\")\npublic class OnMaxNoOp\nextends java.lang.Object\nimplements MaxLoopBehaviour",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MaxLoopBehaviour implementation that has no behaviour.\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">OnMaxNoOp</span>\nextends java.lang.Object\nimplements <a href=\"MaxLoopBehaviour.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">MaxLoopBehaviour</a>",
      "description" : "MaxLoopBehaviour implementation that does nothing. This means that the message is not touched as it exits the do-while or while loop, no exception is thrown. This effectively preserves the previous behaviour.",
      "descriptionHtml" : "<a href=\"MaxLoopBehaviour.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>MaxLoopBehaviour</code></a> implementation that does nothing. \n<p> This means that the message is not touched as it exits the do-while or while loop, no exception is thrown. This effectively preserves the previous behaviour. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/GetTagOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.GetTagOperation",
      "className" : "GetTagOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-tag-get",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Get tags associated with an object in S3",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Get tags associated with an object in S3\",\n                  since=\"3.8.4\")\npublic class GetTagOperation\nextends TagOperation",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Get tags associated with an object in S3\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">GetTagOperation</span>\nextends <a href=\"TagOperation.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">TagOperation</a>",
      "description" : "Get tags associated with a S3 Object Uses AmazonS3Client#getObjectTagging(GetObjectTaggingRequest)",
      "descriptionHtml" : "Get tags associated with a S3 Object \n<p> Uses <code>AmazonS3Client#getObjectTagging(GetObjectTaggingRequest)</code> </p>",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        },
        {
          "name" : "ObjectOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ObjectOperationImpl.html"
        },
        {
          "name" : "TagOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/TagOperation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/MetadataAuthorizationHeader.html",
      "fullClassName" : "com.adaptris.core.http.client.net.MetadataAuthorizationHeader",
      "className" : "MetadataAuthorizationHeader",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-metadata-authorization-header",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataAuthorizationHeader\nextends java.lang.Object\nimplements HttpURLConnectionAuthenticator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataAuthorizationHeader</span>\nextends java.lang.Object\nimplements <a href=\"HttpURLConnectionAuthenticator.html\" title=\"interface in com.adaptris.core.http.client.net\" target=\"_new\">HttpURLConnectionAuthenticator</a>",
      "description" : "Build an HttpConstants.AUTHORIZATION header from metadata.",
      "descriptionHtml" : "Build an \n<a href=\"../../HttpConstants.html#AUTHORIZATION\" target=\"_new\"><code>HttpConstants.AUTHORIZATION</code></a> header from metadata.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/StandardHttpProducer.html",
      "fullClassName" : "com.adaptris.core.http.client.net.StandardHttpProducer",
      "className" : "StandardHttpProducer",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "producer",
      "alias" : "standard-http-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "adphttpresponse"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Make a HTTP request to a remote server using standard JRE components",
        "tag" : "producer,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Make a HTTP request to a remote server using standard JRE components\",\n                  tag=\"producer,http,https\",\n                  metadata=\"adphttpresponse\",\n                  recommended=NullConnection.class)\npublic class StandardHttpProducer\nextends HttpProducer<java.net.HttpURLConnection,​java.net.HttpURLConnection>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Make a HTTP request to a remote server using standard JRE components\",\n                  tag=\"producer,http,https\",\n                  metadata=\"adphttpresponse\",\n                  recommended=<a href=\"../../../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">StandardHttpProducer</span>\nextends <a href=\"HttpProducer.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\">HttpProducer</a>&lt;java.net.HttpURLConnection,​java.net.HttpURLConnection&gt;",
      "description" : "Default HttpProducer implementation that uses HttpURLConnection available in a standard java runtime. This uses com.adaptris.core.http.client interfaces to manage request and response headers and also the DataInputParameter and DataOutputParameter interfaces to source the HTTP body and to handle the HTTP response body respectively. Without specific overrides for these new fields then they default to the payload body. Note that configuring a AdaptrisMessageEncoder instance will cause the DataInputParameter and DataOutputParameter fields to be ignored. When interacting with HTTPS sites, then you may need to configure a truststore / keystore system properties if non-default certificate handling is required. As this uses HttpsURLConnection under the covers; then please consult Oracles JSSE documentation for a full discussion of the required system properties.",
      "descriptionHtml" : "Default \n<a href=\"HttpProducer.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>HttpProducer</code></a> implementation that uses \n<code>HttpURLConnection</code> available in a standard java runtime. \n<p> This uses <code>com.adaptris.core.http.client</code> interfaces to manage request and response headers and also the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataInputParameter</code></a> and <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataOutputParameter</code></a> interfaces to source the HTTP body and to handle the HTTP response body respectively. Without specific overrides for these new fields then they default to the payload body. </p> \n<p> Note that configuring a <a href=\"../../../AdaptrisMessageEncoder.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessageEncoder</code></a> instance will cause the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataInputParameter</code></a> and <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataOutputParameter</code></a> fields to be ignored. </p> \n<p> When interacting with HTTPS sites, then you may need to configure a truststore / keystore system properties if non-default certificate handling is required. As this uses <code>HttpsURLConnection</code> under the covers; then please consult <a href=\"https://docs.oracle.com/javase/8/docs/technotes/guides/security/jsse/JSSERefGuide.html#InstallationAndCustomization\" target=\"_new\">Oracles JSSE documentation</a> for a full discussion of the required system properties. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html"
        },
        {
          "name" : "HttpProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-nats/4.0.0B1-RELEASE/com/adaptris/interlok/nats/NatsConnectionFromProperties.html",
      "fullClassName" : "com.adaptris.interlok.nats.NatsConnectionFromProperties",
      "className" : "NatsConnectionFromProperties",
      "packageName" : "com.adaptris.interlok.nats",
      "componentType" : "connection",
      "alias" : "nats-server-properties-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-nats.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "connection to a NATS server",
        "tag" : "nats.io, nats"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"connection to a NATS server\",\n                  tag=\"nats.io, nats\",\n                  since=\"3.9.3\")\npublic class NatsConnectionFromProperties\nextends NatsConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"connection to a NATS server\",\n                  tag=\"nats.io, nats\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">NatsConnectionFromProperties</span>\nextends <a href=\"NatsConnection.html\" title=\"class in com.adaptris.interlok.nats\" target=\"_new\">NatsConnection</a>",
      "description" : "Connection to a NATS server. Uses io.nats.client#Options#Builder() to build the connection via the properties; no validation of properties is done, we just convert the configuration into properties and pass it into the Builder object. Configuring any kind of ConnectionErrorHandler has no effect on this type of connection, as we will be relying on the automatic reconnection that happens behind the seens from the NATS core java client.",
      "descriptionHtml" : "Connection to a NATS server. \n<p> Uses <code>io.nats.client#Options#Builder()</code> to build the connection via the properties; no validation of properties is done, we just convert the configuration into properties and pass it into the <code>Builder</code> object. </p> \n<p> Configuring any kind of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ConnectionErrorHandler</code></a> has no effect on this type of connection, as we will be relying on the automatic reconnection that happens behind the seens from the NATS core java client. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true"
        },
        {
          "name" : "NatsConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-nats/4.0.0B1-RELEASE/com/adaptris/interlok/nats/NatsConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/NATS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-nats",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/BulkOperation.html",
      "fullClassName" : "com.adaptris.core.elastic.rest.BulkOperation",
      "className" : "BulkOperation",
      "packageName" : "com.adaptris.core.elastic.rest",
      "componentType" : "producer",
      "alias" : "elastic-rest-bulk-operation",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-rest.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.elastic.rest.ElasticRestConnection"
        ],
        "since" : "",
        "summary" : "Use the REST API to interact with Elasticsearch",
        "tag" : "producer,elastic,bulk,batch"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Use the REST API to interact with Elasticsearch\",\n                  tag=\"producer,elastic,bulk,batch\",\n                  recommended=ElasticRestConnection.class)\npublic class BulkOperation\nextends SingleOperation",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Use the REST API to interact with Elasticsearch\",\n                  tag=\"producer,elastic,bulk,batch\",\n                  recommended=<a href=\"ElasticRestConnection.html\" title=\"class in com.adaptris.core.elastic.rest\" target=\"_new\">ElasticRestConnection.class</a>)\npublic class <span class=\"typeNameLabel\">BulkOperation</span>\nextends <a href=\"SingleOperation.html\" title=\"class in com.adaptris.core.elastic.rest\" target=\"_new\">SingleOperation</a>",
      "description" : "Index/Delete/Update a document(s) to ElasticSearch. ElasticRestProducer.getIndex() should return the index that the documents will be inserted against ElasticSearch; the type is taken from the DocumentBuilder The action for each document is driven by the configured ActionExtractor instance. In the event of an DocumentAction.UPSERT action then the same XContentBuilder from the DocumentWrapper is used as both the update and upsert document via doc(XContentBuilder} and upsert(XContentBuilder). This makes the assumption that the document generated contains all the data required, not just a subset. If in doubt; stick to a normal DocumentAction.UPDATE which will throw a DocumentMissingException failing the messages.",
      "descriptionHtml" : "Index/Delete/Update a document(s) to ElasticSearch. \n<p> <a href=\"ElasticRestProducer.html#getIndex()\" target=\"_new\"><code>ElasticRestProducer.getIndex()</code></a> should return the index that the documents will be inserted against ElasticSearch; the <code>type</code> is taken from the DocumentBuilder </p> \n<p> The action for each document is driven by the configured <code>ActionExtractor</code> instance. In the event of an <code>DocumentAction.UPSERT</code> action then the same <code>XContentBuilder</code> from the <code>DocumentWrapper</code> is used as both the update and upsert document via <code>doc(XContentBuilder</code>} and <code>upsert(XContentBuilder)</code>. This makes the assumption that the document generated contains all the data required, not just a subset. If in doubt; stick to a normal <code>DocumentAction.UPDATE</code> which will throw a <code>DocumentMissingException</code> failing the messages. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "ElasticRestProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/ElasticRestProducer.html"
        },
        {
          "name" : "SingleOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/SingleOperation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: REST Client",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-rest",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/StartsWithIgnoreCase.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.StartsWithIgnoreCase",
      "className" : "StartsWithIgnoreCase",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "object",
      "alias" : "metadata-starts-with-ignore-case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured metadata value starts with the supplied value, ignoring case.",
        "tag" : "operator,comparator,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured metadata value starts with the supplied value, ignoring case.\",\n                  tag=\"operator,comparator,metadata\")\npublic class StartsWithIgnoreCase\nextends StartsWith",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured metadata value starts with the supplied value, ignoring case.\",\n                  tag=\"operator,comparator,metadata\")\npublic class <span class=\"typeNameLabel\">StartsWithIgnoreCase</span>\nextends <a href=\"StartsWith.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\">StartsWith</a>",
      "description" : "Used with MetadataComparisonService.",
      "descriptionHtml" : "Used with \n<a href=\"MetadataComparisonService.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\"><code>MetadataComparisonService</code></a>.",
      "inheritance" : [
        {
          "name" : "ComparatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ComparatorImpl.html"
        },
        {
          "name" : "StartsWith",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/StartsWith.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/mime/MimePartSelector.html",
      "fullClassName" : "com.adaptris.core.services.mime.MimePartSelector",
      "className" : "MimePartSelector",
      "packageName" : "com.adaptris.core.services.mime",
      "componentType" : "service",
      "alias" : "mime-part-selector-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Select a mime-part from the message and discards the others",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Select a mime-part from the message and discards the others\",\n                  tag=\"service\")\npublic class MimePartSelector\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Select a mime-part from the message and discards the others\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">MimePartSelector</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Choose a specific mime part from an existing multipart message to become the payload of the AdaptrisMessage.",
      "descriptionHtml" : "Choose a specific mime part from an existing multipart message to become the payload of the AdaptrisMessage.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jmx/JmxNotificationConsumer.html",
      "fullClassName" : "com.adaptris.core.jmx.JmxNotificationConsumer",
      "className" : "JmxNotificationConsumer",
      "packageName" : "com.adaptris.core.jmx",
      "componentType" : "consumer",
      "alias" : "jmx-notification-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "jmxNotificationSource"
        ],
        "recommended" : [
          "com.adaptris.core.jmx.JmxConnection"
        ],
        "since" : "",
        "summary" : "Listen for notifications against the specified ObjectName",
        "tag" : "consumer,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for notifications against the specified ObjectName\",\n                  tag=\"consumer,jmx\",\n                  metadata=\"jmxNotificationSource\",\n                  recommended=JmxConnection.class)\npublic class JmxNotificationConsumer\nextends AdaptrisMessageConsumerImp\nimplements javax.management.NotificationListener",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for notifications against the specified ObjectName\",\n                  tag=\"consumer,jmx\",\n                  metadata=\"jmxNotificationSource\",\n                  recommended=<a href=\"JmxConnection.html\" title=\"class in com.adaptris.core.jmx\" target=\"_new\">JmxConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JmxNotificationConsumer</span>\nextends <a href=\"../AdaptrisMessageConsumerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdaptrisMessageConsumerImp</a>\nimplements javax.management.NotificationListener",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/JsonSchemaService.html",
      "fullClassName" : "com.adaptris.core.json.schema.JsonSchemaService",
      "className" : "JsonSchemaService",
      "packageName" : "com.adaptris.core.json.schema",
      "componentType" : "service",
      "alias" : "json-schema-service",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Validate a JSON document against a schema",
        "tag" : "service,json,schema,validation,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Validate a JSON document against a schema\",\n                  tag=\"service,json,schema,validation,metadata\")\npublic class JsonSchemaService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Validate a JSON document against a schema\",\n                  tag=\"service,json,schema,validation,metadata\")\npublic class <span class=\"typeNameLabel\">JsonSchemaService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "JSON schema validation service.",
      "descriptionHtml" : "JSON schema validation service.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/jdbc/BatchInsertCSV.html",
      "fullClassName" : "com.adaptris.csv.jdbc.BatchInsertCSV",
      "className" : "BatchInsertCSV",
      "packageName" : "com.adaptris.csv.jdbc",
      "componentType" : "service",
      "alias" : "csv-jdbc-batch-insert",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Insert a CSV file into a database",
        "tag" : "service,csv,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Insert a CSV file into a database\",\n                  tag=\"service,csv,jdbc\",\n                  since=\"3.6.5\")\npublic class BatchInsertCSV\nextends JdbcMapInsert",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Insert a CSV file into a database\",\n                  tag=\"service,csv,jdbc\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">BatchInsertCSV</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapInsert.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\">JdbcMapInsert</a>",
      "description" : "Convenience service for inserting a CSV file into a database. This creates insert statements based on the CSV file. The actual insert statement will only be generated once based on the first CSV line and executed the appropriate number of times.  \n   firstname, lastname, dob\n   alice, bob, 2017-01-01\n   bob, smith, 2017-01-01\n   carol, smith,2017-01-01\n   \n will effectively execute the following statement INSERT INTO table (firstname,lastname,dob) VALUES (?,?,?) 3 times; batching as required using PreparedStatement.addBatch() / Statement.executeBatch(). Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail.",
      "descriptionHtml" : "Convenience service for inserting a CSV file into a database. \n<p> This creates insert statements based on the CSV file. The actual insert statement will only be generated once based on the first CSV line and executed the appropriate number of times. </p> \n<pre> <code>\n   firstname, lastname, dob\n   alice, bob, 2017-01-01\n   bob, smith, 2017-01-01\n   carol, smith,2017-01-01\n   </code>\n </pre> will effectively execute the following statement \n<code>INSERT INTO table (firstname,lastname,dob) VALUES (?,?,?)</code> 3 times; batching as required using \n<code>PreparedStatement.addBatch()</code> / \n<code>Statement.executeBatch()</code>. \n<p></p> \n<p> Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html?is-external=true"
        },
        {
          "name" : "JdbcMapInsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapInsert.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/MetadataIdentityBuilder.html",
      "fullClassName" : "com.adaptris.core.security.access.MetadataIdentityBuilder",
      "className" : "MetadataIdentityBuilder",
      "packageName" : "com.adaptris.core.security.access",
      "componentType" : "object",
      "alias" : "metadata-identity-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataIdentityBuilder\nextends MetadataIdentityBuilderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataIdentityBuilder</span>\nextends <a href=\"MetadataIdentityBuilderImpl.html\" title=\"class in com.adaptris.core.security.access\" target=\"_new\">MetadataIdentityBuilderImpl</a>",
      "description" : "Build the identity from metadata",
      "descriptionHtml" : "Build the identity from metadata",
      "inheritance" : [
        {
          "name" : "IdentityBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/IdentityBuilderImpl.html"
        },
        {
          "name" : "MetadataIdentityBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/MetadataIdentityBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/BapiProducer.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.bapi.BapiProducer",
      "className" : "BapiProducer",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.bapi",
      "componentType" : "producer",
      "alias" : "sapjco3-bapi-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.sap.jco3.rfc.ConfiguredRfcConnection",
          "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicRfcConnection"
        ],
        "since" : "",
        "summary" : "Execute a SAP BAPI",
        "tag" : "producer,sap,bapi"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a SAP BAPI\",\n                  tag=\"producer,sap,bapi\",\n                  recommended={ConfiguredRfcConnection.class,DynamicRfcConnection.class})\npublic final class BapiProducer\nextends RfcProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a SAP BAPI\",\n                  tag=\"producer,sap,bapi\",\n                  recommended={<a href=\"../ConfiguredRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ConfiguredRfcConnection.class</a>,<a href=\"../dynamic/DynamicRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">DynamicRfcConnection.class</a>})\npublic final class <span class=\"typeNameLabel\">BapiProducer</span>\nextends <a href=\"../RfcProducer.html\" title=\"class in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">RfcProducer</a>",
      "description" : "Implementation of AdaptrisMessageProducer based on SAP JCO3 libraries. In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. This producer type extends RfcProducer and provides the additional functionality. If configured, the BapiReturnParser will be used to automatically handle the RETURN export parameter, so there is no requirement to explicitly configure one.",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageProducer</code> based on SAP JCO3 libraries. </p> \n<p> In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. </p> \n<p> This producer type extends RfcProducer and provides the additional functionality. </p>\n<ul> \n <li>If configured, the BapiReturnParser will be used to automatically handle the <code>RETURN</code> export parameter, so there is no requirement to explicitly configure one.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "RfcProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/RfcProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/params/NullParameterApplicator.html",
      "fullClassName" : "com.adaptris.core.cassandra.params.NullParameterApplicator",
      "className" : "NullParameterApplicator",
      "packageName" : "com.adaptris.core.cassandra.params",
      "componentType" : "object",
      "alias" : "cassandra-null-parameter-applicator",
      "deprecated" : false,
      "jarFileName" : "interlok-cassandra.jar",
      "profile" : { },
      "annotationDetails" : "public class NullParameterApplicator\nextends AbstractCassandraParameterApplicator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullParameterApplicator</span>\nextends <a href=\"AbstractCassandraParameterApplicator.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\">AbstractCassandraParameterApplicator</a>",
      "description" : "This parameter applicator will not apply any parameter values. It is typically used where no parameters are required for CQL statements.",
      "descriptionHtml" : "<p> This parameter applicator will not apply any parameter values. It is typically used where no parameters are required for CQL statements. </p>",
      "inheritance" : [
        {
          "name" : "AbstractCassandraParameterApplicator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/params/AbstractCassandraParameterApplicator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Cassandra",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-cassandra",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/translators/JmsReplyToCacheValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.cache.translators.JmsReplyToCacheValueTranslator",
      "className" : "JmsReplyToCacheValueTranslator",
      "packageName" : "com.adaptris.core.services.cache.translators",
      "componentType" : "object",
      "alias" : "jms-replyto-cache-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JmsReplyToCacheValueTranslator\nextends java.lang.Object\nimplements CacheValueTranslator<javax.jms.Destination>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JmsReplyToCacheValueTranslator</span>\nextends java.lang.Object\nimplements <a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheValueTranslator</a>&lt;javax.jms.Destination&gt;",
      "description" : "Implementation of CacheValueTranslator that retrieves and sets the JMSReplyTo destination of a message. Note that this can only be used with caches that allow insertion of non-Serializable objects as the JMS destination interface is not serializable.",
      "descriptionHtml" : "Implementation of \n<a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheValueTranslator</code></a> that retrieves and sets the JMSReplyTo destination of a message. \n<p> Note that this can only be used with caches that allow insertion of non-<code>Serializable</code> objects as the JMS destination interface is not serializable. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/RequestInterceptorClientBuilder.html",
      "fullClassName" : "com.adaptris.core.http.apache.RequestInterceptorClientBuilder",
      "className" : "RequestInterceptorClientBuilder",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "request-interceptor-apache-http-client-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class RequestInterceptorClientBuilder\nextends java.lang.Object\nimplements HttpClientBuilderConfigurator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RequestInterceptorClientBuilder</span>\nextends java.lang.Object\nimplements <a href=\"HttpClientBuilderConfigurator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\">HttpClientBuilderConfigurator</a>",
      "description" : "HttpClientBuilderConfigurator instance that allows additional HttpRequestInterceptor instances to be added to the outgoing request.",
      "descriptionHtml" : "<a href=\"HttpClientBuilderConfigurator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\"><code>HttpClientBuilderConfigurator</code></a> instance that allows additional \n<code>HttpRequestInterceptor</code> instances to be added to the outgoing request.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/activemq/PrefetchPolicyFactory.html",
      "fullClassName" : "com.adaptris.core.jms.activemq.PrefetchPolicyFactory",
      "className" : "PrefetchPolicyFactory",
      "packageName" : "com.adaptris.core.jms.activemq",
      "componentType" : "object",
      "alias" : "activemq-prefetch-policy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PrefetchPolicyFactory\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PrefetchPolicyFactory</span>\nextends java.lang.Object",
      "description" : "Proxy class for creating ActiveMQPrefetchPolicy objects This class is simply a class that can be marshalled correctly. * If fields are not explicitly set, then the corresponding ActiveMQPrefetchPolicy method will not be invoked.",
      "descriptionHtml" : "Proxy class for creating ActiveMQPrefetchPolicy objects \n<p> This class is simply a class that can be marshalled correctly. </p> * \n<p> If fields are not explicitly set, then the corresponding <code>ActiveMQPrefetchPolicy</code> method will not be invoked. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/AllRowsMetadataTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.AllRowsMetadataTranslator",
      "className" : "AllRowsMetadataTranslator",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-all-rows-metadata-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AllRowsMetadataTranslator\nextends MetadataResultSetTranslatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AllRowsMetadataTranslator</span>\nextends <a href=\"MetadataResultSetTranslatorImpl.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">MetadataResultSetTranslatorImpl</a>",
      "description" : "Translate the all the rows of the result set into metadata. Each column of the result set is used to create a new item of metadata. The metadata key for each new metadata item is the combination of {MetadataResultSetTranslatorImpl.getMetadataKeyPrefix(), MetadataResultSetTranslatorImpl.getSeparator(), the column name (or label if it's different) and a counter. The value is the value of the column. An additional note here; Some stored procedures can return multiple result sets, if this is the case then each metadata key will be prefixed with the result set counter, plus the MetadataResultSetTranslatorImpl.getResultSetCounterPrefix() If there is only 1 result set, no prefix will be applied for the result set count. The counter starts from 1 If you want to see how many rows were processed you can set one/both of the following; Item Description Value result-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query Metadata item name update-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement Metadata item name",
      "descriptionHtml" : "Translate the all the rows of the result set into metadata. \n<p> Each column of the result set is used to create a new item of metadata. The metadata key for each new metadata item is the combination of {<a href=\"MetadataResultSetTranslatorImpl.html#getMetadataKeyPrefix()\" target=\"_new\"><code>MetadataResultSetTranslatorImpl.getMetadataKeyPrefix()</code></a>, <a href=\"MetadataResultSetTranslatorImpl.html#getSeparator()\" target=\"_new\"><code>MetadataResultSetTranslatorImpl.getSeparator()</code></a>, the column name (or label if it's different) and a counter. The value is the value of the column. An additional note here; Some stored procedures can return multiple result sets, if this is the case then each metadata key will be prefixed with the result set counter, plus the <a href=\"MetadataResultSetTranslatorImpl.html#getResultSetCounterPrefix()\" target=\"_new\"><code>MetadataResultSetTranslatorImpl.getResultSetCounterPrefix()</code></a> If there is only 1 result set, no prefix will be applied for the result set count. </p> \n<p> The counter starts from 1 </p> \n<p> If you want to see how many rows were processed you can set one/both of the following; </p>\n<table> \n <tbody>\n  <tr> \n   <th>Item</th> \n   <th>Description</th> \n   <th>Value</th> \n  </tr> \n  <tr> \n   <td>result-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query</td>\n   <td>Metadata item name</td> \n  </tr> \n  <tr> \n   <td>update-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement</td>\n   <td>Metadata item name</td> \n  </tr> \n </tbody>\n</table> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html"
        },
        {
          "name" : "StyledResultTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html"
        },
        {
          "name" : "ResultSetTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorImp.html"
        },
        {
          "name" : "MetadataResultSetTranslatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/MetadataResultSetTranslatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.StubMessageFactory",
      "className" : "StubMessageFactory",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "object",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/channel/DefaultChannelProvider.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.channel.DefaultChannelProvider",
      "className" : "DefaultChannelProvider",
      "packageName" : "com.adaptris.google.cloud.pubsub.channel",
      "componentType" : "object",
      "alias" : "default-channel-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultChannelProvider\nextends ChannelProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultChannelProvider</span>\nextends <a href=\"ChannelProvider.html\" title=\"class in com.adaptris.google.cloud.pubsub.channel\" target=\"_new\">ChannelProvider</a>",
      "inheritance" : [
        {
          "name" : "ChannelProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/channel/ChannelProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/AdvancedElasticRestClientCreator.html",
      "fullClassName" : "com.adaptris.core.elastic.rest.AdvancedElasticRestClientCreator",
      "className" : "AdvancedElasticRestClientCreator",
      "packageName" : "com.adaptris.core.elastic.rest",
      "componentType" : "object",
      "alias" : "advanced-elastic-rest-client",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-rest.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedElasticRestClientCreator\nextends ElasticRestClientCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedElasticRestClientCreator</span>\nextends <a href=\"ElasticRestClientCreator.html\" title=\"class in com.adaptris.core.elastic.rest\" target=\"_new\">ElasticRestClientCreator</a>",
      "inheritance" : [
        {
          "name" : "ElasticRestClientCreator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/ElasticRestClientCreator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: REST Client",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-rest",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/sources/FileSource.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.sources.FileSource",
      "className" : "FileSource",
      "packageName" : "com.adaptris.tester.runtime.services.sources",
      "componentType" : "object",
      "alias" : "file-source",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class FileSource\nextends java.lang.Object\nimplements Source",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FileSource</span>\nextends java.lang.Object\nimplements <a href=\"Source.html\" title=\"interface in com.adaptris.tester.runtime.services.sources\" target=\"_new\">Source</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/RawMailConsumer.html",
      "fullClassName" : "com.adaptris.core.mail.RawMailConsumer",
      "className" : "RawMailConsumer",
      "packageName" : "com.adaptris.core.mail",
      "componentType" : "consumer",
      "alias" : "raw-mail-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from a email account without trying to parse the MIME message.",
        "tag" : "consumer,email"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from a email account without trying to parse the MIME message.\",\n                  tag=\"consumer,email\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class RawMailConsumer\nextends MailConsumerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from a email account without trying to parse the MIME message.\",\n                  tag=\"consumer,email\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">RawMailConsumer</span>\nextends <a href=\"MailConsumerImp.html\" title=\"class in com.adaptris.core.mail\" target=\"_new\">MailConsumerImp</a>",
      "description" : "Email implementation of the AdaptrisMessageConsumer interface. The raw MimeMessage will not be parsed, and the contents of the entire MimeMessage will be used to create a single AdaptrisMessage instance for processing. Additionally, any configured encoder will be ignored.",
      "descriptionHtml" : "Email implementation of the AdaptrisMessageConsumer interface. \n<p> The raw MimeMessage will not be parsed, and the contents of the entire MimeMessage will be used to create a single AdaptrisMessage instance for processing. Additionally, any configured encoder will be ignored. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        },
        {
          "name" : "MailConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/MailConsumerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/NotEmpty.html",
      "fullClassName" : "com.adaptris.core.services.conditional.operator.NotEmpty",
      "className" : "NotEmpty",
      "packageName" : "com.adaptris.core.services.conditional.operator",
      "componentType" : "object",
      "alias" : "not-empty",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a value is not null or not empty",
        "tag" : "conditional,operator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a value is not null or not empty\",\n                  tag=\"conditional,operator\")\npublic class NotEmpty\nextends IsEmpty",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a value is not null or not empty\",\n                  tag=\"conditional,operator\")\npublic class <span class=\"typeNameLabel\">NotEmpty</span>\nextends <a href=\"IsEmpty.html\" title=\"class in com.adaptris.core.services.conditional.operator\" target=\"_new\">IsEmpty</a>",
      "description" : "This Operator simply tests that the given value does not evaluate to null or an empty string. The value used in the NotEmpty test is the Condition that this Operator is configured for; which could be the message payload or a metadata item for example.",
      "descriptionHtml" : "<p> This <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> simply tests that the given value does not evaluate to null or an empty string. </p> \n<p> The value used in the NotEmpty test is the <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> that this <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> is configured for; which could be the message payload or a metadata item for example. <br> </p>",
      "inheritance" : [
        {
          "name" : "IsEmpty",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/IsEmpty.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/mime/SelectByHeader.html",
      "fullClassName" : "com.adaptris.util.text.mime.SelectByHeader",
      "className" : "SelectByHeader",
      "packageName" : "com.adaptris.util.text.mime",
      "componentType" : "object",
      "alias" : "mime-select-by-header",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SelectByHeader\nextends java.lang.Object\nimplements PartSelector",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SelectByHeader</span>\nextends java.lang.Object\nimplements <a href=\"PartSelector.html\" title=\"interface in com.adaptris.util.text.mime\" target=\"_new\">PartSelector</a>",
      "description" : "PartSelector implementation that parses a specific header examining the value to see if it matches the configured regular expression.",
      "descriptionHtml" : "<a href=\"PartSelector.html\" title=\"interface in com.adaptris.util.text.mime\" target=\"_new\"><code>PartSelector</code></a> implementation that parses a specific header examining the value to see if it matches the configured regular expression.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MessageLifecycleEvent.html",
      "fullClassName" : "com.adaptris.core.MessageLifecycleEvent",
      "className" : "MessageLifecycleEvent",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "message-lifecycle-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MessageLifecycleEvent\nextends Event\nimplements java.lang.Cloneable, java.io.Serializable",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MessageLifecycleEvent</span>\nextends <a href=\"Event.html\" title=\"class in com.adaptris.core\" target=\"_new\">Event</a>\nimplements java.lang.Cloneable, java.io.Serializable",
      "description" : "Container for message lifecycle events (MleMarkers) for implementations of AdaptrisMessage. In the adapter configuration file this class is aliased as message-lifecycle-event which is the preferred alternative to the fully qualified classname when building your configuration.",
      "descriptionHtml" : "<p> Container for message lifecycle events (<code>MleMarker</code>s) for implementations of <code>AdaptrisMessage</code>. </p> \n<p> In the adapter configuration file this class is aliased as <b>message-lifecycle-event</b> which is the preferred alternative to the fully qualified classname when building your configuration. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/CheckUniqueMetadataValueService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.CheckUniqueMetadataValueService",
      "className" : "CheckUniqueMetadataValueService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "check-unique-metadata-value-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Perform a branch by checking a metadata key and comparing it against a list of previously received values",
        "tag" : "service,branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a branch by checking a metadata key and comparing it against a list of previously received values\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class CheckUniqueMetadataValueService\nextends BranchingServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a branch by checking a metadata key and comparing it against a list of previously received values\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">CheckUniqueMetadataValueService</span>\nextends <a href=\"../../BranchingServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">BranchingServiceImp</a>",
      "description" : "Branching Service implementation which checks the value stored against a configured metadata key against a list of previously received values. The service obeys the following rules when checking the metadata key If the looked-up value is null or empty, a ServiceException is thrown. If the value is set and has previously been received, the configured nextServiceIdIfDuplicate is set on the message. If the looked-up value is not contained in the store of previous values nextServiceIdIfUnique is set and the value is added to this store for future checking. The store of previous values has a configurable maximum size. After a new value is added, if the store exceeds the maximum size the oldest value is removed. The store is then persisted to the configured store file.",
      "descriptionHtml" : "<p> Branching <code>Service</code> implementation which checks the value stored against a configured metadata key against a list of previously received values. </p>\n<p> The service obeys the following rules when checking the metadata key </p>\n<ul> \n <li>If the looked-up value is null or empty, a <a href=\"../../ServiceException.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>ServiceException</code></a> is thrown.</li> \n <li>If the value is set and has previously been received, the configured <code>nextServiceIdIfDuplicate</code> is set on the message.</li> \n <li>If the looked-up value is not contained in the store of previous values <code>nextServiceIdIfUnique</code> is set and the value is added to this store for future checking.</li> \n <p></p> \n <p> The store of previous values has a configurable maximum size. After a new value is added, if the store exceeds the maximum size the oldest value is removed. The store is then persisted to the configured store file. </p>\n</ul>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "BranchingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/BranchingServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataValueToUpperCase.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataValueToUpperCase",
      "className" : "MetadataValueToUpperCase",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-value-to-upper-case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Changes matching metadata to uppercase",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Changes matching metadata to uppercase\",\n                  tag=\"service,metadata\")\npublic class MetadataValueToUpperCase\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Changes matching metadata to uppercase\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataValueToUpperCase</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "Takes a metadata value and converts it to upper case. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will be changed to upper case.",
      "descriptionHtml" : "Takes a metadata value and converts it to upper case. \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will be changed to upper case. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MapMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.MapMessageTranslator",
      "className" : "MapMessageTranslator",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "map-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public final class MapMessageTranslator\nextends MessageTypeTranslatorImp",
      "annotationDetailsHtml" : "public final class <span class=\"typeNameLabel\">MapMessageTranslator</span>\nextends <a href=\"MessageTypeTranslatorImp.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MessageTypeTranslatorImp</a>",
      "description" : "Translates between AdaptrisMessage and javax.jms.MapMessage.",
      "descriptionHtml" : "<p> Translates between <code>AdaptrisMessage</code> and <code>javax.jms.MapMessage</code>. </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/payload/EmptyPayloadProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.payload.EmptyPayloadProvider",
      "className" : "EmptyPayloadProvider",
      "packageName" : "com.adaptris.tester.runtime.messages.payload",
      "componentType" : "object",
      "alias" : "empty-payload-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class EmptyPayloadProvider\nextends PayloadProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EmptyPayloadProvider</span>\nextends <a href=\"PayloadProvider.html\" title=\"class in com.adaptris.tester.runtime.messages.payload\" target=\"_new\">PayloadProvider</a>",
      "inheritance" : [
        {
          "name" : "PayloadProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/payload/PayloadProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/services/StatefulSessionEnd.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.services.StatefulSessionEnd",
      "className" : "StatefulSessionEnd",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.services",
      "componentType" : "service",
      "alias" : "sapjco3-end-session-service",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "End a Stateful Session within SAP",
        "tag" : "service,sap,rfc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"End a Stateful Session within SAP\",\n                  tag=\"service,sap,rfc\")\npublic class StatefulSessionEnd\nextends JcoDestinationService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"End a Stateful Session within SAP\",\n                  tag=\"service,sap,rfc\")\npublic class <span class=\"typeNameLabel\">StatefulSessionEnd</span>\nextends <a href=\"JcoDestinationService.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.services\" target=\"_new\">JcoDestinationService</a>",
      "description" : "Service Implementation that uses object metadata to end a stateful session. This notifies the JCo Runtime about the end of a stateful call sequence on a specific destination. Between start() and end() the same connection will be used for all function calls.",
      "descriptionHtml" : "Service Implementation that uses object metadata to end a stateful session. \n<p> This notifies the JCo Runtime about the end of a stateful call sequence on a specific destination. Between start() and end() the same connection will be used for all function calls. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JcoDestinationService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/services/JcoDestinationService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/YamlToJsonService.html",
      "fullClassName" : "com.adaptris.core.transform.json.YamlToJsonService",
      "className" : "YamlToJsonService",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "service",
      "alias" : "yaml-to-json",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transform a YAML document into JSON",
        "tag" : "service,transform,json,yaml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform a YAML document into JSON\",\n                  tag=\"service,transform,json,yaml\")\npublic class YamlToJsonService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform a YAML document into JSON\",\n                  tag=\"service,transform,json,yaml\")\npublic class <span class=\"typeNameLabel\">YamlToJsonService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service allows you to transform YAML to JSON.",
      "descriptionHtml" : "This service allows you to transform YAML to JSON.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ContentDisposition.html",
      "fullClassName" : "com.adaptris.aws.s3.meta.S3ContentDisposition",
      "className" : "S3ContentDisposition",
      "packageName" : "com.adaptris.aws.s3.meta",
      "componentType" : "object",
      "alias" : "s3-content-disposition",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : { },
      "annotationDetails" : "public class S3ContentDisposition\nextends S3ObjectMetadata",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">S3ContentDisposition</span>\nextends <a href=\"S3ObjectMetadata.html\" title=\"class in com.adaptris.aws.s3.meta\" target=\"_new\">S3ObjectMetadata</a>",
      "inheritance" : [
        {
          "name" : "S3ObjectMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ObjectMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/OracleAqQueueImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.OracleAqQueueImplementation",
      "className" : "OracleAqQueueImplementation",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-queue-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "JMS Queue only support for OracleAQ",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JMS Queue only support for OracleAQ\",\n                  since=\"3.9.2\")\npublic class OracleAqQueueImplementation\nextends OracleAqImplementation",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JMS Queue only support for OracleAQ\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">OracleAqQueueImplementation</span>\nextends <a href=\"OracleAqImplementation.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">OracleAqImplementation</a>",
      "description" : "Queue specific variation of OracleAqImplementation. This implementation is suitable if your OracleAQ JMS Driver isn't JMS 1.1 compliant, and limits you to using queues only. You really should think about upgrading to a JMS1.1 compliant driver.",
      "descriptionHtml" : "Queue specific variation of \n<a href=\"OracleAqImplementation.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\"><code>OracleAqImplementation</code></a>. \n<p> This implementation is suitable if your OracleAQ JMS Driver isn't JMS 1.1 compliant, and limits you to using queues only. <strong>You really should think about upgrading to a JMS1.1 compliant driver. </strong></p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "OracleAqImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/OracleAqImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/activemq/BlobTransferPolicyFactory.html",
      "fullClassName" : "com.adaptris.core.jms.activemq.BlobTransferPolicyFactory",
      "className" : "BlobTransferPolicyFactory",
      "packageName" : "com.adaptris.core.jms.activemq",
      "componentType" : "object",
      "alias" : "activemq-blob-transfer-policy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BlobTransferPolicyFactory\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BlobTransferPolicyFactory</span>\nextends java.lang.Object",
      "description" : "Proxy class for creating BlobTransferPolicy objects This class is simply a class that can be marshalled correctly. As DefaultBlobUploadStrategy does not conform to the marshalling requirements of a no-param constructor it should not be explicitly configured. If fields are not explicitly set, then the corresponding BlobUploadStrategy method will not be invoked.",
      "descriptionHtml" : "Proxy class for creating BlobTransferPolicy objects \n<p> This class is simply a class that can be marshalled correctly. </p> \n<p> As <code>DefaultBlobUploadStrategy</code> does not conform to the marshalling requirements of a no-param constructor it should not be explicitly configured. </p> \n<p> If fields are not explicitly set, then the corresponding <code>BlobUploadStrategy</code> method will not be invoked. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/lms/StaxEndDocument.html",
      "fullClassName" : "com.adaptris.stax.lms.StaxEndDocument",
      "className" : "StaxEndDocument",
      "packageName" : "com.adaptris.stax.lms",
      "componentType" : "service",
      "alias" : "stax-xml-end-document",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.6",
        "summary" : "Commit any output written via STaX",
        "tag" : "service,transform,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Commit any output written via STaX\",\n                  tag=\"service,transform,xml\",\n                  since=\"3.6.6\")\npublic class StaxEndDocument\nextends StaxXmlOutput",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Commit any output written via STaX\",\n                  tag=\"service,transform,xml\",\n                  since=\"3.6.6\")\npublic class <span class=\"typeNameLabel\">StaxEndDocument</span>\nextends <a href=\"StaxXmlOutput.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\">StaxXmlOutput</a>",
      "description" : "Commit and finish the large XML output started by StaxStartDocument. For this service to work, the underlying AdaptrisMessageFactory associated with the AdaptrisMessage instance must be a FileBackedMessageFactory and StaxStartDocument must have precede this service so effectively your processing chain should be  \n   <stax-xml-start-document/>\n     ... 0 or more instances of <stax-xml-write-element/>\n   <stax-xml-end-document/>",
      "descriptionHtml" : "Commit and finish the large XML output started by \n<a href=\"StaxStartDocument.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\"><code>StaxStartDocument</code></a>. \n<p> For this service to work, the underlying <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageFactory.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageFactory</code></a> associated with the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> instance must be a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/FileBackedMessageFactory.html?is-external=true\" title=\"class or interface in com.adaptris.core.lms\" class=\"externalLink\" target=\"_new\"><code>FileBackedMessageFactory</code></a> and <a href=\"StaxStartDocument.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\"><code>StaxStartDocument</code></a> must have precede this service so effectively your processing chain should be </p>\n<pre> <code>\n   &lt;stax-xml-start-document/&gt;\n     ... 0 or more instances of &lt;stax-xml-write-element/&gt;\n   &lt;stax-xml-end-document/&gt;\n </code>\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "StaxXmlOutput",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/lms/StaxXmlOutput.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/DeleteOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.DeleteOperation",
      "className" : "DeleteOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-delete",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Delete an object from S3",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Delete an object from S3\")\npublic class DeleteOperation\nextends ObjectOperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Delete an object from S3\")\npublic class <span class=\"typeNameLabel\">DeleteOperation</span>\nextends <a href=\"ObjectOperationImpl.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">ObjectOperationImpl</a>",
      "description" : "Delete an object from S3.",
      "descriptionHtml" : "Delete an object from S3.",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        },
        {
          "name" : "ObjectOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ObjectOperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/UseXmlCharsetAsEncodingService.html",
      "fullClassName" : "com.adaptris.core.services.UseXmlCharsetAsEncodingService",
      "className" : "UseXmlCharsetAsEncodingService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "use-xml-charset-as-encoding",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Change the character encoding of a message based on the XML charset",
        "tag" : "service,xml,encoding"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Change the character encoding of a message based on the XML charset\",\n                  tag=\"service,xml,encoding\")\npublic class UseXmlCharsetAsEncodingService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Change the character encoding of a message based on the XML charset\",\n                  tag=\"service,xml,encoding\")\npublic class <span class=\"typeNameLabel\">UseXmlCharsetAsEncodingService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Changes the character encoding associated with a message. This service does nothing with the data, but simply changes the character encoding associated with the message using AdaptrisMessage.setCharEncoding(String) after parsing the XML via XMLStreamReader. If there is no encoding specified via XMLStreamReader.getCharacterEncodingScheme() then no change occurs.",
      "descriptionHtml" : "Changes the character encoding associated with a message. \n<p> This service does nothing with the data, but simply changes the character encoding associated with the message using <a href=\"../AdaptrisMessage.html#setCharEncoding(java.lang.String)\" target=\"_new\"><code>AdaptrisMessage.setCharEncoding(String)</code></a> after parsing the XML via <code>XMLStreamReader</code>. If there is no encoding specified via <code>XMLStreamReader.getCharacterEncodingScheme()</code> then no change occurs. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/XmlMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.XmlMessageTranslator",
      "className" : "XmlMessageTranslator",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "object",
      "alias" : "sonic-xml-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlMessageTranslator\nextends MessageTypeTranslatorImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlMessageTranslator</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">MessageTypeTranslatorImp</a>",
      "description" : "Translates between AdaptrisMessage and progress.message.jclient.XMLMessage. In addition to handling progress.message.jclient.XMLMessage, this translator delegates ByteMessage, ObjectMessage and TextMessage to the appropriate translator",
      "descriptionHtml" : "<p> Translates between <code>AdaptrisMessage</code> and <code>progress.message.jclient.XMLMessage</code>. </p> \n<p> In addition to handling <code>progress.message.jclient.XMLMessage</code>, this translator delegates ByteMessage, ObjectMessage and TextMessage to the appropriate translator </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportTestSuites.html",
      "fullClassName" : "com.adaptris.tester.report.junit.JUnitReportTestSuites",
      "className" : "JUnitReportTestSuites",
      "packageName" : "com.adaptris.tester.report.junit",
      "componentType" : "object",
      "alias" : "testsuites",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class JUnitReportTestSuites\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JUnitReportTestSuites</span>\nextends java.lang.Object",
      "description" : "Child of JUnitReportTestResults for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. When tests are executed via Test.execute(String, TestClient, ServiceTestConfig) the results are produced as this corresponding class.",
      "descriptionHtml" : "Child of \n<a href=\"JUnitReportTestResults.html\" title=\"class in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestResults</code></a> for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. \n<p> When tests are executed via <a href=\"../../runtime/Test.html#execute(java.lang.String,com.adaptris.tester.runtime.clients.TestClient,com.adaptris.tester.runtime.ServiceTestConfig)\" target=\"_new\"><code>Test.execute(String, TestClient, ServiceTestConfig)</code></a> the results are produced as this corresponding class. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/ByteArrayFromObjectMetadata.html",
      "fullClassName" : "com.adaptris.core.common.ByteArrayFromObjectMetadata",
      "className" : "ByteArrayFromObjectMetadata",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "byte-array-from-object-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Turn a object metadata value into a byte array.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Turn a object metadata value into a byte array.\",\n                  since=\"3.9.0\")\npublic class ByteArrayFromObjectMetadata\nextends ByteArrayFromMetadataWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Turn a object metadata value into a byte array.\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">ByteArrayFromObjectMetadata</span>\nextends <a href=\"ByteArrayFromMetadataWrapper.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">ByteArrayFromMetadataWrapper</a>",
      "description" : "Wraps an object metadata value as a byte[] If the object metadata value is a String then it is converted using the configured translator; otherwise it is assumed to already be a byte array.",
      "descriptionHtml" : "Wraps an object metadata value as a byte[] \n<p> If the object metadata value is a <code>String</code> then it is converted using the configured translator; otherwise it is assumed to already be a byte array. </p>",
      "inheritance" : [
        {
          "name" : "ByteArrayFromMetadataWrapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/ByteArrayFromMetadataWrapper.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-cosmosdb/4.0.0B1-RELEASE/com/adaptris/interlok/azure/cosmosdb/CosmosAuthorizationHeaderFromUrl.html",
      "fullClassName" : "com.adaptris.interlok.azure.cosmosdb.CosmosAuthorizationHeaderFromUrl",
      "className" : "CosmosAuthorizationHeaderFromUrl",
      "packageName" : "com.adaptris.interlok.azure.cosmosdb",
      "componentType" : "service",
      "alias" : "cosmosdb-authorization-header-from-url",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-cosmosdb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Builds an authorization header for Azure CosmosDB",
        "tag" : "azure,cosmosdb,cosmos"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Builds an authorization header for Azure CosmosDB\",\n                  since=\"3.9.2\",\n                  tag=\"azure,cosmosdb,cosmos\")\npublic class CosmosAuthorizationHeaderFromUrl\nextends CosmosAuthorizationHeaderImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Builds an authorization header for Azure CosmosDB\",\n                  since=\"3.9.2\",\n                  tag=\"azure,cosmosdb,cosmos\")\npublic class <span class=\"typeNameLabel\">CosmosAuthorizationHeaderFromUrl</span>\nextends <a href=\"CosmosAuthorizationHeaderImpl.html\" title=\"class in com.adaptris.interlok.azure.cosmosdb\" target=\"_new\">CosmosAuthorizationHeaderImpl</a>",
      "description" : "Builds an authorization header for Azure CosmosDB from a URL. This differs from CosmosAuthorizationHeader in that it parses the URL for an appropriate ResourceID and ResourceType. Once it has figured out an appropriate resourceID and ResourceType it builds an instance of CosmosAuthorizationHeader and executes it. Note that if the URL convention changes for Azure CosmosDB, then this service may well generate an incorrect ResourceType/ResourceID; you may still need to use CosmosAuthorizationHeader directly. Given this example list of URLS; then then corresponding ResourceType / ResourceIDs will be generated. Essentially if the number of path fragments is even then the ResourceID is full path, and the ResourceType is the penultimate fragment; if the number of path fragments is odd then the ResourceID is everything up to the last / and the ResoucrceType is the last fragment. URL example ResourceType ResourceID https://azuredb.microsoft.com/ \"\" (the service will fail; since ResourceType must be set) \"\" https://azuredb.microsoft.com/dbs dbs \"\" https://azuredb.microsoft.com/dbs/tempdb/colls/tempcoll/docs docs dbs/tmpdb/colls/tempcoll https://azuredb.microsoft.com/dbs/tempdb/colls/tempcoll/docs/MyName docs dbs/tempdb/colls/tempcoll/docs/MyName https://azuredb.microsoft.com/dbs/tempdb/colls colls dbs/tempdb",
      "descriptionHtml" : "Builds an authorization header for Azure CosmosDB from a URL. \n<p> This differs from <a href=\"CosmosAuthorizationHeader.html\" title=\"class in com.adaptris.interlok.azure.cosmosdb\" target=\"_new\"><code>CosmosAuthorizationHeader</code></a> in that it parses the URL for an appropriate ResourceID and ResourceType. Once it has figured out an appropriate resourceID and ResourceType it builds an instance of <a href=\"CosmosAuthorizationHeader.html\" title=\"class in com.adaptris.interlok.azure.cosmosdb\" target=\"_new\"><code>CosmosAuthorizationHeader</code></a> and executes it. <strong>Note that if the URL convention changes for Azure CosmosDB, then this service may well generate an incorrect ResourceType/ResourceID</strong>; you may still need to use <a href=\"CosmosAuthorizationHeader.html\" title=\"class in com.adaptris.interlok.azure.cosmosdb\" target=\"_new\"><code>CosmosAuthorizationHeader</code></a> directly. </p> \n<p> Given this example list of URLS; then then corresponding ResourceType / ResourceIDs will be generated. Essentially if the number of path fragments is <code>even</code> then the ResourceID is full path, and the ResourceType is the penultimate fragment; if the number of path fragments is <code>odd</code> then the ResourceID is everything up to the last <code>/</code> and the ResoucrceType is the last fragment. </p>\n<table> \n <tbody>\n  <tr>\n   <th>URL example</th> \n   <th>ResourceType</th> \n   <th>ResourceID</th> \n  </tr>\n  <tr> \n   <td>https://azuredb.microsoft.com/</td> \n   <td><code>\"\"</code> (the service will fail; since ResourceType must be set)</td> \n   <td><code>\"\"</code></td> \n  </tr> \n  <tr> \n   <td>https://azuredb.microsoft.com/dbs</td> \n   <td><code>dbs</code></td> \n   <td><code>\"\"</code></td> \n  </tr> \n  <tr> \n   <td>https://azuredb.microsoft.com/dbs/tempdb/colls/tempcoll/docs</td> \n   <td><code>docs</code></td> \n   <td><code>dbs/tmpdb/colls/tempcoll</code></td> \n  </tr> \n  <tr> \n   <td>https://azuredb.microsoft.com/dbs/tempdb/colls/tempcoll/docs/MyName</td> \n   <td><code>docs</code></td> \n   <td><code>dbs/tempdb/colls/tempcoll/docs/MyName</code></td> \n  </tr> \n  <tr> \n   <td>https://azuredb.microsoft.com/dbs/tempdb/colls</td> \n   <td><code>colls</code></td> \n   <td><code>dbs/tempdb</code></td> \n  </tr> \n </tbody>\n</table>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CosmosAuthorizationHeaderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-cosmosdb/4.0.0B1-RELEASE/com/adaptris/interlok/azure/cosmosdb/CosmosAuthorizationHeaderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/CosmosDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-cosmosdb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/GuestAccess.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.GuestAccess",
      "className" : "GuestAccess",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "object",
      "alias" : "smb-guest-access",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "'Guest' access to a SMB share",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"\\'Guest\\' access to a SMB share\")\npublic class GuestAccess\nextends java.lang.Object\nimplements AuthenticationProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"\\'Guest\\' access to a SMB share\")\npublic class <span class=\"typeNameLabel\">GuestAccess</span>\nextends java.lang.Object\nimplements <a href=\"AuthenticationProvider.html\" title=\"interface in com.adaptris.filesystem.smbj\" target=\"_new\">AuthenticationProvider</a>",
      "description" : "Guest access to the SMB Share",
      "descriptionHtml" : "Guest access to the SMB Share",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.ExampleBranchingService",
      "className" : "ExampleBranchingService",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "service",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/MetadataRequestHeaders.html",
      "fullClassName" : "com.adaptris.core.http.apache.MetadataRequestHeaders",
      "className" : "MetadataRequestHeaders",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-metadata-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<org.apache.http.client.methods.HttpRequestBase>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">RequestHeaderProvider</a>&lt;org.apache.http.client.methods.HttpRequestBase&gt;",
      "description" : "Implementation of RequestHeaderProvider that applies AdaptrisMessage metadata as headers using a MetadataFilter.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>RequestHeaderProvider</code></a> that applies \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata as headers using a \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilter.html?is-external=true\" title=\"class or interface in com.adaptris.core.metadata\" class=\"externalLink\" target=\"_new\"><code>MetadataFilter</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/ClobColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.ClobColumnTranslator",
      "className" : "ClobColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-clob-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ClobColumnTranslator\nextends java.lang.Object\nimplements ColumnWriter, ColumnTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ClobColumnTranslator</span>\nextends java.lang.Object\nimplements <a href=\"ColumnWriter.html\" title=\"interface in com.adaptris.core.services.jdbc.types\" target=\"_new\">ColumnWriter</a>, <a href=\"ColumnTranslator.html\" title=\"interface in com.adaptris.core.services.jdbc.types\" target=\"_new\">ColumnTranslator</a>",
      "description" : "Column Translator implementation for handling CLOB types",
      "descriptionHtml" : "Column Translator implementation for handling CLOB types",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/ExpectedException.html",
      "fullClassName" : "com.adaptris.tester.runtime.ExpectedException",
      "className" : "ExpectedException",
      "packageName" : "com.adaptris.tester.runtime",
      "componentType" : "object",
      "alias" : "expected-exception",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class ExpectedException\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExpectedException</span>\nextends java.lang.Object",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/SerializableStatistic.html",
      "fullClassName" : "com.adaptris.core.interceptor.SerializableStatistic",
      "className" : "SerializableStatistic",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "object",
      "alias" : "interceptor-statistic",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SerializableStatistic\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SerializableStatistic</span>\nextends java.lang.Object",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/JmxOperationCallService.html",
      "fullClassName" : "com.adaptris.core.services.jmx.JmxOperationCallService",
      "className" : "JmxOperationCallService",
      "packageName" : "com.adaptris.core.services.jmx",
      "componentType" : "service",
      "alias" : "jmx-operation-call-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jmx.JmxConnection"
        ],
        "since" : "",
        "summary" : "Execute a JMX operation",
        "tag" : "service,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a JMX operation\",\n                  tag=\"service,jmx\",\n                  recommended=JmxConnection.class)\npublic class JmxOperationCallService\nextends JmxOperationServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a JMX operation\",\n                  tag=\"service,jmx\",\n                  recommended=<a href=\"../../jmx/JmxConnection.html\" title=\"class in com.adaptris.core.jmx\" target=\"_new\">JmxConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JmxOperationCallService</span>\nextends <a href=\"JmxOperationServiceImpl.html\" title=\"class in com.adaptris.core.services.jmx\" target=\"_new\">JmxOperationServiceImpl</a>",
      "description" : "Allows you to make a remote call on a JMX operation. You can set parameters for the call using ValueTranslator's and also a single ValueTranslator to help translate the result back into the Message. If you do not wish to translate the result of the operation, simply omit the \"result-value-translator\".",
      "descriptionHtml" : "<p> Allows you to make a remote call on a JMX operation. </p> \n<p> You can set parameters for the call using <a href=\"ValueTranslator.html\" title=\"interface in com.adaptris.core.services.jmx\" target=\"_new\"><code>ValueTranslator</code></a>'s and also a single <a href=\"ValueTranslator.html\" title=\"interface in com.adaptris.core.services.jmx\" target=\"_new\"><code>ValueTranslator</code></a> to help translate the result back into the Message. </p> \n<p> If you do not wish to translate the result of the operation, simply omit the \"result-value-translator\". </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "JmxOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/JmxOperationImpl.html"
        },
        {
          "name" : "JmxOperationServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/JmxOperationServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-expressions/4.0.0B1-RELEASE/com/adaptris/expressions/ExpressionService.html",
      "fullClassName" : "com.adaptris.expressions.ExpressionService",
      "className" : "ExpressionService",
      "packageName" : "com.adaptris.expressions",
      "componentType" : "service",
      "alias" : "expression-service",
      "deprecated" : false,
      "jarFileName" : "interlok-expressions.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A service that allows you to evaluate a mathematical algorithm.",
        "tag" : "service,expressions"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A service that allows you to evaluate a mathematical algorithm.\",\n                  tag=\"service,expressions\")\npublic class ExpressionService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A service that allows you to evaluate a mathematical algorithm.\",\n                  tag=\"service,expressions\")\npublic class <span class=\"typeNameLabel\">ExpressionService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Implementation of Service that allows you to configure a mathematical algorithm and parameters. Once all parameters have been evaluated to numerical values, the algorithm will be executed. To specify the parameters for the algorithm simply use as many DataInputParameter's as required. To choose where to set the result of the algorithm use any single DataOutputParameter. The default result of the expression will be a new metadata item with the key \"expressionResult\". When configuring your algorithm you can specify parameters using the dollar + index (starting at 1) of the configured input parameter; \"$1, $2, $3...\" An example: if you have configured 3 input parameters; a constant parameter and 2 metadata parameters in this order;    <parameters>\n       <constant-data-input-parameter>\n           <value>1000</value>\n       </constant-data-input-parameter>\n       <metadata-data-input-parameter>\n           <metadata-key>key1</metadata-key>\n       </metadata-data-input-parameter>\n       <metadata-data-input-parameter>\n           <metadata-key>key2</metadata-key>\n       </metadata-data-input-parameter>\n   </parameters>\n Then your algorithm may target those parameters by index like this;      ((($1 * $2) + 10) / $3)\n In this case we will take the constant configured input value of \"1000\" and multiple it by the numerical value of the metadata item named \"key1\", before finally dividing the result by the numerical value of the metadata item named \"key2\". Additionally you can also perform boolean calculations. To do this, you will need to override the result-formatter. By default we use NumericalResultFormatter, for algorithms that return true or false, you will need to set the result-formatter to boolean-result-formatter (BooleanResultFormatter) Then your algorithm can test and return boolean values. A few examples;      ($1 > $2)\n      ($1 <= $2)\n      ($1.equals($2))",
      "descriptionHtml" : "<p> Implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Service.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>Service</code></a> that allows you to configure a mathematical algorithm and parameters.<br> Once all parameters have been evaluated to numerical values, the algorithm will be executed. </p> \n<p> To specify the parameters for the algorithm simply use as many <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataInputParameter</code></a>'s as required. </p> \n<p> To choose where to set the result of the algorithm use any single <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataOutputParameter</code></a>.<br> The default result of the expression will be a new metadata item with the key \"expressionResult\". </p> \n<p> When configuring your algorithm you can specify parameters using the dollar + index (starting at 1) of the configured input parameter; \"$1, $2, $3...\" </p> \n<p> An example:<br> if you have configured 3 input parameters; a constant parameter and 2 metadata parameters in this order; </p>\n<pre>   &lt;parameters&gt;\n       &lt;constant-data-input-parameter&gt;\n           &lt;value&gt;1000&lt;/value&gt;\n       &lt;/constant-data-input-parameter&gt;\n       &lt;metadata-data-input-parameter&gt;\n           &lt;metadata-key&gt;key1&lt;/metadata-key&gt;\n       &lt;/metadata-data-input-parameter&gt;\n       &lt;metadata-data-input-parameter&gt;\n           &lt;metadata-key&gt;key2&lt;/metadata-key&gt;\n       &lt;/metadata-data-input-parameter&gt;\n   &lt;/parameters&gt;\n </pre> Then your algorithm may target those parameters by index like this; \n<pre>     ((($1 * $2) + 10) / $3)\n </pre> In this case we will take the constant configured input value of \"1000\" and multiple it by the numerical value of the metadata item named \"key1\", before finally dividing the result by the numerical value of the metadata item named \"key2\". \n<p></p> \n<p> Additionally you can also perform boolean calculations. To do this, you will need to override the result-formatter. By default we use <a href=\"NumericalResultFormatter.html\" title=\"class in com.adaptris.expressions\" target=\"_new\"><code>NumericalResultFormatter</code></a>, for algorithms that return true or false, you will need to set the result-formatter to boolean-result-formatter (<a href=\"BooleanResultFormatter.html\" title=\"class in com.adaptris.expressions\" target=\"_new\"><code>BooleanResultFormatter</code></a>) </p> \n<p> Then your algorithm can test and return boolean values. A few examples; <br> </p>\n<pre>     ($1 &gt; $2)\n </pre> \n<pre>     ($1 &lt;= $2)\n </pre> \n<pre>     ($1.equals($2))\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Scripting/Expressions",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-expressions",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/jdbc/JdbcUpsertCSV.html",
      "fullClassName" : "com.adaptris.csv.jdbc.JdbcUpsertCSV",
      "className" : "JdbcUpsertCSV",
      "packageName" : "com.adaptris.csv.jdbc",
      "componentType" : "service",
      "alias" : "csv-jdbc-upsert",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Insert/Update a CSV file into a database",
        "tag" : "service,csv,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Insert/Update a CSV file into a database\",\n                  tag=\"service,csv,jdbc\",\n                  since=\"3.6.5\")\npublic class JdbcUpsertCSV\nextends JdbcMapUpsert",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Insert/Update a CSV file into a database\",\n                  tag=\"service,csv,jdbc\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">JdbcUpsertCSV</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapUpsert.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\">JdbcMapUpsert</a>",
      "description" : "Convenience service for inserting/updating records in a database based on a CSV file.  \n   firstname, lastname, dob,id\n   alice, smith, 2017-01-01,1234\n   \n will effectively execute the following statement INSERT INTO table (firstname,lastname,dob,id) VALUES (?,?,?,?) or UPDATE table SET firstname=?, lastname=?, dob=? WHERE id = ?; if 1234 already exists as a row. Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail.",
      "descriptionHtml" : "Convenience service for inserting/updating records in a database based on a CSV file. \n<p> </p>\n<pre> <code>\n   firstname, lastname, dob,id\n   alice, smith, 2017-01-01,1234\n   </code>\n </pre> will effectively execute the following statement \n<code>INSERT INTO table (firstname,lastname,dob,id) VALUES (?,?,?,?)</code> or \n<code>UPDATE table SET firstname=?, lastname=?, dob=? WHERE id = ?;</code> if \n<code>1234</code> already exists as a row. \n<p></p> \n<p> Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html?is-external=true"
        },
        {
          "name" : "JdbcMapInsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapInsert.html?is-external=true"
        },
        {
          "name" : "JdbcMapUpsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapUpsert.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jsonpatch/PatchApplyFlag.html",
      "fullClassName" : "com.adaptris.core.json.jsonpatch.PatchApplyFlag",
      "className" : "PatchApplyFlag",
      "packageName" : "com.adaptris.core.json.jsonpatch",
      "componentType" : "object",
      "alias" : "json-patch-apply-flag",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : { },
      "annotationDetails" : "public enum PatchApplyFlag\nextends java.lang.Enum<PatchApplyFlag>",
      "annotationDetailsHtml" : "public enum <span class=\"typeNameLabel\">PatchApplyFlag</span>\nextends java.lang.Enum&lt;<a href=\"PatchApplyFlag.html\" title=\"enum in com.adaptris.core.json.jsonpatch\" target=\"_new\">PatchApplyFlag</a>&gt;",
      "description" : "Mirrors com.flipkart.zjsonpatch.CompatibilityFlags for configuration purposes. Since com.flipkart.zjsonpatch.CompatibilityFlags doesn't have a XStreamAlias, it renders poorly for configuration; this enum is simply here to make things look nice.",
      "descriptionHtml" : "Mirrors \n<code>com.flipkart.zjsonpatch.CompatibilityFlags</code> for configuration purposes. \n<p> Since <code>com.flipkart.zjsonpatch.CompatibilityFlags</code> doesn't have a XStreamAlias, it renders poorly for configuration; this enum is simply here to make things look nice. </p>",
      "inheritance" : [
        {
          "name" : "PatchApplyFlag",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jsonpatch/PatchApplyFlag.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/attachment/MultiAttachmentSmtpProducer.html",
      "fullClassName" : "com.adaptris.core.mail.attachment.MultiAttachmentSmtpProducer",
      "className" : "MultiAttachmentSmtpProducer",
      "packageName" : "com.adaptris.core.mail.attachment",
      "componentType" : "producer",
      "alias" : "multi-attachment-smtp-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Send an email for the facility for generating multiple attachments based on the current message",
        "tag" : "producer,email"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send an email for the facility for generating multiple attachments based on the current message\",\n                  tag=\"producer,email\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class MultiAttachmentSmtpProducer\nextends MailProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send an email for the facility for generating multiple attachments based on the current message\",\n                  tag=\"producer,email\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">MultiAttachmentSmtpProducer</span>\nextends <a href=\"../MailProducer.html\" title=\"class in com.adaptris.core.mail\" target=\"_new\">MailProducer</a>",
      "description" : "Implementation of the AdaptrisMessageProducer interface for handling email. Because email is implicitly asynchronous, Request-Reply is invalid, and as such if the request method is used, an UnsupportedOperationException is thrown. Available Content-Encoding schemes that are supported are the same as those specified in RFC2045. They include \"base64\", \"quoted-printable\", \"7bit\", \"8bit\" and \"binary The Content-Type may be any arbitary string such as application/edi-x12, however if no appropriate DataContentHandler is installed, then the results can be undefined The following metadata elements will change behaviour. emailsubject - Override the configured subject with the value stored against this key. emailcc - If this is set, this this comma separated list will override any configured CC list. It is possible to control the underlying behaviour of this producer through the use of various properties that will be passed to the javax.mail.Session instance. You need to refer to the javamail documentation to see a list of the available properties and meanings. This implementation differs from com.adaptris.core.mail.DefaultSmtpProducer as it allows you to construct a mail message with multiple attachments from the same AdaptrisMessage. Additionally, this does not use any configured encode as the MailCreator interface will create the appropriate outputs.",
      "descriptionHtml" : "Implementation of the AdaptrisMessageProducer interface for handling email. \n<p> Because email is implicitly asynchronous, Request-Reply is invalid, and as such if the request method is used, an <code>UnsupportedOperationException</code> is thrown. </p>\n<p> Available Content-Encoding schemes that are supported are the same as those specified in RFC2045. They include \"base64\", \"quoted-printable\", \"7bit\", \"8bit\" and \"binary </p> \n<p> The Content-Type may be any arbitary string such as application/edi-x12, however if no appropriate <code>DataContentHandler</code> is installed, then the results can be undefined </p> \n<p> The following metadata elements will change behaviour. </p>\n<ul> \n <li>emailsubject - Override the configured subject with the value stored against this key. </li>\n <li>emailcc - If this is set, this this comma separated list will override any configured CC list.</li> \n</ul> \n<p> It is possible to control the underlying behaviour of this producer through the use of various properties that will be passed to the <code>javax.mail.Session</code> instance. You need to refer to the javamail documentation to see a list of the available properties and meanings. </p> \n<p> This implementation differs from <code>com.adaptris.core.mail.DefaultSmtpProducer</code> as it allows you to construct a mail message with multiple attachments from the same AdaptrisMessage. Additionally, this does not use any configured encode as the MailCreator interface will create the appropriate outputs. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        },
        {
          "name" : "MailProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/MailProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/findreplace/FindAndReplaceService.html",
      "fullClassName" : "com.adaptris.core.services.findreplace.FindAndReplaceService",
      "className" : "FindAndReplaceService",
      "packageName" : "com.adaptris.core.services.findreplace",
      "componentType" : "service",
      "alias" : "find-and-replace-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Perform a find and replace on the message",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a find and replace on the message\",\n                  tag=\"service\")\npublic class FindAndReplaceService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a find and replace on the message\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">FindAndReplaceService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Implementation of Service which allows find and replace operations on the message payload. You can specify one or more FindAndReplaceUnit's, each of which defines the value to \"find\" and the value to \"replace\" with. Each FindAndReplaceUnit will be applied in order and can be used to replace the first instance or all instances.",
      "descriptionHtml" : "Implementation of \n<a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> which allows find and replace operations on the message payload. \n<p> You can specify one or more <a href=\"FindAndReplaceUnit.html\" title=\"class in com.adaptris.core.services.findreplace\" target=\"_new\"><code>FindAndReplaceUnit</code></a>'s, each of which defines the value to \"find\" and the value to \"replace\" with. Each <a href=\"FindAndReplaceUnit.html\" title=\"class in com.adaptris.core.services.findreplace\" target=\"_new\"><code>FindAndReplaceUnit</code></a> will be applied in order and can be used to replace the first instance or all instances. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/OracleStatementCreator.html",
      "fullClassName" : "com.adaptris.jdbc.OracleStatementCreator",
      "className" : "OracleStatementCreator",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "oracle-statement-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class OracleStatementCreator\nextends java.lang.Object\nimplements CallableStatementCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OracleStatementCreator</span>\nextends java.lang.Object\nimplements <a href=\"CallableStatementCreator.html\" title=\"interface in com.adaptris.jdbc\" target=\"_new\">CallableStatementCreator</a>",
      "description" : "Oracle CallableStatement generator.",
      "descriptionHtml" : "Oracle CallableStatement generator.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsPollingConsumer.html",
      "fullClassName" : "com.adaptris.core.jms.JmsPollingConsumer",
      "className" : "JmsPollingConsumer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "consumer",
      "alias" : "jms-poller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from a JMS broker (queue or topic) by actively polling it",
        "tag" : "consumer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from a JMS broker (queue or topic) by actively polling it\",\n                  tag=\"consumer,jms\",\n                  recommended=NullConnection.class)\npublic class JmsPollingConsumer\nextends JmsPollingConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from a JMS broker (queue or topic) by actively polling it\",\n                  tag=\"consumer,jms\",\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JmsPollingConsumer</span>\nextends <a href=\"JmsPollingConsumerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsPollingConsumerImpl</a>",
      "description" : "Concrete JmsPollingConsumerImpl implementation that can target queues or topics via an RFC6167 style destination. This differs from the standard PtpPollingConsumer and PasPollingConsumer in that it supports a destination that is specified in RFC6167 style. For instance jms:queue:myQueueName will consume from a queue called myQueueName and jms:topic:myTopicName from a topic called myTopicName If you specify a topic as the destination then you should also configure JmsPollingConsumerImpl.setClientId(String). There are also some custom parameters that are used as part of the URI defining the topic. subscriptionId - which indicates the subscriptionId that should be used when attaching a subscriber to a topic; jms:topic:MyTopicName?subscriptionId=myId would return a JmsDestination.subscriptionId() of myId. This must be specified. noLocal - which corresponds to the Session.createConsumer(javax.jms.Destination, String, boolean) noLocal setting. This defaults to false, if not specified. For instance you could have the following destinations: jms:queue:MyQueueName jms:topic:MyTopicName?subscriptionId=mySubscriptionId",
      "descriptionHtml" : "Concrete \n<a href=\"JmsPollingConsumerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>JmsPollingConsumerImpl</code></a> implementation that can target queues or topics via an RFC6167 style destination. \n<p> This differs from the standard <a href=\"PtpPollingConsumer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>PtpPollingConsumer</code></a> and <a href=\"PasPollingConsumer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>PasPollingConsumer</code></a> in that it supports a destination that is specified in RFC6167 style. For instance <code>jms:queue:myQueueName</code> will consume from a queue called <code>myQueueName</code> and <code>jms:topic:myTopicName</code> from a topic called <code>myTopicName</code> </p> \n<p> If you specify a topic as the destination then you should also configure <a href=\"JmsPollingConsumerImpl.html#setClientId(java.lang.String)\" target=\"_new\"><code>JmsPollingConsumerImpl.setClientId(String)</code></a>. There are also some custom parameters that are used as part of the URI defining the topic. </p>\n<ul> \n <li><code>subscriptionId</code> - which indicates the subscriptionId that should be used when attaching a subscriber to a topic; <code>jms:topic:MyTopicName?subscriptionId=myId</code> would return a <a href=\"JmsDestination.html#subscriptionId()\" target=\"_new\"><code>JmsDestination.subscriptionId()</code></a> of <code>myId</code>. This must be specified.</li> \n <li><code>noLocal</code> - which corresponds to the <code>Session.createConsumer(javax.jms.Destination, String, boolean)</code> noLocal setting. This defaults to false, if not specified.</li> \n <ul> \n  <p></p> \n  <p> For instance you could have the following destinations: </p>\n  <ul> \n   <li>jms:queue:MyQueueName</li> \n   <li>jms:topic:MyTopicName?subscriptionId=mySubscriptionId</li> \n  </ul> \n  <p></p>\n </ul>\n</ul>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "BaseJmsPollingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/BaseJmsPollingConsumerImpl.html"
        },
        {
          "name" : "JmsPollingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsPollingConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/RetryStoreListService.html",
      "fullClassName" : "com.adaptris.core.http.jetty.retry.RetryStoreListService",
      "className" : "RetryStoreListService",
      "packageName" : "com.adaptris.core.http.jetty.retry",
      "componentType" : "service",
      "alias" : "retry-store-list-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "List messages available to be retried from the retry store",
        "tag" : "retry"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"List messages available to be retried from the retry store\",\n                  since=\"3.11.1\",\n                  tag=\"retry\")\npublic class RetryStoreListService\nextends RetryStoreServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"List messages available to be retried from the retry store\",\n                  since=\"3.11.1\",\n                  tag=\"retry\")\npublic class <span class=\"typeNameLabel\">RetryStoreListService</span>\nextends <a href=\"RetryStoreServiceImpl.html\" title=\"class in com.adaptris.core.http.jetty.retry\" target=\"_new\">RetryStoreServiceImpl</a>",
      "description" : "List messages in the configured retry store. While not tightly coupled it is designed as a supporting service for use with RetryFromJetty.",
      "descriptionHtml" : "List messages in the configured retry store. \n<p> While not tightly coupled it is designed as a supporting service for use with <a href=\"RetryFromJetty.html\" title=\"class in com.adaptris.core.http.jetty.retry\" target=\"_new\"><code>RetryFromJetty</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "RetryStoreServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/RetryStoreServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-ehcache/4.0.0B1-RELEASE/com/adaptris/core/cache/ehcache/EhcacheEventListener.html",
      "fullClassName" : "com.adaptris.core.cache.ehcache.EhcacheEventListener",
      "className" : "EhcacheEventListener",
      "packageName" : "com.adaptris.core.cache.ehcache",
      "componentType" : "object",
      "alias" : "ehcache-event-listener",
      "deprecated" : false,
      "jarFileName" : "interlok-ehcache.jar",
      "profile" : { },
      "annotationDetails" : "public class EhcacheEventListener\nextends java.lang.Object\nimplements net.sf.ehcache.event.CacheEventListener",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EhcacheEventListener</span>\nextends java.lang.Object\nimplements net.sf.ehcache.event.CacheEventListener",
      "description" : "Implementation of CacheEventListener that proxies the Ehcache's own cache event notifications",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/CacheEventListener.html?is-external=true\" title=\"class or interface in com.adaptris.core.cache\" class=\"externalLink\" target=\"_new\"><code>CacheEventListener</code></a> that proxies the Ehcache's own cache event notifications",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/EHCache",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-ehcache",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DefaultPoolFactory.html",
      "fullClassName" : "com.adaptris.core.jdbc.DefaultPoolFactory",
      "className" : "DefaultPoolFactory",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-default-pool-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Build a connection pool using C3P0",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Build a connection pool using C3P0\")\npublic class DefaultPoolFactory\nextends java.lang.Object\nimplements JdbcPoolFactory, ConnectionPoolBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Build a connection pool using C3P0\")\npublic class <span class=\"typeNameLabel\">DefaultPoolFactory</span>\nextends java.lang.Object\nimplements <a href=\"JdbcPoolFactory.html\" title=\"interface in com.adaptris.core.jdbc\" target=\"_new\">JdbcPoolFactory</a>, <a href=\"ConnectionPoolBuilder.html\" title=\"interface in com.adaptris.core.jdbc\" target=\"_new\">ConnectionPoolBuilder</a>",
      "description" : "Constructs a C3P0 connection pool for use with JdbcPooledConnection and PluggableJdbcPooledConnection.",
      "descriptionHtml" : "Constructs a C3P0 connection pool for use with \n<a href=\"JdbcPooledConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>JdbcPooledConnection</code></a> and \n<a href=\"PluggableJdbcPooledConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>PluggableJdbcPooledConnection</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-nats/4.0.0B1-RELEASE/com/adaptris/interlok/nats/BasicNatsConnection.html",
      "fullClassName" : "com.adaptris.interlok.nats.BasicNatsConnection",
      "className" : "BasicNatsConnection",
      "packageName" : "com.adaptris.interlok.nats",
      "componentType" : "connection",
      "alias" : "nats-server-basic-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-nats.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "Basic connection to a NATS server",
        "tag" : "nats.io, nats"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Basic connection to a NATS server\",\n                  tag=\"nats.io, nats\",\n                  since=\"3.9.3\")\npublic class BasicNatsConnection\nextends NatsConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Basic connection to a NATS server\",\n                  tag=\"nats.io, nats\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">BasicNatsConnection</span>\nextends <a href=\"NatsConnection.html\" title=\"class in com.adaptris.interlok.nats\" target=\"_new\">NatsConnection</a>",
      "description" : "Basic Connection to a NATS server. This connection assumes that Nats#connect(String) is sufficient configuration for connecting to your NATS server (i.e. everything you need is configurable via the URL). Generally put your 'closest' NATS server as the URL, since it will discover other servers after it initially connects and use those as required. Configuring any kind of ConnectionErrorHandler has no effect on this type of connection, as we will be relying on the automatic reconnection that happens behind the seens from the NATS core java client. By default outgoing messages will be buffered in memory; pending reconnection and subsequent redelivery.",
      "descriptionHtml" : "Basic Connection to a NATS server. \n<p> This connection assumes that <code>Nats#connect(String)</code> is sufficient configuration for connecting to your NATS server (i.e. everything you need is configurable via the URL). Generally put your 'closest' NATS server as the URL, since it will discover other servers after it initially connects and use those as required. </p> \n<p> Configuring any kind of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ConnectionErrorHandler</code></a> has no effect on this type of connection, as we will be relying on the automatic reconnection that happens behind the seens from the NATS core java client. By default outgoing messages will be buffered in memory; pending reconnection and subsequent redelivery. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true"
        },
        {
          "name" : "NatsConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-nats/4.0.0B1-RELEASE/com/adaptris/interlok/nats/NatsConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/NATS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-nats",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/CompositeMetadataFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.CompositeMetadataFilter",
      "className" : "CompositeMetadataFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "composite-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeMetadataFilter\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeMetadataFilter</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "MetadataFilter implementation that wraps a list of filters.",
      "descriptionHtml" : "<a href=\"MetadataFilter.html\" title=\"interface in com.adaptris.core.metadata\" target=\"_new\"><code>MetadataFilter</code></a> implementation that wraps a list of filters.",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportTestResults.html",
      "fullClassName" : "com.adaptris.tester.report.junit.JUnitReportTestResults",
      "className" : "JUnitReportTestResults",
      "packageName" : "com.adaptris.tester.report.junit",
      "componentType" : "object",
      "alias" : "testresults",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class JUnitReportTestResults\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JUnitReportTestResults</span>\nextends java.lang.Object",
      "description" : "Main class for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. When tests are executed via ServiceTest.execute() the results are produced as this corresponding class.",
      "descriptionHtml" : "Main class for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. \n<p>When tests are executed via <a href=\"../../runtime/ServiceTest.html#execute()\" target=\"_new\"><code>ServiceTest.execute()</code></a> the results are produced as this corresponding class.</p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/lms/StaxGetRootElementService.html",
      "fullClassName" : "com.adaptris.stax.lms.StaxGetRootElementService",
      "className" : "StaxGetRootElementService",
      "packageName" : "com.adaptris.stax.lms",
      "componentType" : "service",
      "alias" : "stax-get-root-element",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Gets the root element of Xml via STaX and sets it as metadata",
        "tag" : "service,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Gets the root element of Xml via STaX and sets it as metadata\",\n                  tag=\"service,xml\")\npublic class StaxGetRootElementService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Gets the root element of Xml via STaX and sets it as metadata\",\n                  tag=\"service,xml\")\npublic class <span class=\"typeNameLabel\">StaxGetRootElementService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/ConfiguredProperty.html",
      "fullClassName" : "com.adaptris.core.msmq.javonet.ConfiguredProperty",
      "className" : "ConfiguredProperty",
      "packageName" : "com.adaptris.core.msmq.javonet",
      "componentType" : "object",
      "alias" : "javonet-msmq-configured-property",
      "deprecated" : false,
      "jarFileName" : "interlok-msmq-javonet.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredProperty\nextends MessageProperty",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredProperty</span>\nextends <a href=\"MessageProperty.html\" title=\"class in com.adaptris.core.msmq.javonet\" target=\"_new\">MessageProperty</a>",
      "description" : "Add a statically configured value as a Message property.",
      "descriptionHtml" : "Add a statically configured value as a \n<a href=\"Message.html\" title=\"interface in com.adaptris.core.msmq.javonet\" target=\"_new\"><code>Message</code></a> property.",
      "inheritance" : [
        {
          "name" : "MessageProperty",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/MessageProperty.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MSMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-msmq-javonet",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/DateValueConverter.html",
      "fullClassName" : "com.adaptris.core.mongodb.DateValueConverter",
      "className" : "DateValueConverter",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "object",
      "alias" : "mongodb-date-value-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : { },
      "annotationDetails" : "public class DateValueConverter\nextends ValueConverter<java.util.Date>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DateValueConverter</span>\nextends <a href=\"ValueConverter.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">ValueConverter</a>&lt;java.util.Date&gt;",
      "inheritance" : [
        {
          "name" : "ValueConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/ValueConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/SplittingXmlPayloadTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.SplittingXmlPayloadTranslator",
      "className" : "SplittingXmlPayloadTranslator",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-splitting-xml-payload-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SplittingXmlPayloadTranslator\nextends XmlPayloadTranslatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SplittingXmlPayloadTranslator</span>\nextends <a href=\"XmlPayloadTranslatorImpl.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">XmlPayloadTranslatorImpl</a>",
      "description" : "Translate the ResultSet contents into some number of XML messages. The format of the output messages is as follows:  \n <Results>\n   <Row>\n     <column1>...</column1>\n     <column2>...</column2>\n     ...\n   </Row>\n   <Row> ... </Row>\n </Results>\n \n Note that column1, column2, etc. is replaced by the actual column name as returned in the query. As such, the column name must be a valid XML element name. If the actual name (in the database table definition) is not valid, the query should specify an alias name in the query. E.g: SELECT \"col 1\" AS \"col1\" FROM mytable; The output messages will be constructed by the same MessageFactory as the incoming message. If a MessageFactory has been configured then that one will be used instead (useful in case the incoming message is file-backed, for example). If you want to see how many rows were processed you can set one/both of the following; Item Description Value result-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query Metadata item name update-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement Metadata item name",
      "descriptionHtml" : "Translate the ResultSet contents into some number of XML messages. \n<p> The format of the output messages is as follows: </p>\n<pre> <code>\n &lt;Results&gt;\n   &lt;Row&gt;\n     &lt;column1&gt;...&lt;/column1&gt;\n     &lt;column2&gt;...&lt;/column2&gt;\n     ...\n   &lt;/Row&gt;\n   &lt;Row&gt; ... &lt;/Row&gt;\n &lt;/Results&gt;\n </code>\n </pre> \n<p></p> \n<p> Note that column1, column2, etc. is replaced by the actual column name as returned in the query. As such, the column name must be a valid XML element name. If the actual name (in the database table definition) is not valid, the query should specify an alias name in the query. E.g: <code>SELECT \"col 1\" AS \"col1\" FROM mytable;</code> </p> \n<p> The output messages will be constructed by the same MessageFactory as the incoming message. If a MessageFactory has been configured then that one will be used instead (useful in case the incoming message is file-backed, for example). </p> \n<p> If you want to see how many rows were processed you can set one/both of the following; </p>\n<table> \n <tbody>\n  <tr> \n   <th>Item</th> \n   <th>Description</th> \n   <th>Value</th> \n  </tr> \n  <tr> \n   <td>result-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query</td>\n   <td>Metadata item name</td> \n  </tr> \n  <tr> \n   <td>update-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement</td>\n   <td>Metadata item name</td> \n  </tr> \n </tbody>\n</table> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html"
        },
        {
          "name" : "StyledResultTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html"
        },
        {
          "name" : "ResultSetTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorImp.html"
        },
        {
          "name" : "XmlPayloadTranslatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/XmlPayloadTranslatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/ByteArrayFromPayload.html",
      "fullClassName" : "com.adaptris.core.common.ByteArrayFromPayload",
      "className" : "ByteArrayFromPayload",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "byte-array-from-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Returns the message payload as as byte array.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Returns the message payload as as byte array.\",\n                  since=\"3.9.0\")\npublic class ByteArrayFromPayload\nextends java.lang.Object\nimplements MessageWrapper<byte[]>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Returns the message payload as as byte array.\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">ByteArrayFromPayload</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\">MessageWrapper</a>&lt;byte[]&gt;",
      "description" : "Returns the message payload as as byte array.",
      "descriptionHtml" : "Returns the message payload as as byte array.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/NullsNotSupportedConverter.html",
      "fullClassName" : "com.adaptris.util.text.NullsNotSupportedConverter",
      "className" : "NullsNotSupportedConverter",
      "packageName" : "com.adaptris.util.text",
      "componentType" : "object",
      "alias" : "nulls-not-supported-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullsNotSupportedConverter\nextends java.lang.Object\nimplements NullConverter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullsNotSupportedConverter</span>\nextends java.lang.Object\nimplements <a href=\"NullConverter.html\" title=\"interface in com.adaptris.util.text\" target=\"_new\">NullConverter</a>",
      "description" : "Implementation of NullConverter that throws an UnsupportedOperationException if null is the param.",
      "descriptionHtml" : "Implementation of NullConverter that throws an UnsupportedOperationException if null is the param.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/FirstRowMetadataTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.FirstRowMetadataTranslator",
      "className" : "FirstRowMetadataTranslator",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-first-row-metadata-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FirstRowMetadataTranslator\nextends MetadataResultSetTranslatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FirstRowMetadataTranslator</span>\nextends <a href=\"MetadataResultSetTranslatorImpl.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">MetadataResultSetTranslatorImpl</a>",
      "description" : "Translate the first row of the result set into metadata. Each column of the result set is used to create a new item of metadata. The metadata key for each new metadata item is the combination of MetadataResultSetTranslatorImpl.getMetadataKeyPrefix(), MetadataResultSetTranslatorImpl.getSeparator() and the column name (or label if it's different). The value is the value of the column. If you want to see how many rows were processed you can set one/both of the following; Item Description Value result-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query Metadata item name update-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement Metadata item name",
      "descriptionHtml" : "Translate the first row of the result set into metadata. \n<p> Each column of the result set is used to create a new item of metadata. The metadata key for each new metadata item is the combination of <a href=\"MetadataResultSetTranslatorImpl.html#getMetadataKeyPrefix()\" target=\"_new\"><code>MetadataResultSetTranslatorImpl.getMetadataKeyPrefix()</code></a>, <a href=\"MetadataResultSetTranslatorImpl.html#getSeparator()\" target=\"_new\"><code>MetadataResultSetTranslatorImpl.getSeparator()</code></a> and the column name (or label if it's different). The value is the value of the column. </p> \n<p> If you want to see how many rows were processed you can set one/both of the following; </p>\n<table> \n <tbody>\n  <tr> \n   <th>Item</th> \n   <th>Description</th> \n   <th>Value</th> \n  </tr> \n  <tr> \n   <td>result-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query</td>\n   <td>Metadata item name</td> \n  </tr> \n  <tr> \n   <td>update-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement</td>\n   <td>Metadata item name</td> \n  </tr> \n </tbody>\n</table> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html"
        },
        {
          "name" : "StyledResultTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html"
        },
        {
          "name" : "ResultSetTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorImp.html"
        },
        {
          "name" : "MetadataResultSetTranslatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/MetadataResultSetTranslatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-jms/4.0.0B1-RELEASE/com/adaptris/xa/jms/exception/XAJmsConnectionErrorHandler.html",
      "fullClassName" : "com.adaptris.xa.jms.exception.XAJmsConnectionErrorHandler",
      "className" : "XAJmsConnectionErrorHandler",
      "packageName" : "com.adaptris.xa.jms.exception",
      "componentType" : "object",
      "alias" : "xa-jms-connection-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-jms.jar",
      "profile" : { },
      "annotationDetails" : "public class XAJmsConnectionErrorHandler\nextends ConnectionErrorHandlerImp\nimplements javax.jms.ExceptionListener",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XAJmsConnectionErrorHandler</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectionErrorHandlerImp</a>\nimplements javax.jms.ExceptionListener",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-jms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jsr107-cache/4.0.0B1-RELEASE/com/adaptris/core/cache/jcache/DefaultEventListener.html",
      "fullClassName" : "com.adaptris.core.cache.jcache.DefaultEventListener",
      "className" : "DefaultEventListener",
      "packageName" : "com.adaptris.core.cache.jcache",
      "componentType" : "object",
      "alias" : "default-jsr107-event-listener",
      "deprecated" : false,
      "jarFileName" : "interlok-jsr107-cache.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultEventListener\nextends java.lang.Object\nimplements AllEventListener, javax.cache.configuration.Factory<javax.cache.event.CacheEntryListener<java.lang.String,​java.lang.Object>>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultEventListener</span>\nextends java.lang.Object\nimplements <a href=\"AllEventListener.html\" title=\"interface in com.adaptris.core.cache.jcache\" target=\"_new\">AllEventListener</a>, javax.cache.configuration.Factory&lt;javax.cache.event.CacheEntryListener&lt;java.lang.String,​java.lang.Object&gt;&gt;",
      "description" : "Implementation of CacheEventListener that proxies javax.cache event notifications.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/CacheEventListener.html?is-external=true\" title=\"class or interface in com.adaptris.core.cache\" class=\"externalLink\" target=\"_new\"><code>CacheEventListener</code></a> that proxies javax.cache event notifications.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/JSR107",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jsr107-cache",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/GetValueFromCache.html",
      "fullClassName" : "com.adaptris.core.services.cache.GetValueFromCache",
      "className" : "GetValueFromCache",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "service",
      "alias" : "get-single-value-from-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.9.2",
        "summary" : "Retrieve a value from the configured cache",
        "tag" : "service,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Retrieve a value from the configured cache\",\n                  since=\"3.9.2\",\n                  tag=\"service,cache\",\n                  recommended=CacheConnection.class)\npublic class GetValueFromCache\nextends SingleKeyValueCacheImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Retrieve a value from the configured cache\",\n                  since=\"3.9.2\",\n                  tag=\"service,cache\",\n                  recommended=<a href=\"CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">GetValueFromCache</span>\nextends <a href=\"SingleKeyValueCacheImpl.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">SingleKeyValueCacheImpl</a>",
      "description" : "Version of RetrieveFromCacheService that doesn't use CacheEntryEvaluator. Most of the time, you only want to retrieve a single item to the cache rather than a list of items; this simplified service allows you to do just that. It does not have a list of entries that are evaluated, you simply specify a key and a CacheValueTranslator which is used to insert the value from the cache into the current message.",
      "descriptionHtml" : "Version of \n<a href=\"RetrieveFromCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>RetrieveFromCacheService</code></a> that doesn't use \n<a href=\"CacheEntryEvaluator.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheEntryEvaluator</code></a>. \n<p> Most of the time, you only want to retrieve a single item to the cache rather than a list of items; this simplified service allows you to do just that. It does not have a list of entries that are evaluated, you simply specify a key and a <a href=\"CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheValueTranslator</code></a> which is used to insert the value from the cache into the current message. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CacheServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceImpl.html"
        },
        {
          "name" : "SingleKeyCacheService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/SingleKeyCacheService.html"
        },
        {
          "name" : "SingleKeyValueCacheImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/SingleKeyValueCacheImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/SizeDescending.html",
      "fullClassName" : "com.adaptris.core.fs.enhanced.SizeDescending",
      "className" : "SizeDescending",
      "packageName" : "com.adaptris.core.fs.enhanced",
      "componentType" : "object",
      "alias" : "fs-sort-size-descending",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SizeDescending\nextends SafeFileSorter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SizeDescending</span>\nextends <a href=\"SafeFileSorter.html\" title=\"class in com.adaptris.core.fs.enhanced\" target=\"_new\">SafeFileSorter</a>",
      "description" : "Sort the list of files by their size in reverse order",
      "descriptionHtml" : "Sort the list of files by their size in reverse order",
      "inheritance" : [
        {
          "name" : "SafeFileSorter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/SafeFileSorter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataExistsBranchingService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataExistsBranchingService",
      "className" : "MetadataExistsBranchingService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-exists-branching-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Perform a branch based on whether one or more metadata keys exist or not",
        "tag" : "service,branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a branch based on whether one or more metadata keys exist or not\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class MetadataExistsBranchingService\nextends MetadataBranchingServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a branch based on whether one or more metadata keys exist or not\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">MetadataExistsBranchingService</span>\nextends <a href=\"MetadataBranchingServiceImp.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataBranchingServiceImp</a>",
      "description" : "Service which sets the ID of the Service to apply next based on whether any value is present against any configured metadata key.",
      "descriptionHtml" : "<p> <code>Service</code> which sets the ID of the <code>Service</code> to apply next based on whether any value is present against any configured metadata key. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "BranchingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/BranchingServiceImp.html"
        },
        {
          "name" : "MetadataBranchingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataBranchingServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterStateSummary.html",
      "fullClassName" : "com.adaptris.core.AdapterStateSummary",
      "className" : "AdapterStateSummary",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "adapter-state-summary",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AdapterStateSummary\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdapterStateSummary</span>\nextends java.lang.Object",
      "description" : "Summary of the state of an Adapter and associated Channels",
      "descriptionHtml" : "<p> Summary of the state of an <a href=\"Adapter.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>Adapter</code></a> and associated <a href=\"Channel.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>Channel</code></a>s </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/DefaultProducerSessionFactory.html",
      "fullClassName" : "com.adaptris.core.jms.DefaultProducerSessionFactory",
      "className" : "DefaultProducerSessionFactory",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-default-producer-session",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultProducerSessionFactory\nextends ProducerSessionFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultProducerSessionFactory</span>\nextends <a href=\"ProducerSessionFactoryImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">ProducerSessionFactoryImpl</a>",
      "description" : "Default implementation of ProducerSessionFactory. The default implementation creates a single session, and reuses that until restarted.",
      "descriptionHtml" : "Default implementation of \n<a href=\"ProducerSessionFactory.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>ProducerSessionFactory</code></a>. \n<p> The default implementation creates a single session, and reuses that until restarted. </p>",
      "inheritance" : [
        {
          "name" : "ProducerSessionFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ProducerSessionFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/OutParameters.html",
      "fullClassName" : "com.adaptris.core.jdbc.OutParameters",
      "className" : "OutParameters",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-out-parameters",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class OutParameters\nextends JdbcParameterList<OutParameter>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OutParameters</span>\nextends <a href=\"JdbcParameterList.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">JdbcParameterList</a>&lt;<a href=\"OutParameter.html\" title=\"interface in com.adaptris.core.jdbc\" target=\"_new\">OutParameter</a>&gt;",
      "description" : "This class contains the OUT parameters that a stored procedure will require to be executed.",
      "descriptionHtml" : "This class contains the OUT parameters that a stored procedure will require to be executed.",
      "inheritance" : [
        {
          "name" : "JdbcParameterList",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcParameterList.html"
        },
        {
          "name" : "OutParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/OutParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/ConfiguredPrivateKeyPasswordProvider.html",
      "fullClassName" : "com.adaptris.core.security.ConfiguredPrivateKeyPasswordProvider",
      "className" : "ConfiguredPrivateKeyPasswordProvider",
      "packageName" : "com.adaptris.core.security",
      "componentType" : "object",
      "alias" : "configured-private-key-password-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredPrivateKeyPasswordProvider\nextends java.lang.Object\nimplements PrivateKeyPasswordProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredPrivateKeyPasswordProvider</span>\nextends java.lang.Object\nimplements <a href=\"PrivateKeyPasswordProvider.html\" title=\"interface in com.adaptris.core.security\" target=\"_new\">PrivateKeyPasswordProvider</a>",
      "description" : "Private key password provider which explicitly configures the password in configuration Although there is nothing to stop you from having a plain text private key password configured in adapter configuration using this provider; it is strongly discouraged. You should consider using the Password.encode(String, String) method to generate an encoded password for inserting into configuration.",
      "descriptionHtml" : "Private key password provider which explicitly configures the password in configuration \n<p> Although there is nothing to stop you from having a plain text private key password configured in adapter configuration using this provider; it is strongly discouraged. You should consider using the <a href=\"../../security/password/Password.html#encode(java.lang.String,java.lang.String)\" target=\"_new\"><code>Password.encode(String, String)</code></a> method to generate an encoded password for inserting into configuration. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyAsyncWorkflowInterceptor.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JettyAsyncWorkflowInterceptor",
      "className" : "JettyAsyncWorkflowInterceptor",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "interceptor",
      "alias" : "jetty-async-workflow-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.7.3",
        "summary" : "Interceptor that allows a HTTP request to be handled multiple workflows",
        "tag" : "interceptor,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that allows a HTTP request to be handled multiple workflows\",\n                  tag=\"interceptor,http,https\",\n                  since=\"3.7.3\")\npublic class JettyAsyncWorkflowInterceptor\nextends JettyWorkflowInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that allows a HTTP request to be handled multiple workflows\",\n                  tag=\"interceptor,http,https\",\n                  since=\"3.7.3\")\npublic class <span class=\"typeNameLabel\">JettyAsyncWorkflowInterceptor</span>\nextends <a href=\"JettyWorkflowInterceptorImpl.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">JettyWorkflowInterceptorImpl</a>",
      "description" : "Allows you to handle a single HTTP request across 2 workflows within the same Interlok instance. Configure one of these with mode=REQUEST in the workflow with the JettyMessageConsumer; and then in your reply workflow, configure one of these with mode=RESPONSE. When the reply workflow is finished; then the jetty response will be committed back to the caller.",
      "descriptionHtml" : "Allows you to handle a single HTTP request across 2 workflows within the same Interlok instance. \n<p> Configure one of these with <code>mode=REQUEST</code> in the workflow with the <a href=\"JettyMessageConsumer.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\"><code>JettyMessageConsumer</code></a>; and then in your reply workflow, configure one of these with <code>mode=RESPONSE</code>. When the reply workflow is finished; then the jetty response will be committed back to the caller. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        },
        {
          "name" : "JettyWorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyWorkflowInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SwitchPayloadService.html",
      "fullClassName" : "com.adaptris.core.SwitchPayloadService",
      "className" : "SwitchPayloadService",
      "packageName" : "com.adaptris.core",
      "componentType" : "service",
      "alias" : "switch-payload-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Switch the active payload of a multi-payload message",
        "tag" : "multi-payload,multi,payload,switch"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Switch the active payload of a multi-payload message\",\n                  tag=\"multi-payload,multi,payload,switch\")\npublic class SwitchPayloadService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Switch the active payload of a multi-payload message\",\n                  tag=\"multi-payload,multi,payload,switch\")\npublic class <span class=\"typeNameLabel\">SwitchPayloadService</span>\nextends <a href=\"ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Switch the message payload from one payload to another. \n <switch-payload-service>\n   <unique-id>switch-payload-unique-id</unique-id>\n   <new-payload-id>payload-1</new-payload-id>\n </switch-payload-service>",
      "descriptionHtml" : "Switch the message payload from one payload to another. \n<pre><code>\n &lt;switch-payload-service&gt;\n   &lt;unique-id&gt;switch-payload-unique-id&lt;/unique-id&gt;\n   &lt;new-payload-id&gt;payload-1&lt;/new-payload-id&gt;\n &lt;/switch-payload-service&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/MetadataValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jmx.MetadataValueTranslator",
      "className" : "MetadataValueTranslator",
      "packageName" : "com.adaptris.core.services.jmx",
      "componentType" : "object",
      "alias" : "jmx-metadata-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataValueTranslator\nextends ValueTranslatorImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataValueTranslator</span>\nextends <a href=\"ValueTranslatorImp.html\" title=\"class in com.adaptris.core.services.jmx\" target=\"_new\">ValueTranslatorImp</a>",
      "description" : "This implementation of ValueTranslator will pull a metadata value from the AdaptrisMessage to be used as a Jmx operation parameter. Conversely we can also take a string result from a Jmx operation call and create a new/overwrite an existing metadata item with the new value. If your Jmx operation requires a different type of data other than String, simply set the type to the fully qualified name of the required type. A conversion will then take place which will require your your desired class to have a string constructor, or be a Date, where the value is the milliseconds.",
      "descriptionHtml" : "<p> This implementation of <a href=\"ValueTranslator.html\" title=\"interface in com.adaptris.core.services.jmx\" target=\"_new\"><code>ValueTranslator</code></a> will pull a metadata value from the <a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> to be used as a Jmx operation parameter. Conversely we can also take a string result from a Jmx operation call and create a new/overwrite an existing metadata item with the new value. </p> \n<p> If your Jmx operation requires a different type of data other than String, simply set the type to the fully qualified name of the required type. A conversion will then take place which will require your your desired class to have a string constructor, or be a <code>Date</code>, where the value is the milliseconds. </p>",
      "inheritance" : [
        {
          "name" : "ValueTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/ValueTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullProduceExceptionHandler.html",
      "fullClassName" : "com.adaptris.core.NullProduceExceptionHandler",
      "className" : "NullProduceExceptionHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "null-produce-exception-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullProduceExceptionHandler\nextends ProduceExceptionHandlerImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullProduceExceptionHandler</span>\nextends <a href=\"ProduceExceptionHandlerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ProduceExceptionHandlerImp</a>",
      "description" : "Null implementation of ProduceExceptionHandler which logs a message only.",
      "descriptionHtml" : "<p> Null implementation of <code>ProduceExceptionHandler</code> which logs a message only. </p>",
      "inheritance" : [
        {
          "name" : "ProduceExceptionHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceExceptionHandlerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/InlineConfigBuilder.html",
      "fullClassName" : "com.adaptris.sftp.InlineConfigBuilder",
      "className" : "InlineConfigBuilder",
      "packageName" : "com.adaptris.sftp",
      "componentType" : "object",
      "alias" : "sftp-inline-config",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class InlineConfigBuilder\nextends ConfigBuilderImpl\nimplements com.jcraft.jsch.ConfigRepository",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InlineConfigBuilder</span>\nextends <a href=\"ConfigBuilderImpl.html\" title=\"class in com.adaptris.sftp\" target=\"_new\">ConfigBuilderImpl</a>\nimplements com.jcraft.jsch.ConfigRepository",
      "description" : "A statically configured SSH ConfigRepository with global defaults for all hosts.",
      "descriptionHtml" : "A statically configured SSH \n<code>ConfigRepository</code> with global defaults for all hosts.",
      "inheritance" : [
        {
          "name" : "ConfigBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/ConfigBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/transform/validate/IsNullContentValidation.html",
      "fullClassName" : "com.adaptris.transform.validate.IsNullContentValidation",
      "className" : "IsNullContentValidation",
      "packageName" : "com.adaptris.transform.validate",
      "componentType" : "object",
      "alias" : "xml-content-is-null",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class IsNullContentValidation\nextends java.lang.Object\nimplements ContentValidation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IsNullContentValidation</span>\nextends java.lang.Object\nimplements <a href=\"ContentValidation.html\" title=\"interface in com.adaptris.transform.validate\" target=\"_new\">ContentValidation</a>",
      "description" : "Check the content and ensure it is not null.",
      "descriptionHtml" : "Check the content and ensure it is not null.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-excel/4.0.0B1-RELEASE/com/adaptris/core/poi/ExcelToXml.html",
      "fullClassName" : "com.adaptris.core.poi.ExcelToXml",
      "className" : "ExcelToXml",
      "packageName" : "com.adaptris.core.poi",
      "componentType" : "service",
      "alias" : "excel-to-xml-service",
      "deprecated" : false,
      "jarFileName" : "interlok-excel.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Convert an Excel Spreadsheet to XML",
        "tag" : "service,transform,excel,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Convert an Excel Spreadsheet to XML\",\n                  tag=\"service,transform,excel,xml\")\npublic class ExcelToXml\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Convert an Excel Spreadsheet to XML\",\n                  tag=\"service,transform,excel,xml\")\npublic class <span class=\"typeNameLabel\">ExcelToXml</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Service to extract data from an Excel spreadsheet.",
      "descriptionHtml" : "Service to extract data from an Excel spreadsheet.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/Excel",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-excel",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html",
      "fullClassName" : "com.adaptris.core.NullConnection",
      "className" : "NullConnection",
      "packageName" : "com.adaptris.core",
      "componentType" : "connection",
      "alias" : "null-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "The default NO-OP connection",
        "tag" : "connections"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"The default NO-OP connection\",\n                  tag=\"connections\")\npublic final class NullConnection\nextends NoOpConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"The default NO-OP connection\",\n                  tag=\"connections\")\npublic final class <span class=\"typeNameLabel\">NullConnection</span>\nextends <a href=\"NoOpConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NoOpConnection</a>",
      "description" : "No Op connection",
      "descriptionHtml" : "No Op connection",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "NoOpConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.StaticCounterFailFirstMockMessageProducer",
      "className" : "StaticCounterFailFirstMockMessageProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/DateType.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.DateType",
      "className" : "DateType",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-date-type",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class DateType\nextends java.lang.Object\nimplements TypeWrapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DateType</span>\nextends java.lang.Object\nimplements <a href=\"TypeWrapper.html\" title=\"interface in com.adaptris.core.jms.oracle\" target=\"_new\">TypeWrapper</a>",
      "description" : "Handles Date fields.",
      "descriptionHtml" : "Handles Date fields.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/XmlExceptionReport.html",
      "fullClassName" : "com.adaptris.core.services.exception.XmlExceptionReport",
      "className" : "XmlExceptionReport",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "xml-exception-report",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "ExceptionReportGenerator implementation that produces XML (without the stacktrace)",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"ExceptionReportGenerator implementation that produces XML (without the stacktrace)\",\n                  since=\"3.8.4\")\npublic class XmlExceptionReport\nextends java.lang.Object\nimplements ExceptionReportGenerator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"ExceptionReportGenerator implementation that produces XML (without the stacktrace)\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">XmlExceptionReport</span>\nextends java.lang.Object\nimplements <a href=\"ExceptionReportGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\">ExceptionReportGenerator</a>",
      "description" : "ExceptionReportGenerator implementation that renders the exception as XML.",
      "descriptionHtml" : "<a href=\"ExceptionReportGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionReportGenerator</code></a> implementation that renders the exception as XML.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/MetadataToJsonService.html",
      "fullClassName" : "com.adaptris.core.transform.json.MetadataToJsonService",
      "className" : "MetadataToJsonService",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "service",
      "alias" : "metadata-to-json-service",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Convert metadata values to a JSON object that will be set as the payload of the message",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Convert metadata values to a JSON object that will be set as the payload of the message\")\npublic class MetadataToJsonService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Convert metadata values to a JSON object that will be set as the payload of the message\")\npublic class <span class=\"typeNameLabel\">MetadataToJsonService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Convert all metadata values to a JSON object in the message payload.",
      "descriptionHtml" : "Convert all metadata values to a JSON object in the message payload.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnectionErrorHandler.html",
      "fullClassName" : "com.adaptris.core.NullConnectionErrorHandler",
      "className" : "NullConnectionErrorHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "null-connection-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullConnectionErrorHandler\nextends ConnectionErrorHandlerImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullConnectionErrorHandler</span>\nextends <a href=\"ConnectionErrorHandlerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ConnectionErrorHandlerImp</a>",
      "description" : "Implementation of ConnectionErrorHandler for use with polling consumers where you do not want an Exception thrown back to run to re-init the Channel.",
      "descriptionHtml" : "<p> Implementation of <code>ConnectionErrorHandler</code> for use with polling consumers where you do not want an Exception thrown back to run to re-init the Channel. </p>",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/FileBackedMessageFactory.html",
      "fullClassName" : "com.adaptris.core.lms.FileBackedMessageFactory",
      "className" : "FileBackedMessageFactory",
      "packageName" : "com.adaptris.core.lms",
      "componentType" : "object",
      "alias" : "file-backed-message-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FileBackedMessageFactory\nextends DefaultMessageFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FileBackedMessageFactory</span>\nextends <a href=\"../DefaultMessageFactory.html\" title=\"class in com.adaptris.core\" target=\"_new\">DefaultMessageFactory</a>",
      "description" : "Message factory that returns an AdaptrisMessage Implementation that is backed by a pair of files. In order to limit the number of temporary files that will exist in the filesystem; FileCleaningTracker is used to monitor all the files that are created by temporary files. These are deleted when the underlying message is garbage collected.",
      "descriptionHtml" : "Message factory that returns an AdaptrisMessage Implementation that is backed by a pair of files. \n<p> In order to limit the number of temporary files that will exist in the filesystem; FileCleaningTracker is used to monitor all the files that are created by temporary files. These are deleted when the underlying message is garbage collected. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageFactory.html"
        },
        {
          "name" : "DefaultMessageFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultMessageFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/Base64EncodeService.html",
      "fullClassName" : "com.adaptris.core.services.Base64EncodeService",
      "className" : "Base64EncodeService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "base64-encode-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Base64 encode the message",
        "tag" : "service,base64"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Base64 encode the message\",\n                  tag=\"service,base64\")\npublic class Base64EncodeService\nextends Base64Service",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Base64 encode the message\",\n                  tag=\"service,base64\")\npublic class <span class=\"typeNameLabel\">Base64EncodeService</span>\nextends <a href=\"Base64Service.html\" title=\"class in com.adaptris.core.services\" target=\"_new\">Base64Service</a>",
      "description" : "Base 64 Encode the message.",
      "descriptionHtml" : "Base 64 Encode the message.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "Base64Service",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/Base64Service.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/auth/ConfiguredUsernamePassword.html",
      "fullClassName" : "com.adaptris.core.http.auth.ConfiguredUsernamePassword",
      "className" : "ConfiguredUsernamePassword",
      "packageName" : "com.adaptris.core.http.auth",
      "componentType" : "object",
      "alias" : "http-configured-username-password",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredUsernamePassword\nextends UserPassAuthentication",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredUsernamePassword</span>\nextends <a href=\"UserPassAuthentication.html\" title=\"class in com.adaptris.core.http.auth\" target=\"_new\">UserPassAuthentication</a>",
      "description" : "Authenticate using the standard PasswordAuthentication method with a static username and password",
      "descriptionHtml" : "Authenticate using the standard \n<code>PasswordAuthentication</code> method with a static username and password",
      "inheritance" : [
        {
          "name" : "UserPassAuthentication",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/auth/UserPassAuthentication.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-okhttp/4.0.0B1-RELEASE/com/adaptris/okhttp/OKHTTPProducer.html",
      "fullClassName" : "com.adaptris.okhttp.OKHTTPProducer",
      "className" : "OKHTTPProducer",
      "packageName" : "com.adaptris.okhttp",
      "componentType" : "producer",
      "alias" : "okhttp-http-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-okhttp.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "adphttpresponse"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Make a HTTP request to a remote server using the OKHTTP library",
        "tag" : "producer,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Make a HTTP request to a remote server using the OKHTTP library\",\n                  tag=\"producer,http,https\",\n                  metadata=\"adphttpresponse\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class OKHTTPProducer\nextends HttpProducer<okhttp3.Request.Builder,​okhttp3.Response>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Make a HTTP request to a remote server using the OKHTTP library\",\n                  tag=\"producer,http,https\",\n                  metadata=\"adphttpresponse\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">OKHTTPProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client.net\" class=\"externalLink\" target=\"_new\">HttpProducer</a>&lt;okhttp3.Request.Builder,​okhttp3.Response&gt;",
      "description" : "A HTTP producer that uses the OKHTTP; in time it will (hopefully) make use of some of the more advanced features of OKHTTP.",
      "descriptionHtml" : "A HTTP producer that uses the OKHTTP; in time it will (hopefully) make use of some of the more advanced features of OKHTTP.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "HttpProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpProducer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/OkHttp",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-okhttp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/arguments/JSONSprayFormat.html",
      "fullClassName" : "com.adaptris.hpcc.arguments.JSONSprayFormat",
      "className" : "JSONSprayFormat",
      "packageName" : "com.adaptris.hpcc.arguments",
      "componentType" : "object",
      "alias" : "spray-format-json",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : { },
      "annotationDetails" : "public class JSONSprayFormat\nextends SprayFormat",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JSONSprayFormat</span>\nextends <a href=\"SprayFormat.html\" title=\"class in com.adaptris.hpcc.arguments\" target=\"_new\">SprayFormat</a>",
      "description" : "SprayFormat implementation that allows the configuration of command specific arguments for format=json sprays. rowpath no \"/\" maxrecordsize no The maximum size of each record, in bytes. 8192 NOTE: Defaults are driven by dfuplus command them selves, they will not be set unless explicitly set.",
      "descriptionHtml" : "SprayFormat implementation that allows the configuration of command specific arguments for \n<code>format=json</code> sprays. \n<table> \n <tbody>\n  <tr>\n   <td>rowpath</td>\n   <td>no</td>\n   <td></td>\n   <td>\"/\"</td>\n  </tr> \n  <tr>\n   <td>maxrecordsize</td>\n   <td>no</td>\n   <td>The maximum size of each record, in bytes.</td>\n   <td>8192</td>\n  </tr> \n </tbody>\n</table> \n<p>NOTE: Defaults are driven by dfuplus command them selves, they will not be set unless explicitly set.</p>",
      "inheritance" : [
        {
          "name" : "SprayFormat",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/arguments/SprayFormat.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetadataStatistic.html",
      "fullClassName" : "com.adaptris.core.interceptor.MetadataStatistic",
      "className" : "MetadataStatistic",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "object",
      "alias" : "interceptor-metadata-statistic",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataStatistic\nextends InterceptorStatistic\nimplements java.io.Externalizable, java.lang.Cloneable",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataStatistic</span>\nextends <a href=\"InterceptorStatistic.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">InterceptorStatistic</a>\nimplements java.io.Externalizable, java.lang.Cloneable",
      "description" : "A metadata statistic stored by concrete implementations MetadataMetricsInterceptorImpl",
      "descriptionHtml" : "A metadata statistic stored by concrete implementations \n<a href=\"MetadataMetricsInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>MetadataMetricsInterceptorImpl</code></a>",
      "inheritance" : [
        {
          "name" : "InterceptorStatistic",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/InterceptorStatistic.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpConnection.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.SolaceJcsmpConnection",
      "className" : "SolaceJcsmpConnection",
      "packageName" : "com.adaptris.core.jcsmp.solace",
      "componentType" : "connection",
      "alias" : "solace-jcsmp-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "A Solace native JCSMP connection used to create JCSMP sessions to your Solace appliance.",
        "tag" : "connection,solace,jcsmp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP connection used to create JCSMP sessions to your Solace appliance.\",\n                  tag=\"connection,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class SolaceJcsmpConnection\nextends AllowsRetriesConnection\nimplements SolaceJcsmpSessionCreator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP connection used to create JCSMP sessions to your Solace appliance.\",\n                  tag=\"connection,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AllowsRetriesConnection</a>\nimplements <a href=\"SolaceJcsmpSessionCreator.html\" title=\"interface in com.adaptris.core.jcsmp.solace\" target=\"_new\">SolaceJcsmpSessionCreator</a>",
      "description" : "The Interlok AdaptrisConnection that will allow us to connect to your Solace router via the JCSMP api. Simply supply the host, vpn name, user and password.",
      "descriptionHtml" : "<p> The Interlok <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisConnection</code></a> that will allow us to connect to your Solace router via the JCSMP api. </p> \n<p> Simply supply the host, vpn name, user and password. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/CompareTimestamps.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.CompareTimestamps",
      "className" : "CompareTimestamps",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "object",
      "alias" : "metadata-compare-timestamps",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Compares a configured metadata timestamp value against the supplied value.",
        "tag" : "operator,comparator,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Compares a configured metadata timestamp value against the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class CompareTimestamps\nextends ComparatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Compares a configured metadata timestamp value against the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class <span class=\"typeNameLabel\">CompareTimestamps</span>\nextends <a href=\"ComparatorImpl.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\">ComparatorImpl</a>",
      "description" : "Used with MetadataComparisonService. Compares two dates using Date.compareTo(Date). The result will be the result of that operation as a string so effectively -1, 0, or 1.",
      "descriptionHtml" : "Used with \n<a href=\"MetadataComparisonService.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\"><code>MetadataComparisonService</code></a>. \n<p> Compares two dates using <code>Date.compareTo(Date)</code>. The result will be the result of that operation as a string so effectively <code>-1, 0, or 1</code>. </p>",
      "inheritance" : [
        {
          "name" : "ComparatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ComparatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/FixedIntervalPoller.html",
      "fullClassName" : "com.adaptris.core.FixedIntervalPoller",
      "className" : "FixedIntervalPoller",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "fixed-interval-poller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FixedIntervalPoller\nextends ScheduledTaskPoller",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FixedIntervalPoller</span>\nextends <a href=\"ScheduledTaskPoller.html\" title=\"class in com.adaptris.core\" target=\"_new\">ScheduledTaskPoller</a>",
      "description" : "Implementation of Poller which polls at a configurable fixed interval.",
      "descriptionHtml" : "<p> Implementation of <a href=\"Poller.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Poller</code></a> which polls at a configurable fixed interval. </p>",
      "inheritance" : [
        {
          "name" : "PollerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PollerImp.html"
        },
        {
          "name" : "ScheduledTaskPoller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ScheduledTaskPoller.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/SizeAscending.html",
      "fullClassName" : "com.adaptris.core.fs.enhanced.SizeAscending",
      "className" : "SizeAscending",
      "packageName" : "com.adaptris.core.fs.enhanced",
      "componentType" : "object",
      "alias" : "fs-sort-size",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SizeAscending\nextends SafeFileSorter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SizeAscending</span>\nextends <a href=\"SafeFileSorter.html\" title=\"class in com.adaptris.core.fs.enhanced\" target=\"_new\">SafeFileSorter</a>",
      "description" : "Sort the list of files by their size.",
      "descriptionHtml" : "Sort the list of files by their size.",
      "inheritance" : [
        {
          "name" : "SafeFileSorter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/SafeFileSorter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-ehcache/4.0.0B1-RELEASE/com/adaptris/core/cache/ehcache/EhcacheFromUrl.html",
      "fullClassName" : "com.adaptris.core.cache.ehcache.EhcacheFromUrl",
      "className" : "EhcacheFromUrl",
      "packageName" : "com.adaptris.core.cache.ehcache",
      "componentType" : "object",
      "alias" : "ehcache-from-url",
      "deprecated" : false,
      "jarFileName" : "interlok-ehcache.jar",
      "profile" : { },
      "annotationDetails" : "public class EhcacheFromUrl\nextends DefaultEhcache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EhcacheFromUrl</span>\nextends <a href=\"DefaultEhcache.html\" title=\"class in com.adaptris.core.cache.ehcache\" target=\"_new\">DefaultEhcache</a>",
      "description" : "Implementation of Cache based on Ehcache. This uses the CacheManager.create(URL) to create the cache manager which allows you to specify a specific configuration URL. In the event that the cache manager does not contain a cache that matches the name EhcacheCache.getCacheName(), then a new one will be implemented based on the additional parameters that are configured. If the cache already exists, then it is used as is, without any additional configuration.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/Cache.html?is-external=true\" title=\"class or interface in com.adaptris.core.cache\" class=\"externalLink\" target=\"_new\"><code>Cache</code></a> based on Ehcache. \n<p> This uses the <code>CacheManager.create(URL)</code> to create the cache manager which allows you to specify a specific configuration URL. In the event that the cache manager does not contain a cache that matches the name <a href=\"EhcacheCache.html#getCacheName()\" target=\"_new\"><code>EhcacheCache.getCacheName()</code></a>, then a new one will be implemented based on the additional parameters that are configured. If the cache already exists, then it is used as is, without any additional configuration. </p>",
      "inheritance" : [
        {
          "name" : "EhcacheCache",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-ehcache/4.0.0B1-RELEASE/com/adaptris/core/cache/ehcache/EhcacheCache.html"
        },
        {
          "name" : "DefaultEhcache",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-ehcache/4.0.0B1-RELEASE/com/adaptris/core/cache/ehcache/DefaultEhcache.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/EHCache",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-ehcache",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportTestSuite.html",
      "fullClassName" : "com.adaptris.tester.report.junit.JUnitReportTestSuite",
      "className" : "JUnitReportTestSuite",
      "packageName" : "com.adaptris.tester.report.junit",
      "componentType" : "object",
      "alias" : "testsuite",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class JUnitReportTestSuite\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JUnitReportTestSuite</span>\nextends java.lang.Object",
      "description" : "Child of JUnitReportTestSuites for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. When tests are executed via Test.execute(String, TestClient, ServiceTestConfig) the results are produced as this corresponding class.",
      "descriptionHtml" : "Child of \n<a href=\"JUnitReportTestSuites.html\" title=\"class in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestSuites</code></a> for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. \n<p> When tests are executed via <a href=\"../../runtime/Test.html#execute(java.lang.String,com.adaptris.tester.runtime.clients.TestClient,com.adaptris.tester.runtime.ServiceTestConfig)\" target=\"_new\"><code>Test.execute(String, TestClient, ServiceTestConfig)</code></a> the results are produced as this corresponding class. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/QuartzCronPoller.html",
      "fullClassName" : "com.adaptris.core.QuartzCronPoller",
      "className" : "QuartzCronPoller",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "quartz-cron-poller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class QuartzCronPoller\nextends PollerImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">QuartzCronPoller</span>\nextends <a href=\"PollerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">PollerImp</a>",
      "description" : "Implementation of Poller which provides cron style scheduled polling based on the Quartz project. A single Quartz Scheduler per Adapter (or Classloader) is used by all configured instances of QuartzCronPoller. A file quartz.properties is used to configure the Scheduler. This file is included in quartz.jar with default settings which should be suitable for most of our purposes. In an Adapter deployment with more than 10 consumers using QuartzCronPoller you may wish to increase the size of the Scheduler's thread pool. To do this place the amended copy of the properties file in the Adapter Framework config directory. For deployments with less 10 consumers using this Poller, there is little or no benefit in increasing the size of the thread pool; each AdaptrisPollingConsumer instance is single threaded. Although this class was created to allow 'every weekday at 10am' style scheduling, it can also be used to poll e.g. 'every 10 seconds'. Where a poll has not completed before the next scheduled poll is triggered, the subsequent poll will fail quietly, because it cannot obtain the associated lock. The following is copied directly from the Quartz CronExpression javadocs. Cron expressions are comprised of 6 required fields and one optional field separated by white space. The fields respectively are described as follows: Field Name Allowed Values Allowed Special Characters Seconds 0-59 , - * / Minutes 0-59 , - * / Hours 0-23 , - * / Day-of-month 1-31 , - * ? / L W C Month 1-12 or JAN-DEC , - * / Day-of-Week 1-7 or SUN-SAT , - * ? / L # Year (Optional) empty, 1970-2099 , - * / The '*' character is used to specify all values. For example, \"*\" in the minute field means \"every minute\". The '?' character is allowed for the day-of-month and day-of-week fields. It is used to specify 'no specific value'. This is useful when you need to specify something in one of the two fileds, but not the other. The '-' character is used to specify ranges For example \"10-12\" in the hour field means \"the hours 10, 11 and 12\". The ',' character is used to specify additional values. For example \"MON,WED,FRI\" in the day-of-week field means \"the days Monday, Wednesday, and Friday\". The '/' character is used to specify increments. For example \"0/15\" in the seconds field means \"the seconds 0, 15, 30, and 45\". And \"5/15\" in the seconds field means \"the seconds 5, 20, 35, and 50\". Specifying '*' before the '/' is equivalent to specifying 0 is the value to start with. Essentially, for each field in the expression, there is a set of numbers that can be turned on or off. For seconds and minutes, the numbers range from 0 to 59. For hours 0 to 23, for days of the month 0 to 31, and for months 1 to 12. The \"/\" character simply helps you turn on every \"nth\" value in the given set. Thus \"7/6\" in the month field only turns on month \"7\", it does NOT mean every 6th month, please note that subtlety. The 'L' character is allowed for the day-of-month and day-of-week fields. This character is short-hand for \"last\", but it has different meaning in each of the two fields. For example, the value \"L\" in the day-of-month field means \"the last day of the month\" - day 31 for January, day 28 for February on non-leap years. If used in the day-of-week field by itself, it simply means \"7\" or \"SAT\". But if used in the day-of-week field after another value, it means \"the last xxx day of the month\" - for example \"6L\" means \"the last friday of the month\". When using the 'L' option, it is important not to specify lists, or ranges of values, as you'll get confusing results. The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify \"15W\" as the value for the day-of-month field, the meaning is: \"the nearest weekday to the 15th of the month\". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify \"1W\" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to \"last weekday of the month\". The '#' character is allowed for the day-of-week field. This character is used to specify \"the nth\" day of the month. For example, the value of \"6#3\" in the day-of-week field means the third Friday of the month (day 6 = Friday and \"#3\" = the 3rd one in the month). Other examples: \"2#1\" = the first Monday of the month and \"4#5\" = the fifth Wednesday of the month. Note that if you specify \"#5\" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. The legal characters and the names of months and days of the week are not case sensitive. Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in on of these fields).",
      "descriptionHtml" : "<p> Implementation of <code>Poller</code> which provides <i>cron</i> style scheduled polling based on the <a href=\"http://www.quartz-scheduler.org/\" target=\"_new\">Quartz project</a>. </p> \n<p> A single Quartz Scheduler per Adapter (or Classloader) is used by all configured instances of QuartzCronPoller. </p> \n<p> A file <code>quartz.properties</code> is used to configure the Scheduler. This file is included in quartz.jar with default settings which should be suitable for most of our purposes. In an Adapter deployment with more than 10 consumers using <a href=\"QuartzCronPoller.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>QuartzCronPoller</code></a> you may wish to increase the size of the <code>Scheduler</code>'s thread pool. To do this place the amended copy of the properties file in the Adapter Framework config directory. </p> \n<p> For deployments with less 10 consumers using this <a href=\"Poller.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Poller</code></a>, there is little or no benefit in increasing the size of the thread pool; each <a href=\"AdaptrisPollingConsumer.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>AdaptrisPollingConsumer</code></a> instance is single threaded. </p> \n<p> Although this class was created to allow 'every weekday at 10am' style scheduling, it can also be used to poll e.g. 'every 10 seconds'. Where a poll has not completed before the next scheduled poll is triggered, the subsequent poll will fail quietly, because it cannot obtain the associated lock. </p> \n<p> The following is copied directly from the Quartz CronExpression javadocs. </p> \n<p></p> Cron expressions are comprised of 6 required fields and one optional field separated by white space. The fields respectively are described as follows: \n<table cellspacing=\"8\"> \n <tbody>\n  <tr> \n   <th align=\"left\">Field Name</th> \n   <th align=\"left\">&nbsp;</th> \n   <th align=\"left\">Allowed Values</th> \n   <th align=\"left\">&nbsp;</th> \n   <th align=\"left\">Allowed Special Characters</th> \n  </tr> \n  <tr> \n   <td align=\"left\"><code>Seconds</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>0-59</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>, - * /</code></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><code>Minutes</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>0-59</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>, - * /</code></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><code>Hours</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>0-23</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>, - * /</code></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><code>Day-of-month</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>1-31</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>, - * ? / L W C</code></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><code>Month</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>1-12 or JAN-DEC</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>, - * /</code></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><code>Day-of-Week</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>1-7 or SUN-SAT</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>, - * ? / L #</code></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><code>Year (Optional)</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>empty, 1970-2099</code></td> \n   <td align=\"left\">&nbsp;</td> \n   <td align=\"left\"><code>, - * /</code></td> \n  </tr> \n </tbody>\n</table> \n<p></p> The '*' character is used to specify all values. For example, \"*\" in the minute field means \"every minute\". \n<p></p> \n<p> The '?' character is allowed for the day-of-month and day-of-week fields. It is used to specify 'no specific value'. This is useful when you need to specify something in one of the two fileds, but not the other. </p> \n<p> The '-' character is used to specify ranges For example \"10-12\" in the hour field means \"the hours 10, 11 and 12\". </p> \n<p> The ',' character is used to specify additional values. For example \"MON,WED,FRI\" in the day-of-week field means \"the days Monday, Wednesday, and Friday\". </p> \n<p> The '/' character is used to specify increments. For example \"0/15\" in the seconds field means \"the seconds 0, 15, 30, and 45\". And \"5/15\" in the seconds field means \"the seconds 5, 20, 35, and 50\". Specifying '*' before the '/' is equivalent to specifying 0 is the value to start with. Essentially, for each field in the expression, there is a set of numbers that can be turned on or off. For seconds and minutes, the numbers range from 0 to 59. For hours 0 to 23, for days of the month 0 to 31, and for months 1 to 12. The \"/\" character simply helps you turn on every \"nth\" value in the given set. Thus \"7/6\" in the month field only turns on month \"7\", it does NOT mean every 6th month, please note that subtlety. </p> \n<p> The 'L' character is allowed for the day-of-month and day-of-week fields. This character is short-hand for \"last\", but it has different meaning in each of the two fields. For example, the value \"L\" in the day-of-month field means \"the last day of the month\" - day 31 for January, day 28 for February on non-leap years. If used in the day-of-week field by itself, it simply means \"7\" or \"SAT\". But if used in the day-of-week field after another value, it means \"the last xxx day of the month\" - for example \"6L\" means \"the last friday of the month\". When using the 'L' option, it is important not to specify lists, or ranges of values, as you'll get confusing results. </p> \n<p> The 'W' character is allowed for the day-of-month field. This character is used to specify the weekday (Monday-Friday) nearest the given day. As an example, if you were to specify \"15W\" as the value for the day-of-month field, the meaning is: \"the nearest weekday to the 15th of the month\". So if the 15th is a Saturday, the trigger will fire on Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you specify \"1W\" as the value for day-of-month, and the 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary of a month's days. The 'W' character can only be specified when the day-of-month is a single day, not a range or list of days. </p> \n<p> The 'L' and 'W' characters can also be combined for the day-of-month expression to yield 'LW', which translates to \"last weekday of the month\". </p> \n<p> The '#' character is allowed for the day-of-week field. This character is used to specify \"the nth\" day of the month. For example, the value of \"6#3\" in the day-of-week field means the third Friday of the month (day 6 = Friday and \"#3\" = the 3rd one in the month). Other examples: \"2#1\" = the first Monday of the month and \"4#5\" = the fifth Wednesday of the month. Note that if you specify \"#5\" and there is not 5 of the given day-of-week in the month, then no firing will occur that month. </p> \n<p> The legal characters and the names of months and days of the week are not case sensitive. </p> \n<p> Support for specifying both a day-of-week and a day-of-month value is not complete (you'll need to use the '?' character in on of these fields). </p>",
      "inheritance" : [
        {
          "name" : "PollerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PollerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AdvancedJdbcPooledConnection.html",
      "fullClassName" : "com.adaptris.core.jdbc.AdvancedJdbcPooledConnection",
      "className" : "AdvancedJdbcPooledConnection",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "connection",
      "alias" : "advanced-jdbc-pooled-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a database using a JDBC driver; connection pooling handled via C3P0",
        "tag" : "connections,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a database using a JDBC driver; connection pooling handled via C3P0\",\n                  tag=\"connections,jdbc\")\npublic class AdvancedJdbcPooledConnection\nextends JdbcPooledConnectionImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a database using a JDBC driver; connection pooling handled via C3P0\",\n                  tag=\"connections,jdbc\")\npublic class <span class=\"typeNameLabel\">AdvancedJdbcPooledConnection</span>\nextends <a href=\"JdbcPooledConnectionImpl.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">JdbcPooledConnectionImpl</a>",
      "description" : "A DatabaseConnection instance that provides connection pooling via c3p0.",
      "descriptionHtml" : "A \n<a href=\"DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>DatabaseConnection</code></a> instance that provides connection pooling via c3p0.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html"
        },
        {
          "name" : "DatabaseConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DatabaseConnection.html"
        },
        {
          "name" : "JdbcPooledConnectionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcPooledConnectionImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ApacheHttpProducer.html",
      "fullClassName" : "com.adaptris.core.http.apache.ApacheHttpProducer",
      "className" : "ApacheHttpProducer",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "producer",
      "alias" : "apache-http-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : {
        "author" : "Adaptris Ltd",
        "branchSelector" : "false",
        "metadata" : [
          "adphttpresponse"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Make a HTTP(s) request to a remote server using the Apache HTTP Client",
        "tag" : "producer,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Make a HTTP(s) request to a remote server using the Apache HTTP Client\",\n                  tag=\"producer,http,https\",\n                  metadata=\"adphttpresponse\",\n                  recommended=com.adaptris.core.NullConnection.class,\n                  author=\"Adaptris Ltd\")\npublic class ApacheHttpProducer\nextends HttpProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Make a HTTP(s) request to a remote server using the Apache HTTP Client\",\n                  tag=\"producer,http,https\",\n                  metadata=\"adphttpresponse\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>,\n                  author=\"Adaptris Ltd\")\npublic class <span class=\"typeNameLabel\">ApacheHttpProducer</span>\nextends <a href=\"HttpProducer.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\">HttpProducer</a>",
      "description" : "Producer implementation that uses the Apache HTTP Client as the underlying transport.",
      "descriptionHtml" : "Producer implementation that uses the Apache HTTP Client as the underlying transport.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "HttpProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/HttpProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/IntegerStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.IntegerStatementParameter",
      "className" : "IntegerStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-integer-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class IntegerStatementParameter\nextends TypedStatementParameter<java.lang.Integer>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IntegerStatementParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.lang.Integer&gt;",
      "description" : "Integer Statement Parameter. If convert-null is true, then empty/blank/whitespace only values will default to 0.",
      "descriptionHtml" : "<code>Integer</code> Statement Parameter. \n<p> If <code>convert-null</code> is true, then empty/blank/whitespace only values will default to 0. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcEscapedTimestampParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.JdbcEscapedTimestampParameter",
      "className" : "JdbcEscapedTimestampParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-escaped-timestamp-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JdbcEscapedTimestampParameter\nextends TypedStatementParameter<java.sql.Timestamp>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JdbcEscapedTimestampParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.sql.Timestamp&gt;",
      "description" : "A Timestamp extension to StatementParameter. This ignores the query-class configuration, and always attempts to format the string into a java.sql.Timestamp using Timestamp.valueOf(String); if convert-null is true, then empty/blank/whitespace only values will be substituted by System.currentTimeMillis().",
      "descriptionHtml" : "A \n<code>Timestamp</code> extension to StatementParameter. \n<p> This ignores the query-class configuration, and always attempts to format the string into a java.sql.Timestamp using <code>Timestamp.valueOf(String)</code>; if <code>convert-null</code> is true, then empty/blank/whitespace only values will be substituted by <code>System.currentTimeMillis()</code>. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/SimpleRegexpMessageSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.SimpleRegexpMessageSplitter",
      "className" : "SimpleRegexpMessageSplitter",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "simple-regexp-message-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleRegexpMessageSplitter\nextends StringPayloadSplitter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleRegexpMessageSplitter</span>\nextends <a href=\"StringPayloadSplitter.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">StringPayloadSplitter</a>",
      "description" : "Class which splits batched files in a singel AdaptrisMessage into individual ones based on a regular expression match. It will optionally group records according to some common element, for example a Purchase Order number.",
      "descriptionHtml" : "<p> Class which splits batched files in a singel <code>AdaptrisMessage</code> into individual ones based on a regular expression match. It will optionally group records according to some common element, for example a Purchase Order number. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html"
        },
        {
          "name" : "StringPayloadSplitter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/StringPayloadSplitter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/XStreamTransformationDriver.html",
      "fullClassName" : "com.adaptris.core.transform.json.XStreamTransformationDriver",
      "className" : "XStreamTransformationDriver",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "object",
      "alias" : "xstream-json-transformation-driver",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "JSON/XML Transformation driver that uses XStream for conversion",
        "tag" : "json,xml,transformation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JSON/XML Transformation driver that uses XStream for conversion\",\n                  tag=\"json,xml,transformation\")\npublic class XStreamTransformationDriver\nextends java.lang.Object\nimplements TransformationDriver",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JSON/XML Transformation driver that uses XStream for conversion\",\n                  tag=\"json,xml,transformation\")\npublic class <span class=\"typeNameLabel\">XStreamTransformationDriver</span>\nextends java.lang.Object\nimplements <a href=\"TransformationDriver.html\" title=\"interface in com.adaptris.core.transform.json\" target=\"_new\">TransformationDriver</a>",
      "description" : "Transformation drive that attempts to transform to and from JSON using a combination of XStreamMarshaller and XStreamJsonMarshaller. Because XStream is primarily a way of serializing objects to XML and back again (we are using the optional JSON support via org.codehaus.jettison:jettison:1.2), for some types of JSON data, you will need to create java objects with appropriate XStreamAlias annotations that represents your object tree. It is provided for completeness and not expected to be heavily used.",
      "descriptionHtml" : "Transformation drive that attempts to transform to and from JSON using a combination of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshaller.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>XStreamMarshaller</code></a> and \n<code>XStreamJsonMarshaller</code>. \n<p> Because XStream is primarily a way of serializing objects to XML and back again (we are using the optional JSON support via <code>org.codehaus.jettison:jettison:1.2</code>), for some types of JSON data, you will need to create java objects with appropriate <code>XStreamAlias</code> annotations that represents your object tree. It is provided for completeness and not expected to be heavily used. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/HttpsConnection.html",
      "fullClassName" : "com.adaptris.core.http.jetty.HttpsConnection",
      "className" : "HttpsConnection",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "connection",
      "alias" : "jetty-https-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection that creates its own jetty engine instance and listens on the specified port",
        "tag" : "connections,https,jetty"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection that creates its own jetty engine instance and listens on the specified port\",\n                  tag=\"connections,https,jetty\")\npublic class HttpsConnection\nextends HttpConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection that creates its own jetty engine instance and listens on the specified port\",\n                  tag=\"connections,https,jetty\")\npublic class <span class=\"typeNameLabel\">HttpsConnection</span>\nextends <a href=\"HttpConnection.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">HttpConnection</a>",
      "description" : "Concrete implementation of JettyConnection that allows HTTPs traffic. By default all fields are left as null. This will cause Jetty to use its internal defaults. Consult the Jetty Documentation for information on the behaviour and configuration required. The key from the ssl-properties element should match the name of the underlying SslContextFactory setter.  \n   <ssl-properties>\n     <key-value-pair>\n        <key>WantClientAuth</key>\n        <value>true</value>\n     </key-value-pair>\n   </ssl-properties>\n \n will invoke SslContextFactory.setWantClientAuth(boolean), setting the WantClientAuth property to true. Note that no validation of the various properties is performed and will be passed as-is to the SslContextFactory with an attempt to transform into the correct type. Invalid combinations may result in undefined behaviour.",
      "descriptionHtml" : "Concrete implementation of JettyConnection that allows HTTPs traffic. \n<p> By default all fields are left as null. This will cause Jetty to use its internal defaults. Consult the Jetty Documentation for information on the behaviour and configuration required. </p> \n<p> The key from the <code>ssl-properties</code> element should match the name of the underlying <code>SslContextFactory</code> setter. </p>\n<pre> <code>\n   &lt;ssl-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;WantClientAuth&lt;/key&gt;\n        &lt;value&gt;true&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/ssl-properties&gt;\n </code>\n </pre> will invoke \n<code>SslContextFactory.setWantClientAuth(boolean)</code>, setting the WantClientAuth property to true. Note that no validation of the various properties is performed and will be passed as-is to the \n<code>SslContextFactory</code> with an attempt to transform into the correct type. Invalid combinations may result in undefined behaviour. \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "JettyConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyConnection.html"
        },
        {
          "name" : "HttpConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/HttpConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.interlok.junit.scaffolding.jms.MockJmsConnection",
      "className" : "MockJmsConnection",
      "packageName" : "com.adaptris.interlok.junit.scaffolding.jms",
      "componentType" : "connection",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/IntegerValueConverter.html",
      "fullClassName" : "com.adaptris.core.mongodb.IntegerValueConverter",
      "className" : "IntegerValueConverter",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "object",
      "alias" : "mongodb-integer-value-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : { },
      "annotationDetails" : "public class IntegerValueConverter\nextends ValueConverter<java.lang.Integer>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IntegerValueConverter</span>\nextends <a href=\"ValueConverter.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">ValueConverter</a>&lt;java.lang.Integer&gt;",
      "inheritance" : [
        {
          "name" : "ValueConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/ValueConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-okhttp/4.0.0B1-RELEASE/com/adaptris/okhttp/headers/request/CompositeRequestHeaders.html",
      "fullClassName" : "com.adaptris.okhttp.headers.request.CompositeRequestHeaders",
      "className" : "CompositeRequestHeaders",
      "packageName" : "com.adaptris.okhttp.headers.request",
      "componentType" : "object",
      "alias" : "okhttp-composite-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-okhttp.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<okhttp3.Request.Builder>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">RequestHeaderProvider</a>&lt;okhttp3.Request.Builder&gt;",
      "description" : "Implementation of RequestHeaderProvider that uses nested providers to add headers. This implementation is primarily so that you can mix and match both static and metadata driven headers; the order in which you configure them determines what is actually present as headers.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>RequestHeaderProvider</code></a> that uses nested providers to add headers. This implementation is primarily so that you can mix and match both static and metadata driven headers; the order in which you configure them determines what is actually present as headers.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/OkHttp",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-okhttp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/ReadFileService.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.ReadFileService",
      "className" : "ReadFileService",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "service",
      "alias" : "smb-read-file-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.filesystem.smbj.SMBConnection"
        ],
        "since" : "3.10.1",
        "summary" : "Read a file from SMB and make it the existing payload",
        "tag" : "smb,samba"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Read a file from SMB and make it the existing payload\",\n                  tag=\"smb,samba\",\n                  since=\"3.10.1\",\n                  recommended=SMBConnection.class)\npublic class ReadFileService\nextends ServiceImp\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Read a file from SMB and make it the existing payload\",\n                  tag=\"smb,samba\",\n                  since=\"3.10.1\",\n                  recommended=<a href=\"SMBConnection.html\" title=\"class in com.adaptris.filesystem.smbj\" target=\"_new\">SMBConnection.class</a>)\npublic class <span class=\"typeNameLabel\">ReadFileService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Read a file from a remote SMB Share.",
      "descriptionHtml" : "Read a file from a remote SMB Share.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpTopicProducer.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.SolaceJcsmpTopicProducer",
      "className" : "SolaceJcsmpTopicProducer",
      "packageName" : "com.adaptris.core.jcsmp.solace",
      "componentType" : "producer",
      "alias" : "solace-jcsmp-topic-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "A Solace native JCSMP component will produce your messages to the Solace VPN topic.",
        "tag" : "topic,producer,solace,jcsmp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP component will produce your messages to the Solace VPN topic.\",\n                  tag=\"topic,producer,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class SolaceJcsmpTopicProducer\nextends SolaceJcsmpAbstractProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP component will produce your messages to the Solace VPN topic.\",\n                  tag=\"topic,producer,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpTopicProducer</span>\nextends <a href=\"SolaceJcsmpAbstractProducer.html\" title=\"class in com.adaptris.core.jcsmp.solace\" target=\"_new\">SolaceJcsmpAbstractProducer</a>",
      "description" : "This implementation of AdaptrisMessageProducer will use the Solace Jcsmp Api to produce messages to a topic on your Solace router.",
      "descriptionHtml" : "<p> This implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducer</code></a> will use the Solace Jcsmp Api to produce messages to a topic on your Solace router. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        },
        {
          "name" : "SolaceJcsmpAbstractProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpAbstractProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/oauth/GetOauthToken.html",
      "fullClassName" : "com.adaptris.core.http.oauth.GetOauthToken",
      "className" : "GetOauthToken",
      "packageName" : "com.adaptris.core.http.oauth",
      "componentType" : "service",
      "alias" : "get-oauth-token",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Make a HTTP(s) request to an OAUTH server and retrieve an access token",
        "tag" : "service,http,https,oauth"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Make a HTTP(s) request to an OAUTH server and retrieve an access token\",\n                  tag=\"service,http,https,oauth\")\npublic class GetOauthToken\nextends OauthTokenGetter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Make a HTTP(s) request to an OAUTH server and retrieve an access token\",\n                  tag=\"service,http,https,oauth\")\npublic class <span class=\"typeNameLabel\">GetOauthToken</span>\nextends <a href=\"OauthTokenGetter.html\" title=\"class in com.adaptris.core.http.oauth\" target=\"_new\">OauthTokenGetter</a>",
      "description" : "Simplified framework for retrieving OAUTH tokens from verious 3rd party resources (such as Salesforce, or Google).",
      "descriptionHtml" : "Simplified framework for retrieving OAUTH tokens from verious 3rd party resources (such as Salesforce, or Google).",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "OauthTokenGetter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/oauth/OauthTokenGetter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/DoubleStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.DoubleStatementParameter",
      "className" : "DoubleStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-double-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DoubleStatementParameter\nextends TypedStatementParameter<java.lang.Double>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DoubleStatementParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.lang.Double&gt;",
      "description" : "Double Statement Parameter. If convert-null is true, then empty/blank/whitespace only values will default to 0.",
      "descriptionHtml" : "<code>Double</code> Statement Parameter. \n<p> If <code>convert-null</code> is true, then empty/blank/whitespace only values will default to 0. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/qpid/amqp_0_10/StandardQpidImplementation.html",
      "fullClassName" : "com.adaptris.core.amqp.qpid.amqp_0_10.StandardQpidImplementation",
      "className" : "StandardQpidImplementation",
      "packageName" : "com.adaptris.core.amqp.qpid.amqp_0_10",
      "componentType" : "object",
      "alias" : "qpid-implementation-0-10",
      "deprecated" : false,
      "jarFileName" : "interlok-amqp.jar",
      "profile" : { },
      "annotationDetails" : "public class StandardQpidImplementation\nextends UrlVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StandardQpidImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">UrlVendorImplementation</a>",
      "description" : "AMQP 0.10 / 0.9.1 / 0.9 / 0.8 implementation of VendorImplementation using Apache Qpid. Everything required to configure the connection needs to be specified on the URL. If you configure a username and password on the wrapping JmsConnection in which case ConnectionFactory.createConnection(String, String) is used when creating the connection otherwise ConnectionFactory.createConnection() will be used. This was built against org.apache.qpid:qpid-client:6.0.1",
      "descriptionHtml" : "AMQP 0.10 / 0.9.1 / 0.9 / 0.8 implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementation</code></a> using Apache Qpid. \n<p> Everything required to configure the connection needs to be specified on the URL. If you configure a username and password on the wrapping <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsConnection</code></a> in which case <code>ConnectionFactory.createConnection(String, String)</code> is used when creating the connection otherwise <code>ConnectionFactory.createConnection()</code> will be used. </p> \n<p> This was built against <code>org.apache.qpid:qpid-client:6.0.1</code> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/AMQP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-amqp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/DefaultJsonOutputSettings.html",
      "fullClassName" : "com.adaptris.core.mongodb.DefaultJsonOutputSettings",
      "className" : "DefaultJsonOutputSettings",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "object",
      "alias" : "mongodb-default-json-output-settings",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultJsonOutputSettings\nextends java.lang.Object\nimplements JsonOutputSettings",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultJsonOutputSettings</span>\nextends java.lang.Object\nimplements <a href=\"JsonOutputSettings.html\" title=\"interface in com.adaptris.core.mongodb\" target=\"_new\">JsonOutputSettings</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullProcessingExceptionHandler.html",
      "fullClassName" : "com.adaptris.core.NullProcessingExceptionHandler",
      "className" : "NullProcessingExceptionHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "null-processing-exception-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "The default NO-OP exception handler",
        "tag" : "error-handling,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"The default NO-OP exception handler\",\n                  tag=\"error-handling,base\")\npublic class NullProcessingExceptionHandler\nextends RootProcessingExceptionHandler",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"The default NO-OP exception handler\",\n                  tag=\"error-handling,base\")\npublic class <span class=\"typeNameLabel\">NullProcessingExceptionHandler</span>\nextends <a href=\"RootProcessingExceptionHandler.html\" title=\"class in com.adaptris.core\" target=\"_new\">RootProcessingExceptionHandler</a>",
      "description" : "Null implementation of Processing Exceptions.",
      "descriptionHtml" : "Null implementation of Processing Exceptions.",
      "inheritance" : [
        {
          "name" : "RootProcessingExceptionHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RootProcessingExceptionHandler.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockNonStandardRequestReplyProducer",
      "className" : "MockNonStandardRequestReplyProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockEventHandlerWithState",
      "className" : "MockEventHandlerWithState",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "object",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/path/XPathService.html",
      "fullClassName" : "com.adaptris.core.services.path.XPathService",
      "className" : "XPathService",
      "packageName" : "com.adaptris.core.services.path",
      "componentType" : "service",
      "alias" : "xpath-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extract data via XPath and store it",
        "tag" : "service,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract data via XPath and store it\",\n                  tag=\"service,xml\")\npublic class XPathService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract data via XPath and store it\",\n                  tag=\"service,xml\")\npublic class <span class=\"typeNameLabel\">XPathService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "This service allows you to configure an xpath expression which will be executed on source xml, the result of which can be saved to multiple locations. To specify where the source xml, source xpath expression and the result of the xpath execution should be saved, you shoud use DataInputParameter or DataOutputParameter. For example you can specify the source xml can be found in the AdaptrisMessage payload, by using StringPayloadDataInputParameter like this :  \n <xpath-service>\n   <xml-source class=\"string-payload-data-input-parameter\"/>\n   ...\n \n And perhaps the source xpath expression will be configured directly in Interlok config, using ConstantDataInputParameter;  \n <xpath-service>\n   <xpath-execution>\n     <source class=\"constant-data-input-parameter\">\n       <value>//my/xpath/expression</value>\n     </source>\n   ...\n \n And then maybe the result of the xpath execution is to be saved in AdaptrisMessage metadata, using MetadataDataOutputParameter;  \n <xpath-service>\n   <xpath-execution>\n     <target class=\"metadata-data-output-parameter\">\n       <metadata-key>targetMetadataKey</metadata-key>\n     </target>\n   ...\n \n While you may only specify a single source xml destination, you may if you wish apply multiple XPath expressions, each of which saves the result to a different location. To do this, simply configure multiple executions. Take the following example, where we specify the payload containing the source xml and 3 XPath expressions will be executed each of which will store the result in 3 different metadata items;  \n <xpath-service>\n   <xml-source class=\"string-payload-data-input-parameter\"/>\n \n   <xpath-execution>\n     <source class=\"constant-data-input-parameter\">\n       <value>//my/first/xpath/expression</value>\n     </source>\n     \n     <target class=\"metadata-data-output-parameter\">\n       <metadata-key>targetMetadataKey1</metadata-key>\n     </target>\n   </xpath-execution>\n   \n   <xpath-execution>\n     <source class=\"constant-data-input-parameter\">\n       <value>//my/second/xpath/expression</value>\n     </source>\n     \n     <target class=\"metadata-data-output-parameter\">\n       <metadata-key>targetMetadataKey2</metadata-key>\n     </target>\n   </xpath-execution>\n   \n   <xpath-execution>\n     <source class=\"constant-data-input-parameter\">\n       <value>//my/third/xpath/expression</value>\n     </source>\n     \n     <target class=\"metadata-data-output-parameter\">\n       <metadata-key>targetMetadataKey3</metadata-key>\n     </target>\n   </xpath-execution>\n \n </xpath-service>\n \n Should your source xml contain namespaces, you will need to configure the mappings in this service like this;  \n <xpath-service>\n ...\n   <namespace-context>\n     <key-value-pair>\n       <key>n1</key>\n       <value>http://adaptris.com/xml/namespace1</value>\n     </key-value-pair>\n     <key-value-pair>\n       <key>n2</key>\n       <value>http://adaptris.com/xml/namespace2</value>\n     </key-value-pair>\n     <key-value-pair>\n       <key>n3</key>\n       <value>http://adaptris.com/xml/namespace3</value>\n     </key-value-pair>\n     <key-value-pair>\n       <key>n4</key>\n       <value>http://adaptris.com/xml/namespace4</value>\n     </key-value-pair>\n    </namespace-context>\n  ...\n </xpath-service>\n \n If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "<p> This service allows you to configure an xpath expression which will be executed on source xml, the result of which can be saved to multiple locations. </p> \n<p> To specify where the source xml, source xpath expression and the result of the xpath execution should be saved, you shoud use <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataInputParameter</code></a> or <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataOutputParameter</code></a>. <br> For example you can specify the source xml can be found in the <a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> payload, by using <a href=\"../../common/StringPayloadDataInputParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\"><code>StringPayloadDataInputParameter</code></a> like this : </p>\n<pre> <code>\n &lt;xpath-service&gt;\n   &lt;xml-source class=\"string-payload-data-input-parameter\"/&gt;\n   ...\n </code>\n </pre> And perhaps the source xpath expression will be configured directly in Interlok config, using \n<a href=\"../../common/ConstantDataInputParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\"><code>ConstantDataInputParameter</code></a>; \n<pre> <code>\n &lt;xpath-service&gt;\n   &lt;xpath-execution&gt;\n     &lt;source class=\"constant-data-input-parameter\"&gt;\n       &lt;value&gt;//my/xpath/expression&lt;/value&gt;\n     &lt;/source&gt;\n   ...\n </code>\n </pre> And then maybe the result of the xpath execution is to be saved in \n<a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata, using \n<a href=\"../../common/MetadataDataOutputParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\"><code>MetadataDataOutputParameter</code></a>; \n<pre> <code>\n &lt;xpath-service&gt;\n   &lt;xpath-execution&gt;\n     &lt;target class=\"metadata-data-output-parameter\"&gt;\n       &lt;metadata-key&gt;targetMetadataKey&lt;/metadata-key&gt;\n     &lt;/target&gt;\n   ...\n </code>\n </pre> \n<p></p> \n<p> While you may only specify a single source xml destination, you may if you wish apply multiple XPath expressions, each of which saves the result to a different location. To do this, simply configure multiple executions. Take the following example, where we specify the payload containing the source xml and 3 XPath expressions will be executed each of which will store the result in 3 different metadata items; </p>\n<pre> <code>\n &lt;xpath-service&gt;\n   &lt;xml-source class=\"string-payload-data-input-parameter\"/&gt;\n \n   &lt;xpath-execution&gt;\n     &lt;source class=\"constant-data-input-parameter\"&gt;\n       &lt;value&gt;//my/first/xpath/expression&lt;/value&gt;\n     &lt;/source&gt;\n     \n     &lt;target class=\"metadata-data-output-parameter\"&gt;\n       &lt;metadata-key&gt;targetMetadataKey1&lt;/metadata-key&gt;\n     &lt;/target&gt;\n   &lt;/xpath-execution&gt;\n   \n   &lt;xpath-execution&gt;\n     &lt;source class=\"constant-data-input-parameter\"&gt;\n       &lt;value&gt;//my/second/xpath/expression&lt;/value&gt;\n     &lt;/source&gt;\n     \n     &lt;target class=\"metadata-data-output-parameter\"&gt;\n       &lt;metadata-key&gt;targetMetadataKey2&lt;/metadata-key&gt;\n     &lt;/target&gt;\n   &lt;/xpath-execution&gt;\n   \n   &lt;xpath-execution&gt;\n     &lt;source class=\"constant-data-input-parameter\"&gt;\n       &lt;value&gt;//my/third/xpath/expression&lt;/value&gt;\n     &lt;/source&gt;\n     \n     &lt;target class=\"metadata-data-output-parameter\"&gt;\n       &lt;metadata-key&gt;targetMetadataKey3&lt;/metadata-key&gt;\n     &lt;/target&gt;\n   &lt;/xpath-execution&gt;\n \n &lt;/xpath-service&gt;\n </code>\n </pre> \n<p></p> \n<p> Should your source xml contain namespaces, you will need to configure the mappings in this service like this; </p>\n<pre> <code>\n &lt;xpath-service&gt;\n ...\n   &lt;namespace-context&gt;\n     &lt;key-value-pair&gt;\n       &lt;key&gt;n1&lt;/key&gt;\n       &lt;value&gt;http://adaptris.com/xml/namespace1&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n     &lt;key-value-pair&gt;\n       &lt;key&gt;n2&lt;/key&gt;\n       &lt;value&gt;http://adaptris.com/xml/namespace2&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n     &lt;key-value-pair&gt;\n       &lt;key&gt;n3&lt;/key&gt;\n       &lt;value&gt;http://adaptris.com/xml/namespace3&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n     &lt;key-value-pair&gt;\n       &lt;key&gt;n4&lt;/key&gt;\n       &lt;value&gt;http://adaptris.com/xml/namespace4&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n    &lt;/namespace-context&gt;\n  ...\n &lt;/xpath-service&gt;\n </code>\n </pre> \n<p></p> \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/JsonPathExecution.html",
      "fullClassName" : "com.adaptris.core.json.JsonPathExecution",
      "className" : "JsonPathExecution",
      "packageName" : "com.adaptris.core.json",
      "componentType" : "object",
      "alias" : "json-path-execution",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extract a JSON Path from the source and write it into the target",
        "tag" : "json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract a JSON Path from the source and write it into the target\",\n                  tag=\"json\")\npublic class JsonPathExecution\nextends Execution",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract a JSON Path from the source and write it into the target\",\n                  tag=\"json\")\npublic class <span class=\"typeNameLabel\">JsonPathExecution</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/Execution.html?is-external=true\" title=\"class or interface in com.adaptris.core.common\" class=\"externalLink\" target=\"_new\">Execution</a>",
      "inheritance" : [
        {
          "name" : "Execution",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/Execution.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyResponseService.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JettyResponseService",
      "className" : "JettyResponseService",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "service",
      "alias" : "jetty-response-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Send a HTTP Response",
        "tag" : "service,http,https,jetty"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send a HTTP Response\",\n                  tag=\"service,http,https,jetty\",\n                  since=\"3.6.5\")\npublic class JettyResponseService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send a HTTP Response\",\n                  tag=\"service,http,https,jetty\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">JettyResponseService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Send a response via HTTP as a service rather than having to wrap in a StandaloneProducer. Note that this service just wraps a StandardResponseProducer instance but doesn't expose all the possible settings available. If you need those features, than continue using the producer wrapped as a StandaloneProducer. It will also always send the current payload (i.e. ResponseProducerImpl.setSendPayload(Boolean) is true) ResponseProducerImpl.setForwardConnectionException(Boolean) is always false. ResponseProducerImpl.setFlushBuffer(Boolean) is always true. String parameters in this service will use the InterlokMessage.resolve(String) which allows you to specify metadata values as part of a constant string e.g. setUrl(\"%message{http_url}\") will use the metadata value associated with the key http_url.",
      "descriptionHtml" : "Send a response via HTTP as a service rather than having to wrap in a \n<a href=\"../../StandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneProducer</code></a>. \n<p> Note that this service just wraps a <a href=\"StandardResponseProducer.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\"><code>StandardResponseProducer</code></a> instance but doesn't expose all the possible settings available. If you need those features, than continue using the producer wrapped as a <a href=\"../../StandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneProducer</code></a>. </p>\n<ul> \n <li>It will also always send the current payload (i.e. <a href=\"ResponseProducerImpl.html#setSendPayload(java.lang.Boolean)\" target=\"_new\"><code>ResponseProducerImpl.setSendPayload(Boolean)</code></a> is true)</li> \n <li><a href=\"ResponseProducerImpl.html#setForwardConnectionException(java.lang.Boolean)\" target=\"_new\"><code>ResponseProducerImpl.setForwardConnectionException(Boolean)</code></a> is always false.</li> \n <li><a href=\"ResponseProducerImpl.html#setFlushBuffer(java.lang.Boolean)\" target=\"_new\"><code>ResponseProducerImpl.setFlushBuffer(Boolean)</code></a> is always true.</li> \n</ul> \n<p></p> \n<p> String parameters in this service will use the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#resolve(java.lang.String)\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.resolve(String)</code></a> which allows you to specify metadata values as part of a constant string e.g. <code>setUrl(\"%message{http_url}\")</code> will use the metadata value associated with the key <code>http_url</code>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/cache/InterlokRulesCache.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.cache.InterlokRulesCache",
      "className" : "InterlokRulesCache",
      "packageName" : "com.adaptris.adapter.edistream.parser.cache",
      "componentType" : "object",
      "alias" : "edi-interlok-rules-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class InterlokRulesCache\nextends java.lang.Object\nimplements IRulesCache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InterlokRulesCache</span>\nextends java.lang.Object\nimplements <a href=\"IRulesCache.html\" title=\"interface in com.adaptris.adapter.edistream.parser.cache\" target=\"_new\">IRulesCache</a>",
      "description" : "Allows EDI services to use the Interlok Cache. Unfortunately this cache does not support multiple regions unlike the other implementations.",
      "descriptionHtml" : "Allows EDI services to use the Interlok Cache.\n<br> Unfortunately this cache does not support multiple regions unlike the other implementations.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/XmlTransformService.html",
      "fullClassName" : "com.adaptris.core.transform.XmlTransformService",
      "className" : "XmlTransformService",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "service",
      "alias" : "xml-transform-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Execute an XSLT transform",
        "tag" : "service,transform,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute an XSLT transform\",\n                  tag=\"service,transform,xml\")\npublic class XmlTransformService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute an XSLT transform\",\n                  tag=\"service,transform,xml\")\npublic class <span class=\"typeNameLabel\">XmlTransformService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Implementation of Service which provides transformation of XML payloads. You are required to configure the XML transformer factory; see the javadoc and implementations of XmlTransformerFactory for details on the supported transformer factories. Configuration including allow over-ride behaviour matches previous implementation.",
      "descriptionHtml" : "<p> Implementation of <code>Service</code> which provides transformation of XML payloads. </p> \n<p> You are required to configure the XML transformer factory; see the javadoc and implementations of <a href=\"../../util/text/xml/XmlTransformerFactory.html\" title=\"interface in com.adaptris.util.text.xml\" target=\"_new\"><code>XmlTransformerFactory</code></a> for details on the supported transformer factories. </p> \n<p> Configuration including allow over-ride behaviour matches previous implementation. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/params/PayloadCommandParameter.html",
      "fullClassName" : "com.adaptris.as400.params.PayloadCommandParameter",
      "className" : "PayloadCommandParameter",
      "packageName" : "com.adaptris.as400.params",
      "componentType" : "object",
      "alias" : "as400-payload-command-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-as400.jar",
      "profile" : { },
      "annotationDetails" : "public class PayloadCommandParameter\nextends CommandParameter\nimplements ServiceOutputParameter, ServiceInputParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PayloadCommandParameter</span>\nextends <a href=\"CommandParameter.html\" title=\"class in com.adaptris.as400.params\" target=\"_new\">CommandParameter</a>\nimplements <a href=\"ServiceOutputParameter.html\" title=\"interface in com.adaptris.as400.params\" target=\"_new\">ServiceOutputParameter</a>, <a href=\"ServiceInputParameter.html\" title=\"interface in com.adaptris.as400.params\" target=\"_new\">ServiceInputParameter</a>",
      "inheritance" : [
        {
          "name" : "CommandParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/params/CommandParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OS/AS400",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-as400",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataStreamOutput.html",
      "fullClassName" : "com.adaptris.core.common.MetadataStreamOutput",
      "className" : "MetadataStreamOutput",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "metadata-stream-output",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.1",
        "summary" : "MessageWrapper implementation wraps a metadata value as an Outputstream",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MessageWrapper implementation wraps a metadata value as an Outputstream\",\n                  since=\"3.10.1\")\npublic class MetadataStreamOutput\nextends java.lang.Object\nimplements MessageWrapper<java.io.OutputStream>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MessageWrapper implementation wraps a metadata value as an Outputstream\",\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">MetadataStreamOutput</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\">MessageWrapper</a>&lt;java.io.OutputStream&gt;",
      "description" : "MessageWrapper implementation wraps a metadata value as an OutputStream along with a ByteTranslator This can be used in a functionally equivalent way to MetadataOutputStreamWrapper and can be regarded as its replacement.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>MessageWrapper</code></a> implementation wraps a metadata value as an \n<code>OutputStream</code> along with a \n<a href=\"../../util/text/ByteTranslator.html\" title=\"class in com.adaptris.util.text\" target=\"_new\"><code>ByteTranslator</code></a> \n<p> This can be used in a functionally equivalent way to <code>MetadataOutputStreamWrapper</code> and can be regarded as its replacement. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-okhttp/4.0.0B1-RELEASE/com/adaptris/okhttp/headers/response/MetadataResponseHeaders.html",
      "fullClassName" : "com.adaptris.okhttp.headers.response.MetadataResponseHeaders",
      "className" : "MetadataResponseHeaders",
      "packageName" : "com.adaptris.okhttp.headers.response",
      "componentType" : "object",
      "alias" : "okhttp-response-headers-as-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-okhttp.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataResponseHeaders\nextends java.lang.Object\nimplements ResponseHeaderHandler<okhttp3.Response>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataResponseHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">ResponseHeaderHandler</a>&lt;okhttp3.Response&gt;",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/OkHttp",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-okhttp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jruby/4.0.0B1-RELEASE/com/adaptris/jruby/DefaultBuilder.html",
      "fullClassName" : "com.adaptris.jruby.DefaultBuilder",
      "className" : "DefaultBuilder",
      "packageName" : "com.adaptris.jruby",
      "componentType" : "object",
      "alias" : "jruby-default-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-jruby.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultBuilder\nextends ContainerBuilderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultBuilder</span>\nextends <a href=\"ContainerBuilderImpl.html\" title=\"class in com.adaptris.jruby\" target=\"_new\">ContainerBuilderImpl</a>",
      "description" : "Build a ScriptingContainer that is configured with a jruby.home.",
      "descriptionHtml" : "Build a \n<code>ScriptingContainer</code> that is configured with a \n<code>jruby.home</code>.",
      "inheritance" : [
        {
          "name" : "ContainerBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jruby/4.0.0B1-RELEASE/com/adaptris/jruby/ContainerBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Scripting/JRuby",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jruby",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/RfcProducer.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.RfcProducer",
      "className" : "RfcProducer",
      "packageName" : "com.adaptris.core.sap.jco3.rfc",
      "componentType" : "producer",
      "alias" : "sapjco3-rfc-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.sap.jco3.rfc.ConfiguredRfcConnection",
          "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicRfcConnection"
        ],
        "since" : "",
        "summary" : "Execute a SAP RFC",
        "tag" : "producer,sap,rfc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a SAP RFC\",\n                  tag=\"producer,sap,rfc\",\n                  recommended={ConfiguredRfcConnection.class,DynamicRfcConnection.class})\npublic class RfcProducer\nextends RequestReplyProducerImp\nimplements com.adaptris.core.licensing.LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a SAP RFC\",\n                  tag=\"producer,sap,rfc\",\n                  recommended={<a href=\"ConfiguredRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ConfiguredRfcConnection.class</a>,<a href=\"dynamic/DynamicRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">DynamicRfcConnection.class</a>})\npublic class <span class=\"typeNameLabel\">RfcProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">RequestReplyProducerImp</a>\nimplements com.adaptris.core.licensing.LicensedComponent",
      "description" : "Implementation of AdaptrisMessageProducer based on SAP JCO3 libraries. In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. The following behavioural rules apply : The connection associated with this Producer must be ConfiguredRfcConnection unless there is a JCoDestination available in object metadata stored under the key RfcConstants.OBJ_METADATA_DESTINATION_KEY in which case, the associated connection is ignored. The String returned by any configured ProduceDestination will be used as the RFC Function name AdaptrisMessageEncoder configuration/implementations are not supported.",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageProducer</code> based on SAP JCO3 libraries. </p> \n<p> In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. </p> \n<p> The following behavioural rules apply : </p>\n<ul> \n <li>The connection associated with this Producer must be <a href=\"ConfiguredRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc\" target=\"_new\"><code>ConfiguredRfcConnection</code></a> unless there is a JCoDestination available in object metadata stored under the key <a href=\"RfcConstants.html#OBJ_METADATA_DESTINATION_KEY\" target=\"_new\"><code>RfcConstants.OBJ_METADATA_DESTINATION_KEY</code></a> in which case, the associated connection is ignored.</li> \n <li>The String returned by any configured <code>ProduceDestination</code> will be used as the RFC Function name</li>  AdaptrisMessageEncoder configuration/implementations are not supported. \n</ul>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-onedrive/4.0.0B1-RELEASE/com/adaptris/interlok/azure/onedrive/OneDriveProducer.html",
      "fullClassName" : "com.adaptris.interlok.azure.onedrive.OneDriveProducer",
      "className" : "OneDriveProducer",
      "packageName" : "com.adaptris.interlok.azure.onedrive",
      "componentType" : "producer",
      "alias" : "azure-one-drive-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-onedrive.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Place files into a Microsoft Office 365 One Drive account using the Microsoft Graph API",
        "tag" : "producer,file,o365,microsoft,office,365,one drive"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Place files into a Microsoft Office 365 One Drive account using the Microsoft Graph API\",\n                  tag=\"producer,file,o365,microsoft,office,365,one drive\")\npublic class OneDriveProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Place files into a Microsoft Office 365 One Drive account using the Microsoft Graph API\",\n                  tag=\"producer,file,o365,microsoft,office,365,one drive\")\npublic class <span class=\"typeNameLabel\">OneDriveProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "Implementation of a file producer that can place files into a Microsoft One Drive account, using their Graph API and OAuth2.",
      "descriptionHtml" : "Implementation of a file producer that can place files into a Microsoft One Drive account, using their Graph API and OAuth2.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/OneDrive",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-onedrive",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/csv/BasicFormatBuilder.html",
      "fullClassName" : "com.adaptris.core.elastic.csv.BasicFormatBuilder",
      "className" : "BasicFormatBuilder",
      "packageName" : "com.adaptris.core.elastic.csv",
      "componentType" : "object",
      "alias" : "csv-basic-format",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicFormatBuilder\nextends java.lang.Object\nimplements FormatBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicFormatBuilder</span>\nextends java.lang.Object\nimplements <a href=\"FormatBuilder.html\" title=\"interface in com.adaptris.core.elastic.csv\" target=\"_new\">FormatBuilder</a>",
      "description" : "Implementation of FormatBuilder that maps the standard commons-csv formats. Basic parsing options are supported : DEFAULT, EXCEL, RFC4180, MYSQL and TAB DELIMITED which correspond to the base formats defined by CSVFormat. Note that this was lifted from the com.adaptris:interlok-csv project and will eventually be deprecated so that we switch to using a net.supercsv based implementations instead. It is not marked as deprecated just yet.",
      "descriptionHtml" : "Implementation of \n<a href=\"FormatBuilder.html\" title=\"interface in com.adaptris.core.elastic.csv\" target=\"_new\"><code>FormatBuilder</code></a> that maps the standard commons-csv formats. \n<p> Basic parsing options are supported : <a href=\"BasicFormatBuilder.Style.html#DEFAULT\" target=\"_new\"><code>DEFAULT</code></a>, <a href=\"BasicFormatBuilder.Style.html#EXCEL\" target=\"_new\"><code>EXCEL</code></a>, <a href=\"BasicFormatBuilder.Style.html#RFC4180\" target=\"_new\"><code>RFC4180</code></a>, <a href=\"BasicFormatBuilder.Style.html#MYSQL\" target=\"_new\"><code>MYSQL</code></a> and <a href=\"BasicFormatBuilder.Style.html#TAB_DELIMITED\" target=\"_new\"><code>TAB DELIMITED</code></a> which correspond to the base formats defined by <code>CSVFormat</code>. </p> \n<p> Note that this was lifted from the <code>com.adaptris:interlok-csv</code> project and will eventually be deprecated so that we switch to using a net.supercsv based implementations instead. It is not marked as deprecated just yet. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/TarGZipUnArchiverService.html",
      "fullClassName" : "com.adaptris.filesystem.TarGZipUnArchiverService",
      "className" : "TarGZipUnArchiverService",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "service",
      "alias" : "tar-gzip-unarchiver-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : { },
      "annotationDetails" : "public class TarGZipUnArchiverService\nextends ServiceImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TarGZipUnArchiverService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-web-token/4.0.0B1-RELEASE/com/adaptris/core/jwt/JWTCreator.html",
      "fullClassName" : "com.adaptris.core.jwt.JWTCreator",
      "className" : "JWTCreator",
      "packageName" : "com.adaptris.core.jwt",
      "componentType" : "service",
      "alias" : "jwt-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-json-web-token.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Create a JSON Web Token",
        "tag" : "jwt,create,json,web,token"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Create a JSON Web Token\",\n                  tag=\"jwt,create,json,web,token\",\n                  since=\"3.11.1\")\npublic class JWTCreator\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Create a JSON Web Token\",\n                  tag=\"jwt,create,json,web,token\",\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">JWTCreator</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service provides a way to create a JSON Web Token from the given data. \n    <jwt-creator>\n      <unique-id>jwt-create</unique-id>\n      <issuer>ashley</issuer>\n      <subject>test</subject>\n      <audience>everyone</audience>\n      <expiration>2040-12-31 00:00:00.0 UTC</expiration>\n      <not-before>2020-01-01 00:00:00.0 UTC</not-before>\n      <secret class=\"base64-encoded-secret\">\n        <secret>c64975ba3cf3f9cd58459710b0a42369f34b0759c9967fb5a47eea488e8bea79</secret>\n      </secret>\n      <custom-claims>\n        <key-value-pair>\n          <key>payload</key>\n          <value>%message{%payload}</value>\n        </key-value-pair>\n      </custom-claims>\n    </jwt-creator>",
      "descriptionHtml" : "This service provides a way to create a JSON Web Token from the given data. \n<pre><code>\n    &lt;jwt-creator&gt;\n      &lt;unique-id&gt;jwt-create&lt;/unique-id&gt;\n      &lt;issuer&gt;ashley&lt;/issuer&gt;\n      &lt;subject&gt;test&lt;/subject&gt;\n      &lt;audience&gt;everyone&lt;/audience&gt;\n      &lt;expiration&gt;2040-12-31 00:00:00.0 UTC&lt;/expiration&gt;\n      &lt;not-before&gt;2020-01-01 00:00:00.0 UTC&lt;/not-before&gt;\n      &lt;secret class=\"base64-encoded-secret\"&gt;\n        &lt;secret&gt;c64975ba3cf3f9cd58459710b0a42369f34b0759c9967fb5a47eea488e8bea79&lt;/secret&gt;\n      &lt;/secret&gt;\n      &lt;custom-claims&gt;\n        &lt;key-value-pair&gt;\n          &lt;key&gt;payload&lt;/key&gt;\n          &lt;value&gt;%message{%payload}&lt;/value&gt;\n        &lt;/key-value-pair&gt;\n      &lt;/custom-claims&gt;\n    &lt;/jwt-creator&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JWT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-web-token",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/XmlTransformParameterBuilder.html",
      "fullClassName" : "com.adaptris.core.transform.XmlTransformParameterBuilder",
      "className" : "XmlTransformParameterBuilder",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "object",
      "alias" : "xml-transform-parameter-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlTransformParameterBuilder\nextends java.lang.Object\nimplements XmlTransformParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlTransformParameterBuilder</span>\nextends java.lang.Object\nimplements <a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\">XmlTransformParameter</a>",
      "description" : "XmlTransformParameter implementation allows multiple nested implementations.",
      "descriptionHtml" : "<a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\"><code>XmlTransformParameter</code></a> implementation allows multiple nested implementations.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/XmlValidationService.html",
      "fullClassName" : "com.adaptris.core.transform.XmlValidationService",
      "className" : "XmlValidationService",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "service",
      "alias" : "xml-validation-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Validate the XML document",
        "tag" : "service,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Validate the XML document\",\n                  tag=\"service,xml\")\npublic class XmlValidationService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Validate the XML document\",\n                  tag=\"service,xml\")\npublic class <span class=\"typeNameLabel\">XmlValidationService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Service which validates an input XML document.",
      "descriptionHtml" : "Service which validates an input XML document.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/xml/tagnames/AdaptrisOriginalXMLTagnames.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.xml.tagnames.AdaptrisOriginalXMLTagnames",
      "className" : "AdaptrisOriginalXMLTagnames",
      "packageName" : "com.adaptris.adapter.edistream.parser.xml.tagnames",
      "componentType" : "object",
      "alias" : "edi-legacy-xml-tag-names",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class AdaptrisOriginalXMLTagnames\nextends DefaultXMLTagnames",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdaptrisOriginalXMLTagnames</span>\nextends <a href=\"DefaultXMLTagnames.html\" title=\"class in com.adaptris.adapter.edistream.parser.xml.tagnames\" target=\"_new\">DefaultXMLTagnames</a>",
      "description" : "This class defines the xml tags that are used to read in an xml files that was produced by the original Adaptris EdiXMLService, ie an xml encoded edi message.",
      "descriptionHtml" : "This class defines the xml tags that are used to read in an xml files that was produced by the original Adaptris EdiXMLService, ie an xml encoded edi message.",
      "inheritance" : [
        {
          "name" : "DefaultXMLTagnames",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/xml/tagnames/DefaultXMLTagnames.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/params/ConstantCommandParameter.html",
      "fullClassName" : "com.adaptris.as400.params.ConstantCommandParameter",
      "className" : "ConstantCommandParameter",
      "packageName" : "com.adaptris.as400.params",
      "componentType" : "object",
      "alias" : "as400-constant-command-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-as400.jar",
      "profile" : { },
      "annotationDetails" : "public class ConstantCommandParameter\nextends CommandParameter\nimplements ServiceInputParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConstantCommandParameter</span>\nextends <a href=\"CommandParameter.html\" title=\"class in com.adaptris.as400.params\" target=\"_new\">CommandParameter</a>\nimplements <a href=\"ServiceInputParameter.html\" title=\"interface in com.adaptris.as400.params\" target=\"_new\">ServiceInputParameter</a>",
      "inheritance" : [
        {
          "name" : "CommandParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/params/CommandParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OS/AS400",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-as400",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/FloatColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.FloatColumnTranslator",
      "className" : "FloatColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-float-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FloatColumnTranslator\nextends FormattableColumnTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FloatColumnTranslator</span>\nextends <a href=\"FormattableColumnTranslator.html\" title=\"class in com.adaptris.core.services.jdbc.types\" target=\"_new\">FormattableColumnTranslator</a>",
      "description" : "Column Translator implementation for handling float types",
      "descriptionHtml" : "Column Translator implementation for handling float types",
      "inheritance" : [
        {
          "name" : "FormattableColumnTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/FormattableColumnTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/arguments/CSVSprayFormat.html",
      "fullClassName" : "com.adaptris.hpcc.arguments.CSVSprayFormat",
      "className" : "CSVSprayFormat",
      "packageName" : "com.adaptris.hpcc.arguments",
      "componentType" : "object",
      "alias" : "spray-format-csv",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : { },
      "annotationDetails" : "public class CSVSprayFormat\nextends SprayFormat",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CSVSprayFormat</span>\nextends <a href=\"SprayFormat.html\" title=\"class in com.adaptris.hpcc.arguments\" target=\"_new\">SprayFormat</a>",
      "description" : "SprayFormat implementation that allows the configuration of command specific arguments for format=csv sprays. encoding no One of the following: ascii, utf8, utf8n, utf16, utf16le, utf16be, utf32, utf32le, utf32be ascii maxrecordsize no The maximum size of each record, in bytes. 8192 separator no The field delimiter. comma (\\,) terminator no The record delimiter. line feed or carriage return linefeed (\\r,\\r\\n) quote no The string quote character. single quote (’). NOTE: Defaults are driven by dfuplus command them selves, they will not be set unless explicitly set.",
      "descriptionHtml" : "SprayFormat implementation that allows the configuration of command specific arguments for \n<code>format=csv</code> sprays. \n<table> \n <tbody>\n  <tr>\n   <td>encoding</td>\n   <td>no</td>\n   <td>One of the following: ascii, utf8, utf8n, utf16, utf16le, utf16be, utf32, utf32le, utf32be</td>\n   <td>ascii</td>\n  </tr> \n  <tr>\n   <td>maxrecordsize</td>\n   <td>no</td>\n   <td>The maximum size of each record, in bytes.</td>\n   <td>8192</td>\n  </tr> \n  <tr>\n   <td>separator</td>\n   <td>no</td>\n   <td>The field delimiter.</td>\n   <td> comma (\\,)</td>\n  </tr> \n  <tr>\n   <td>terminator</td>\n   <td>no</td>\n   <td>The record delimiter.</td>\n   <td>line feed or carriage return linefeed (\\r,\\r\\n)</td>\n  </tr> \n  <tr>\n   <td>quote</td>\n   <td>no</td>\n   <td>The string quote character.</td>\n   <td> single quote (’).</td>\n  </tr> \n </tbody>\n</table> \n<p>NOTE: Defaults are driven by dfuplus command them selves, they will not be set unless explicitly set.</p>",
      "inheritance" : [
        {
          "name" : "SprayFormat",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/arguments/SprayFormat.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/BytePayloadStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.BytePayloadStatementParameter",
      "className" : "BytePayloadStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-byte-payload-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BytePayloadStatementParameter\nextends NamedStatementParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BytePayloadStatementParameter</span>\nextends <a href=\"NamedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">NamedStatementParameter</a>",
      "description" : "Byte Payload Statement Parameter.",
      "descriptionHtml" : "Byte Payload Statement Parameter.",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mqtt/4.0.0B1-RELEASE/com/adaptris/core/mqtt/MqttProducer.html",
      "fullClassName" : "com.adaptris.core.mqtt.MqttProducer",
      "className" : "MqttProducer",
      "packageName" : "com.adaptris.core.mqtt",
      "componentType" : "producer",
      "alias" : "mqtt-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-mqtt.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.mqtt.MqttConnection"
        ],
        "since" : "3.5.0",
        "summary" : "Place message on a MQTT topic",
        "tag" : "producer,mqtt"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Place message on a MQTT topic\",\n                  tag=\"producer,mqtt\",\n                  recommended=MqttConnection.class,\n                  since=\"3.5.0\")\npublic class MqttProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Place message on a MQTT topic\",\n                  tag=\"producer,mqtt\",\n                  recommended=<a href=\"MqttConnection.html\" title=\"class in com.adaptris.core.mqtt\" target=\"_new\">MqttConnection.class</a>,\n                  since=\"3.5.0\")\npublic class <span class=\"typeNameLabel\">MqttProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "AdaptrisMessageProducer implementation that sends messages to a MQTT topic. MQTT topic receives only text therefore only the message payload is sent as a string.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducer</code></a> implementation that sends messages to a MQTT topic. \n<p> MQTT topic receives only text therefore only the message payload is sent as a string. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MQTT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mqtt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-pdf/4.0.0B1-RELEASE/com/adaptris/core/transform/pdf/PdfToTextService.html",
      "fullClassName" : "com.adaptris.core.transform.pdf.PdfToTextService",
      "className" : "PdfToTextService",
      "packageName" : "com.adaptris.core.transform.pdf",
      "componentType" : "service",
      "alias" : "pdf-to-text-service",
      "deprecated" : false,
      "jarFileName" : "interlok-pdf.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transform PDF into TEXT",
        "tag" : "service,transform,text,pdf"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform PDF into TEXT\",\n                  tag=\"service,transform,text,pdf\")\npublic class PdfToTextService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform PDF into TEXT\",\n                  tag=\"service,transform,text,pdf\")\npublic class <span class=\"typeNameLabel\">PdfToTextService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Transform service which allows us to generate TEXT from PDF.",
      "descriptionHtml" : "Transform service which allows us to generate TEXT from PDF.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/PDF",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-pdf",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyMessageConsumer.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JettyMessageConsumer",
      "className" : "JettyMessageConsumer",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "consumer",
      "alias" : "jetty-message-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "jettyQueryString",
          "jettyURI",
          "jettyURL",
          "httpmethod",
          "_interlokMessageConsumedFrom"
        ],
        "recommended" : [
          "com.adaptris.core.http.jetty.EmbeddedConnection",
          "com.adaptris.core.http.jetty.JettyConnection"
        ],
        "since" : "",
        "summary" : "Listen for HTTP traffic on the specified URI",
        "tag" : "consumer,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for HTTP traffic on the specified URI\",\n                  tag=\"consumer,http,https\",\n                  metadata={\"jettyQueryString\",\"jettyURI\",\"jettyURL\",\"httpmethod\",\"_interlokMessageConsumedFrom\"},\n                  recommended={EmbeddedConnection.class,JettyConnection.class})\npublic class JettyMessageConsumer\nextends BasicJettyConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for HTTP traffic on the specified URI\",\n                  tag=\"consumer,http,https\",\n                  metadata={\"jettyQueryString\",\"jettyURI\",\"jettyURL\",\"httpmethod\",\"_interlokMessageConsumedFrom\"},\n                  recommended={<a href=\"EmbeddedConnection.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">EmbeddedConnection.class</a>,<a href=\"JettyConnection.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">JettyConnection.class</a>})\npublic class <span class=\"typeNameLabel\">JettyMessageConsumer</span>\nextends <a href=\"BasicJettyConsumer.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">BasicJettyConsumer</a>",
      "description" : "This is the standard class that receives documents via HTTP. You should configure the #setDestination(com.adaptris.core.ConsumeDestination) to contain the URI that should trigger this consumer (e.g. /path/to/my/workflow). The value from com.adaptris.core.ConsumeDestination#getFilterExpression() is used to determine which HTTP methods are appropriate for this consumer and should be a comma separated list. In the event that the filter expression is empty / null then all HTTP methods are acceptable (\"GET\", \"POST\", \"HEAD\", \"PUT\", \"DELETE\", \"TRACE\", \"CONNECT\", \"PATCH\") and will need to be handled directly by your workflow. OPTIONS will be automatically. If you want to preserve the http request headers or parameters simply configure a handler for either or both the headers and parameters. See the following javadoc for the following configuration items for headers/parameters; parameter-handler header-handler Note that if you intend for this class to be consumer withing a PoolingWorkflow then you should consider configuring a JettyPoolingWorkflowInterceptor as part of that workflow.",
      "descriptionHtml" : "This is the standard class that receives documents via HTTP. \n<p> You should configure the <code>#setDestination(com.adaptris.core.ConsumeDestination)</code> to contain the URI that should trigger this consumer (e.g. <code>/path/to/my/workflow</code>). The value from <code>com.adaptris.core.ConsumeDestination#getFilterExpression()</code> is used to determine which HTTP methods are appropriate for this consumer and should be a comma separated list. In the event that the filter expression is empty / null then all HTTP methods are acceptable (<code>\"GET\", \"POST\", \"HEAD\", \"PUT\", \"DELETE\", \"TRACE\", \"CONNECT\", \"PATCH\"</code>) and will need to be handled directly by your workflow. <code>OPTIONS</code> will be automatically. </p>\n<p> If you want to preserve the http request headers or parameters simply configure a handler for either or both the headers and parameters. </p> \n<p> See the following javadoc for the following configuration items for headers/parameters; </p>\n<ul> \n <li><a href=\"../server/ParameterHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>parameter-handler</code></a></li> \n <li><a href=\"../server/HeaderHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>header-handler</code></a></li> \n</ul> \n<p></p> \n<p> Note that if you intend for this class to be consumer withing a <a href=\"../../PoolingWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>PoolingWorkflow</code></a> then you should consider configuring a <a href=\"JettyPoolingWorkflowInterceptor.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\"><code>JettyPoolingWorkflowInterceptor</code></a> as part of that workflow. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "BasicJettyConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/BasicJettyConsumer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertAlwaysFail.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertAlwaysFail",
      "className" : "AssertAlwaysFail",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-always-fail",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertAlwaysFail\nextends java.lang.Object\nimplements Assertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertAlwaysFail</span>\nextends java.lang.Object\nimplements <a href=\"Assertion.html\" title=\"interface in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">Assertion</a>",
      "description" : "Assertion that will always fail. Sometimes useful when you'd like to see a returned message, by causing the test to fail.",
      "descriptionHtml" : "Assertion that will always fail. \n<p>Sometimes useful when you'd like to see a returned message, by causing the test to fail.</p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/DownloadOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.DownloadOperation",
      "className" : "DownloadOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-download",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Amazon S3 Download using Transfer Manager",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Amazon S3 Download using Transfer Manager\")\npublic class DownloadOperation\nextends TransferOperation",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Amazon S3 Download using Transfer Manager\")\npublic class <span class=\"typeNameLabel\">DownloadOperation</span>\nextends <a href=\"TransferOperation.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">TransferOperation</a>",
      "description" : "Download an object from S3 using TransferManager.",
      "descriptionHtml" : "Download an object from S3 using \n<code>TransferManager</code>.",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        },
        {
          "name" : "ObjectOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ObjectOperationImpl.html"
        },
        {
          "name" : "TransferOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/TransferOperation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/ZipFileBackedMessageFactory.html",
      "fullClassName" : "com.adaptris.core.lms.ZipFileBackedMessageFactory",
      "className" : "ZipFileBackedMessageFactory",
      "packageName" : "com.adaptris.core.lms",
      "componentType" : "object",
      "alias" : "zip-file-backed-message-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ZipFileBackedMessageFactory\nextends FileBackedMessageFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ZipFileBackedMessageFactory</span>\nextends <a href=\"FileBackedMessageFactory.html\" title=\"class in com.adaptris.core.lms\" target=\"_new\">FileBackedMessageFactory</a>",
      "description" : "Message factory that creates file backed messages from ZIP files. The first entry in the zip file will become the contents of the AdaptrisMessage. Any other entries in the file will be ignored. This is useful for processing large zip files without having to separately extract them before sending them in to the adapter.",
      "descriptionHtml" : "Message factory that creates file backed messages from ZIP files. The first entry in the zip file will become the contents of the \n<a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>. Any other entries in the file will be ignored. This is useful for processing large zip files without having to separately extract them before sending them in to the adapter.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageFactory.html"
        },
        {
          "name" : "DefaultMessageFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultMessageFactory.html"
        },
        {
          "name" : "FileBackedMessageFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/FileBackedMessageFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/AddExtendedLoggingContext.html",
      "fullClassName" : "com.adaptris.core.services.AddExtendedLoggingContext",
      "className" : "AddExtendedLoggingContext",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "add-extended-logging-context-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Add a mapped diagnostic context for logging; useful for filtering",
        "tag" : "service,logging,debug"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Add a mapped diagnostic context for logging; useful for filtering\",\n                  tag=\"service,logging,debug\")\npublic class AddExtendedLoggingContext\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Add a mapped diagnostic context for logging; useful for filtering\",\n                  tag=\"service,logging,debug\")\npublic class <span class=\"typeNameLabel\">AddExtendedLoggingContext</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Add a mapped diagnostic context via MDC.put(String, String). It can be useful to use a mapped diagnostic context to provide additional information into your logfile if the underlying logging system supports it (e.g. logback or log4j2) As the diagnostic logging context is thread based; bear in mind that you will lose the context if part of the service execution chain contains a something like PoolingMessageSplitterService or similar (i.e. something with an underlying thread pool that acts on the message). This is designed to work in conjunction with LoggingContextWorkflowInterceptor as it will add the following items based on object metadata, this is particular useful for above highlighted the scenario with PoolingMessageSplitterService. channelid workflowid messageuniqueid",
      "descriptionHtml" : "Add a mapped diagnostic context via \n<code>MDC.put(String, String)</code>. \n<p> It can be useful to use a mapped diagnostic context to provide additional information into your logfile if the underlying logging system supports it (e.g. logback or log4j2) </p> \n<p> As the diagnostic logging context is thread based; bear in mind that you will lose the context if part of the service execution chain contains a something like <a href=\"splitter/PoolingMessageSplitterService.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\"><code>PoolingMessageSplitterService</code></a> or similar (i.e. something with an underlying thread pool that acts on the message). </p> \n<p>This is designed to work in conjunction with <a href=\"../interceptor/LoggingContextWorkflowInterceptor.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>LoggingContextWorkflowInterceptor</code></a> as it will add the following items based on object metadata, this is particular useful for above highlighted the scenario with <a href=\"splitter/PoolingMessageSplitterService.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\"><code>PoolingMessageSplitterService</code></a>. </p> \n<ul> \n <li>channelid</li> \n <li>workflowid</li> \n <li>messageuniqueid</li> \n</ul>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/auth/CertificateAuthenticationProvider.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.auth.CertificateAuthenticationProvider",
      "className" : "CertificateAuthenticationProvider",
      "packageName" : "com.adaptris.core.jcsmp.solace.auth",
      "componentType" : "object",
      "alias" : "solace-jcsmp-certificate-authentication",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "A Solace native JCSMP certificate authentication provider.",
        "tag" : "authentication,certificate,solace,jcsmp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP certificate authentication provider.\",\n                  tag=\"authentication,certificate,solace,jcsmp\",\n                  since=\"3.11.1\")\npublic class CertificateAuthenticationProvider\nextends java.lang.Object\nimplements AuthenticationProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP certificate authentication provider.\",\n                  tag=\"authentication,certificate,solace,jcsmp\",\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">CertificateAuthenticationProvider</span>\nextends java.lang.Object\nimplements <a href=\"AuthenticationProvider.html\" title=\"interface in com.adaptris.core.jcsmp.solace.auth\" target=\"_new\">AuthenticationProvider</a>",
      "description" : "A certificate based AuthenticationProvider.",
      "descriptionHtml" : "<p> A certificate based <a href=\"AuthenticationProvider.html\" title=\"interface in com.adaptris.core.jcsmp.solace.auth\" target=\"_new\"><code>AuthenticationProvider</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/MetadataMapper.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.MetadataMapper",
      "className" : "MetadataMapper",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-metadata-mapper",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataMapper\nextends FieldMapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataMapper</span>\nextends <a href=\"FieldMapper.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">FieldMapper</a>",
      "description" : "Map between AdaptrisMessage and a specific field within an AdtMessage.",
      "descriptionHtml" : "Map between AdaptrisMessage and a specific field within an AdtMessage.",
      "inheritance" : [
        {
          "name" : "FieldMapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/FieldMapper.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/XmlReportWithStacktrace.html",
      "fullClassName" : "com.adaptris.core.services.exception.XmlReportWithStacktrace",
      "className" : "XmlReportWithStacktrace",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "xml-with-stacktrace-exception-report",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "ExceptionReportGenerator implementation that produces XML (includes the stacktrace)",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"ExceptionReportGenerator implementation that produces XML (includes the stacktrace)\",\n                  since=\"3.8.4\")\npublic class XmlReportWithStacktrace\nextends XmlExceptionReport",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"ExceptionReportGenerator implementation that produces XML (includes the stacktrace)\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">XmlReportWithStacktrace</span>\nextends <a href=\"XmlExceptionReport.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\">XmlExceptionReport</a>",
      "description" : "ExceptionReportGenerator implementation that renders the exception as XML including the stacktrace",
      "descriptionHtml" : "<a href=\"ExceptionReportGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionReportGenerator</code></a> implementation that renders the exception as XML including the stacktrace",
      "inheritance" : [
        {
          "name" : "XmlExceptionReport",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/XmlExceptionReport.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jq/4.0.0B1-RELEASE/com/adaptris/core/json/jq/JsonJqTransform.html",
      "fullClassName" : "com.adaptris.core.json.jq.JsonJqTransform",
      "className" : "JsonJqTransform",
      "packageName" : "com.adaptris.core.json.jq",
      "componentType" : "service",
      "alias" : "json-jq-transform",
      "deprecated" : false,
      "jarFileName" : "interlok-jq.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Execute a JQ style query",
        "tag" : "service,json,transform,jq"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a JQ style query\",\n                  tag=\"service,json,transform,jq\")\npublic class JsonJqTransform\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a JQ style query\",\n                  tag=\"service,json,transform,jq\")\npublic class <span class=\"typeNameLabel\">JsonJqTransform</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Transform a JSON document using JQ style syntax.",
      "descriptionHtml" : "Transform a JSON document using JQ style syntax.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/JmsPartStringWriter.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.JmsPartStringWriter",
      "className" : "JmsPartStringWriter",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "object",
      "alias" : "sonic-part-string",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public class JmsPartStringWriter\nextends JmsPartWriterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JmsPartStringWriter</span>\nextends <a href=\"JmsPartWriterImpl.html\" title=\"class in com.adaptris.core.jms.sonic\" target=\"_new\">JmsPartWriterImpl</a>",
      "description" : "Force the contents of a Part to be a String. This uses the Part.setContent(Object, String) method having generated a String from the AdaptrisMessage (or body part) rather that Part.getOutputStream().",
      "descriptionHtml" : "Force the contents of a \n<code>Part</code> to be a String. \n<p> This uses the <code>Part.setContent(Object, String)</code> method having generated a <code>String</code> from the AdaptrisMessage (or body part) rather that <code>Part.getOutputStream()</code>. </p>",
      "inheritance" : [
        {
          "name" : "JmsPartWriterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/JmsPartWriterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/KeyStore.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.KeyStore",
      "className" : "KeyStore",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-keystore",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class KeyStore\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">KeyStore</span>\nextends java.lang.Object",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/FailoverJmsConnection.html",
      "fullClassName" : "com.adaptris.core.jms.FailoverJmsConnection",
      "className" : "FailoverJmsConnection",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "connection",
      "alias" : "failover-jms-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a JMS 1.1 broker supporting broker failover in a vendor independent way",
        "tag" : "connections,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a JMS 1.1 broker supporting broker failover in a vendor independent way\",\n                  tag=\"connections,jms\")\npublic class FailoverJmsConnection\nextends JmsConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a JMS 1.1 broker supporting broker failover in a vendor independent way\",\n                  tag=\"connections,jms\")\npublic class <span class=\"typeNameLabel\">FailoverJmsConnection</span>\nextends <a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection</a>",
      "description" : "JmsConnection implementation that wraps a list of concrete JMSConnection instances to provide failover. This class is designed for use with JMS Brokers that do not provide any transparent failover facility. For instance, SonicMQ provides transparent failover, so you should use that instead rather than having another concrete JMSConnection instance. Note the while this JmsConnection implementation still exposes connection configuration, these will be ignored, as all connection based activity is delegated to the underlying JmsConnections. The only configuration that overrides the underlying JmsConnection configuration is the connection-attempts and connection-wait.",
      "descriptionHtml" : "JmsConnection implementation that wraps a list of concrete JMSConnection instances to provide failover. \n<p> This class is designed for use with JMS Brokers that do not provide any transparent failover facility. For instance, SonicMQ provides transparent failover, so you should use that instead rather than having another concrete JMSConnection instance. </p> \n<p> Note the while this JmsConnection implementation still exposes connection configuration, these will be ignored, as all connection based activity is delegated to the underlying JmsConnections. The only configuration that overrides the underlying JmsConnection configuration is the connection-attempts and connection-wait. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html"
        },
        {
          "name" : "JmsConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/DirectoryListingService.html",
      "fullClassName" : "com.adaptris.filesystem.DirectoryListingService",
      "className" : "DirectoryListingService",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "service",
      "alias" : "directory-listing-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "List the contents of a directory",
        "tag" : "service,list,directory,ls"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"List the contents of a directory\",\n                  tag=\"service,list,directory,ls\")\npublic class DirectoryListingService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"List the contents of a directory\",\n                  tag=\"service,list,directory,ls\")\npublic class <span class=\"typeNameLabel\">DirectoryListingService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "List the contents of a directory.",
      "descriptionHtml" : "List the contents of a directory.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/PayloadMapper.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.PayloadMapper",
      "className" : "PayloadMapper",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-payload-mapper",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class PayloadMapper\nextends FieldMapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PayloadMapper</span>\nextends <a href=\"FieldMapper.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">FieldMapper</a>",
      "description" : "Map the AdaptrisMessage payload to a specific AdtMessage field.",
      "descriptionHtml" : "Map the AdaptrisMessage payload to a specific AdtMessage field.",
      "inheritance" : [
        {
          "name" : "FieldMapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/FieldMapper.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultFailedMessageRetrier.html",
      "fullClassName" : "com.adaptris.core.DefaultFailedMessageRetrier",
      "className" : "DefaultFailedMessageRetrier",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "default-failed-message-retrier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Configurable Failed Message Retrier",
        "tag" : "error-handling,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Configurable Failed Message Retrier\",\n                  tag=\"error-handling,base\")\npublic class DefaultFailedMessageRetrier\nextends FailedMessageRetrierImp\nimplements AdaptrisMessageListener",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Configurable Failed Message Retrier\",\n                  tag=\"error-handling,base\")\npublic class <span class=\"typeNameLabel\">DefaultFailedMessageRetrier</span>\nextends <a href=\"FailedMessageRetrierImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">FailedMessageRetrierImp</a>\nimplements <a href=\"AdaptrisMessageListener.html\" title=\"interface in com.adaptris.core\" target=\"_new\">AdaptrisMessageListener</a>",
      "description" : "Implementation of FailedMessageRetrier that does not allow duplicate workflows.",
      "descriptionHtml" : "<p> Implementation of <code>FailedMessageRetrier</code> that does not allow duplicate workflows. </p>",
      "inheritance" : [
        {
          "name" : "FailedMessageRetrierImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/FailedMessageRetrierImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/keystore/InlineKeystore.html",
      "fullClassName" : "com.adaptris.security.keystore.InlineKeystore",
      "className" : "InlineKeystore",
      "packageName" : "com.adaptris.security.keystore",
      "componentType" : "object",
      "alias" : "inline-keystore",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class InlineKeystore\nextends ConfiguredKeystore",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InlineKeystore</span>\nextends <a href=\"ConfiguredKeystore.html\" title=\"class in com.adaptris.security.keystore\" target=\"_new\">ConfiguredKeystore</a>",
      "description" : "Specifically presents an embedded encoded Certificate string as a KeystoreLocation object.",
      "descriptionHtml" : "Specifically presents an embedded encoded Certificate string as a KeystoreLocation object.",
      "inheritance" : [
        {
          "name" : "ConfiguredKeystore",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/keystore/ConfiguredKeystore.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultMessageFactory.html",
      "fullClassName" : "com.adaptris.core.DefaultMessageFactory",
      "className" : "DefaultMessageFactory",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "default-message-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultMessageFactory\nextends AdaptrisMessageFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultMessageFactory</span>\nextends <a href=\"AdaptrisMessageFactory.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdaptrisMessageFactory</a>",
      "description" : "The default factory which returns implementations of AdaptrisMessage.",
      "descriptionHtml" : "<p> The default factory which returns implementations of <code>AdaptrisMessage</code>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SerializableAdaptrisMessage.html",
      "fullClassName" : "com.adaptris.core.SerializableAdaptrisMessage",
      "className" : "SerializableAdaptrisMessage",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "serializable-adaptris-message",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SerializableAdaptrisMessage\nextends java.lang.Object\nimplements SerializableMessage",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SerializableAdaptrisMessage</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/SerializableMessage.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\">SerializableMessage</a>",
      "description" : "The SerializableAdaptrisMessage simply represents an AdaptrisMessage that can be serialized. Many of the AdaptrisMessage's class members have been removed to facilitate serialization, such as object metadata - considering any object may be placed in object metadata, we could never be sure the message would serialize. The semantics of each method will attempt to follow that defined by AdaptrisMessage even though it does not implement that interface.",
      "descriptionHtml" : "The SerializableAdaptrisMessage simply represents an AdaptrisMessage that can be serialized. \n<p> Many of the AdaptrisMessage's class members have been removed to facilitate serialization, such as object metadata - considering any object may be placed in object metadata, we could never be sure the message would serialize. The semantics of each method will attempt to follow that defined by <a href=\"AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> even though it does not implement that interface. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/MetadataRequestHeaders.html",
      "fullClassName" : "com.adaptris.core.http.client.net.MetadataRequestHeaders",
      "className" : "MetadataRequestHeaders",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-metadata-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<java.net.HttpURLConnection>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"../RequestHeaderProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\">RequestHeaderProvider</a>&lt;java.net.HttpURLConnection&gt;",
      "description" : "Implementation of RequestHeaderProvider that applies AdaptrisMessage metadata as headers to a HttpURLConnection.",
      "descriptionHtml" : "Implementation of \n<a href=\"../RequestHeaderProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>RequestHeaderProvider</code></a> that applies \n<a href=\"../../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata as headers to a \n<code>HttpURLConnection</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/NoSorting.html",
      "fullClassName" : "com.adaptris.core.fs.enhanced.NoSorting",
      "className" : "NoSorting",
      "packageName" : "com.adaptris.core.fs.enhanced",
      "componentType" : "object",
      "alias" : "fs-sort-none",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoSorting\nextends java.lang.Object\nimplements FileSorter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoSorting</span>\nextends java.lang.Object\nimplements <a href=\"FileSorter.html\" title=\"interface in com.adaptris.core.fs.enhanced\" target=\"_new\">FileSorter</a>",
      "description" : "Do no sorting at all.",
      "descriptionHtml" : "Do no sorting at all.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataHashingService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataHashingService",
      "className" : "MetadataHashingService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-hashing-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Hash a metadata value, and store it",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Hash a metadata value, and store it\",\n                  tag=\"service,metadata\")\npublic class MetadataHashingService\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Hash a metadata value, and store it\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataHashingService</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "Hashes the metadata value stored against a metadata key. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will be hashed, and the value overwitten with the hash after translating it into a String with the specified ByteTranslator",
      "descriptionHtml" : "Hashes the metadata value stored against a metadata key. \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will be hashed, and the value overwitten with the hash after translating it into a String with the specified <a href=\"../../../util/text/ByteTranslator.html\" title=\"class in com.adaptris.util.text\" target=\"_new\"><code>ByteTranslator</code></a> </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.CheckComponentStateService",
      "className" : "CheckComponentStateService",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "service",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ClearExceptionService.html",
      "fullClassName" : "com.adaptris.core.services.exception.ClearExceptionService",
      "className" : "ClearExceptionService",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "service",
      "alias" : "clear-exception-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "Clear any exception stored against object metadata",
        "tag" : "service,error-handling"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Clear any exception stored against object metadata\",\n                  tag=\"service,error-handling\",\n                  since=\"3.11.0\")\npublic class ClearExceptionService\nextends NullService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Clear any exception stored against object metadata\",\n                  tag=\"service,error-handling\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">ClearExceptionService</span>\nextends <a href=\"../../NullService.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullService</a>",
      "description" : "Clears any exception stored against CoreConstants.OBJ_METADATA_EXCEPTION.",
      "descriptionHtml" : "Clears any exception stored against \n<a href=\"../../CoreConstants.html#OBJ_METADATA_EXCEPTION\" target=\"_new\"><code>CoreConstants.OBJ_METADATA_EXCEPTION</code></a>.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "NullService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/PayloadResponseHandlerFactory.html",
      "fullClassName" : "com.adaptris.core.http.apache.PayloadResponseHandlerFactory",
      "className" : "PayloadResponseHandlerFactory",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-payload-response-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class PayloadResponseHandlerFactory\nextends ResponseHandlerFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PayloadResponseHandlerFactory</span>\nextends <a href=\"ResponseHandlerFactoryImpl.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\">ResponseHandlerFactoryImpl</a>",
      "description" : "Implementation ResponseHandlerFactory that writes the response to the AdaptrisMessage payload.",
      "descriptionHtml" : "Implementation \n<a href=\"ResponseHandlerFactory.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\"><code>ResponseHandlerFactory</code></a> that writes the response to the \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> payload.",
      "inheritance" : [
        {
          "name" : "ResponseHandlerFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ResponseHandlerFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/IgnoreValidationException.html",
      "fullClassName" : "com.adaptris.core.json.schema.IgnoreValidationException",
      "className" : "IgnoreValidationException",
      "packageName" : "com.adaptris.core.json.schema",
      "componentType" : "object",
      "alias" : "json-schema-validation-exception-ignore",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Do nothing if validation fails during schema validation",
        "tag" : "json,validation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Do nothing if validation fails during schema validation\",\n                  tag=\"json,validation\")\npublic class IgnoreValidationException\nextends ValidationExceptionHandlerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Do nothing if validation fails during schema validation\",\n                  tag=\"json,validation\")\npublic class <span class=\"typeNameLabel\">IgnoreValidationException</span>\nextends <a href=\"ValidationExceptionHandlerImpl.html\" title=\"class in com.adaptris.core.json.schema\" target=\"_new\">ValidationExceptionHandlerImpl</a>",
      "description" : "Noop implementation of ValidationExceptionHandler",
      "descriptionHtml" : "Noop implementation of \n<a href=\"ValidationExceptionHandler.html\" title=\"interface in com.adaptris.core.json.schema\" target=\"_new\"><code>ValidationExceptionHandler</code></a>",
      "inheritance" : [
        {
          "name" : "ValidationExceptionHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/ValidationExceptionHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/AddNamespaceObjectMetadata.html",
      "fullClassName" : "com.adaptris.core.services.metadata.AddNamespaceObjectMetadata",
      "className" : "AddNamespaceObjectMetadata",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "add-namespace-object-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Add an XML namespace as object metadata",
        "tag" : "service,metadata,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Add an XML namespace as object metadata\",\n                  tag=\"service,metadata,xml\")\npublic class AddNamespaceObjectMetadata\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Add an XML namespace as object metadata\",\n                  tag=\"service,metadata,xml\")\npublic class <span class=\"typeNameLabel\">AddNamespaceObjectMetadata</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Implementation of Service that adds a static NamespaceContext to object metadata for use by other services.",
      "descriptionHtml" : "<p> Implementation of <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> that adds a static NamespaceContext to object metadata for use by other services. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester-xml/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/xmlunit/AssertXmlPayloadEqualsFile.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.xmlunit.AssertXmlPayloadEqualsFile",
      "className" : "AssertXmlPayloadEqualsFile",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion.xmlunit",
      "componentType" : "object",
      "alias" : "assert-xml-payload-equals-file",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester-xml.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertXmlPayloadEqualsFile\nextends com.adaptris.tester.runtime.messages.assertion.AssertPayloadEqualsFile",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertXmlPayloadEqualsFile</span>\nextends com.adaptris.tester.runtime.messages.assertion.AssertPayloadEqualsFile",
      "description" : "Checks if TestMessage.getPayload() equals file contents. Assertions are used to validate the returned message is expected.",
      "descriptionHtml" : "Checks if \n<code>TestMessage.getPayload()</code> equals file contents. \n<p>Assertions are used to validate the returned message is expected.</p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/XML",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester-xml",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertPayloadContains.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertPayloadContains",
      "className" : "AssertPayloadContains",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-payload-contains",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertPayloadContains\nextends PayloadAssertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertPayloadContains</span>\nextends <a href=\"PayloadAssertion.html\" title=\"class in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">PayloadAssertion</a>",
      "description" : "Checks if TestMessage.getPayload() contains PayloadAssertion.getPayload()",
      "descriptionHtml" : "Checks if \n<a href=\"../TestMessage.html#getPayload()\" target=\"_new\"><code>TestMessage.getPayload()</code></a> contains \n<a href=\"PayloadAssertion.html#getPayload()\" target=\"_new\"><code>PayloadAssertion.getPayload()</code></a>",
      "inheritance" : [
        {
          "name" : "PayloadAssertion",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/PayloadAssertion.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/mime/FlattenMimeParts.html",
      "fullClassName" : "com.adaptris.core.services.mime.FlattenMimeParts",
      "className" : "FlattenMimeParts",
      "packageName" : "com.adaptris.core.services.mime",
      "componentType" : "service",
      "alias" : "flatten-mime-parts",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Flatten a mime-message so all body parts are part of the root multipart",
        "tag" : "service,mime"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Flatten a mime-message so all body parts are part of the root multipart\",\n                  tag=\"service,mime\")\npublic class FlattenMimeParts\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Flatten a mime-message so all body parts are part of the root multipart\",\n                  tag=\"service,mime\")\npublic class <span class=\"typeNameLabel\">FlattenMimeParts</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Flatten any nested MimeBodyParts inside the payload. Flattens the payload so that any nested Multiparts have their body parts added directly to the root multipart. This can be useful if you are processing an email message; it can often contain both text and html versions of message body as a nested multipart. For example if you have a MIME message that contains 4 body parts; 3 that are plain text, and a 4th that is a multipart which itself contains 3 text parts; then the resulting output will contain 6 parts; the 3 original plain text parts and the 3 nested parts. Note that a Content-Id header will be generated for each part if it does not already exist. Headers will be generally untouched, but boundary markers will change. i.e.  \n   \nMime-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"----=_Part_3_815648243.1522235646062\"\n\n------=_Part_3_815648243.1522235646062\nContent-Id: part1\n\n...\n------=_Part_3_815648243.1522235646062\nContent-Id: part2\n\n...\n------=_Part_3_815648243.1522235646062\nContent-Id: part3\n\n...\n------=_Part_3_815648243.1522235646062\nContent-Type: multipart/mixed; boundary=\"----=_Part_2_1537805706.1522235646062\"\n\n------=_Part_2_1537805706.1522235646062\nContent-Id: nested1\n\n...\n------=_Part_2_1537805706.1522235646062\nContent-Id: nested2\n\n...\n------=_Part_2_1537805706.1522235646062\nContent-Id: nested3\n\n...\n------=_Part_2_1537805706.1522235646062--\n\n------=_Part_3_815648243.1522235646062--\n   \n becomes    \nMime-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"----=_Part_4_18130400.1522235646074\"\n\n------=_Part_4_18130400.1522235646074\nContent-Id: part1\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: part2\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: part3\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: nested1\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: nested2\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: nested3\n\n...\n------=_Part_4_18130400.1522235646074--",
      "descriptionHtml" : "Flatten any nested \n<code>MimeBodyParts</code> inside the payload. \n<p> Flattens the payload so that any nested <code>Multiparts</code> have their body parts added directly to the root multipart. This can be useful if you are processing an email message; it can often contain both text and html versions of message body as a nested multipart. </p>\n<p> For example if you have a MIME message that contains 4 body parts; 3 that are plain text, and a 4th that is a multipart which itself contains 3 text parts; then the resulting output will contain 6 parts; the 3 original plain text parts and the 3 nested parts. Note that a <code>Content-Id</code> header will be generated for each part if it does not already exist. Headers will be generally untouched, but boundary markers will change. </p> i.e. \n<pre> \n   <code>\nMime-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"----=_Part_3_815648243.1522235646062\"\n\n------=_Part_3_815648243.1522235646062\nContent-Id: part1\n\n...\n------=_Part_3_815648243.1522235646062\nContent-Id: part2\n\n...\n------=_Part_3_815648243.1522235646062\nContent-Id: part3\n\n...\n------=_Part_3_815648243.1522235646062\nContent-Type: multipart/mixed; boundary=\"----=_Part_2_1537805706.1522235646062\"\n\n------=_Part_2_1537805706.1522235646062\nContent-Id: nested1\n\n...\n------=_Part_2_1537805706.1522235646062\nContent-Id: nested2\n\n...\n------=_Part_2_1537805706.1522235646062\nContent-Id: nested3\n\n...\n------=_Part_2_1537805706.1522235646062--\n\n------=_Part_3_815648243.1522235646062--\n   </code>\n </pre> becomes \n<pre>   <code>\nMime-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"----=_Part_4_18130400.1522235646074\"\n\n------=_Part_4_18130400.1522235646074\nContent-Id: part1\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: part2\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: part3\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: nested1\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: nested2\n\n...\n------=_Part_4_18130400.1522235646074\nContent-Id: nested3\n\n...\n------=_Part_4_18130400.1522235646074--\n   </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/AddToCacheService.html",
      "fullClassName" : "com.adaptris.core.services.cache.AddToCacheService",
      "className" : "AddToCacheService",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "service",
      "alias" : "add-to-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "",
        "summary" : "Add values to a cache",
        "tag" : "service,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Add values to a cache\",\n                  tag=\"service,cache\",\n                  recommended=CacheConnection.class)\npublic class AddToCacheService\nextends CacheServiceBase",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Add values to a cache\",\n                  tag=\"service,cache\",\n                  recommended=<a href=\"CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">AddToCacheService</span>\nextends <a href=\"CacheServiceBase.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheServiceBase</a>",
      "description" : "Service implementation that adds entries to a cache based on its configured CacheEntryEvaluators. The standard use case for this is if you wish to cache certain information across workflows (e.g. a CorrelationId). In your source workflow you would use this service to add your required value into the cache. Subsequent workflows could then use RetrieveFromCacheService or RemoveFromCacheService to subsequently retrieve those values from the cache.",
      "descriptionHtml" : "<a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> implementation that adds entries to a cache based on its configured \n<a href=\"CacheEntryEvaluator.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheEntryEvaluator</code></a>s. \n<p> The standard use case for this is if you wish to cache certain information across workflows (e.g. a CorrelationId). In your source workflow you would use this service to add your required value into the cache. Subsequent workflows could then use <a href=\"RetrieveFromCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>RetrieveFromCacheService</code></a> or <a href=\"RemoveFromCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>RemoveFromCacheService</code></a> to subsequently retrieve those values from the cache. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CacheServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceImpl.html"
        },
        {
          "name" : "CacheServiceBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/CopyOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.CopyOperation",
      "className" : "CopyOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-copy",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Copy an object in S3 to another Object",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Copy an object in S3 to another Object\")\npublic class CopyOperation\nextends CopyOperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Copy an object in S3 to another Object\")\npublic class <span class=\"typeNameLabel\">CopyOperation</span>\nextends <a href=\"CopyOperationImpl.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">CopyOperationImpl</a>",
      "description" : "Copy an object from S3 to another object Effectively uses AmazonS3Client.copyObject(String, String, String, String) using only the default behaviour. Note that by default the server-side-encryption, storage-class and website-redirect-location are not copied to the destination object. If you need those settings then you should probably think about using ExtendedCopyOperation instead.",
      "descriptionHtml" : "Copy an object from S3 to another object \n<p> Effectively uses <code>AmazonS3Client.copyObject(String, String, String, String)</code> using only the default behaviour. Note that by default the <code>server-side-encryption, storage-class</code> and <code>website-redirect-location</code> are not copied to the destination object. If you need those settings then you should probably think about using <a href=\"ExtendedCopyOperation.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\"><code>ExtendedCopyOperation</code></a> instead. </p>",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        },
        {
          "name" : "ObjectOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ObjectOperationImpl.html"
        },
        {
          "name" : "CopyOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/CopyOperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/NullTraceFileHandler.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.NullTraceFileHandler",
      "className" : "NullTraceFileHandler",
      "packageName" : "com.adaptris.core.sap.jco3",
      "componentType" : "object",
      "alias" : "sapjco3-noop-trace-file-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class NullTraceFileHandler\nextends TraceFileHandlerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullTraceFileHandler</span>\nextends <a href=\"TraceFileHandlerImpl.html\" title=\"class in com.adaptris.core.sap.jco3\" target=\"_new\">TraceFileHandlerImpl</a>",
      "description" : "Do nothing implementation of TraceFileHandler",
      "descriptionHtml" : "Do nothing implementation of \n<a href=\"TraceFileHandler.html\" title=\"interface in com.adaptris.core.sap.jco3\" target=\"_new\"><code>TraceFileHandler</code></a>",
      "inheritance" : [
        {
          "name" : "TraceFileHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/TraceFileHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/CsvBlobListRenderer.html",
      "fullClassName" : "com.adaptris.csv.CsvBlobListRenderer",
      "className" : "CsvBlobListRenderer",
      "packageName" : "com.adaptris.csv",
      "componentType" : "object",
      "alias" : "remote-blob-list-as-csv",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Render a list of RemoteBlob objects as a CSV",
        "tag" : "cloud,aws,jclouds,blob"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Render a list of RemoteBlob objects as a CSV\",\n                  since=\"3.9.2\",\n                  tag=\"cloud,aws,jclouds,blob\")\npublic class CsvBlobListRenderer\nextends java.lang.Object\nimplements BlobListRenderer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Render a list of RemoteBlob objects as a CSV\",\n                  since=\"3.9.2\",\n                  tag=\"cloud,aws,jclouds,blob\")\npublic class <span class=\"typeNameLabel\">CsvBlobListRenderer</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/cloud/BlobListRenderer.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.cloud\" class=\"externalLink\" target=\"_new\">BlobListRenderer</a>",
      "description" : "Render a list of RemoteBlob as a CSV",
      "descriptionHtml" : "Render a list of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/cloud/RemoteBlob.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.cloud\" class=\"externalLink\" target=\"_new\"><code>RemoteBlob</code></a> as a CSV",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionReportService.html",
      "fullClassName" : "com.adaptris.core.services.exception.ExceptionReportService",
      "className" : "ExceptionReportService",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "service",
      "alias" : "exception-report-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Generate a report based on the current exception",
        "tag" : "service,error-handling"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Generate a report based on the current exception\",\n                  tag=\"service,error-handling\")\npublic class ExceptionReportService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Generate a report based on the current exception\",\n                  tag=\"service,error-handling\")\npublic class <span class=\"typeNameLabel\">ExceptionReportService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Service that takes an exception in object metadata and serializes that into the AdaptrisMessage payload. In some scenarios (e.g. handling request reply scenarios), rather than directly handling the message exception in the adapter, it may be required to report back to the back-end application that an exception has occured along with the problem document.",
      "descriptionHtml" : "Service that takes an exception in object metadata and serializes that into the AdaptrisMessage payload. \n<p> In some scenarios (e.g. handling request reply scenarios), rather than directly handling the message exception in the adapter, it may be required to report back to the back-end application that an exception has occured along with the problem document. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.TestBranchingService",
      "className" : "TestBranchingService",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "service",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/LargeJsonArraySplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.json.LargeJsonArraySplitter",
      "className" : "LargeJsonArraySplitter",
      "packageName" : "com.adaptris.core.services.splitter.json",
      "componentType" : "object",
      "alias" : "large-json-array-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Split a JSON Array into individual JSON objects",
        "tag" : "json,splitting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a JSON Array into individual JSON objects\",\n                  tag=\"json,splitting\")\npublic class LargeJsonArraySplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a JSON Array into individual JSON objects\",\n                  tag=\"json,splitting\")\npublic class <span class=\"typeNameLabel\">LargeJsonArraySplitter</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.splitter\" class=\"externalLink\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "Split an arbitrarily large JSON array. Note: tested with an 85Mb file containing an array of >15k JSON objects",
      "descriptionHtml" : "Split an arbitrarily large JSON array. \n<p> Note: tested with an 85Mb file containing an array of &gt;15k JSON objects </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/NullToEmptyStringConverter.html",
      "fullClassName" : "com.adaptris.util.text.NullToEmptyStringConverter",
      "className" : "NullToEmptyStringConverter",
      "packageName" : "com.adaptris.util.text",
      "componentType" : "object",
      "alias" : "null-to-empty-string-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullToEmptyStringConverter\nextends java.lang.Object\nimplements NullConverter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullToEmptyStringConverter</span>\nextends java.lang.Object\nimplements <a href=\"NullConverter.html\" title=\"interface in com.adaptris.util.text\" target=\"_new\">NullConverter</a>",
      "description" : "Implementation of NullConverter that converts null to the empty string ''.",
      "descriptionHtml" : "Implementation of NullConverter that converts null to the empty string ''.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/SMBProducer.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.SMBProducer",
      "className" : "SMBProducer",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "producer",
      "alias" : "smb-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.filesystem.smbj.SMBConnection"
        ],
        "since" : "3.10.1",
        "summary" : "Write to an SMB location",
        "tag" : "samba,smb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Write to an SMB location\",\n                  tag=\"samba,smb\",\n                  recommended=SMBConnection.class,\n                  since=\"3.10.1\")\npublic class SMBProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Write to an SMB location\",\n                  tag=\"samba,smb\",\n                  recommended=<a href=\"SMBConnection.html\" title=\"class in com.adaptris.filesystem.smbj\" target=\"_new\">SMBConnection.class</a>,\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">SMBProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "Produce to a SMB share.",
      "descriptionHtml" : "Produce to a SMB share.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/AppendingMessageAggregator.html",
      "fullClassName" : "com.adaptris.core.services.aggregator.AppendingMessageAggregator",
      "className" : "AppendingMessageAggregator",
      "packageName" : "com.adaptris.core.services.aggregator",
      "componentType" : "object",
      "alias" : "appending-message-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "MessageAggregator that appends all payloads to the original",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MessageAggregator that appends all payloads to the original\",\n                  since=\"3.9.1\")\npublic class AppendingMessageAggregator\nextends MessageAggregatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MessageAggregator that appends all payloads to the original\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">AppendingMessageAggregator</span>\nextends <a href=\"MessageAggregatorImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">MessageAggregatorImpl</a>",
      "description" : "Implementation of MessageAggregator that just appends payloads. This simply iterates over each of the messages; and appends their payloads to the original message. No checking is done of the payloads; it is a raw append using a stream copy.",
      "descriptionHtml" : "Implementation of \n<a href=\"MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>MessageAggregator</code></a> that just appends payloads. \n<p> This simply iterates over each of the messages; and appends their payloads to the original message. No checking is done of the payloads; it is a raw append using a stream copy. </p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/Equals.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.Equals",
      "className" : "Equals",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "object",
      "alias" : "metadata-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured metadata value equals the supplied value.",
        "tag" : "operator,comparator,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured metadata value equals the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class Equals\nextends ComparatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured metadata value equals the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class <span class=\"typeNameLabel\">Equals</span>\nextends <a href=\"ComparatorImpl.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\">ComparatorImpl</a>",
      "description" : "Used with MetadataComparisonService.",
      "descriptionHtml" : "Used with \n<a href=\"MetadataComparisonService.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\"><code>MetadataComparisonService</code></a>.",
      "inheritance" : [
        {
          "name" : "ComparatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ComparatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-web-token/4.0.0B1-RELEASE/com/adaptris/core/jwt/JWTDecoder.html",
      "fullClassName" : "com.adaptris.core.jwt.JWTDecoder",
      "className" : "JWTDecoder",
      "packageName" : "com.adaptris.core.jwt",
      "componentType" : "service",
      "alias" : "jwt-decode",
      "deprecated" : false,
      "jarFileName" : "interlok-json-web-token.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Encode a header and body to a JSON Web Token",
        "tag" : "jwt,decode,json,web,token"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Encode a header and body to a JSON Web Token\",\n                  tag=\"jwt,decode,json,web,token\",\n                  since=\"3.11.1\")\npublic class JWTDecoder\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Encode a header and body to a JSON Web Token\",\n                  tag=\"jwt,decode,json,web,token\",\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">JWTDecoder</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service provides a way to decode a JSON Web Token. \n    <jwt-decode>\n      <unique-id>jwt-decode</unique-id>\n      <jwt-string class=\"string-payload-data-input-parameter\"/>\n      <secret class=\"base64-encoded-secret\">\n        <secret>c64975ba3cf3f9cd58459710b0a42369f34b0759c9967fb5a47eea488e8bea79</secret>\n      </secret>\n      <header class=\"multi-payload-string-output-parameter\">\n        <payload-id>header</payload-id>\n      </header>\n      <claims class=\"multi-payload-string-output-parameter\">\n        <payload-id>claims</payload-id>\n      </claims>\n    </jwt-decode>",
      "descriptionHtml" : "This service provides a way to decode a JSON Web Token. \n<pre><code>\n    &lt;jwt-decode&gt;\n      &lt;unique-id&gt;jwt-decode&lt;/unique-id&gt;\n      &lt;jwt-string class=\"string-payload-data-input-parameter\"/&gt;\n      &lt;secret class=\"base64-encoded-secret\"&gt;\n        &lt;secret&gt;c64975ba3cf3f9cd58459710b0a42369f34b0759c9967fb5a47eea488e8bea79&lt;/secret&gt;\n      &lt;/secret&gt;\n      &lt;header class=\"multi-payload-string-output-parameter\"&gt;\n        &lt;payload-id&gt;header&lt;/payload-id&gt;\n      &lt;/header&gt;\n      &lt;claims class=\"multi-payload-string-output-parameter\"&gt;\n        &lt;payload-id&gt;claims&lt;/payload-id&gt;\n      &lt;/claims&gt;\n    &lt;/jwt-decode&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JWT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-web-token",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultChannelLifecycleStrategy.html",
      "fullClassName" : "com.adaptris.core.DefaultChannelLifecycleStrategy",
      "className" : "DefaultChannelLifecycleStrategy",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "default-channel-lifecycle-strategy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultChannelLifecycleStrategy\nextends java.lang.Object\nimplements ChannelLifecycleStrategy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultChannelLifecycleStrategy</span>\nextends java.lang.Object\nimplements <a href=\"ChannelLifecycleStrategy.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ChannelLifecycleStrategy</a>",
      "description" : "Default strategy for starting channels. This strategy is functionally equivalent to the way in which channel operations were handled in 2.4.x and blocks until all the channel operations are complete.",
      "descriptionHtml" : "Default strategy for starting channels. \n<p> This strategy is functionally equivalent to the way in which channel operations were handled in 2.4.x and blocks until all the channel operations are complete. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/NotIn.html",
      "fullClassName" : "com.adaptris.core.services.conditional.operator.NotIn",
      "className" : "NotIn",
      "packageName" : "com.adaptris.core.services.conditional.operator",
      "componentType" : "object",
      "alias" : "not-in",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Test whether a specified value doesn't match with any value from the list",
        "tag" : "conditional,operator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Test whether a specified value doesn\\'t match with any value from the list\",\n                  tag=\"conditional,operator\")\npublic class NotIn\nextends IsIn",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Test whether a specified value doesn\\'t match with any value from the list\",\n                  tag=\"conditional,operator\")\npublic class <span class=\"typeNameLabel\">NotIn</span>\nextends <a href=\"IsIn.html\" title=\"class in com.adaptris.core.services.conditional.operator\" target=\"_new\">IsIn</a>",
      "description" : "This Operator Test whether a specified value doesn't match with any value from the list Allows you to add multiple values for comparision",
      "descriptionHtml" : "<p> This <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> Test whether a specified value doesn't match with any value from the list </p> \n<p> Allows you to add multiple values for comparision </p>",
      "inheritance" : [
        {
          "name" : "IsIn",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/IsIn.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/actions/JsonPathAction.html",
      "fullClassName" : "com.adaptris.core.elastic.actions.JsonPathAction",
      "className" : "JsonPathAction",
      "packageName" : "com.adaptris.core.elastic.actions",
      "componentType" : "object",
      "alias" : "elastic-jsonpath-action",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "A document action derived from a JSON path",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A document action derived from a JSON path\",\n                  since=\"3.9.1\")\npublic class JsonPathAction\nextends java.lang.Object\nimplements ActionExtractor",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A document action derived from a JSON path\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">JsonPathAction</span>\nextends java.lang.Object\nimplements <a href=\"ActionExtractor.html\" title=\"interface in com.adaptris.core.elastic.actions\" target=\"_new\">ActionExtractor</a>",
      "description" : "A document action derived from a JSON path.",
      "descriptionHtml" : "A document action derived from a JSON path.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/XpathMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.XpathMetadataService",
      "className" : "XpathMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "xpath-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extract data via XPath and store it as metadata",
        "tag" : "service,metadata,xml,xpath"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract data via XPath and store it as metadata\",\n                  tag=\"service,metadata,xml,xpath\")\npublic class XpathMetadataService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract data via XPath and store it as metadata\",\n                  tag=\"service,metadata,xml,xpath\")\npublic class <span class=\"typeNameLabel\">XpathMetadataService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Store values extracted from message payload using XpathQuery as metadata. This service will support XPath 2.0+ features, but in order to use XPath 2.0 features you must use Saxon as your XPath provider. This means either explicitly removing all DocumentBuilderFactoryBuilder configuration, or ensuring that namespace-aware is set to 'true' in the DocumentBuilderFactoryBuilder configuration. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Store values extracted from message payload using \n<a href=\"xpath/XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\"><code>XpathQuery</code></a> as metadata. \n<p> This service will support XPath 2.0+ features, but in order to use XPath 2.0 features you must use Saxon as your XPath provider. This means either explicitly removing all <a href=\"../../util/DocumentBuilderFactoryBuilder.html\" title=\"class in com.adaptris.core.util\" target=\"_new\"><code>DocumentBuilderFactoryBuilder</code></a> configuration, or ensuring that <code>namespace-aware</code> is set to 'true' in the <a href=\"../../util/DocumentBuilderFactoryBuilder.html\" title=\"class in com.adaptris.core.util\" target=\"_new\"><code>DocumentBuilderFactoryBuilder</code></a> configuration. </p> \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/ForEach.html",
      "fullClassName" : "com.adaptris.core.services.conditional.ForEach",
      "className" : "ForEach",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "service",
      "alias" : "for-each-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.0",
        "summary" : "Runs the configured service/list for each multi-payload message payload.",
        "tag" : "for,each,for each,for-each,then,multi-payload"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Runs the configured service/list for each multi-payload message payload.\",\n                  tag=\"for,each,for each,for-each,then,multi-payload\",\n                  since=\"3.10.0\")\npublic class ForEach\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Runs the configured service/list for each multi-payload message payload.\",\n                  tag=\"for,each,for each,for-each,then,multi-payload\",\n                  since=\"3.10.0\")\npublic class <span class=\"typeNameLabel\">ForEach</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "A for-each implementation that iterates over the payloads in a multi-payload message MultiPayloadAdaptrisMessage. For each payload then execute the given service (list). The default is to use a single thread to iterate over the payloads, but a thread pool can be used to parallelize the loop. \n <for-each-payload>\n   <unique-id>for-each-id</unique-id>\n   <then>\n     <service class=\"shared-service\">\n       <lookup-name>for-each-service-list-id</lookup-name>\n       <unique-id>for-each-service-list-id</unique-id>\n     </service>\n   </then>\n   <thread-count>1</thread-count>\n </for-each-payload>\n Note: If your service list for each payload contains a StopProcessingService it will not stop the processing of each payload.",
      "descriptionHtml" : "A for-each implementation that iterates over the payloads in a multi-payload message \n<a href=\"../../MultiPayloadAdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>MultiPayloadAdaptrisMessage</code></a>. For each payload then execute the given service (list). The default is to use a single thread to iterate over the payloads, but a thread pool can be used to parallelize the loop. \n<pre><code>\n &lt;for-each-payload&gt;\n   &lt;unique-id&gt;for-each-id&lt;/unique-id&gt;\n   &lt;then&gt;\n     &lt;service class=\"shared-service\"&gt;\n       &lt;lookup-name&gt;for-each-service-list-id&lt;/lookup-name&gt;\n       &lt;unique-id&gt;for-each-service-list-id&lt;/unique-id&gt;\n     &lt;/service&gt;\n   &lt;/then&gt;\n   &lt;thread-count&gt;1&lt;/thread-count&gt;\n &lt;/for-each-payload&gt;\n </code></pre> \n<p> Note: If your service list for each payload contains a <a href=\"../StopProcessingService.html\" title=\"class in com.adaptris.core.services\" target=\"_new\"><code>StopProcessingService</code></a> it will not stop the processing of each payload. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/AdvancedConsumerConfigBuilder.html",
      "fullClassName" : "com.adaptris.kafka.AdvancedConsumerConfigBuilder",
      "className" : "AdvancedConsumerConfigBuilder",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "object",
      "alias" : "kafka-advanced-consumer-config",
      "deprecated" : false,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedConsumerConfigBuilder\nextends AdvancedConfigBuilder\nimplements ConsumerConfigBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedConsumerConfigBuilder</span>\nextends <a href=\"AdvancedConfigBuilder.html\" title=\"class in com.adaptris.kafka\" target=\"_new\">AdvancedConfigBuilder</a>\nimplements <a href=\"ConsumerConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\">ConsumerConfigBuilder</a>",
      "description" : "Implementation of ConsumerConfigBuilder that exposes all configuration. Exposes all possible settings via a KeyValuePairSet. No checking of values is performed other than for the various SSL passwords (such as \"ssl.key.password\") which will be decoded using Password.decode(String) appropriately. Regardless of what is configured; the key.deserializer property is fixed to be a StringDeserializer; and the value.deserializer property is always an AdaptrisMessageDeserializer.",
      "descriptionHtml" : "Implementation of \n<a href=\"ConsumerConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\"><code>ConsumerConfigBuilder</code></a> that exposes all configuration. \n<p> Exposes all possible settings via a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairSet.html?is-external=true\" title=\"class or interface in com.adaptris.util\" class=\"externalLink\" target=\"_new\"><code>KeyValuePairSet</code></a>. No checking of values is performed other than for the various SSL passwords (such as \"ssl.key.password\") which will be decoded using <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/password/Password.html?is-external=true#decode(java.lang.String)\" title=\"class or interface in com.adaptris.security.password\" class=\"externalLink\" target=\"_new\"><code>Password.decode(String)</code></a> appropriately. </p> \n<p> Regardless of what is configured; the <code>key.deserializer</code> property is fixed to be a <code>StringDeserializer</code>; and the <code>value.deserializer</code> property is always an <a href=\"AdaptrisMessageDeserializer.html\" title=\"class in com.adaptris.kafka\" target=\"_new\"><code>AdaptrisMessageDeserializer</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "AdvancedConfigBuilder",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/AdvancedConfigBuilder.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/SplitByMetadata.html",
      "fullClassName" : "com.adaptris.core.services.splitter.SplitByMetadata",
      "className" : "SplitByMetadata",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "split-by-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SplitByMetadata\nextends MessageCopier",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SplitByMetadata</span>\nextends <a href=\"MessageCopier.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageCopier</a>",
      "description" : "Implementation of MessageSplitter which allows a single AdaptrisMessage that contains a metadata key that is considered to contain multiple elements to be split.",
      "descriptionHtml" : "<p> Implementation of <code>MessageSplitter</code> which allows a single <code>AdaptrisMessage</code> that contains a metadata key that is considered to contain multiple elements to be split. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html"
        },
        {
          "name" : "MessageCopier",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageCopier.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/ProfileCredentialsBuilder.html",
      "fullClassName" : "com.adaptris.aws.ProfileCredentialsBuilder",
      "className" : "ProfileCredentialsBuilder",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-profile-credentials-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Credentials provider based on AWS configuration profiles",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Credentials provider based on AWS configuration profiles\",\n                  since=\"3.9.2\")\npublic class ProfileCredentialsBuilder\nextends java.lang.Object\nimplements AWSCredentialsProviderBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Credentials provider based on AWS configuration profiles\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">ProfileCredentialsBuilder</span>\nextends java.lang.Object\nimplements <a href=\"AWSCredentialsProviderBuilder.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">AWSCredentialsProviderBuilder</a>",
      "description" : "Credentials provider based on AWS configuration profiles",
      "descriptionHtml" : "Credentials provider based on AWS configuration profiles",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.XStreamCDataWrapper",
      "className" : "XStreamCDataWrapper",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "object",
      "alias" : "xstream-cdata-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/services/AddMetadata.html",
      "fullClassName" : "com.adaptris.stax.services.AddMetadata",
      "className" : "AddMetadata",
      "packageName" : "com.adaptris.stax.services",
      "componentType" : "object",
      "alias" : "stax-plugin-add-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "PostTransform implementation that adds metadata",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"PostTransform implementation that adds metadata\",\n                  since=\"3.8.4\")\npublic class AddMetadata\nextends java.lang.Object\nimplements PostTransform",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"PostTransform implementation that adds metadata\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">AddMetadata</span>\nextends java.lang.Object\nimplements <a href=\"PostTransform.html\" title=\"interface in com.adaptris.stax.services\" target=\"_new\">PostTransform</a>",
      "description" : "PostTransform implementation that adds metadata. Note that this wraps AddMetadataService under the covers with AddMetadataService.setOverwrite(Boolean) true, so behaviour is consistent with the documentation for that class.",
      "descriptionHtml" : "<a href=\"PostTransform.html\" title=\"interface in com.adaptris.stax.services\" target=\"_new\"><code>PostTransform</code></a> implementation that adds metadata. \n<p> Note that this wraps <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/AddMetadataService.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.metadata\" class=\"externalLink\" target=\"_new\"><code>AddMetadataService</code></a> under the covers with <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/AddMetadataService.html?is-external=true#setOverwrite(java.lang.Boolean)\" title=\"class or interface in com.adaptris.core.services.metadata\" class=\"externalLink\" target=\"_new\"><code>AddMetadataService.setOverwrite(Boolean)</code></a> true, so behaviour is consistent with the documentation for that class. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/PartitionedKafkaProducer.html",
      "fullClassName" : "com.adaptris.kafka.PartitionedKafkaProducer",
      "className" : "PartitionedKafkaProducer",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "producer",
      "alias" : "partitioned-apache-kafka-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.kafka.KafkaConnection"
        ],
        "since" : "",
        "summary" : "Produce messages to Apache Kafka with a specific partition number",
        "tag" : "producer,kafka"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Produce messages to Apache Kafka with a specific partition number\",\n                  tag=\"producer,kafka\",\n                  recommended=KafkaConnection.class)\npublic class PartitionedKafkaProducer\nextends StandardKafkaProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Produce messages to Apache Kafka with a specific partition number\",\n                  tag=\"producer,kafka\",\n                  recommended=<a href=\"KafkaConnection.html\" title=\"class in com.adaptris.kafka\" target=\"_new\">KafkaConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PartitionedKafkaProducer</span>\nextends <a href=\"StandardKafkaProducer.html\" title=\"class in com.adaptris.kafka\" target=\"_new\">StandardKafkaProducer</a>",
      "description" : "Extension of StandardKafkaProducer that allows you to specify a partition.",
      "descriptionHtml" : "Extension of \n<a href=\"StandardKafkaProducer.html\" title=\"class in com.adaptris.kafka\" target=\"_new\"><code>StandardKafkaProducer</code></a> that allows you to specify a partition.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        },
        {
          "name" : "StandardKafkaProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/StandardKafkaProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpRequestService.html",
      "fullClassName" : "com.adaptris.core.http.client.net.HttpRequestService",
      "className" : "HttpRequestService",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "service",
      "alias" : "http-request-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "adphttpresponse"
        ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Make a HTTP request to a remote server using standard JRE components",
        "tag" : "service,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Make a HTTP request to a remote server using standard JRE components\",\n                  tag=\"service,http,https\",\n                  metadata=\"adphttpresponse\")\npublic class HttpRequestService\nextends HttpRequestServiceImpl\nimplements DynamicPollingTemplate.TemplateProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Make a HTTP request to a remote server using standard JRE components\",\n                  tag=\"service,http,https\",\n                  metadata=\"adphttpresponse\")\npublic class <span class=\"typeNameLabel\">HttpRequestService</span>\nextends <a href=\"HttpRequestServiceImpl.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\">HttpRequestServiceImpl</a>\nimplements <a href=\"../../../DynamicPollingTemplate.TemplateProvider.html\" title=\"interface in com.adaptris.core\" target=\"_new\">DynamicPollingTemplate.TemplateProvider</a>",
      "description" : "Direct HTTP support as a service rather wrapped via StandaloneProducer or StandaloneRequestor. Note that this service just wraps a StandardHttpProducer instance but doesn't expose all the possible settings available for the normal StandardHttpProducer. If you need those features, than continue using the producer wrapped as a StandaloneProducer or StandaloneRequestor. String parameters in this service will use the InterlokMessage.resolve(String) which allows you to specify metadata values as part of a constant string e.g. setUrl(\"%message{http_url}\") will use the metadata value associated with the key http_url.",
      "descriptionHtml" : "Direct HTTP support as a service rather wrapped via \n<a href=\"../../../StandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneProducer</code></a> or \n<a href=\"../../../StandaloneRequestor.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneRequestor</code></a>. \n<p> Note that this service just wraps a <a href=\"StandardHttpProducer.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>StandardHttpProducer</code></a> instance but doesn't expose all the possible settings available for the normal <a href=\"StandardHttpProducer.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>StandardHttpProducer</code></a>. If you need those features, than continue using the producer wrapped as a <a href=\"../../../StandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneProducer</code></a> or <a href=\"../../../StandaloneRequestor.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneRequestor</code></a>. </p> \n<p> String parameters in this service will use the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#resolve(java.lang.String)\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.resolve(String)</code></a> which allows you to specify metadata values as part of a constant string e.g. <code>setUrl(\"%message{http_url}\")</code> will use the metadata value associated with the key <code>http_url</code>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "HttpRequestServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpRequestServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/PayloadToMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.PayloadToMetadataService",
      "className" : "PayloadToMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "payload-to-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Take the entire payload and store it against a metadata key",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Take the entire payload and store it against a metadata key\",\n                  tag=\"service,metadata\")\npublic class PayloadToMetadataService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Take the entire payload and store it against a metadata key\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">PayloadToMetadataService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Takes the entire payload and writes it out to metadata (either object or normal metadata). If storing to PayloadToMetadataService.MetadataTarget.Object then the raw byte[] will be stored in object metadata against the specified key. If storing to PayloadToMetadataService.MetadataTarget.Standard then the payload will be treated as a String (using the default character set encoding); if storing as standard metadata, then you are encouraged to apply an encoding such as base64 using setEncoding(com.adaptris.core.util.EncodingHelper.Encoding) to make sure that the payload can be treated as a String. The reason for only using the default charset is to avoid complications when the data is actually XML and the encoding specification does not match the message's character set.",
      "descriptionHtml" : "Takes the entire payload and writes it out to metadata (either object or normal metadata). \n<p> If storing to <a href=\"PayloadToMetadataService.MetadataTarget.html#Object\" target=\"_new\"><code>PayloadToMetadataService.MetadataTarget.Object</code></a> then the raw byte[] will be stored in object metadata against the specified key. If storing to <a href=\"PayloadToMetadataService.MetadataTarget.html#Standard\" target=\"_new\"><code>PayloadToMetadataService.MetadataTarget.Standard</code></a> then the payload will be treated as a String (using the default character set encoding); if storing as standard metadata, then you are encouraged to apply an encoding such as base64 using <a href=\"#setEncoding(com.adaptris.core.util.EncodingHelper.Encoding)\" target=\"_new\"><code>setEncoding(com.adaptris.core.util.EncodingHelper.Encoding)</code></a> to make sure that the payload can be treated as a String. The reason for only using the default charset is to avoid complications when the data is actually XML and the encoding specification does not match the message's character set. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/arguments/FixedSprayFormat.html",
      "fullClassName" : "com.adaptris.hpcc.arguments.FixedSprayFormat",
      "className" : "FixedSprayFormat",
      "packageName" : "com.adaptris.hpcc.arguments",
      "componentType" : "object",
      "alias" : "spray-format-fixed",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : { },
      "annotationDetails" : "public class FixedSprayFormat\nextends SprayFormat",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FixedSprayFormat</span>\nextends <a href=\"SprayFormat.html\" title=\"class in com.adaptris.hpcc.arguments\" target=\"_new\">SprayFormat</a>",
      "description" : "SprayFormat implementation that allows the configuration of command specific arguments for format=fixed sprays. argument required description default recordsize yes The fixed size of each record, in bytes. N/A",
      "descriptionHtml" : "SprayFormat implementation that allows the configuration of command specific arguments for \n<code>format=fixed</code> sprays. \n<table> \n <tbody>\n  <tr>\n   <th>argument</th>\n   <th>required</th>\n   <th>description</th>\n   <th>default</th>\n  </tr> \n  <tr>\n   <td>recordsize</td>\n   <td>yes</td>\n   <td>The fixed size of each record, in bytes.</td>\n   <td>N/A</td>\n  </tr> \n </tbody>\n</table>",
      "inheritance" : [
        {
          "name" : "SprayFormat",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/arguments/SprayFormat.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/AddMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.AddMetadataService",
      "className" : "AddMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "add-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Add Static Metadata to a Message",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Add Static Metadata to a Message\",\n                  tag=\"service,metadata\")\npublic class AddMetadataService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Add Static Metadata to a Message\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">AddMetadataService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Implementation of Service that adds static metadata to be added to a message. Each metadata-element is added in sequence to the message, overwriting any existing metadata. Additional behaviour is possible based on the value portion of the metadata-element. $UNIQUE_ID$ - add the messages unique id as metadata $MSG_SIZE$ - add the messages current size as metadata",
      "descriptionHtml" : "<p> Implementation of <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> that adds static metadata to be added to a message. </p> \n<p> Each metadata-element is added in sequence to the message, overwriting any existing metadata. </p> \n<p> Additional behaviour is possible based on the value portion of the metadata-element. </p>\n<ul> \n <li>$UNIQUE_ID$ - add the messages unique id as metadata</li> \n <li>$MSG_SIZE$ - add the messages current size as metadata</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/runtime/ClassDescriptor.html",
      "fullClassName" : "com.adaptris.core.runtime.ClassDescriptor",
      "className" : "ClassDescriptor",
      "packageName" : "com.adaptris.core.runtime",
      "componentType" : "object",
      "alias" : "class-descriptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ClassDescriptor\nextends java.lang.Object\nimplements java.io.Serializable",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ClassDescriptor</span>\nextends java.lang.Object\nimplements java.io.Serializable",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ExtendedCopyOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.ExtendedCopyOperation",
      "className" : "ExtendedCopyOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-extended-copy",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.2",
        "summary" : "Copy an object in S3 to another Object",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Copy an object in S3 to another Object\",\n                  since=\"3.10.2\")\npublic class ExtendedCopyOperation\nextends CopyOperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Copy an object in S3 to another Object\",\n                  since=\"3.10.2\")\npublic class <span class=\"typeNameLabel\">ExtendedCopyOperation</span>\nextends <a href=\"CopyOperationImpl.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">CopyOperationImpl</a>",
      "description" : "Copy an object from S3 to another object By default this operation gets the existing ObjectMetadata and Tags associated with the S3 object, and ensures that they are applied to the underlying CopyObjectRequest. You also have the option to force various settings using the object-metadata and object-tags members as required. If you're using the Amazon S3 API against a different provider then your mileage may vary since object-tags and object-metadata might not translate to alternate providers.",
      "descriptionHtml" : "Copy an object from S3 to another object \n<p> By default this operation gets the existing ObjectMetadata and Tags associated with the S3 object, and ensures that they are applied to the underlying <code>CopyObjectRequest</code>. You also have the option to force various settings using the <code>object-metadata</code> and <code>object-tags</code> members as required. If you're using the Amazon S3 API against a different provider then your mileage may vary since <code>object-tags</code> and <code>object-metadata</code> might not translate to alternate providers. </p>",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        },
        {
          "name" : "ObjectOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ObjectOperationImpl.html"
        },
        {
          "name" : "CopyOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/CopyOperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ResponseHeadersAsObjectMetadata.html",
      "fullClassName" : "com.adaptris.core.http.apache.ResponseHeadersAsObjectMetadata",
      "className" : "ResponseHeadersAsObjectMetadata",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-response-headers-as-object-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class ResponseHeadersAsObjectMetadata\nextends ResponseHeadersAsMetadata",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ResponseHeadersAsObjectMetadata</span>\nextends <a href=\"ResponseHeadersAsMetadata.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\">ResponseHeadersAsMetadata</a>",
      "description" : "Concrete implementation of ResponseHeaderHandler which adds all the HTTP headers from the response as object metadata to the AdaptrisMessage. The underlying Header object that will be added to object metadata and keyed by NameValuePair.getName(). and will include header fields where the name is null;",
      "descriptionHtml" : "Concrete implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>ResponseHeaderHandler</code></a> which adds all the HTTP headers from the response as object metadata to the \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a>. \n<p>The underlying <code>Header</code> object that will be added to object metadata and keyed by <code>NameValuePair.getName()</code>. and will include header fields where the name is <code>null</code>; </p>",
      "inheritance" : [
        {
          "name" : "ResponseHeadersAsMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ResponseHeadersAsMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/StandardSftpConnection.html",
      "fullClassName" : "com.adaptris.core.ftp.StandardSftpConnection",
      "className" : "StandardSftpConnection",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "connection",
      "alias" : "standard-sftp-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a server using the SSH File Transfer Protocol; authentication via a configured authentication provider",
        "tag" : "connections,sftp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a server using the SSH File Transfer Protocol; authentication via a configured authentication provider\",\n                  tag=\"connections,sftp\")\npublic class StandardSftpConnection\nextends FileTransferConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a server using the SSH File Transfer Protocol; authentication via a configured authentication provider\",\n                  tag=\"connections,sftp\")\npublic class <span class=\"typeNameLabel\">StandardSftpConnection</span>\nextends <a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FileTransferConnection</a>",
      "description" : "SFTP Connection class that connects via a configurable SftpAuthenticationProvider.",
      "descriptionHtml" : "SFTP Connection class that connects via a configurable \n<a href=\"SftpAuthenticationProvider.html\" title=\"interface in com.adaptris.core.ftp\" target=\"_new\"><code>SftpAuthenticationProvider</code></a>.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "NoOpConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html"
        },
        {
          "name" : "FileTransferConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FileTransferConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/ConfiguredXpathNodeQuery.html",
      "fullClassName" : "com.adaptris.core.services.metadata.xpath.ConfiguredXpathNodeQuery",
      "className" : "ConfiguredXpathNodeQuery",
      "packageName" : "com.adaptris.core.services.metadata.xpath",
      "componentType" : "object",
      "alias" : "configured-xpath-node-query",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredXpathNodeQuery\nextends ConfiguredXpathQueryImpl\nimplements XpathObjectQuery",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredXpathNodeQuery</span>\nextends <a href=\"ConfiguredXpathQueryImpl.html\" title=\"class in com.adaptris.core.services.metadata.xpath\" target=\"_new\">ConfiguredXpathQueryImpl</a>\nimplements <a href=\"XpathObjectQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathObjectQuery</a>",
      "description" : "XpathObjectQuery implementation that returns a Node",
      "descriptionHtml" : "<a href=\"XpathObjectQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\"><code>XpathObjectQuery</code></a> implementation that returns a \n<code>Node</code>",
      "inheritance" : [
        {
          "name" : "XpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/XpathQueryImpl.html"
        },
        {
          "name" : "ConfiguredXpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/ConfiguredXpathQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ThrowExceptionService.html",
      "fullClassName" : "com.adaptris.core.services.exception.ThrowExceptionService",
      "className" : "ThrowExceptionService",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "service",
      "alias" : "throw-exception-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Throw an exception based on some configured criteria",
        "tag" : "service,error-handling"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Throw an exception based on some configured criteria\",\n                  tag=\"service,error-handling\")\npublic class ThrowExceptionService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Throw an exception based on some configured criteria\",\n                  tag=\"service,error-handling\")\npublic class <span class=\"typeNameLabel\">ThrowExceptionService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Throws an exception based on a configurable set of criteria. Use this service as part of a workflow to throw an exception at a time and place of your choosing (rather than when the exception actually occurs perhaps). The ServiceException is generated by concrete implementations of ExceptionGenerator; if the generated exception is null, then no exception is thrown.",
      "descriptionHtml" : "Throws an exception based on a configurable set of criteria. \n<p> Use this service as part of a workflow to throw an exception at a time and place of your choosing (rather than when the exception actually occurs perhaps). The <a href=\"../../ServiceException.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>ServiceException</code></a> is generated by concrete implementations of <a href=\"ExceptionGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionGenerator</code></a>; if the generated exception is null, then no exception is thrown. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/LastKnownException.html",
      "fullClassName" : "com.adaptris.core.services.exception.LastKnownException",
      "className" : "LastKnownException",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "last-known-exception",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LastKnownException\nextends java.lang.Object\nimplements ExceptionGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LastKnownException</span>\nextends java.lang.Object\nimplements <a href=\"ExceptionGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\">ExceptionGenerator</a>",
      "description" : "ExceptionGenerator implementation that generates the exception from the last known exception. Use this class with ThrowExceptionService to throw an exception as part of a workflow. Whenever an exception is encountered in a service, exception is stored as part of object metadata. In some cases, the exception may have been ignored due to continue-on-fail settings. This implementation uses any Exception stored in object metadata as the base of the exception that is generated. Note that if this ExceptionGenerator is used, then it is possible for ThrowExceptionService to not throw an exception as there may have not been an exception generated previously.",
      "descriptionHtml" : "<a href=\"ExceptionGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionGenerator</code></a> implementation that generates the exception from the last known exception. \n<p> Use this class with <a href=\"ThrowExceptionService.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\"><code>ThrowExceptionService</code></a> to throw an exception as part of a workflow. Whenever an exception is encountered in a service, exception is stored as part of object metadata. In some cases, the exception may have been <i>ignored</i> due to continue-on-fail settings. This implementation uses any Exception stored in object metadata as the base of the exception that is generated. Note that if this <a href=\"ExceptionGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionGenerator</code></a> is used, then it is possible for <a href=\"ThrowExceptionService.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\"><code>ThrowExceptionService</code></a> to not throw an exception as there may have not been an exception generated previously. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-onedrive/4.0.0B1-RELEASE/com/adaptris/interlok/azure/onedrive/DocumentDownloadService.html",
      "fullClassName" : "com.adaptris.interlok.azure.onedrive.DocumentDownloadService",
      "className" : "DocumentDownloadService",
      "packageName" : "com.adaptris.interlok.azure.onedrive",
      "componentType" : "service",
      "alias" : "azure-one-drive-document-download-service",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-onedrive.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.interlok.azure.GraphAPIConnection"
        ],
        "since" : "",
        "summary" : "Retrieve the contents of a file from OneDrive.",
        "tag" : "file,o365,microsoft,office,365,one drive,download"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Retrieve the contents of a file from OneDrive.\",\n                  tag=\"file,o365,microsoft,office,365,one drive,download\",\n                  recommended=com.adaptris.interlok.azure.GraphAPIConnection.class)\npublic class DocumentDownloadService\nextends ServiceImp\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Retrieve the contents of a file from OneDrive.\",\n                  tag=\"file,o365,microsoft,office,365,one drive,download\",\n                  recommended=com.adaptris.interlok.azure.GraphAPIConnection.class)\npublic class <span class=\"typeNameLabel\">DocumentDownloadService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Retrieve the contents of a file from OneDrive.",
      "descriptionHtml" : "Retrieve the contents of a file from OneDrive.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/OneDrive",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-onedrive",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ExpirationTimeRuleId.html",
      "fullClassName" : "com.adaptris.aws.s3.meta.S3ExpirationTimeRuleId",
      "className" : "S3ExpirationTimeRuleId",
      "packageName" : "com.adaptris.aws.s3.meta",
      "componentType" : "object",
      "alias" : "s3-expiration-rule-id",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : { },
      "annotationDetails" : "public class S3ExpirationTimeRuleId\nextends S3ObjectMetadata",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">S3ExpirationTimeRuleId</span>\nextends <a href=\"S3ObjectMetadata.html\" title=\"class in com.adaptris.aws.s3.meta\" target=\"_new\">S3ObjectMetadata</a>",
      "inheritance" : [
        {
          "name" : "S3ObjectMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ObjectMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsConsumer.html",
      "fullClassName" : "com.adaptris.xa.jms.XAJmsConsumer",
      "className" : "XAJmsConsumer",
      "packageName" : "com.adaptris.xa.jms",
      "componentType" : "consumer",
      "alias" : "xa-jms-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-atomikos.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.xa.jms.XAJmsConnection"
        ],
        "since" : "",
        "summary" : "Listen for JMS messages on the specified queue or topic",
        "tag" : "consumer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue or topic\",\n                  tag=\"consumer,jms\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class XAJmsConsumer\nextends XAJmsConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue or topic\",\n                  tag=\"consumer,jms\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class <span class=\"typeNameLabel\">XAJmsConsumer</span>\nextends <a href=\"XAJmsConsumerImpl.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\">XAJmsConsumerImpl</a>",
      "description" : "JMS Consumer implementation that can target queues or topics via an RFC6167 style destination. This differs from the standard PtpConsumer and PasConsumer in that it supports a destination that is specified in RFC6167 style. For instance jms:queue:myQueueName will consume from a queue called myQueueName and jms:topic:myTopicName from a topic called myTopicName While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. There is also support for subscriptionId which indicates the subscriptionId that should be used when attaching a subscriber to a topic; jms:topic:MyTopicName?subscriptionId=myId would return a JmsDestination.subscriptionId() of myId. If a subscription ID is not specified, then a durable subscriber is never created; specifying a subscription ID automatically means a durable subscriber. For instance you could have the following destinations: jms:queue:MyQueueName jms:topic:MyTopicName jms:topic:MyTopicName?subscriptionId=mySubscriptionId Additionally this consumer uses a transaction manager to perform a two-phase commit for each transaction. The transaction size is determined by the max-batch property. If set to 200 for example, then this consumer will attempt to commit an entire batch of 200 messages, once each has been processed. If however there are less than 200 messages on the JMS endpoint to consume and process, then this consumer will commit as many as it can consume before starting another transaction.",
      "descriptionHtml" : "JMS Consumer implementation that can target queues or topics via an RFC6167 style destination. \n<p> This differs from the standard <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PtpConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>PtpConsumer</code></a> and <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PasConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>PasConsumer</code></a> in that it supports a destination that is specified in RFC6167 style. For instance <code>jms:queue:myQueueName</code> will consume from a queue called <code>myQueueName</code> and <code>jms:topic:myTopicName</code> from a topic called <code>myTopicName</code> </p> \n<p> While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. There is also support for <code>subscriptionId</code> which indicates the subscriptionId that should be used when attaching a subscriber to a topic; <code>jms:topic:MyTopicName?subscriptionId=myId</code> would return a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsDestination.html?is-external=true#subscriptionId()\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsDestination.subscriptionId()</code></a> of <code>myId</code>. If a subscription ID is not specified, then a durable subscriber is never created; specifying a subscription ID automatically means a durable subscriber. </p> For instance you could have the following destinations: \n<ul> \n <li>jms:queue:MyQueueName</li> \n <li>jms:topic:MyTopicName</li> \n <li>jms:topic:MyTopicName?subscriptionId=mySubscriptionId</li> \n</ul> \n<p></p> \n<p> Additionally this consumer uses a transaction manager to perform a two-phase commit for each transaction. </p> \n<p> The transaction size is determined by the max-batch property. If set to 200 for example, then this consumer will attempt to commit an entire batch of 200 messages, once each has been processed. If however there are less than 200 messages on the JMS endpoint to consume and process, then this consumer will commit as many as it can consume before starting another transaction. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "XAJmsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Atomikos",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-atomikos",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/ResolvableExpressionParameter.html",
      "fullClassName" : "com.adaptris.core.transform.ResolvableExpressionParameter",
      "className" : "ResolvableExpressionParameter",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "object",
      "alias" : "xml-transform-resolvable-expression-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ResolvableExpressionParameter\nextends java.lang.Object\nimplements XmlTransformParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ResolvableExpressionParameter</span>\nextends java.lang.Object\nimplements <a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\">XmlTransformParameter</a>",
      "description" : "XmlTransformParameter implementation that filters resolvable expressions making matches available as String parameters.",
      "descriptionHtml" : "<a href=\"XmlTransformParameter.html\" title=\"interface in com.adaptris.core.transform\" target=\"_new\"><code>XmlTransformParameter</code></a> implementation that filters resolvable expressions making matches available as String parameters.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-webspheremq/4.0.0B1-RELEASE/com/adaptris/core/jms/wmq/AdvancedMqSeriesImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.wmq.AdvancedMqSeriesImplementation",
      "className" : "AdvancedMqSeriesImplementation",
      "packageName" : "com.adaptris.core.jms.wmq",
      "componentType" : "object",
      "alias" : "advanced-mq-series-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-webspheremq.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedMqSeriesImplementation\nextends VendorImplementationImp\nimplements LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedMqSeriesImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">VendorImplementationImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Advanced IBM MQ Series implementation. Depending on your WebsphereMQ configuration you will need at least com.ibm.mq.allclient.jar or these com.ibm.mq.jar, com.ibm.mqjms.jar, connector.jar, dhbcore.jar and jta.jar from your WebsphereMQ installation. If you intend on using bindings mode, then you may need to include additional jars such as com.ibm.mqbind.jar This vendor implementation class directly exposes all the primitive and String getter and setters that are available in the MQConnectionFactory for maximum flexibility in configuration. The key from the connection-factory-properties element should match the name of the underlying MQConnectionFactory property/method.    <connection-factory-properties>\n     <key-value-pair>\n        <key>SendExitInit</key>\n        <value>SomeData</value>\n     </key-value-pair>\n   </connection-factory-properties>\n would call MQConnectionFactory.setSendExitInit(String). This vendor implementation also overrides VendorImplementationImp.applyVendorSessionProperties(javax.jms.Session) so that specific MQ session properties can be applied. The way of doing this is to supply a list of mq-session-properties, which includes the property name, value and data-type of the value. You will need to consult your WebsphereMQ documentation or support team for a list of available properties.    <session-properties>\n       <mq-session-property>\n         <property-name>OptimisticPublication</property-name>\n         <value>true</value>\n         <data-type>Boolean</data-type>\n       </mq-session-property>\n     </session-properties>\n If you require SSL support then you should review this developerWorks article which contains a good primer about the settings that will be required for using SSL with the adapter. By default, all JMS clients to MQ Series will create what is known as an MQRFH2 Header that will form part of the Websphere MQ message. This is used to store (amongst other things) some of the JMS headers that you wanted to preserve using MessageTypeTranslatorImp.setMoveJmsHeaders(Boolean), and all the custom JMS properties that you may have chosen to preserve from AdaptrisMessage metadata by configuring com.adaptris.core.jms.MessageTypeTranslatorImp#setMoveMetadata(Boolean) to be true.This means that the message format internally within WebpshereMQ is MQRFH2 and not MQSTR format. Accordingly the receiving application needs to be able to parse MQRFH2 headers which may not be possible. If the MQRFH2 Header/format is not required or you need to change the message type to MQSTR, then you need to tell MQSeries to omit the MQRFH2 Header; this will mean that you'll lose all the JMS properties that are mapped into MQRFH2 as standard by MQSeries and also any custom JMS Properties that you might be sending. To omit the MQRFH2 header, then you need to add ?targetClient=1 after the queue name in your com.adaptris.core.ProduceDestination implementation. For example, if the queue that you need to produce to is called SampleQ1 then the string you need to use is queue:///SampleQ1?targetClient=1. More information about the mapping of JMS messages onto MQ Messages can be found at this link More generally speaking, the more powerful form of specifying a destination using uniform resource identifiers (URIs) is preferred. This form allows you to specify remote queues (queues on a queue manager other than the one to which you are connected). It also allows you to set the other properties contained in a com.ibm.mq.jms.MQQueue object. The URI for a queue begins with the sequence queue://, followed by the name of the queue manager on which the queue resides. This is followed by a further /, the name of the queue, and optionally, a list of name-value pairs that set the remaining Queue properties. For example: queue://Some_Other_Queue_Manager/SampleQ1?key1=value1&key2=value2. If you don't specify a queue manager in the URI then it is interpreted to be the queue manager to which you are currently connected to e.g. queue:///SampleQ1?key1=value1&key2=value2). Various name value pairs can be used as part of the URI; these include, but is not limited to (some of these values may have a direct correlation to standard JMS headers, if you specify both, then behaviour is dependent on how WebsphereMQ JMS is configured) Property Description Values CCSID Character set of the destination integers - valid values listed in base WebSphere MQ documentation encoding How to represent numeric fields An integer value as described in the base WebSphere MQ documentation expiry Lifetime of the message in milliseconds 0 for unlimited, positive integers for timeout (ms) - This might interfere with any TTL value you configure in the producer. multicast Sets multicast mode for direct connections -1=ASCF, 0=DISABLED, 3=NOTR, 5=RELIABLE, 7=ENABLED persistence Whether the message should be hardened to disk 1=non-persistent, 2=persistent, -1=QDEF (use the queue definition) priority Priority of the message 0 through 9, -1=QDEF (use the queue definition)- This might interfere with any priority value you configure in the producer. targetClient Whether the receiving application is JMS compliant 0=JMS, 1=MQ This was built against WebsphereMQ 6.x, but tested against both Websphere 6.x and 7.x",
      "descriptionHtml" : "<p> Advanced IBM MQ Series implementation. </p> \n<p> Depending on your WebsphereMQ configuration you will need at least <code><b>com.ibm.mq.allclient.jar</b> or these <b>com.ibm.mq.jar, com.ibm.mqjms.jar, connector.jar, dhbcore.jar and jta.jar</b></code> from your WebsphereMQ installation. If you intend on using bindings mode, then you may need to include additional jars such as <code>com.ibm.mqbind.jar</code> </p> \n<p> This vendor implementation class directly exposes all the primitive and String getter and setters that are available in the MQConnectionFactory for maximum flexibility in configuration. </p> \n<p> The key from the <code>connection-factory-properties</code> element should match the name of the underlying MQConnectionFactory property/method. <code> </code></p>\n<pre><code>   &lt;connection-factory-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;SendExitInit&lt;/key&gt;\n        &lt;value&gt;SomeData&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/connection-factory-properties&gt;\n </code></pre>\n<code> </code> would call \n<code>MQConnectionFactory.setSendExitInit(String)</code>. \n<p></p> \n<p> This vendor implementation also overrides <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true#applyVendorSessionProperties(javax.jms.Session)\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementationImp.applyVendorSessionProperties(javax.jms.Session)</code></a> so that specific MQ session properties can be applied. The way of doing this is to supply a list of mq-session-properties, which includes the property name, value and data-type of the value. You will need to consult your WebsphereMQ documentation or support team for a list of available properties. <code> </code></p>\n<pre><code>   &lt;session-properties&gt;\n       &lt;mq-session-property&gt;\n         &lt;property-name&gt;OptimisticPublication&lt;/property-name&gt;\n         &lt;value&gt;true&lt;/value&gt;\n         &lt;data-type&gt;Boolean&lt;/data-type&gt;\n       &lt;/mq-session-property&gt;\n     &lt;/session-properties&gt;\n </code></pre>\n<code> </code> \n<p></p> \n<p> If you require SSL support then you should review this <a href=\"http://www.ibm.com/developerworks/websphere/library/techarticles/0510_fehners/0510_fehners.html\" target=\"_new\">developerWorks article</a> which contains a good primer about the settings that will be required for using SSL with the adapter. </p> \n<p> By default, all JMS clients to MQ Series will create what is known as an MQRFH2 Header that will form part of the Websphere MQ message. This is used to store (amongst other things) some of the JMS headers that you wanted to preserve using <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html?is-external=true#setMoveJmsHeaders(java.lang.Boolean)\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>MessageTypeTranslatorImp.setMoveJmsHeaders(Boolean)</code></a>, and all the custom JMS properties that you may have chosen to preserve from AdaptrisMessage metadata by configuring <code>com.adaptris.core.jms.MessageTypeTranslatorImp#setMoveMetadata(Boolean)</code> to be true.<strong>This means that the message format internally within WebpshereMQ is MQRFH2 and not MQSTR format</strong>. Accordingly the receiving application needs to be able to parse MQRFH2 headers which may not be possible. </p> \n<p> If the MQRFH2 Header/format is not required or you need to change the message type to MQSTR, then you need to tell MQSeries to omit the MQRFH2 Header; this will mean that you'll lose all the JMS properties that are <a href=\"http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj25460_.htm\" target=\"_new\">mapped into MQRFH2 as standard</a> by MQSeries and also any custom JMS Properties that you might be sending. To omit the MQRFH2 header, then you need to add <code>?targetClient=1</code> after the queue name in your <code>com.adaptris.core.ProduceDestination</code> implementation. For example, if the queue that you need to produce to is called SampleQ1 then the string you need to use is <strong>queue:///SampleQ1?targetClient=1</strong>. More information about the mapping of JMS messages onto MQ Messages can be found <a href=\"http://publib.boulder.ibm.com/infocenter/wmqv6/v6r0/topic/com.ibm.mq.csqzaw.doc/uj25430_.htm\" target=\"_new\">at this link</a> </p> \n<p> More generally speaking, the more powerful form of specifying a destination using uniform resource identifiers (URIs) is preferred. This form allows you to specify remote queues (queues on a queue manager other than the one to which you are connected). It also allows you to set the other properties contained in a com.ibm.mq.jms.MQQueue object. The URI for a queue begins with the sequence queue://, followed by the name of the queue manager on which the queue resides. This is followed by a further /, the name of the queue, and optionally, a list of name-value pairs that set the remaining Queue properties. For example: <strong>queue://Some_Other_Queue_Manager/SampleQ1?key1=value1&amp;key2=value2</strong>. If you don't specify a queue manager in the URI then it is interpreted to be the queue manager to which you are currently connected to e.g. <strong>queue:///SampleQ1?key1=value1&amp;key2=value2</strong>). </p> \n<p> Various name value pairs can be used as part of the URI; these include, but is not limited to (some of these values may have a direct correlation to standard JMS headers, if you specify both, then behaviour is dependent on how WebsphereMQ JMS is configured) </p>\n<table border=\"1\"> \n <thead> \n  <tr>\n   <th>Property</th> \n   <th>Description</th> \n   <th>Values</th> \n  </tr>\n </thead> \n <tbody>\n  <tr> \n   <td>CCSID</td> \n   <td>Character set of the destination</td> \n   <td>integers - valid values listed in base WebSphere MQ documentation</td> \n  </tr> \n  <tr> \n   <td>encoding</td> \n   <td>How to represent numeric fields</td> \n   <td>An integer value as described in the base WebSphere MQ documentation</td> \n  </tr> \n  <tr> \n   <td>expiry</td> \n   <td>Lifetime of the message in milliseconds</td> \n   <td>0 for unlimited, positive integers for timeout (ms) - This might interfere with any TTL value you configure in the producer.</td> \n  </tr> \n  <tr> \n   <td>multicast</td> \n   <td>Sets multicast mode for direct connections</td> \n   <td>-1=ASCF, 0=DISABLED, 3=NOTR, 5=RELIABLE, 7=ENABLED</td> \n  </tr> \n  <tr> \n   <td>persistence</td> \n   <td>Whether the message should be <i>hardened</i> to disk</td> \n   <td>1=non-persistent, 2=persistent, -1=QDEF (use the queue definition)</td> \n  </tr> \n  <tr> \n   <td>priority</td> \n   <td>Priority of the message</td> \n   <td>0 through 9, -1=QDEF (use the queue definition)- This might interfere with any priority value you configure in the producer.</td> \n  </tr> \n  <tr> \n   <td>targetClient</td> \n   <td>Whether the receiving application is JMS compliant</td> \n   <td>0=JMS, 1=MQ</td> \n  </tr> \n </tbody>\n</table> \n<p> <b>This was built against WebsphereMQ 6.x, but tested against both Websphere 6.x and 7.x</b> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/WebsphereMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-webspheremq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/NullContentTypeProvider.html",
      "fullClassName" : "com.adaptris.core.http.NullContentTypeProvider",
      "className" : "NullContentTypeProvider",
      "packageName" : "com.adaptris.core.http",
      "componentType" : "object",
      "alias" : "http-null-content-type-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullContentTypeProvider\nextends java.lang.Object\nimplements ContentTypeProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullContentTypeProvider</span>\nextends java.lang.Object\nimplements <a href=\"ContentTypeProvider.html\" title=\"interface in com.adaptris.core.http\" target=\"_new\">ContentTypeProvider</a>",
      "description" : "Returns a null as the content-type.",
      "descriptionHtml" : "Returns a null as the content-type.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataKeyToLowerCase.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataKeyToLowerCase",
      "className" : "MetadataKeyToLowerCase",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-key-to-lower-case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Changes matching metadata keys to lowercase",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Changes matching metadata keys to lowercase\",\n                  tag=\"service,metadata\")\npublic class MetadataKeyToLowerCase\nextends ReformatMetadataKey",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Changes matching metadata keys to lowercase\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataKeyToLowerCase</span>\nextends <a href=\"ReformatMetadataKey.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadataKey</a>",
      "description" : "Implementation of ReformatMetadataKey that converts keys to lower case.",
      "descriptionHtml" : "Implementation of \n<a href=\"ReformatMetadataKey.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ReformatMetadataKey</code></a> that converts keys to lower case.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadataKey",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadataKey.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/CloneMessageServiceList.html",
      "fullClassName" : "com.adaptris.core.CloneMessageServiceList",
      "className" : "CloneMessageServiceList",
      "packageName" : "com.adaptris.core",
      "componentType" : "service-collection",
      "alias" : "clone-message-service-list",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A collection of services where each service gets a new copy of the message",
        "tag" : "service,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A collection of services where each service gets a new copy of the message\",\n                  tag=\"service,base\")\npublic class CloneMessageServiceList\nextends ServiceListBase",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A collection of services where each service gets a new copy of the message\",\n                  tag=\"service,base\")\npublic class <span class=\"typeNameLabel\">CloneMessageServiceList</span>\nextends <a href=\"ServiceListBase.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceListBase</a>",
      "description" : "Implementation of ServiceCollection that creates a new clone of AdaptrisMessage for each configured service. The expected use case for this ServiceCollection is that you have a number of services that have to process exactly the same message (e.g. transforming XML to an HTML representation as well as CSV). If you have a list of services that require the same clone to be used; then use a nested ServiceList to wrap all the required Service implementations that require it (e.g. Transforming to HTML and emailing the result of the transform) If there are services configured after this ServiceCollection implementation then they will process the message in its original form.",
      "descriptionHtml" : "Implementation of \n<a href=\"ServiceCollection.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ServiceCollection</a> that creates a new clone of \n<a href=\"AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\">AdaptrisMessage</a> for each configured service. \n<p> The expected use case for this <a href=\"ServiceCollection.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ServiceCollection</a> is that you have a number of services that have to process exactly the same message (e.g. transforming XML to an HTML representation as well as CSV). </p> \n<p> If you have a list of services that require the same clone to be used; then use a nested <a href=\"ServiceList.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>ServiceList</code></a> to wrap all the required <a href=\"Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\">Service</a> implementations that require it (e.g. Transforming to HTML and emailing the result of the transform) </p> \n<p> If there are services configured after this <a href=\"ServiceCollection.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ServiceCollection</a> implementation then they will process the message in its original form. </p>",
      "inheritance" : [
        {
          "name" : "Service",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Service.html"
        },
        {
          "name" : "ServiceCollectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceCollectionImp.html"
        },
        {
          "name" : "ServiceListBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceListBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/PooledSplitJoinService.html",
      "fullClassName" : "com.adaptris.core.services.splitter.PooledSplitJoinService",
      "className" : "PooledSplitJoinService",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "service",
      "alias" : "pooled-split-join-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Split a message and then execute the associated services on the split items, aggregating the split messages afterwards",
        "tag" : "service,splitjoin"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a message and then execute the associated services on the split items, aggregating the split messages afterwards\",\n                  since=\"3.11.1\",\n                  tag=\"service,splitjoin\")\npublic class PooledSplitJoinService\nextends ServiceImp\nimplements EventHandlerAware, ServiceWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a message and then execute the associated services on the split items, aggregating the split messages afterwards\",\n                  since=\"3.11.1\",\n                  tag=\"service,splitjoin\")\npublic class <span class=\"typeNameLabel\">PooledSplitJoinService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"../../EventHandlerAware.html\" title=\"interface in com.adaptris.core\" target=\"_new\">EventHandlerAware</a>, <a href=\"../../ServiceWrapper.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ServiceWrapper</a>",
      "description" : "Implementation of the Splitter and Aggregator enterprise integration pattern. This supersedes SplitJoinService and PoolingSplitJoinService as our preferred service for handling split/aggregation since it has more predictable peformance characteristics in constrained environments where the numbers of messages that are generated and aggregated can be large/unknown. This service splits a message according to the configured MessageSplitter implementation, executes the configured Service and subsequently aggregates all the messages back using the configured MessageAggregator implementation A pool of Service instances is maintained and re-used for each message; the cost of initialisation for the wrapped service, is incurred during this service's initialisation phase. Aggregation may start happening as soon as messages are available to be aggregated (i.e. a split message has been operated on) using the MessageAggregator.aggregate(AdaptrisMessage, Iterable) method. Performance characteristics will largely depend on how the splitter and aggregator implementations iterate over the messages.",
      "descriptionHtml" : "Implementation of the Splitter and Aggregator enterprise integration pattern. \n<p> This supersedes <code>SplitJoinService</code> and <code>PoolingSplitJoinService</code> as our preferred service for handling split/aggregation since it has more predictable peformance characteristics in constrained environments where the numbers of messages that are generated and aggregated can be large/unknown. </p> \n<p> This service splits a message according to the configured <a href=\"MessageSplitter.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\"><code>MessageSplitter</code></a> implementation, executes the configured <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> and subsequently aggregates all the messages back using the configured <a href=\"../aggregator/MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>MessageAggregator</code></a> implementation </p>\n<p> </p>\n<p> A pool of <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> instances is maintained and re-used for each message; the cost of initialisation for the wrapped service, is incurred during this service's initialisation phase. </p> \n<p> Aggregation may start happening as soon as messages are available to be aggregated (i.e. a split message has been operated on) using the <a href=\"../aggregator/MessageAggregator.html#aggregate(com.adaptris.core.AdaptrisMessage,java.lang.Iterable)\" target=\"_new\"><code>MessageAggregator.aggregate(AdaptrisMessage, Iterable)</code></a> method. Performance characteristics will largely depend on how the splitter and aggregator implementations iterate over the messages. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/DirectoryListingProviderCommonsIO.html",
      "fullClassName" : "com.adaptris.filesystem.DirectoryListingProviderCommonsIO",
      "className" : "DirectoryListingProviderCommonsIO",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "object",
      "alias" : "commons-io-directory-listing-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : { },
      "annotationDetails" : "public class DirectoryListingProviderCommonsIO\nextends java.lang.Object\nimplements DirectoryListingProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DirectoryListingProviderCommonsIO</span>\nextends java.lang.Object\nimplements <a href=\"DirectoryListingProvider.html\" title=\"interface in com.adaptris.filesystem\" target=\"_new\">DirectoryListingProvider</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/CheckFileExistsOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.CheckFileExistsOperation",
      "className" : "CheckFileExistsOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-check-file-exists",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Check a file exists in S3, throws exception if it doesn't",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Check a file exists in S3, throws exception if it doesn\\'t\",\n                  since=\"3.8.4\")\npublic class CheckFileExistsOperation\nextends ObjectOperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Check a file exists in S3, throws exception if it doesn\\'t\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">CheckFileExistsOperation</span>\nextends <a href=\"ObjectOperationImpl.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">ObjectOperationImpl</a>",
      "description" : "Check an exists in S3 and throw an exception if it doesn't. Note that this component will throw an exception if the file does not exist possibly cascading into a failed message; you probably want to use something like ExceptionHandlingServiceWrapper or similar if a missing S3 object is part of your expected integration pipeline.",
      "descriptionHtml" : "Check an exists in S3 and throw an exception if it doesn't. \n<p> Note that this component will throw an exception if the file does not exist possibly cascading into a failed message; you probably want to use something like <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionHandlingServiceWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.exception\" class=\"externalLink\" target=\"_new\"><code>ExceptionHandlingServiceWrapper</code></a> or similar if a missing S3 object is part of your expected integration pipeline. </p>",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        },
        {
          "name" : "ObjectOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ObjectOperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ChannelList.html",
      "fullClassName" : "com.adaptris.core.ChannelList",
      "className" : "ChannelList",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "channel-list",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Collection of Channels",
        "tag" : "base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Collection of Channels\",\n                  tag=\"base\")\npublic class ChannelList\nextends java.util.AbstractCollection<Channel>\nimplements ComponentLifecycle, java.util.List<Channel>, ComponentLifecycleExtension",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Collection of Channels\",\n                  tag=\"base\")\npublic class <span class=\"typeNameLabel\">ChannelList</span>\nextends java.util.AbstractCollection&lt;<a href=\"Channel.html\" title=\"class in com.adaptris.core\" target=\"_new\">Channel</a>&gt;\nimplements <a href=\"ComponentLifecycle.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycle</a>, java.util.List&lt;<a href=\"Channel.html\" title=\"class in com.adaptris.core\" target=\"_new\">Channel</a>&gt;, <a href=\"ComponentLifecycleExtension.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycleExtension</a>",
      "description" : "Container for a collection of Channel objects",
      "descriptionHtml" : "<p> Container for a collection of <a href=\"Channel.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>Channel</code></a> objects </p>",
      "inheritance" : [
        {
          "name" : "Channel",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Channel.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/NoOpFactoryConfiguration.html",
      "fullClassName" : "com.adaptris.core.jms.jndi.NoOpFactoryConfiguration",
      "className" : "NoOpFactoryConfiguration",
      "packageName" : "com.adaptris.core.jms.jndi",
      "componentType" : "object",
      "alias" : "no-op-jndi-factory-configuration",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoOpFactoryConfiguration\nextends java.lang.Object\nimplements ExtraFactoryConfiguration",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoOpFactoryConfiguration</span>\nextends java.lang.Object\nimplements <a href=\"ExtraFactoryConfiguration.html\" title=\"interface in com.adaptris.core.jms.jndi\" target=\"_new\">ExtraFactoryConfiguration</a>",
      "description" : "ExtraFactoryConfiguration implementation that does nothing.",
      "descriptionHtml" : "<a href=\"ExtraFactoryConfiguration.html\" title=\"interface in com.adaptris.core.jms.jndi\" target=\"_new\"><code>ExtraFactoryConfiguration</code></a> implementation that does nothing.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/RegexpSyntaxIdentifier.html",
      "fullClassName" : "com.adaptris.core.services.routing.RegexpSyntaxIdentifier",
      "className" : "RegexpSyntaxIdentifier",
      "packageName" : "com.adaptris.core.services.routing",
      "componentType" : "object",
      "alias" : "routing-regexp-syntax-identifier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RegexpSyntaxIdentifier\nextends SyntaxIdentifierImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RegexpSyntaxIdentifier</span>\nextends <a href=\"SyntaxIdentifierImpl.html\" title=\"class in com.adaptris.core.services.routing\" target=\"_new\">SyntaxIdentifierImpl</a>",
      "description" : "Match against a number of configured regular expressions. The regular expressions are the same as those in the java.util.regex package. Since 3.10.0 this class implements Condition which means that it can be used as part of the conditional services; if used in such a manner, then configuration is contextual, get/setDestination will be ignored (but may still have to be configured due to validation",
      "descriptionHtml" : "Match against a number of configured regular expressions. \n<p> The regular expressions are the same as those in the <code>java.util.regex</code> package. </p> \n<p> Since <strong>3.10.0</strong> this class implements <a href=\"../conditional/Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> which means that it can be used as part of the conditional services; if used in such a manner, then configuration is contextual, get/setDestination will be ignored (but may still have to be configured due to validation </p>",
      "inheritance" : [
        {
          "name" : "SyntaxIdentifierBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierBase.html"
        },
        {
          "name" : "SyntaxIdentifierImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/CompositeClientBuilder.html",
      "fullClassName" : "com.adaptris.core.http.apache.CompositeClientBuilder",
      "className" : "CompositeClientBuilder",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "composite-apache-http-client-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeClientBuilder\nextends java.lang.Object\nimplements HttpClientBuilderConfigurator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeClientBuilder</span>\nextends java.lang.Object\nimplements <a href=\"HttpClientBuilderConfigurator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\">HttpClientBuilderConfigurator</a>",
      "description" : "HttpClientBuilderConfigurator implementation that wraps a list of implementations.",
      "descriptionHtml" : "<a href=\"HttpClientBuilderConfigurator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\"><code>HttpClientBuilderConfigurator</code></a> implementation that wraps a list of implementations.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/AddBasicMetadata.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.bapi.AddBasicMetadata",
      "className" : "AddBasicMetadata",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.bapi",
      "componentType" : "object",
      "alias" : "sapjco3-bapireturn-add-basic-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class AddBasicMetadata\nextends ReturnParserImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AddBasicMetadata</span>\nextends <a href=\"ReturnParserImpl.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.bapi\" target=\"_new\">ReturnParserImpl</a>",
      "description" : "Simply takes the TYPE and MESSAGE fields from the BAPIRETURN and adds them as metadata. No parsing is done of the TYPE field, empty MESSAGE fields will be ignored. Generally these are the accepted values and meanings Value Meaning S Success Message (A blank type, will be substituted with this value) E Error Message W Warning Message I Informational Message A Termination (aborted)",
      "descriptionHtml" : "Simply takes the TYPE and MESSAGE fields from the BAPIRETURN and adds them as metadata. \n<p> No parsing is done of the TYPE field, empty MESSAGE fields will be ignored. Generally these are the accepted values and meanings </p> \n<table border=\"1\"> \n <tbody>\n  <tr> \n   <th>Value</th> \n   <th>Meaning</th> \n  </tr> \n  <tr> \n   <td>S</td> \n   <td>Success Message (A blank type, will be substituted with this value)</td> \n  </tr> \n  <tr> \n   <td>E</td> \n   <td>Error Message</td> \n  </tr> \n  <tr> \n   <td>W</td> \n   <td>Warning Message</td> \n  </tr> \n  <tr> \n   <td>I</td> \n   <td>Informational Message</td> \n  </tr> \n  <tr> \n   <td>A</td> \n   <td>Termination (aborted)</td> \n  </tr> \n </tbody>\n</table>",
      "inheritance" : [
        {
          "name" : "ReturnParserImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/ReturnParserImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/XStreamItemCache.html",
      "fullClassName" : "com.adaptris.core.fs.XStreamItemCache",
      "className" : "XStreamItemCache",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "object",
      "alias" : "fs-xstream-processed-item-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XStreamItemCache\nextends MarshallingItemCache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XStreamItemCache</span>\nextends <a href=\"MarshallingItemCache.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\">MarshallingItemCache</a>",
      "inheritance" : [
        {
          "name" : "InlineItemCache",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/InlineItemCache.html"
        },
        {
          "name" : "MarshallingItemCache",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/MarshallingItemCache.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/mime/MultipartMessageBuilder.html",
      "fullClassName" : "com.adaptris.core.services.mime.MultipartMessageBuilder",
      "className" : "MultipartMessageBuilder",
      "packageName" : "com.adaptris.core.services.mime",
      "componentType" : "service",
      "alias" : "multipart-message-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Creates a MIME payload from various sources",
        "tag" : "mime"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Creates a MIME payload from various sources\",\n                  since=\"3.9.0\",\n                  tag=\"mime\")\npublic class MultipartMessageBuilder\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Creates a MIME payload from various sources\",\n                  since=\"3.9.0\",\n                  tag=\"mime\")\npublic class <span class=\"typeNameLabel\">MultipartMessageBuilder</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Constructs a multipart MIME payload from various sources.",
      "descriptionHtml" : "Constructs a multipart MIME payload from various sources.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-flyway/4.0.0B1-RELEASE/com/adaptris/jdbc/flyway/FlywayJdbcConnection.html",
      "fullClassName" : "com.adaptris.jdbc.flyway.FlywayJdbcConnection",
      "className" : "FlywayJdbcConnection",
      "packageName" : "com.adaptris.jdbc.flyway",
      "componentType" : "connection",
      "alias" : "flyway-jdbc-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-flyway.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Extension of AdvancedJdbcPooledConnection which will run flyway migration on init.",
        "tag" : "connections,jdbc,flyway"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extension of AdvancedJdbcPooledConnection which will run flyway migration on init.\",\n                  tag=\"connections,jdbc,flyway\",\n                  since=\"3.9.0\")\npublic class FlywayJdbcConnection\nextends AdvancedJdbcPooledConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extension of AdvancedJdbcPooledConnection which will run flyway migration on init.\",\n                  tag=\"connections,jdbc,flyway\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">FlywayJdbcConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AdvancedJdbcPooledConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jdbc\" class=\"externalLink\" target=\"_new\">AdvancedJdbcPooledConnection</a>",
      "description" : "Extension of AdvancedJdbcPooledConnection which will run flyway migration on init.",
      "descriptionHtml" : "Extension of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AdvancedJdbcPooledConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jdbc\" class=\"externalLink\" target=\"_new\"><code>AdvancedJdbcPooledConnection</code></a> which will run flyway migration on init.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html?is-external=true"
        },
        {
          "name" : "DatabaseConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DatabaseConnection.html?is-external=true"
        },
        {
          "name" : "JdbcPooledConnectionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcPooledConnectionImpl.html?is-external=true"
        },
        {
          "name" : "AdvancedJdbcPooledConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AdvancedJdbcPooledConnection.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Flyway",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-flyway",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/AggregatingJmsConsumeService.html",
      "fullClassName" : "com.adaptris.core.jms.AggregatingJmsConsumeService",
      "className" : "AggregatingJmsConsumeService",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "service",
      "alias" : "aggregating-jms-consume-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Allows you to aggregate messages from a JMS Queue",
        "tag" : "service,aggregation,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Allows you to aggregate messages from a JMS Queue\",\n                  tag=\"service,aggregation,jms\",\n                  recommended=JmsConnection.class)\npublic class AggregatingJmsConsumeService\nextends AggregatingConsumeServiceImpl<JmsConnection>\nimplements JmsActorConfig, ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Allows you to aggregate messages from a JMS Queue\",\n                  tag=\"service,aggregation,jms\",\n                  recommended=<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">AggregatingJmsConsumeService</span>\nextends <a href=\"../services/aggregator/AggregatingConsumeServiceImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">AggregatingConsumeServiceImpl</a>&lt;<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection</a>&gt;\nimplements <a href=\"JmsActorConfig.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">JmsActorConfig</a>, <a href=\"../ConnectedService.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ConnectedService</a>",
      "description" : "Implentation of AggregatingConsumeService that allows you to consume a related message from a queue based on some criteria.",
      "descriptionHtml" : "Implentation of \n<a href=\"../services/aggregator/AggregatingConsumeService.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>AggregatingConsumeService</code></a> that allows you to consume a related message from a queue based on some criteria.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "AggregatingConsumeServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/AggregatingConsumeServiceImpl.html"
        },
        {
          "name" : "JmsConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonlibTransformationDriver.html",
      "fullClassName" : "com.adaptris.core.transform.json.JsonlibTransformationDriver",
      "className" : "JsonlibTransformationDriver",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "object",
      "alias" : "jsonlib-transformation-driver",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.0",
        "summary" : "JSON/XML Transformation driver based on net.sf:json-lib, supports top level JSON arrays",
        "tag" : "json,xml,transformation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JSON/XML Transformation driver based on net.sf:json-lib, supports top level JSON arrays\",\n                  tag=\"json,xml,transformation\",\n                  since=\"3.10.0\")\npublic class JsonlibTransformationDriver\nextends JsonTransformationDriverImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JSON/XML Transformation driver based on net.sf:json-lib, supports top level JSON arrays\",\n                  tag=\"json,xml,transformation\",\n                  since=\"3.10.0\")\npublic class <span class=\"typeNameLabel\">JsonlibTransformationDriver</span>\nextends <a href=\"JsonTransformationDriverImpl.html\" title=\"class in com.adaptris.core.transform.json\" target=\"_new\">JsonTransformationDriverImpl</a>",
      "description" : "Transformation Driver that uses both JSONObject.fromObject(Object) and JSONArray.fromObject(Object) to parse the input. In some processing scenarios, this driver is inherently CPU bound because of how it processes XML elements. In most use-cases you can use SimpleJsonTransformationDriver instead. You can also opt to use the com.adaptris:interlok-json-streaming package instead to transform to and from XML This uses the net.sf.json package, which in some situations, can be very sensitive to whitespace, and output may not be as you expect. Accordingly, when you are generating the XML to be rendered as JSON make sure that you use xsl:strip-space elements=\"*\".",
      "descriptionHtml" : "Transformation Driver that uses both \n<code>JSONObject.fromObject(Object)</code> and \n<code>JSONArray.fromObject(Object)</code> to parse the input. \n<p> <strong>In some processing scenarios, this driver is inherently CPU bound because of how it processes XML elements<strong>. In most use-cases you can use <a href=\"SimpleJsonTransformationDriver.html\" title=\"class in com.adaptris.core.transform.json\" target=\"_new\"><code>SimpleJsonTransformationDriver</code></a> instead. You can also opt to use the <code>com.adaptris:interlok-json-streaming</code> package instead to transform to and from XML </strong></strong></p>\n<strong><strong> <p> This uses the <code>net.sf.json</code> package, which in some situations, can be very sensitive to whitespace, and output may not be as you expect. Accordingly, when you are generating the XML to be rendered as JSON make sure that you use <code>xsl:strip-space elements=\"*\"</code>. </p></strong></strong>",
      "inheritance" : [
        {
          "name" : "JsonTransformationDriverImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonTransformationDriverImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/DefaultProducerXASessionFactory.html",
      "fullClassName" : "com.adaptris.xa.jms.DefaultProducerXASessionFactory",
      "className" : "DefaultProducerXASessionFactory",
      "packageName" : "com.adaptris.xa.jms",
      "componentType" : "object",
      "alias" : "jms-default-producer-xa-session",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-atomikos.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultProducerXASessionFactory\nextends ProducerXASessionFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultProducerXASessionFactory</span>\nextends <a href=\"ProducerXASessionFactoryImpl.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\">ProducerXASessionFactoryImpl</a>",
      "description" : "Default implementation of ProducerSessionFactory. The default implementation creates a single session, and reuses that until restarted.",
      "descriptionHtml" : "Default implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ProducerSessionFactory.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>ProducerSessionFactory</code></a>. \n<p> The default implementation creates a single session, and reuses that until restarted. </p>",
      "inheritance" : [
        {
          "name" : "ProducerXASessionFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/ProducerXASessionFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Atomikos",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-atomikos",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/RemoveAllMetadataFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.RemoveAllMetadataFilter",
      "className" : "RemoveAllMetadataFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "remove-all-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RemoveAllMetadataFilter\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RemoveAllMetadataFilter</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "Metadata Filter implementation that removes all metadata.",
      "descriptionHtml" : "Metadata Filter implementation that removes all metadata.",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/NoRequestHeaders.html",
      "fullClassName" : "com.adaptris.core.http.client.net.NoRequestHeaders",
      "className" : "NoRequestHeaders",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-no-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<java.net.HttpURLConnection>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"../RequestHeaderProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\">RequestHeaderProvider</a>&lt;java.net.HttpURLConnection&gt;",
      "description" : "Implementation of RequestHeaderProvider that adds no additional headers",
      "descriptionHtml" : "Implementation of \n<a href=\"../RequestHeaderProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>RequestHeaderProvider</code></a> that adds no additional headers",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/TimeType.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.TimeType",
      "className" : "TimeType",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-time-type",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class TimeType\nextends DateType",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimeType</span>\nextends <a href=\"DateType.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">DateType</a>",
      "description" : "Handles java.sql.Time fields.",
      "descriptionHtml" : "Handles java.sql.Time fields.",
      "inheritance" : [
        {
          "name" : "DateType",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/DateType.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/PayloadStreamOutputParameter.html",
      "fullClassName" : "com.adaptris.core.common.PayloadStreamOutputParameter",
      "className" : "PayloadStreamOutputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "stream-payload-output-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PayloadStreamOutputParameter\nextends java.lang.Object\nimplements DataOutputParameter<InputStreamWithEncoding>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PayloadStreamOutputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataOutputParameter</a>&lt;<a href=\"InputStreamWithEncoding.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">InputStreamWithEncoding</a>&gt;",
      "description" : "This DataOutputParameter is used when you want to write data to the AdaptrisMessage payload.",
      "descriptionHtml" : "This \n<code>DataOutputParameter</code> is used when you want to write data to the \n<a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> payload.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/CompositeResponseHeaderHandler.html",
      "fullClassName" : "com.adaptris.core.http.client.net.CompositeResponseHeaderHandler",
      "className" : "CompositeResponseHeaderHandler",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-composite-response-header-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeResponseHeaderHandler\nextends java.lang.Object\nimplements ResponseHeaderHandler<java.net.HttpURLConnection>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeResponseHeaderHandler</span>\nextends java.lang.Object\nimplements <a href=\"../ResponseHeaderHandler.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\">ResponseHeaderHandler</a>&lt;java.net.HttpURLConnection&gt;",
      "description" : "Implementation of ResponseHeaderHandler that uses nested handlers to extract headers from a HttpURLConnection. This implementation is primarily so that you can mix and matchhow you capture response headers; If you wanted to use both ResponseHeadersAsMetadata and ResponseHeadersAsObjectMetadata then you can.",
      "descriptionHtml" : "Implementation of \n<a href=\"../ResponseHeaderHandler.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>ResponseHeaderHandler</code></a> that uses nested handlers to extract headers from a \n<code>HttpURLConnection</code>. \n<p>This implementation is primarily so that you can mix and matchhow you capture response headers; If you wanted to use both <a href=\"ResponseHeadersAsMetadata.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>ResponseHeadersAsMetadata</code></a> and <a href=\"ResponseHeadersAsObjectMetadata.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>ResponseHeadersAsObjectMetadata</code></a> then you can. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataValueToLowerCase.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataValueToLowerCase",
      "className" : "MetadataValueToLowerCase",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-value-to-lower-case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Changes matching metadata into lowercase",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Changes matching metadata into lowercase\",\n                  tag=\"service,metadata\")\npublic class MetadataValueToLowerCase\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Changes matching metadata into lowercase\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataValueToLowerCase</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "Takes a metadata value and converts it to lower case. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will be changed to lowercase",
      "descriptionHtml" : "Takes a metadata value and converts it to lower case. \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will be changed to lowercase </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/AddValueToCache.html",
      "fullClassName" : "com.adaptris.core.services.cache.AddValueToCache",
      "className" : "AddValueToCache",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "service",
      "alias" : "add-single-value-to-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.9.2",
        "summary" : "Add a single key/value to the configured cache cache",
        "tag" : "service,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Add a single key/value to the configured cache cache\",\n                  since=\"3.9.2\",\n                  tag=\"service,cache\",\n                  recommended=CacheConnection.class)\npublic class AddValueToCache\nextends SingleKeyValueCacheImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Add a single key/value to the configured cache cache\",\n                  since=\"3.9.2\",\n                  tag=\"service,cache\",\n                  recommended=<a href=\"CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">AddValueToCache</span>\nextends <a href=\"SingleKeyValueCacheImpl.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">SingleKeyValueCacheImpl</a>",
      "description" : "Version of AddToCacheService that doesn't use CacheEntryEvaluator. Most of the time, you only want to add a single item to the cache rather than a list of items; this simplified service allows you to do just that. It does not have a list of entries that are evaluated, you simply specify a key and a CacheValueTranslator which is used to extract the value for storing in the cache; no checking is done of the resulting serializable-ness (or not) of the value, it is simply inserted into the cache.",
      "descriptionHtml" : "Version of \n<a href=\"AddToCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>AddToCacheService</code></a> that doesn't use \n<a href=\"CacheEntryEvaluator.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheEntryEvaluator</code></a>. \n<p> Most of the time, you only want to add a single item to the cache rather than a list of items; this simplified service allows you to do just that. It does not have a list of entries that are evaluated, you simply specify a key and a <a href=\"CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheValueTranslator</code></a> which is used to extract the value for storing in the cache; no checking is done of the resulting serializable-ness (or not) of the value, it is simply inserted into the cache. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CacheServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceImpl.html"
        },
        {
          "name" : "SingleKeyCacheService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/SingleKeyCacheService.html"
        },
        {
          "name" : "SingleKeyValueCacheImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/SingleKeyValueCacheImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairList.html",
      "fullClassName" : "com.adaptris.util.KeyValuePairList",
      "className" : "KeyValuePairList",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "key-value-pair-list",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class KeyValuePairList\nextends KeyValuePairBag\nimplements java.util.List<KeyValuePair>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">KeyValuePairList</span>\nextends <a href=\"KeyValuePairBag.html\" title=\"class in com.adaptris.util\" target=\"_new\">KeyValuePairBag</a>\nimplements java.util.List&lt;<a href=\"KeyValuePair.html\" title=\"class in com.adaptris.util\" target=\"_new\">KeyValuePair</a>&gt;",
      "description" : "An List of KeyValuePair instances.",
      "descriptionHtml" : "<p> An <code>List</code> of <a href=\"KeyValuePair.html\" title=\"class in com.adaptris.util\" target=\"_new\">KeyValuePair</a> instances. </p>",
      "inheritance" : [
        {
          "name" : "KeyValuePair",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePair.html"
        },
        {
          "name" : "KeyValuePairBag",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairBag.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/ListLogicalFiles.html",
      "fullClassName" : "com.adaptris.hpcc.ListLogicalFiles",
      "className" : "ListLogicalFiles",
      "packageName" : "com.adaptris.hpcc",
      "componentType" : "producer",
      "alias" : "list-logical-files-in-thor",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.hpcc.DfuplusConnection"
        ],
        "since" : "",
        "summary" : "Query HPCC for a list of files",
        "tag" : "producer,hpcc,dfuplus,thor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Query HPCC for a list of files\",\n                  tag=\"producer,hpcc,dfuplus,thor\",\n                  recommended=DfuplusConnection.class)\npublic class ListLogicalFiles\nextends RequestOnlyImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Query HPCC for a list of files\",\n                  tag=\"producer,hpcc,dfuplus,thor\",\n                  recommended=<a href=\"DfuplusConnection.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">DfuplusConnection.class</a>)\npublic class <span class=\"typeNameLabel\">ListLogicalFiles</span>\nextends <a href=\"RequestOnlyImpl.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">RequestOnlyImpl</a>",
      "description" : "Query Thor for a list of files. This simply uses dfuplus to query Thor and get a list of logical files. The list replaces the existing message payload. Note that although this is an implementation of AdaptrisMessageProducerImp the AdaptrisMessageProducer#produce() methods will throw a UnsupportedOperationException. It should be used as part of a StandaloneRequestor where the getFilemask() returns the logical filename mask of the file(s) that you wish to retrieve.",
      "descriptionHtml" : "Query Thor for a list of files. \n<p> This simply uses dfuplus to query Thor and get a list of logical files. The list replaces the existing message payload. </p> \n<p> Note that although this is an implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducerImp</code></a> the <code>AdaptrisMessageProducer#produce()</code> methods will throw a <code>UnsupportedOperationException</code>. It should be used as part of a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneRequestor.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneRequestor</code></a> where the <a href=\"#getFilemask()\" target=\"_new\"><code>getFilemask()</code></a> returns the logical filename mask of the file(s) that you wish to retrieve. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "DfuPlusWrapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/DfuPlusWrapper.html"
        },
        {
          "name" : "RequestOnlyImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/RequestOnlyImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xinclude/4.0.0B1-RELEASE/com/adaptris/core/xinclude/XStreamMarshaller.html",
      "fullClassName" : "com.adaptris.core.xinclude.XStreamMarshaller",
      "className" : "XStreamMarshaller",
      "packageName" : "com.adaptris.core.xinclude",
      "componentType" : "object",
      "alias" : "xstream-xinclude-marshaller",
      "deprecated" : false,
      "jarFileName" : "interlok-xinclude.jar",
      "profile" : { },
      "annotationDetails" : "public class XStreamMarshaller\nextends XStreamMarshaller",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XStreamMarshaller</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshaller.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">XStreamMarshaller</a>",
      "description" : "XStream version of AdaptrisMarshaller that supports xinclude directives when unmarshalling. It uses the XInclude feature of Xerces-J.",
      "descriptionHtml" : "XStream version of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMarshaller.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMarshaller</code></a> that supports xinclude directives when unmarshalling. \n<p>It uses the <a href=\"https://xerces.apache.org/xerces2-j/features.html#xinclude\" target=\"_new\">XInclude feature</a> of Xerces-J. </p>",
      "inheritance" : [
        {
          "name" : "AbstractMarshaller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AbstractMarshaller.html?is-external=true"
        },
        {
          "name" : "XStreamMarshallerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshallerImpl.html?is-external=true"
        },
        {
          "name" : "XStreamMarshaller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshaller.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Config/xinclude",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xinclude",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PtpPollingConsumer.html",
      "fullClassName" : "com.adaptris.core.jms.PtpPollingConsumer",
      "className" : "PtpPollingConsumer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "consumer",
      "alias" : "jms-queue-poller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from a JMS Queue by actively polling for them",
        "tag" : "consumer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from a JMS Queue by actively polling for them\",\n                  tag=\"consumer,jms\",\n                  recommended=NullConnection.class)\npublic class PtpPollingConsumer\nextends JmsPollingConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from a JMS Queue by actively polling for them\",\n                  tag=\"consumer,jms\",\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PtpPollingConsumer</span>\nextends <a href=\"JmsPollingConsumerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsPollingConsumerImpl</a>",
      "description" : "Queue implementation of JmsPollingConsumerImpl.",
      "descriptionHtml" : "<p> Queue implementation of <a href=\"JmsPollingConsumerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>JmsPollingConsumerImpl</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "BaseJmsPollingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/BaseJmsPollingConsumerImpl.html"
        },
        {
          "name" : "JmsPollingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsPollingConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-mail/4.0.0B1-RELEASE/com/adaptris/interlok/azure/mail/O365MailProducer.html",
      "fullClassName" : "com.adaptris.interlok.azure.mail.O365MailProducer",
      "className" : "O365MailProducer",
      "packageName" : "com.adaptris.interlok.azure.mail",
      "componentType" : "producer",
      "alias" : "azure-office-365-mail-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-mail.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Send email using a Microsoft Office 365 account using the Microsoft Graph API",
        "tag" : "producer,email,o365,microsoft,office,outlook,365"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send email using a Microsoft Office 365 account using the Microsoft Graph API\",\n                  tag=\"producer,email,o365,microsoft,office,outlook,365\")\npublic class O365MailProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send email using a Microsoft Office 365 account using the Microsoft Graph API\",\n                  tag=\"producer,email,o365,microsoft,office,outlook,365\")\npublic class <span class=\"typeNameLabel\">O365MailProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "Implementation of an email producer that is geared towards Microsoft Office 365, using their Graph API and OAuth2.",
      "descriptionHtml" : "Implementation of an email producer that is geared towards Microsoft Office 365, using their Graph API and OAuth2.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/Outlook",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/OracleAqPasProducer.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.OracleAqPasProducer",
      "className" : "OracleAqPasProducer",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "producer",
      "alias" : "oracleaq-topic-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Send messages to OracleAQ JMS",
        "tag" : "producer,oracleaq,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send messages to OracleAQ JMS\",\n                  tag=\"producer,oracleaq,jms\",\n                  recommended=com.adaptris.core.jms.JmsConnection.class)\npublic class OracleAqPasProducer\nextends PasProducer\nimplements LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send messages to OracleAQ JMS\",\n                  tag=\"producer,oracleaq,jms\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">com.adaptris.core.jms.JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">OracleAqPasProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PasProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">PasProducer</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "OracleAQ Pas Producer that allows the use of AQjmsAgent recipients.",
      "descriptionHtml" : "OracleAQ Pas Producer that allows the use of AQjmsAgent recipients.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "JmsProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducerImpl.html?is-external=true"
        },
        {
          "name" : "DefinedJmsProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/DefinedJmsProducer.html?is-external=true"
        },
        {
          "name" : "PasProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PasProducer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/CopyMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.CopyMetadataService",
      "className" : "CopyMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "copy-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Copy metadata values to other metadata keys",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Copy metadata values to other metadata keys\",\n                  tag=\"service,metadata\")\npublic class CopyMetadataService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Copy metadata values to other metadata keys\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">CopyMetadataService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Copies metadata from one key to another. Updates message metadata by obtaining the metadata value stored against the 'original' key configured as the key in the metadata-keys section copying this value to the 'new' key configured as the value of the associated metadata-keys element . If the configured 'original' metadata key does not exist, then metadata is not copied, if the 'new' metadata key already exists, it is overwritten.",
      "descriptionHtml" : "Copies metadata from one key to another. \n<p> Updates message metadata by </p>\n<ul> \n <li>obtaining the metadata value stored against the 'original' key configured as the key in the metadata-keys section</li> \n <li>copying this value to the 'new' key configured as the value of the associated metadata-keys element</li>. \n <p></p> \n <p> If the configured 'original' metadata key does not exist, then metadata is not copied, if the 'new' metadata key already exists, it is overwritten. </p>\n</ul>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/transcoding/DecodingService.html",
      "fullClassName" : "com.adaptris.core.services.transcoding.DecodingService",
      "className" : "DecodingService",
      "packageName" : "com.adaptris.core.services.transcoding",
      "componentType" : "service",
      "alias" : "decoding-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Decodes the message",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Decodes the message\",\n                  tag=\"service\")\npublic class DecodingService\nextends TranscodingService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Decodes the message\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">DecodingService</span>\nextends <a href=\"TranscodingService.html\" title=\"class in com.adaptris.core.services.transcoding\" target=\"_new\">TranscodingService</a>",
      "description" : "Decodes the payload and updates the in flight message with the decoded output.",
      "descriptionHtml" : "Decodes the payload and updates the in flight message with the decoded output.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "TranscodingService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/transcoding/TranscodingService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ContentEncoding.html",
      "fullClassName" : "com.adaptris.aws.s3.meta.S3ContentEncoding",
      "className" : "S3ContentEncoding",
      "packageName" : "com.adaptris.aws.s3.meta",
      "componentType" : "object",
      "alias" : "s3-content-encoding",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : { },
      "annotationDetails" : "public class S3ContentEncoding\nextends S3ObjectMetadata",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">S3ContentEncoding</span>\nextends <a href=\"S3ObjectMetadata.html\" title=\"class in com.adaptris.aws.s3.meta\" target=\"_new\">S3ObjectMetadata</a>",
      "inheritance" : [
        {
          "name" : "S3ObjectMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ObjectMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePair.html",
      "fullClassName" : "com.adaptris.util.KeyValuePair",
      "className" : "KeyValuePair",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "key-value-pair",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class KeyValuePair\nextends java.lang.Object\nimplements NameValuePair",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">KeyValuePair</span>\nextends java.lang.Object\nimplements <a href=\"NameValuePair.html\" title=\"interface in com.adaptris.util\" target=\"_new\">NameValuePair</a>",
      "description" : "A key value pair. Primarily used in configuration to avoid the use of maps.",
      "descriptionHtml" : "A key value pair. \n<p> Primarily used in configuration to avoid the use of maps. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/UpsertJsonObject.html",
      "fullClassName" : "com.adaptris.core.json.jdbc.UpsertJsonObject",
      "className" : "UpsertJsonObject",
      "packageName" : "com.adaptris.core.json.jdbc",
      "componentType" : "service",
      "alias" : "json-jdbc-upsert",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Insert/Update a JSON object into a database",
        "tag" : "service,json,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Insert/Update a JSON object into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class UpsertJsonObject\nextends JdbcMapUpsert",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Insert/Update a JSON object into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">UpsertJsonObject</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapUpsert.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\">JdbcMapUpsert</a>",
      "description" : "Convenience service for inserting/updating a JSON object into a database. Creates an insert or update statement based on the contents of the JSON object. { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\", \"id\": \"1234\"} will effectively execute the following statement INSERT INTO table (firstname,lastname,dob,id) VALUES (?,?,?,?) or UPDATE table SET firstname=?, lastname=?, dob=? WHERE id = ?; if 1234 already exists as a row. Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so { \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}} would still be 3 parameters, the address parameter will be '{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'",
      "descriptionHtml" : "Convenience service for inserting/updating a JSON object into a database. \n<p> Creates an insert or update statement based on the contents of the JSON object. <code>{ \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\", \"id\": \"1234\"}</code> will effectively execute the following statement <code>INSERT INTO table (firstname,lastname,dob,id) VALUES (?,?,?,?)</code> or <code>UPDATE table SET firstname=?, lastname=?, dob=? WHERE id = ?;</code> if <code>1234</code> already exists as a row. </p> \n<p> Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so <code>{ \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}}</code> would still be 3 parameters, the address parameter will be <code>'{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'</code> </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html?is-external=true"
        },
        {
          "name" : "JdbcMapInsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapInsert.html?is-external=true"
        },
        {
          "name" : "JdbcMapUpsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapUpsert.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/server/ConfiguredStatusProvider.html",
      "fullClassName" : "com.adaptris.core.http.server.ConfiguredStatusProvider",
      "className" : "ConfiguredStatusProvider",
      "packageName" : "com.adaptris.core.http.server",
      "componentType" : "object",
      "alias" : "http-configured-status",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredStatusProvider\nextends java.lang.Object\nimplements HttpStatusProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredStatusProvider</span>\nextends java.lang.Object\nimplements <a href=\"HttpStatusProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\">HttpStatusProvider</a>",
      "description" : "Static implementation of HttpStatusProvider that uses HttpStatusProvider.HttpStatus to derive the correct code. If you are configuring a static HTTP status, then you could use RawStatusProvider and the actual numeric code if that makes more sense to you. This class is provided so that a typesafe enum can be used to derive the correct status code.",
      "descriptionHtml" : "Static implementation of \n<a href=\"HttpStatusProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>HttpStatusProvider</code></a> that uses \n<a href=\"HttpStatusProvider.HttpStatus.html\" title=\"enum in com.adaptris.core.http.server\" target=\"_new\"><code>HttpStatusProvider.HttpStatus</code></a> to derive the correct code. \n<p>If you are configuring a static HTTP status, then you could use <a href=\"RawStatusProvider.html\" title=\"class in com.adaptris.core.http.server\" target=\"_new\"><code>RawStatusProvider</code></a> and the actual numeric code if that makes more sense to you. This class is provided so that a typesafe enum can be used to derive the correct status code.</p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ExactMatch.html",
      "fullClassName" : "com.adaptris.core.http.client.ExactMatch",
      "className" : "ExactMatch",
      "packageName" : "com.adaptris.core.http.client",
      "componentType" : "object",
      "alias" : "http-status-exact-match",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ExactMatch\nextends StatusEvaluatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExactMatch</span>\nextends <a href=\"StatusEvaluatorImpl.html\" title=\"class in com.adaptris.core.http.client\" target=\"_new\">StatusEvaluatorImpl</a>",
      "description" : "Implementation of StatusEvaluator for use with BranchingHttpRequestService. Matches a service id against an exact http response code. e.g. statusCode=200 to match HTTP OK. It's an exact match; you probably don't want to use it, as you'll have to specify one for 202 Accepted, one for 201 Created etc. even though they're all would logically point to the same success ervice id.",
      "descriptionHtml" : "Implementation of \n<a href=\"StatusEvaluator.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>StatusEvaluator</code></a> for use with \n<a href=\"net/BranchingHttpRequestService.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>BranchingHttpRequestService</code></a>. \n<p> Matches a service id against an exact http response code. e.g. statusCode=200 to match <code>HTTP OK</code>. It's an exact match; you probably don't want to use it, as you'll have to specify one for <code>202 Accepted</code>, one for <code>201 Created</code> etc. even though they're all would logically point to the same success ervice id. </p>",
      "inheritance" : [
        {
          "name" : "StatusEvaluatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/StatusEvaluatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/ConfiguredRfcConnection.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.ConfiguredRfcConnection",
      "className" : "ConfiguredRfcConnection",
      "packageName" : "com.adaptris.core.sap.jco3.rfc",
      "componentType" : "connection",
      "alias" : "sapjco3-configured-rfc-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection type for supporting SAP JCO3 RFC connections",
        "tag" : "connections,sap,jco"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection type for supporting SAP JCO3 RFC connections\",\n                  tag=\"connections,sap,jco\")\npublic class ConfiguredRfcConnection\nextends JcoConnection\nimplements RfcConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection type for supporting SAP JCO3 RFC connections\",\n                  tag=\"connections,sap,jco\")\npublic class <span class=\"typeNameLabel\">ConfiguredRfcConnection</span>\nextends <a href=\"../JcoConnection.html\" title=\"class in com.adaptris.core.sap.jco3\" target=\"_new\">JcoConnection</a>\nimplements <a href=\"RfcConnection.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">RfcConnection</a>",
      "description" : "Class that contains static RFC JCO connection information. This class indirectly provides a com.sap.conn.jco.ext.DestinationDataProvider for the underlying RFC Connection. The following table is copied directly from the SAP Java Connector API documentation. Please use the appropriate settings for your SAP application landscape; no verification is performed on the properties. The following properties are supported: Key value Description jco.client.client SAP client jco.client.user Logon user jco.client.alias_user Logon user alias jco.client.passwd Logon password jco.client.lang Logon language jco.client.saprouter SAP router string to use for a system protected by a firewall jco.client.sysnr SAP system number jco.client.ashost SAP application server jco.client.mshost SAP message server jco.client.msserv optional: SAP message server port to use instead of the default sapms<sysid> jco.client.gwhost Gateway host jco.client.gwserv Gateway service jco.client.r3name System ID of the SAP system jco.client.group Group of SAP application servers jco.client.tpname Program ID of external server program jco.client.tphost Host of external server program jco.client.type Type of remote host 2 = R/2, 3 = R/3, E = External jco.client.trace Enable/disable RFC trace (0 or 1) jco.client.cpic_trace Enable/disable CPIC trace (-1 [take over environment value], 0 no trace, 1,2,3 different amount of trace) jco.client.use_sapgui Start a SAP GUI and associate with the connection. (0 - do not start [default], 1 start GUI, 2 start GUI and hide if not used) jco.client.codepage Initial codepage in SAP notation jco.client.getsso2 Get/Don't get a SSO ticket after logon (1 or 0) jco.client.mysapsso2 Use the specified SAP Cookie Version 2 as logon ticket jco.client.x509cert Use the specified X509 certificate as logon ticket jco.client.lcheck Enable/Disable logon check at open time, 1 (enable) or 0 (disable) jco.client.snc_mode Secure network connection (SNC) mode, 0 (off) or 1 (on) jco.client.snc_partnername SNC partner, e.g. p:CN=R3, O=XYZ-INC, C=EN jco.client.snc_qop SNC level of security, 1 to 9 jco.client.snc_myname SNC name. Overrides default SNC partner jco.client.snc_lib Path to library which provides SNC service jco.client.dsr Enable/Disable dsr support (0 or 1) jco.destination.peak_limit Maximum number of active connections that can be created for a destination simultaneously jco.destination.pool_capacity Maximum number of idle connections kept open by the destination. A value of 0 has the effect that there is no connection pooling. jco.destination.expiration_time Time in ms after that the connections hold by the internal pool can be closed jco.destination.expiration_check_period Interval in ms with which the timeout checker thread checks the connections in the pool for expiration jco.destination.max_get_client_time Max time in ms to wait for a connection, if the max allowed number of connections is allocated by the application jco.destination.repository_destination Specifies which destination should be used as repository, i.e. use this destination's repository jco.destination.repository.user Optional: If repository destination is not set, and this property is set, it will be used as user for repository calls. This allows using a different user for repository lookups jco.destination.repository.passwd The password for a repository user. Mandatory, if a repository user should be used. jco.destination.repository.snc_mode Optional: If SNC is used for this destination, it is possible to turn it off for repository connections, if this property is set to 0. Defaults to the value of jco.client.snc_mode",
      "descriptionHtml" : "Class that contains static RFC JCO connection information. \n<p> This class indirectly provides a <code>com.sap.conn.jco.ext.DestinationDataProvider</code> for the underlying RFC Connection. </p> \n<p> The following table is copied directly from the SAP Java Connector API documentation. Please use the appropriate settings for your SAP application landscape; no verification is performed on the properties. </p> \n<br> The following properties are supported: \n<p> </p>\n<table border=\"1\"> \n <tbody>\n  <tr> \n   <th>Key value</th> \n   <th>Description</th> \n  </tr> \n  <tr> \n   <td>jco.client.client</td> \n   <td>SAP client</td> \n  </tr> \n  <tr> \n   <td>jco.client.user</td> \n   <td>Logon user</td> \n  </tr> \n  <tr> \n   <td>jco.client.alias_user</td> \n   <td>Logon user alias</td> \n  </tr> \n  <tr> \n   <td>jco.client.passwd</td> \n   <td>Logon password</td> \n  </tr> \n  <tr> \n   <td>jco.client.lang</td> \n   <td>Logon language</td> \n  </tr> \n  <tr> \n   <td>jco.client.saprouter</td> \n   <td>SAP router string to use for a system protected by a firewall</td> \n  </tr> \n  <tr> \n   <td>jco.client.sysnr</td> \n   <td>SAP system number</td> \n  </tr> \n  <tr> \n   <td>jco.client.ashost</td> \n   <td>SAP application server</td> \n  </tr> \n  <tr> \n   <td>jco.client.mshost</td> \n   <td>SAP message server</td> \n  </tr> \n  <tr> \n   <td>jco.client.msserv</td> \n   <td>optional: SAP message server port to use instead of the default sapms&lt;sysid&gt;</td> \n  </tr> \n  <tr> \n   <td>jco.client.gwhost</td> \n   <td>Gateway host</td> \n  </tr> \n  <tr> \n   <td>jco.client.gwserv</td> \n   <td>Gateway service</td> \n  </tr> \n  <tr> \n   <td>jco.client.r3name</td> \n   <td>System ID of the SAP system</td> \n  </tr> \n  <tr> \n   <td>jco.client.group</td> \n   <td>Group of SAP application servers</td> \n  </tr> \n  <tr> \n   <td>jco.client.tpname</td> \n   <td>Program ID of external server program</td> \n  </tr> \n  <tr> \n   <td>jco.client.tphost</td> \n   <td>Host of external server program</td> \n  </tr> \n  <tr> \n   <td>jco.client.type</td> \n   <td>Type of remote host 2 = R/2, 3 = R/3, E = External</td> \n  </tr> \n  <tr> \n   <td>jco.client.trace</td> \n   <td>Enable/disable RFC trace (0 or 1)</td> \n  </tr> \n  <tr> \n   <td>jco.client.cpic_trace</td> \n   <td>Enable/disable CPIC trace (-1 [take over environment value], 0 no trace, 1,2,3 different amount of trace)</td> \n  </tr> \n  <tr> \n   <td>jco.client.use_sapgui</td> \n   <td>Start a SAP GUI and associate with the connection. (0 - do not start [default], 1 start GUI, 2 start GUI and hide if not used)</td> \n  </tr> \n  <tr> \n   <td>jco.client.codepage</td> \n   <td>Initial codepage in SAP notation</td> \n  </tr> \n  <tr> \n   <td>jco.client.getsso2</td> \n   <td>Get/Don't get a SSO ticket after logon (1 or 0)</td> \n  </tr> \n  <tr> \n   <td>jco.client.mysapsso2</td> \n   <td>Use the specified SAP Cookie Version 2 as logon ticket</td> \n  </tr> \n  <tr> \n   <td>jco.client.x509cert</td> \n   <td>Use the specified X509 certificate as logon ticket</td> \n  </tr> \n  <tr> \n   <td>jco.client.lcheck</td> \n   <td>Enable/Disable logon check at open time, 1 (enable) or 0 (disable)</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_mode</td> \n   <td>Secure network connection (SNC) mode, 0 (off) or 1 (on)</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_partnername</td> \n   <td>SNC partner, e.g. p:CN=R3, O=XYZ-INC, C=EN</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_qop</td> \n   <td>SNC level of security, 1 to 9</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_myname</td> \n   <td>SNC name. Overrides default SNC partner</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_lib</td> \n   <td>Path to library which provides SNC service</td> \n  </tr> \n  <tr> \n   <td>jco.client.dsr</td> \n   <td>Enable/Disable dsr support (0 or 1)</td> \n  </tr> \n  <tr> \n   <td>jco.destination.peak_limit</td> \n   <td>Maximum number of active connections that can be created for a destination simultaneously</td> \n  </tr> \n  <tr> \n   <td>jco.destination.pool_capacity</td> \n   <td>Maximum number of idle connections kept open by the destination. A value of <tt>0</tt> has the effect that there is no connection pooling.</td> \n  </tr> \n  <tr> \n   <td>jco.destination.expiration_time</td> \n   <td>Time in ms after that the connections hold by the internal pool can be closed</td> \n  </tr> \n  <tr> \n   <td>jco.destination.expiration_check_period</td> \n   <td>Interval in ms with which the timeout checker thread checks the connections in the pool for expiration</td> \n  </tr> \n  <tr> \n   <td>jco.destination.max_get_client_time</td> \n   <td>Max time in ms to wait for a connection, if the max allowed number of connections is allocated by the application</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository_destination</td> \n   <td>Specifies which destination should be used as repository, i.e. use this destination's repository</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository.user</td> \n   <td>Optional: If repository destination is not set, and this property is set, it will be used as user for repository calls. This allows using a different user for repository lookups</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository.passwd</td> \n   <td>The password for a repository user. Mandatory, if a repository user should be used.</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository.snc_mode</td> \n   <td>Optional: If SNC is used for this destination, it is possible to turn it off for repository connections, if this property is set to 0. Defaults to the value of jco.client.snc_mode</td> \n  </tr> \n </tbody>\n</table> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "JcoConnectionBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/JcoConnectionBase.html"
        },
        {
          "name" : "JcoConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/JcoConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/SendChannelConfig.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.SendChannelConfig",
      "className" : "SendChannelConfig",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "object",
      "alias" : "sonic-send-channel-config",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public final class SendChannelConfig\nextends LargeMessageConfig",
      "annotationDetailsHtml" : "public final class <span class=\"typeNameLabel\">SendChannelConfig</span>\nextends <a href=\"LargeMessageConfig.html\" title=\"class in com.adaptris.core.jms.sonic\" target=\"_new\">LargeMessageConfig</a>",
      "description" : "Additional Configuration required for LargeMessageProducer.",
      "descriptionHtml" : "Additional Configuration required for \n<a href=\"LargeMessageProducer.html\" title=\"class in com.adaptris.core.jms.sonic\" target=\"_new\"><code>LargeMessageProducer</code></a>.",
      "inheritance" : [
        {
          "name" : "LargeMessageConfig",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/LargeMessageConfig.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ThreadContextWorkflow.html",
      "fullClassName" : "com.adaptris.core.ThreadContextWorkflow",
      "className" : "ThreadContextWorkflow",
      "packageName" : "com.adaptris.core",
      "componentType" : "workflow",
      "alias" : "thread-context-workflow",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.12.0",
        "summary" : "Workflow that executes within the current thread context.",
        "tag" : "workflow"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Workflow that executes within the current thread context.\",\n                  tag=\"workflow\",\n                  since=\"3.12.0\")\npublic class ThreadContextWorkflow\nextends WorkflowWithObjectPool",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Workflow that executes within the current thread context.\",\n                  tag=\"workflow\",\n                  since=\"3.12.0\")\npublic class <span class=\"typeNameLabel\">ThreadContextWorkflow</span>\nextends <a href=\"WorkflowWithObjectPool.html\" title=\"class in com.adaptris.core\" target=\"_new\">WorkflowWithObjectPool</a>",
      "description" : "Workflow that executes services in the current thread. This is different to StandardWorkflow in the sense that it does not synchronize on the onAdaptrisMessage() method and processes the message in the same thread as the caller. This is useful if you have a consumer that may be triggered by multiple threads (e.g. Jetty or JMS) but you don't want to use PoolingWorkflow. It is probably of little or no benefit where the consumer is a polling implementation. Since services cannot be guaranteed to be thread-safe; it maintains an internal object pool that is independently sizeable.",
      "descriptionHtml" : "Workflow that executes services in the current thread. \n<p> This is different to <a href=\"StandardWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandardWorkflow</code></a> in the sense that it does not synchronize on the <code>onAdaptrisMessage()</code> method and processes the message in the same thread as the caller. This is useful if you have a consumer that may be triggered by multiple threads (e.g. Jetty or JMS) but you don't want to use <a href=\"PoolingWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>PoolingWorkflow</code></a>. It is probably of little or no benefit where the consumer is a polling implementation. </p> \n<p> Since services cannot be guaranteed to be thread-safe; it maintains an internal object pool that is independently sizeable. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowImp.html"
        },
        {
          "name" : "WorkflowWithObjectPool",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowWithObjectPool.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultAdapterStartUpEvent.html",
      "fullClassName" : "com.adaptris.core.DefaultAdapterStartUpEvent",
      "className" : "DefaultAdapterStartUpEvent",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "default-adapter-start-up-event",
      "deprecated" : true,
      "removalVersion" : "a future version",
      "removalMessage" : "{com.adaptris.validation.constraints.ConfigDeprecated.message}",
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "@Deprecated\n@ConfigDeprecated(groups=java.lang.Deprecated.class)\npublic class DefaultAdapterStartUpEvent\nextends StandardAdapterStartUpEvent",
      "annotationDetailsHtml" : "@Deprecated\n@ConfigDeprecated(groups=java.lang.Deprecated.class)\npublic class <span class=\"typeNameLabel\">DefaultAdapterStartUpEvent</span>\nextends <a href=\"event/StandardAdapterStartUpEvent.html\" title=\"class in com.adaptris.core.event\" target=\"_new\">StandardAdapterStartUpEvent</a>",
      "description" : "Event containing Adapter start-up information..",
      "descriptionHtml" : "<p> Event containing <code>Adapter</code> start-up information.. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        },
        {
          "name" : "AdapterStartUpEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterStartUpEvent.html"
        },
        {
          "name" : "StandardAdapterStartUpEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/event/StandardAdapterStartUpEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/Contains.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.Contains",
      "className" : "Contains",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "object",
      "alias" : "metadata-contains",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured metadata value contains the supplied value.",
        "tag" : "operator,comparator,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured metadata value contains the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class Contains\nextends ComparatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured metadata value contains the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class <span class=\"typeNameLabel\">Contains</span>\nextends <a href=\"ComparatorImpl.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\">ComparatorImpl</a>",
      "description" : "Used with MetadataComparisonService.",
      "descriptionHtml" : "Used with \n<a href=\"MetadataComparisonService.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\"><code>MetadataComparisonService</code></a>.",
      "inheritance" : [
        {
          "name" : "ComparatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ComparatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/cloud/RemoteBlobFilterWrapper.html",
      "fullClassName" : "com.adaptris.interlok.cloud.RemoteBlobFilterWrapper",
      "className" : "RemoteBlobFilterWrapper",
      "packageName" : "com.adaptris.interlok.cloud",
      "componentType" : "object",
      "alias" : "remote-blob-filter-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Wraps a FileFilter instance for filtering remote blobs",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Wraps a FileFilter instance for filtering remote blobs\",\n                  since=\"3.9.2\")\npublic class RemoteBlobFilterWrapper\nextends java.lang.Object\nimplements RemoteBlobFilter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Wraps a FileFilter instance for filtering remote blobs\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">RemoteBlobFilterWrapper</span>\nextends java.lang.Object\nimplements <a href=\"RemoteBlobFilter.html\" title=\"interface in com.adaptris.interlok.cloud\" target=\"_new\">RemoteBlobFilter</a>",
      "description" : "Wraps a FileFilter instance and allows you to use that as your filter. The file filter implementation is configured as a classname, and is expected to have a String constructor (the filter-expression is used as that parameter); this is because not all FileFilter implementations will have aliases and configuration that are appropriate for marshalling Apache commons-io filters such as SizeBasedFilter only provide a numeric constructor, so these cannot yet be supported via this wrapper; however, you have other options available in the com.adaptris.core.fs package. Since a RemoteBlob does not expose all the possible methods of File, it is wrapped as a RemoteFile. If your filter uses anything other than the filename / size / lastmodified, then results will be undefined.",
      "descriptionHtml" : "Wraps a \n<code>FileFilter</code> instance and allows you to use that as your filter. \n<p> The file filter implementation is configured as a classname, and is expected to have a <strong>String constructor</strong> (the filter-expression is used as that parameter); this is because not all FileFilter implementations will have aliases and configuration that are appropriate for marshalling </p> \n<p> Apache commons-io filters such as <code>SizeBasedFilter</code> only provide a numeric constructor, so these cannot yet be supported via this wrapper; however, you have other options available in the <code>com.adaptris.core.fs</code> package. </p> \n<p> Since a <a href=\"RemoteBlob.html\" title=\"class in com.adaptris.interlok.cloud\" target=\"_new\"><code>RemoteBlob</code></a> does not expose all the possible methods of <code>File</code>, it is wrapped as a <a href=\"RemoteFile.html\" title=\"class in com.adaptris.interlok.cloud\" target=\"_new\"><code>RemoteFile</code></a>. <strong>If your filter uses anything other than the filename / size / lastmodified, then results will be undefined.</strong> </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/JsonPathDataInputParameter.html",
      "fullClassName" : "com.adaptris.core.json.JsonPathDataInputParameter",
      "className" : "JsonPathDataInputParameter",
      "packageName" : "com.adaptris.core.json",
      "componentType" : "object",
      "alias" : "json-path-data-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extract data via a JSON Path",
        "tag" : "json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract data via a JSON Path\",\n                  tag=\"json\")\npublic class JsonPathDataInputParameter\nextends java.lang.Object\nimplements DataInputParameter<java.lang.String>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract data via a JSON Path\",\n                  tag=\"json\")\npublic class <span class=\"typeNameLabel\">JsonPathDataInputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.lang.String&gt;",
      "description" : "This DataInputParameter is extracts data via JsonPath. If the path resolves to a JSON object or JSON Array, then this is simply converted into a String.",
      "descriptionHtml" : "This \n<code>DataInputParameter</code> is extracts data via JsonPath. \n<p> If the path resolves to a JSON object or JSON Array, then this is simply converted into a String. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/VerifyIdentityService.html",
      "fullClassName" : "com.adaptris.core.security.access.VerifyIdentityService",
      "className" : "VerifyIdentityService",
      "packageName" : "com.adaptris.core.security.access",
      "componentType" : "service",
      "alias" : "verify-identity-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Verify and control access based on the message contents",
        "tag" : "service,security"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Verify and control access based on the message contents\",\n                  tag=\"service,security\")\npublic class VerifyIdentityService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Verify and control access based on the message contents\",\n                  tag=\"service,security\")\npublic class <span class=\"typeNameLabel\">VerifyIdentityService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "A simple service that allows you to verify that the message contents and/or metadata passes muster. If IdentityVerifier.validate(IdentityBuilder, AdaptrisMessage) returns false then an exception is thrown. If you want to use this as a branch; then you should wrap the service inside a BranchingServiceEnabler",
      "descriptionHtml" : "A simple service that allows you to verify that the message contents and/or metadata passes muster. \n<p> If <a href=\"IdentityVerifier.html#validate(com.adaptris.core.security.access.IdentityBuilder,com.adaptris.core.AdaptrisMessage)\" target=\"_new\"><code>IdentityVerifier.validate(IdentityBuilder, AdaptrisMessage)</code></a> returns <code>false</code> then an exception is thrown. If you want to use this as a branch; then you should wrap the service inside a <a href=\"../../services/BranchingServiceEnabler.html\" title=\"class in com.adaptris.core.services\" target=\"_new\"><code>BranchingServiceEnabler</code></a> </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-azure/4.0.0B1-RELEASE/com/adaptris/core/oauth/azure/AzureUsernamePasswordAccessToken.html",
      "fullClassName" : "com.adaptris.core.oauth.azure.AzureUsernamePasswordAccessToken",
      "className" : "AzureUsernamePasswordAccessToken",
      "packageName" : "com.adaptris.core.oauth.azure",
      "componentType" : "object",
      "alias" : "azure-username-password-access-token",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-azure.jar",
      "profile" : { },
      "annotationDetails" : "public class AzureUsernamePasswordAccessToken\nextends AzureAccessTokenImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AzureUsernamePasswordAccessToken</span>\nextends <a href=\"AzureAccessTokenImpl.html\" title=\"class in com.adaptris.core.oauth.azure\" target=\"_new\">AzureAccessTokenImpl</a>",
      "description" : "Wraps the azure OAuth authentication flow. Based on the example available from Azure-Samples and tested (eventually) with the Microsoft Graph API using https://graph.microsoft.com/v1.0/me/.",
      "descriptionHtml" : "Wraps the azure OAuth authentication flow. \n<p> Based on the example available from <a href=\"https://github.com/Azure-Samples/active-directory-java-native-headless\" target=\"_new\">Azure-Samples</a> and tested (eventually) with the <a href=\"https://graph.microsoft.com\" target=\"_new\">Microsoft Graph API</a> using <a href=\"https://graph.microsoft.com/v1.0/me/\" target=\"_new\">https://graph.microsoft.com/v1.0/me/</a>. </p>",
      "inheritance" : [
        {
          "name" : "AzureAccessTokenImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-azure/4.0.0B1-RELEASE/com/adaptris/core/oauth/azure/AzureAccessTokenImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Azure",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-azure",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/TimeSliceDefaultCacheProvider.html",
      "fullClassName" : "com.adaptris.core.interceptor.TimeSliceDefaultCacheProvider",
      "className" : "TimeSliceDefaultCacheProvider",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "object",
      "alias" : "time-slice-default-cache-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class TimeSliceDefaultCacheProvider\nextends TimeSliceAbstractCacheProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimeSliceDefaultCacheProvider</span>\nextends <a href=\"TimeSliceAbstractCacheProvider.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">TimeSliceAbstractCacheProvider</a>",
      "description" : "The default implementation that handles the current time slice persistence. This implementation uses a singleton (TimeSlicePersistence) which maintains a list of cache names and for each cache name a cache of time slices. This provider exposes methods that will call into the persistence for common usage; get and put.",
      "descriptionHtml" : "The default implementation that handles the current time slice persistence. \n<p> This implementation uses a singleton (TimeSlicePersistence) which maintains a list of cache names and for each cache name a cache of time slices. This provider exposes methods that will call into the persistence for common usage; get and put. </p>",
      "inheritance" : [
        {
          "name" : "TimeSliceAbstractCacheProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/TimeSliceAbstractCacheProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileDataInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.FileDataInputParameter",
      "className" : "FileDataInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "file-data-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FileDataInputParameter\nextends FileParameter\nimplements DataInputParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FileDataInputParameter</span>\nextends <a href=\"FileParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">FileParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.lang.String&gt;",
      "description" : "DataInputParameter implementation that reads from a file.",
      "descriptionHtml" : "<code>DataInputParameter</code> implementation that reads from a file.",
      "inheritance" : [
        {
          "name" : "FileParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/AdvancedSonicMqImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.AdvancedSonicMqImplementation",
      "className" : "AdvancedSonicMqImplementation",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "object",
      "alias" : "advanced-sonic-mq-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedSonicMqImplementation\nextends BasicSonicMqImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedSonicMqImplementation</span>\nextends <a href=\"BasicSonicMqImplementation.html\" title=\"class in com.adaptris.core.jms.sonic\" target=\"_new\">BasicSonicMqImplementation</a>",
      "description" : "Progress SonicMQ implementation of VendorImplementation. Depending on your SonicMQ configuration you will need at least the sonic_Client.jar sonic_Channel.jar sonic_Crypto.jar sonic_XMessage.jar from your SonicMQ installation This vendor implementation class directly exposes almost all the getter and setters that are available in the ConnectionFactory for maximum flexibility in configuration. The key from the connection-factory-properties element should match the name of the underlying Progress ConnectionFactory property.    <connection-factory-properties>\n     <key-value-pair>\n        <key>PrefetchCount</key>\n        <value>10</value>\n     </key-value-pair>\n   </connection-factory-properties>\n will invoke ConnectionFactory.setPrefetchCount(int) with 10, setting the PreFetchCount property to 10. This vendor implementation also overrides VendorImplementationImp.applyVendorSessionProperties(javax.jms.Session) so that specific SonicMQ session properties can be applied. The way of doing this is exactly the same as setting properties on the ConnectionFactory.    <session-properties>\n     <key-value-pair>\n        <key>AckBatchingEnabled</key>\n        <value>true</value>\n     </key-value-pair>\n   </session-properties>\n would invoke Session.setAckBatchingEnabled(boolean) with true. This was built against SonicMQ 8.5",
      "descriptionHtml" : "<p> Progress SonicMQ implementation of <code>VendorImplementation</code>. </p> \n<p> Depending on your SonicMQ configuration you will need at least the sonic_Client.jar sonic_Channel.jar sonic_Crypto.jar sonic_XMessage.jar from your SonicMQ installation </p> \n<p> This vendor implementation class directly exposes almost all the getter and setters that are available in the ConnectionFactory for maximum flexibility in configuration. </p> \n<p> The key from the <code>connection-factory-properties</code> element should match the name of the underlying Progress ConnectionFactory property. <code> </code></p>\n<pre><code>   &lt;connection-factory-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;PrefetchCount&lt;/key&gt;\n        &lt;value&gt;10&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/connection-factory-properties&gt;\n </code></pre>\n<code> </code> will invoke \n<code>ConnectionFactory.setPrefetchCount(int)</code> with 10, setting the PreFetchCount property to 10. \n<p></p> \n<p> This vendor implementation also overrides <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true#applyVendorSessionProperties(javax.jms.Session)\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementationImp.applyVendorSessionProperties(javax.jms.Session)</code></a> so that specific SonicMQ session properties can be applied. The way of doing this is exactly the same as setting properties on the ConnectionFactory. <code> </code></p>\n<pre><code>   &lt;session-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;AckBatchingEnabled&lt;/key&gt;\n        &lt;value&gt;true&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/session-properties&gt;\n </code></pre>\n<code> </code> would invoke \n<code>Session.setAckBatchingEnabled(boolean)</code> with true. \n<p></p> \n<p> <b>This was built against SonicMQ 8.5</b> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "BasicSonicMqImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/BasicSonicMqImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-core/4.0.0B1-RELEASE/com/adaptris/interlok/azure/GraphAPIConnection.html",
      "fullClassName" : "com.adaptris.interlok.azure.GraphAPIConnection",
      "className" : "GraphAPIConnection",
      "packageName" : "com.adaptris.interlok.azure",
      "componentType" : "connection",
      "alias" : "azure-graph-api-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to an Azure tenant and access the Graph API",
        "tag" : "connections,azure,graph api,graph"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to an Azure tenant and access the Graph API\",\n                  tag=\"connections,azure,graph api,graph\")\npublic class GraphAPIConnection\nextends AzureConnection<com.microsoft.graph.models.extensions.IGraphServiceClient>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to an Azure tenant and access the Graph API\",\n                  tag=\"connections,azure,graph api,graph\")\npublic class <span class=\"typeNameLabel\">GraphAPIConnection</span>\nextends <a href=\"AzureConnection.html\" title=\"class in com.adaptris.interlok.azure\" target=\"_new\">AzureConnection</a>&lt;com.microsoft.graph.models.extensions.IGraphServiceClient&gt;",
      "description" : "Azure connection to use the Graph API.",
      "descriptionHtml" : "Azure connection to use the Graph API.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "AzureConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-core/4.0.0B1-RELEASE/com/adaptris/interlok/azure/AzureConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/ConfiguredResponseHeaderProvider.html",
      "fullClassName" : "com.adaptris.core.http.jetty.ConfiguredResponseHeaderProvider",
      "className" : "ConfiguredResponseHeaderProvider",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-configured-response-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredResponseHeaderProvider\nextends java.lang.Object\nimplements ResponseHeaderProvider<javax.servlet.http.HttpServletResponse>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredResponseHeaderProvider</span>\nextends java.lang.Object\nimplements <a href=\"../server/ResponseHeaderProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\">ResponseHeaderProvider</a>&lt;javax.servlet.http.HttpServletResponse&gt;",
      "description" : "ResponseHeaderProvider implementation that provides a static configured set of headers.",
      "descriptionHtml" : "<a href=\"../server/ResponseHeaderProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>ResponseHeaderProvider</code></a> implementation that provides a static configured set of headers.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MultiPayloadStreamOutputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MultiPayloadStreamOutputParameter",
      "className" : "MultiPayloadStreamOutputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "multi-payload-stream-output-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MultiPayloadStreamOutputParameter\nextends PayloadStreamOutputParameter\nimplements DataOutputParameter<InputStreamWithEncoding>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultiPayloadStreamOutputParameter</span>\nextends <a href=\"PayloadStreamOutputParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">PayloadStreamOutputParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataOutputParameter</a>&lt;<a href=\"InputStreamWithEncoding.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">InputStreamWithEncoding</a>&gt;",
      "description" : "This MultiPayloadDataOutputParameter is used when you want to insert data into the MultiPayloadAdaptrisMessage payload.",
      "descriptionHtml" : "This \n<code>MultiPayloadDataOutputParameter</code> is used when you want to insert data into the \n<a href=\"../MultiPayloadAdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>MultiPayloadAdaptrisMessage</code></a> payload.",
      "inheritance" : [
        {
          "name" : "PayloadStreamOutputParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/PayloadStreamOutputParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ObjectMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.ObjectMessageTranslator",
      "className" : "ObjectMessageTranslator",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "object-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public final class ObjectMessageTranslator\nextends MessageTypeTranslatorImp",
      "annotationDetailsHtml" : "public final class <span class=\"typeNameLabel\">ObjectMessageTranslator</span>\nextends <a href=\"MessageTypeTranslatorImp.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MessageTypeTranslatorImp</a>",
      "description" : "Translates between javax.jms.ObjectMessages and AdaptrisMessages and vice versa.",
      "descriptionHtml" : "<p> Translates between <code>javax.jms.ObjectMessage</code>s and <code>AdaptrisMessage</code>s and vice versa. </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jmx/SimpleNotificationSerializer.html",
      "fullClassName" : "com.adaptris.core.jmx.SimpleNotificationSerializer",
      "className" : "SimpleNotificationSerializer",
      "packageName" : "com.adaptris.core.jmx",
      "componentType" : "object",
      "alias" : "simple-jmx-notification-serializer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleNotificationSerializer\nextends java.lang.Object\nimplements NotificationSerializer",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleNotificationSerializer</span>\nextends java.lang.Object\nimplements <a href=\"NotificationSerializer.html\" title=\"interface in com.adaptris.core.jmx\" target=\"_new\">NotificationSerializer</a>",
      "description" : "Serializes a Notification into an simple text message. Notification.getUserData() is always added as object metadata against the key \"userData\".",
      "descriptionHtml" : "Serializes a \n<code>Notification</code> into an simple text message. \n<p> <code>Notification.getUserData()</code> is always added as object metadata against the key <a href=\"NotificationSerializer.html#OBJ_METADATA_USERDATA\" target=\"_new\">\"userData\"</a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/DecryptionService.html",
      "fullClassName" : "com.adaptris.core.security.DecryptionService",
      "className" : "DecryptionService",
      "packageName" : "com.adaptris.core.security",
      "componentType" : "service",
      "alias" : "decryption-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Decrypt and/or verify the signature of a message",
        "tag" : "service,security"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Decrypt and/or verify the signature of a message\",\n                  tag=\"service,security\",\n                  branchSelector=true)\npublic class DecryptionService\nextends CoreSecurityService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Decrypt and/or verify the signature of a message\",\n                  tag=\"service,security\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">DecryptionService</span>\nextends <a href=\"CoreSecurityService.html\" title=\"class in com.adaptris.core.security\" target=\"_new\">CoreSecurityService</a>",
      "description" : "Perform decryption. This may be used as part of a BranchingServiceCollection if both CoreSecurityService.setFailId(String) and CoreSecurityService.setSuccessId(String) are configured.",
      "descriptionHtml" : "Perform decryption. \n<p> This may be used as part of a <a href=\"../BranchingServiceCollection.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>BranchingServiceCollection</code></a> if both <a href=\"CoreSecurityService.html#setFailId(java.lang.String)\" target=\"_new\"><code>CoreSecurityService.setFailId(String)</code></a> and <a href=\"CoreSecurityService.html#setSuccessId(java.lang.String)\" target=\"_new\"><code>CoreSecurityService.setSuccessId(String)</code></a> are configured. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CoreSecurityService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/CoreSecurityService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/rfc5849/StandardRfc5849Authenticator.html",
      "fullClassName" : "com.adaptris.core.oauth.rfc5849.StandardRfc5849Authenticator",
      "className" : "StandardRfc5849Authenticator",
      "packageName" : "com.adaptris.core.oauth.rfc5849",
      "componentType" : "object",
      "alias" : "oauth-rfc5849-authenticator",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-generic.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Build an OAUTH Authorization header based on RFC5849",
        "tag" : "oauth,oauthv1,http,https"
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.8.4\",\n                  summary=\"Build an OAUTH Authorization header based on RFC5849\",\n                  tag=\"oauth,oauthv1,http,https\")\npublic class StandardRfc5849Authenticator\nextends java.lang.Object\nimplements HttpURLConnectionAuthenticator",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.8.4\",\n                  summary=\"Build an OAUTH Authorization header based on RFC5849\",\n                  tag=\"oauth,oauthv1,http,https\")\npublic class <span class=\"typeNameLabel\">StandardRfc5849Authenticator</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpURLConnectionAuthenticator.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client.net\" class=\"externalLink\" target=\"_new\">HttpURLConnectionAuthenticator</a>",
      "description" : "Generate an Authorization Header based on RFC5849 for use with HttpRequestService and StandardHttpProducer. NetSuite OAUTH 1.0 (using HMAC-SHA1), but not any other OAUTH 1.0 providers. It is designed to generate an Authorization header based on each request that will be made, rather than retrieving a Bearer token or similar for re-use. It is implemented as an HttpURLConnectionAuthenticator implementation for you to add as the HttpRequestServiceImpl.setAuthenticator(HttpAuthenticator) or similar. Note that since this will not have access to payload; this particular implementation does not support the using the payload as part of the signature base string when the Content-Type is application/x-www-form-urlencoded. If that is the case then use a GenerateRfc5849Header with a metadata filter to pre-build an authorisation header.",
      "descriptionHtml" : "Generate an Authorization Header based on \n<a href=\"https://tools.ietf.org/html/rfc5849\" target=\"_new\">RFC5849</a> for use with \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpRequestService.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client.net\" class=\"externalLink\" target=\"_new\"><code>HttpRequestService</code></a> and \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/StandardHttpProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client.net\" class=\"externalLink\" target=\"_new\"><code>StandardHttpProducer</code></a>. \n<p> NetSuite OAUTH 1.0 (using HMAC-SHA1), but not any other OAUTH 1.0 providers. </p> \n<p> It is designed to generate an Authorization header based on each request that will be made, rather than retrieving a <code>Bearer token</code> or similar for re-use. It is implemented as an <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpURLConnectionAuthenticator.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client.net\" class=\"externalLink\" target=\"_new\"><code>HttpURLConnectionAuthenticator</code></a> implementation for you to add as the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpRequestServiceImpl.html?is-external=true#setAuthenticator(com.adaptris.core.http.auth.HttpAuthenticator)\" title=\"class or interface in com.adaptris.core.http.client.net\" class=\"externalLink\" target=\"_new\"><code>HttpRequestServiceImpl.setAuthenticator(HttpAuthenticator)</code></a> or similar. </p> \n<p> Note that since this will not have access to payload; this particular implementation does not support the using the payload as part of the signature base string when the <code>Content-Type</code> is <code>application/x-www-form-urlencoded</code>. If that is the case then use a <a href=\"GenerateRfc5849Header.html\" title=\"class in com.adaptris.core.oauth.rfc5849\" target=\"_new\"><code>GenerateRfc5849Header</code></a> with a metadata filter to pre-build an authorisation header. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Generic",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-generic",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MimePartSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.MimePartSplitter",
      "className" : "MimePartSplitter",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "mime-part-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MimePartSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MimePartSplitter</span>\nextends <a href=\"MessageSplitterImp.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "Implementation of MessageSplitter which allows a single AdaptrisMessage that contains multiple mime parts to be split into AdaptrisMessage[]. The Message must be a mime encoded message.",
      "descriptionHtml" : "<p> Implementation of <code>MessageSplitter</code> which allows a single <code>AdaptrisMessage</code> that contains multiple mime parts to be split into <code>AdaptrisMessage[]</code>. </p> \n<p> The Message must be a mime encoded message. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/transform/validate/SimpleListContentValidation.html",
      "fullClassName" : "com.adaptris.transform.validate.SimpleListContentValidation",
      "className" : "SimpleListContentValidation",
      "packageName" : "com.adaptris.transform.validate",
      "componentType" : "object",
      "alias" : "xml-content-in-list",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleListContentValidation\nextends ListContentValidation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleListContentValidation</span>\nextends <a href=\"ListContentValidation.html\" title=\"class in com.adaptris.transform.validate\" target=\"_new\">ListContentValidation</a>",
      "description" : "Compare the content against some specified list.",
      "descriptionHtml" : "Compare the content against some specified list.",
      "inheritance" : [
        {
          "name" : "ListContentValidation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/transform/validate/ListContentValidation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportTestCase.html",
      "fullClassName" : "com.adaptris.tester.report.junit.JUnitReportTestCase",
      "className" : "JUnitReportTestCase",
      "packageName" : "com.adaptris.tester.report.junit",
      "componentType" : "object",
      "alias" : "testcase",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class JUnitReportTestCase\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JUnitReportTestCase</span>\nextends java.lang.Object",
      "description" : "Child of JUnitReportTestSuite for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. When tests are executed via TestCase.execute(String, TestClient, ServiceToTest, ServiceTestConfig) the results are produced as this corresponding class.",
      "descriptionHtml" : "Child of \n<a href=\"JUnitReportTestSuite.html\" title=\"class in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestSuite</code></a> for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. \n<p> When tests are executed via <a href=\"../../runtime/TestCase.html#execute(java.lang.String,com.adaptris.tester.runtime.clients.TestClient,com.adaptris.tester.runtime.services.ServiceToTest,com.adaptris.tester.runtime.ServiceTestConfig)\" target=\"_new\"><code>TestCase.execute(String, TestClient, ServiceToTest, ServiceTestConfig)</code></a> the results are produced as this corresponding class. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/TransactionId.html",
      "fullClassName" : "com.adaptris.core.sap.TransactionId",
      "className" : "TransactionId",
      "packageName" : "com.adaptris.core.sap",
      "componentType" : "object",
      "alias" : "transaction-id",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class TransactionId\nextends java.lang.Object\nimplements java.io.Serializable",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TransactionId</span>\nextends java.lang.Object\nimplements java.io.Serializable",
      "description" : "Bean for storing SAP Transaction Ids.",
      "descriptionHtml" : "Bean for storing SAP Transaction Ids.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBDeleteProducer.html",
      "fullClassName" : "com.adaptris.core.mongodb.MongoDBDeleteProducer",
      "className" : "MongoDBDeleteProducer",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "producer",
      "alias" : "mongodb-delete-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.mongodb.MongoDBConnection"
        ],
        "since" : "",
        "summary" : "Delete JSON objects from MongoDB.",
        "tag" : "producer,mongodb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Delete JSON objects from MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=MongoDBConnection.class)\npublic class MongoDBDeleteProducer\nextends MongoDBArrayProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Delete JSON objects from MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=<a href=\"MongoDBConnection.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBConnection.class</a>)\npublic class <span class=\"typeNameLabel\">MongoDBDeleteProducer</span>\nextends <a href=\"MongoDBArrayProducer.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBArrayProducer</a>",
      "description" : "Producer that delete JSON objects from MongoDB, if a JSON array is given the array will be split and delete as individual JSON objects.",
      "descriptionHtml" : "Producer that delete JSON objects from MongoDB, if a JSON array is given the array will be split and delete as individual JSON objects.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "MongoDBProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBProducer.html"
        },
        {
          "name" : "MongoDBArrayProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBArrayProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/transform/StreamingCsvToXml.html",
      "fullClassName" : "com.adaptris.csv.transform.StreamingCsvToXml",
      "className" : "StreamingCsvToXml",
      "packageName" : "com.adaptris.csv.transform",
      "componentType" : "service",
      "alias" : "streaming-csv-to-xml-transform",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "Transform CSV to XML using the XML streaming API (STaX).",
        "tag" : "service,transform,csv,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform CSV to XML using the XML streaming API (STaX).\",\n                  tag=\"service,transform,csv,xml\",\n                  since=\"3.11.0\")\npublic class StreamingCsvToXml\nextends CsvXmlTransformImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform CSV to XML using the XML streaming API (STaX).\",\n                  tag=\"service,transform,csv,xml\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">StreamingCsvToXml</span>\nextends <a href=\"CsvXmlTransformImpl.html\" title=\"class in com.adaptris.csv.transform\" target=\"_new\">CsvXmlTransformImpl</a>",
      "description" : "CSV to XML using net.sf.supercsv:super-csv via XMLStreamWriter This transformation uses net.sf.supercsv:super-csv as the parsing engine for a CSV file and uses XMLStreamWriter via com.adaptris:interlok-stax to write each row as part of an XML document. It may have better performance characteristics with large CSV files compared to CsvToXml. It also reduces the number of configuration options that are available. Element names are always generated from the first line; so a header line is always assumed; Note that if your header rows contains characters that would not be allowed in an standard XML element name then it will be replaced with an '_', so \"Order Date\" becomes \"Order_Date\". Additionally illegal XML characters are always stripped (illegal characters would cause an exception regardless in the XMLStreamWriter). For example, given an input document :  \nEvent Name,Order Date,Ticket Type,Date Attending,Total Paid\nGlastonbury,\"Sep 15, 2012\",Free entry,\"Jun 26, 2014 at 6:00 PM\",0\nReading Festival,\"Sep 16, 2012\",Free entry,\"Aug 30, 2014 at 6:00 PM\",0\n  Then the output (without a header row) would be  \n <csv-xml>\n   <record line=\"1\">\n     <Event_Name>Glastonbury</Event_Name>\n     <Order_Date>Sep 15, 2012</Order_Date>\n     <Ticket_Type>Free entry</Ticket_Type>\n     <Date_Attending>Jun 26, 2014 at 6:00 PM</Date_Attending>\n     <Total_Paid>0</Total_Paid>\n   </record>\n   <record line=\"2\">\n     <Event_Name>Reading Festival</Event_Name>\n     <Order_Date>Sep 16, 2012</Order_Date>\n     <Ticket_Type>Free entry</Ticket_Type>\n     <Date_Attending>Aug 30, 2014 at 6:00 PM</Date_Attending>\n     <Total_Paid>0</Total_Paid>\n   </record>",
      "descriptionHtml" : "CSV to XML using \n<code>net.sf.supercsv:super-csv</code> via \n<code>XMLStreamWriter</code> \n<p> This transformation uses <code>net.sf.supercsv:super-csv</code> as the parsing engine for a CSV file and uses <code>XMLStreamWriter</code> via <code>com.adaptris:interlok-stax</code> to write each row as part of an XML document. It may have better performance characteristics with large CSV files compared to <a href=\"CsvToXml.html\" title=\"class in com.adaptris.csv.transform\" target=\"_new\"><code>CsvToXml</code></a>. It also reduces the number of configuration options that are available. </p>\n<p> Element names are always generated from the first line; so a header line is always assumed; Note that if your header rows contains characters that would not be allowed in an standard XML element name then it will be replaced with an '_', so \"Order Date\" becomes \"Order_Date\". Additionally illegal XML characters are always stripped (illegal characters would cause an exception regardless in the <code>XMLStreamWriter</code>). </p> \n<p> For example, given an input document : </p>\n<pre> <code>\nEvent Name,Order Date,Ticket Type,Date Attending,Total Paid\nGlastonbury,\"Sep 15, 2012\",Free entry,\"Jun 26, 2014 at 6:00 PM\",0\nReading Festival,\"Sep 16, 2012\",Free entry,\"Aug 30, 2014 at 6:00 PM\",0\n </code> </pre> Then the output (without a header row) would be \n<pre> <code>\n &lt;csv-xml&gt;\n   &lt;record line=\"1\"&gt;\n     &lt;Event_Name&gt;Glastonbury&lt;/Event_Name&gt;\n     &lt;Order_Date&gt;Sep 15, 2012&lt;/Order_Date&gt;\n     &lt;Ticket_Type&gt;Free entry&lt;/Ticket_Type&gt;\n     &lt;Date_Attending&gt;Jun 26, 2014 at 6:00 PM&lt;/Date_Attending&gt;\n     &lt;Total_Paid&gt;0&lt;/Total_Paid&gt;\n   &lt;/record&gt;\n   &lt;record line=\"2\"&gt;\n     &lt;Event_Name&gt;Reading Festival&lt;/Event_Name&gt;\n     &lt;Order_Date&gt;Sep 16, 2012&lt;/Order_Date&gt;\n     &lt;Ticket_Type&gt;Free entry&lt;/Ticket_Type&gt;\n     &lt;Date_Attending&gt;Aug 30, 2014 at 6:00 PM&lt;/Date_Attending&gt;\n     &lt;Total_Paid&gt;0&lt;/Total_Paid&gt;\n   &lt;/record&gt;\n </code> </pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CsvXmlTransformImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/transform/CsvXmlTransformImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-okhttp/4.0.0B1-RELEASE/com/adaptris/okhttp/headers/response/CompositeResponseHeaders.html",
      "fullClassName" : "com.adaptris.okhttp.headers.response.CompositeResponseHeaders",
      "className" : "CompositeResponseHeaders",
      "packageName" : "com.adaptris.okhttp.headers.response",
      "componentType" : "object",
      "alias" : "okhttp-composite-response-header-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-okhttp.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeResponseHeaders\nextends java.lang.Object\nimplements ResponseHeaderHandler<okhttp3.Response>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeResponseHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">ResponseHeaderHandler</a>&lt;okhttp3.Response&gt;",
      "description" : "Implementation of ResponseHeaderHandler that uses nested handlers to extract headers. This implementation is primarily so that you can mix and matchhow you capture response headers; If you wanted to use both ResponseHeadersAsMetadata and ResponseHeadersAsObjectMetadata then you can.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>ResponseHeaderHandler</code></a> that uses nested handlers to extract headers. This implementation is primarily so that you can mix and matchhow you capture response headers; If you wanted to use both \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/ResponseHeadersAsMetadata.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client.net\" class=\"externalLink\" target=\"_new\"><code>ResponseHeadersAsMetadata</code></a> and \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/ResponseHeadersAsObjectMetadata.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client.net\" class=\"externalLink\" target=\"_new\"><code>ResponseHeadersAsObjectMetadata</code></a> then you can.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/OkHttp",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-okhttp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/AddTimestampMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.AddTimestampMetadataService",
      "className" : "AddTimestampMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "add-timestamp-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Add a timestamp as metadata",
        "tag" : "service,metadata,timestamp,datetime"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Add a timestamp as metadata\",\n                  tag=\"service,metadata,timestamp,datetime\")\npublic class AddTimestampMetadataService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Add a timestamp as metadata\",\n                  tag=\"service,metadata,timestamp,datetime\")\npublic class <span class=\"typeNameLabel\">AddTimestampMetadataService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Adds timestamp information as metadata. In addition to supporting all the patterns allowed by SimpleDateFormat, this service also supports the special values SECONDS_SINCE_EPOCH and MILLISECONDS_SINCE_EPOCH which describe the number of seconds and milliseconds since midnight Jan 1, 1970 UTC respectively. If specified as the format, then the long value associated will be emitted.",
      "descriptionHtml" : "Adds timestamp information as metadata. \n<p> In addition to supporting all the patterns allowed by <code>SimpleDateFormat</code>, this service also supports the special values <code>SECONDS_SINCE_EPOCH</code> and <code>MILLISECONDS_SINCE_EPOCH</code> which describe the number of seconds and milliseconds since midnight Jan 1, 1970 UTC respectively. If specified as the format, then the long value associated will be emitted. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/LastModifiedDescending.html",
      "fullClassName" : "com.adaptris.core.fs.enhanced.LastModifiedDescending",
      "className" : "LastModifiedDescending",
      "packageName" : "com.adaptris.core.fs.enhanced",
      "componentType" : "object",
      "alias" : "fs-sort-last-modified-descending",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LastModifiedDescending\nextends SafeFileSorter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LastModifiedDescending</span>\nextends <a href=\"SafeFileSorter.html\" title=\"class in com.adaptris.core.fs.enhanced\" target=\"_new\">SafeFileSorter</a>",
      "description" : "Sort the list of files by their last modified attribute in reverse order.",
      "descriptionHtml" : "Sort the list of files by their last modified attribute in reverse order.",
      "inheritance" : [
        {
          "name" : "SafeFileSorter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/SafeFileSorter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.StatementParameter",
      "className" : "StatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StatementParameter\nextends StatementParameterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StatementParameter</span>\nextends <a href=\"StatementParameterImpl.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">StatementParameterImpl</a>",
      "description" : "Encapsulates a parameter that is used by the JdbcDataCaptureService.",
      "descriptionHtml" : "Encapsulates a parameter that is used by the JdbcDataCaptureService.",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/LargeFsProducer.html",
      "fullClassName" : "com.adaptris.core.lms.LargeFsProducer",
      "className" : "LargeFsProducer",
      "packageName" : "com.adaptris.core.lms",
      "componentType" : "producer",
      "alias" : "large-fs-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "producedname",
          "fsProduceDir"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Write the current message to the filesystem with large message support",
        "tag" : "producer,fs,filesystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Write the current message to the filesystem with large message support\",\n                  tag=\"producer,fs,filesystem\",\n                  recommended=NullConnection.class,\n                  metadata={\"producedname\",\"fsProduceDir\"})\npublic class LargeFsProducer\nextends FsProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Write the current message to the filesystem with large message support\",\n                  tag=\"producer,fs,filesystem\",\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>,\n                  metadata={\"producedname\",\"fsProduceDir\"})\npublic class <span class=\"typeNameLabel\">LargeFsProducer</span>\nextends <a href=\"../fs/FsProducer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\">FsProducer</a>",
      "description" : "File system implementation of AdaptrisMessageProducer with large message support. * The configured Destination may return a string in one of two formats If a file based url is used. e.g. file:///c:/path/to/my/directory or file:////path/to/my/directory then the patch is considered to be fully qualified If just a path is returned, then it is considered to be relative to the current working directory. e.g. if /opt/fred is used, and the adapter is installed to /opt/adapter, then the fully qualified name is /opt/adapter/opt/fred. On windows based platforms, you should always use a file based url. Additionally the behaviour of this consumer is subtly different from the standard FsProducer : Encoding is only supported if you use a FileBackedMimeEncoder. The default AdaptrisMessageFactory implementation is FileBackedMessageFactory If, at runtime, the AdaptrisMessage implementation is not FileBackedMessage, then behaviour is delegated back to the parent FsProducer",
      "descriptionHtml" : "<p> File system implementation of <code>AdaptrisMessageProducer</code> with large message support. </p> * \n<p> The configured <code>Destination</code> may return a string in one of two formats </p> \n<ul> \n <li>If a <code>file</code> based url is used. e.g. file:///c:/path/to/my/directory or file:////path/to/my/directory then the patch is considered to be fully qualified</li> \n <li>If just a path is returned, then it is considered to be relative to the current working directory. e.g. if /opt/fred is used, and the adapter is installed to /opt/adapter, then the fully qualified name is /opt/adapter/opt/fred.</li> \n</ul> \n<p> On windows based platforms, you should always use a file based url. </p> \n<p> Additionally the behaviour of this consumer is subtly different from the standard <a href=\"../fs/FsProducer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\"><code>FsProducer</code></a> : </p> \n<ul> \n <li>Encoding is only supported if you use a <a href=\"FileBackedMimeEncoder.html\" title=\"class in com.adaptris.core.lms\" target=\"_new\"><code>FileBackedMimeEncoder</code></a>.</li> \n <li>The default AdaptrisMessageFactory implementation is <a href=\"FileBackedMessageFactory.html\" title=\"class in com.adaptris.core.lms\" target=\"_new\"><code>FileBackedMessageFactory</code></a></li> \n <li>If, at runtime, the AdaptrisMessage implementation is not <a href=\"FileBackedMessage.html\" title=\"interface in com.adaptris.core.lms\" target=\"_new\"><code>FileBackedMessage</code></a>, then behaviour is delegated back to the parent <a href=\"../fs/FsProducer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\"><code>FsProducer</code></a></li> \n</ul>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html"
        },
        {
          "name" : "FsProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/idoc/LoggingConnectionErrorHandler.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.idoc.LoggingConnectionErrorHandler",
      "className" : "LoggingConnectionErrorHandler",
      "packageName" : "com.adaptris.core.sap.jco3.idoc",
      "componentType" : "object",
      "alias" : "sapjco3-connection-error-handler-logging",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class LoggingConnectionErrorHandler\nextends JcoConnectionErrorHandler",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LoggingConnectionErrorHandler</span>\nextends <a href=\"../JcoConnectionErrorHandler.html\" title=\"class in com.adaptris.core.sap.jco3\" target=\"_new\">JcoConnectionErrorHandler</a>",
      "description" : "Implementation of ConnectionErrorHandler which simply logs the error received. It is only meaningful to configure this ConnectionErrorHandler against a IdocConsumeConnection",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ConnectionErrorHandler</code></a> which simply logs the error received. \n<p> It is only meaningful to configure this <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ConnectionErrorHandler</code></a> against a <a href=\"IdocConsumeConnection.html\" title=\"class in com.adaptris.core.sap.jco3.idoc\" target=\"_new\"><code>IdocConsumeConnection</code></a> </p>",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true"
        },
        {
          "name" : "JcoConnectionErrorHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/JcoConnectionErrorHandler.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ConvertObjectMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.ConvertObjectMetadataService",
      "className" : "ConvertObjectMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "convert-object-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Convert object metadata into normal metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Convert object metadata into normal metadata\",\n                  tag=\"service,metadata\")\npublic class ConvertObjectMetadataService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Convert object metadata into normal metadata\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">ConvertObjectMetadataService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Implementation of Service that copies Object metadata to standard metadata, overwriting standard metadata. Object Metadata values are not easily translated to Strings; Object.toString() is used to perform the string conversion; this may produce metadata values that have no semantic meaning. The key from object metadata is preserved as the metadata key for the new element. Internally, the adapter uses String keys for object metadata; however this is not enforced for custom services, so behaviour may vary depending on what custom components are in use as the key names may not be consistent or predictable.",
      "descriptionHtml" : "<p> Implementation of <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> that copies Object metadata to standard metadata, overwriting standard metadata. </p> \n<p> Object Metadata values are not easily translated to Strings; <code>Object.toString()</code> is used to perform the string conversion; this may produce metadata values that have no semantic meaning. The key from object metadata is preserved as the metadata key for the new element. Internally, the adapter uses String keys for object metadata; however this is not enforced for custom services, so behaviour may vary depending on what custom components are in use as the key names may not be consistent or predictable. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/StructureToXmlMetadata.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.StructureToXmlMetadata",
      "className" : "StructureToXmlMetadata",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-structure-to-xml-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class StructureToXmlMetadata\nextends MetadataParameter\nimplements ExportParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StructureToXmlMetadata</span>\nextends <a href=\"MetadataParameter.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">MetadataParameter</a>\nimplements <a href=\"../ExportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ExportParameter</a>",
      "description" : "Exports a structure into metadata converting it into XML.",
      "descriptionHtml" : "Exports a structure into metadata converting it into XML.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        },
        {
          "name" : "MetadataParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/MetadataParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/PayloadStreamInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.PayloadStreamInputParameter",
      "className" : "PayloadStreamInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "stream-payload-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PayloadStreamInputParameter\nextends java.lang.Object\nimplements DataInputParameter<java.io.InputStream>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PayloadStreamInputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.io.InputStream&gt;",
      "description" : "This DataInputParameter is used when you want to source data from the AdaptrisMessage payload.",
      "descriptionHtml" : "This \n<code>DataInputParameter</code> is used when you want to source data from the \n<a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> payload.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/LoggingService.html",
      "fullClassName" : "com.adaptris.core.services.LoggingService",
      "className" : "LoggingService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "logging-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Log a message to the log file; useful for debugging",
        "tag" : "service,logging,debug"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Log a message to the log file; useful for debugging\",\n                  tag=\"service,logging,debug\")\npublic class LoggingService\nextends LoggingServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Log a message to the log file; useful for debugging\",\n                  tag=\"service,logging,debug\")\npublic class <span class=\"typeNameLabel\">LoggingService</span>\nextends <a href=\"LoggingServiceImpl.html\" title=\"class in com.adaptris.core.services\" target=\"_new\">LoggingServiceImpl</a>",
      "description" : "Log some arbitrary information.",
      "descriptionHtml" : "Log some arbitrary information.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "LoggingServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/LoggingServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/StatelessServiceWrapper.html",
      "fullClassName" : "com.adaptris.core.services.StatelessServiceWrapper",
      "className" : "StatelessServiceWrapper",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "stateless-service-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Wraps another service, with a strategy for restarting the service periodically",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Wraps another service, with a strategy for restarting the service periodically\",\n                  tag=\"service\")\npublic class StatelessServiceWrapper\nextends ServiceImp\nimplements EventHandlerAware, ServiceWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Wraps another service, with a strategy for restarting the service periodically\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">StatelessServiceWrapper</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"../EventHandlerAware.html\" title=\"interface in com.adaptris.core\" target=\"_new\">EventHandlerAware</a>, <a href=\"../ServiceWrapper.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ServiceWrapper</a>",
      "description" : "Stateless service wrapper, wraps any configured service and allows you to set a strategy on when to restart the service before allowing it to execute. Consider using this wrapper on a service where you will periodically want to stop and re-start a service. Check RestartStrategy for the available restarting strategies. Note that some nested configuration will be ignored, particularly ServiceImp.setContinueOnFail(Boolean) in the nested service. If you want that behaviour, then you should explicitly configure it in this service.",
      "descriptionHtml" : "<p> Stateless service wrapper, wraps any configured service and allows you to set a strategy on when to restart the service before allowing it to execute. </p> \n<p> Consider using this wrapper on a service where you will periodically want to stop and re-start a service. Check <a href=\"RestartStrategy.html\" title=\"interface in com.adaptris.core.services\" target=\"_new\"><code>RestartStrategy</code></a> for the available restarting strategies. Note that some nested configuration will be ignored, particularly <a href=\"../ServiceImp.html#setContinueOnFail(java.lang.Boolean)\" target=\"_new\"><code>ServiceImp.setContinueOnFail(Boolean)</code></a> in the nested service. If you want that behaviour, then you should explicitly configure it in this service. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/MultiItemMetadataXpathQuery.html",
      "fullClassName" : "com.adaptris.core.services.metadata.xpath.MultiItemMetadataXpathQuery",
      "className" : "MultiItemMetadataXpathQuery",
      "packageName" : "com.adaptris.core.services.metadata.xpath",
      "componentType" : "object",
      "alias" : "multi-item-metadata-xpath-query",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MultiItemMetadataXpathQuery\nextends MetadataXpathQueryImpl\nimplements XpathQuery",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultiItemMetadataXpathQuery</span>\nextends <a href=\"MetadataXpathQueryImpl.html\" title=\"class in com.adaptris.core.services.metadata.xpath\" target=\"_new\">MetadataXpathQueryImpl</a>\nimplements <a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a>",
      "description" : "XpathQuery implementation that retuns a multiple text items from an xpath derived from metadata.",
      "descriptionHtml" : "<a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a> implementation that retuns a multiple text items from an xpath derived from metadata.",
      "inheritance" : [
        {
          "name" : "XpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/XpathQueryImpl.html"
        },
        {
          "name" : "MetadataXpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/MetadataXpathQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneProducer.html",
      "fullClassName" : "com.adaptris.core.StandaloneProducer",
      "className" : "StandaloneProducer",
      "packageName" : "com.adaptris.core",
      "componentType" : "service",
      "alias" : "standalone-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Produce a message where as part of a service chain",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Produce a message where as part of a service chain\",\n                  tag=\"service\")\npublic class StandaloneProducer\nextends ServiceImp\nimplements AdaptrisMessageSender, ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Produce a message where as part of a service chain\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">StandaloneProducer</span>\nextends <a href=\"ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"AdaptrisMessageSender.html\" title=\"interface in com.adaptris.core\" target=\"_new\">AdaptrisMessageSender</a>, <a href=\"ConnectedService.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ConnectedService</a>",
      "description" : "Wrapper for a AdaptrisConnection and a AdaptrisMessageProducer for convenience. Also implements Service for use in ServiceCollections.",
      "descriptionHtml" : "<p> Wrapper for a <code>AdaptrisConnection</code> and a <code>AdaptrisMessageProducer</code> for convenience. Also implements <code>Service</code> for use in <code>ServiceCollection</code>s. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/StxTransformerFactory.html",
      "fullClassName" : "com.adaptris.util.text.xml.StxTransformerFactory",
      "className" : "StxTransformerFactory",
      "packageName" : "com.adaptris.util.text.xml",
      "componentType" : "object",
      "alias" : "stx-transformer-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StxTransformerFactory\nextends XmlTransformerFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StxTransformerFactory</span>\nextends <a href=\"XmlTransformerFactoryImpl.html\" title=\"class in com.adaptris.util.text.xml\" target=\"_new\">XmlTransformerFactoryImpl</a>",
      "description" : "The StxTransformerFactory is responsible for creating the Transformer. The Transformer is used to actually perform a document transformation. This particular implementation will create a Transformer specifically for STX type transforms.",
      "descriptionHtml" : "<p> The StxTransformerFactory is responsible for creating the <code>Transformer</code>. </p> \n<p> The <code>Transformer</code> is used to actually perform a document transformation. This particular implementation will create a Transformer specifically for STX type transforms. </p>",
      "inheritance" : [
        {
          "name" : "XmlTransformerFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/XmlTransformerFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/EncryptionOnlyService.html",
      "fullClassName" : "com.adaptris.core.security.EncryptionOnlyService",
      "className" : "EncryptionOnlyService",
      "packageName" : "com.adaptris.core.security",
      "componentType" : "service",
      "alias" : "encrypt-only-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Encrypt the contents of the message",
        "tag" : "service,security"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Encrypt the contents of the message\",\n                  tag=\"service,security\",\n                  branchSelector=true)\npublic class EncryptionOnlyService\nextends EncryptionService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Encrypt the contents of the message\",\n                  tag=\"service,security\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">EncryptionOnlyService</span>\nextends <a href=\"EncryptionService.html\" title=\"class in com.adaptris.core.security\" target=\"_new\">EncryptionService</a>",
      "description" : "Perform encryption only. This may be used as part of a BranchingServiceCollection if both CoreSecurityService.setFailId(String) and CoreSecurityService.setSuccessId(String) are configured.",
      "descriptionHtml" : "Perform encryption only. \n<p> This may be used as part of a <a href=\"../BranchingServiceCollection.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>BranchingServiceCollection</code></a> if both <a href=\"CoreSecurityService.html#setFailId(java.lang.String)\" target=\"_new\"><code>CoreSecurityService.setFailId(String)</code></a> and <a href=\"CoreSecurityService.html#setSuccessId(java.lang.String)\" target=\"_new\"><code>CoreSecurityService.setSuccessId(String)</code></a> are configured. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CoreSecurityService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/CoreSecurityService.html"
        },
        {
          "name" : "EncryptionService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/EncryptionService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/GuidGeneratorWithTime.html",
      "fullClassName" : "com.adaptris.util.GuidGeneratorWithTime",
      "className" : "GuidGeneratorWithTime",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "guid-generator-with-time",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "unique id generator that is globally unique, but contains a time component",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"unique id generator that is globally unique, but contains a time component\",\n                  since=\"3.9.1\")\npublic class GuidGeneratorWithTime\nextends GuidGenerator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"unique id generator that is globally unique, but contains a time component\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">GuidGeneratorWithTime</span>\nextends <a href=\"GuidGenerator.html\" title=\"class in com.adaptris.util\" target=\"_new\">GuidGenerator</a>",
      "description" : "Generates a unique id that is still globally unique similar to GuidGenerator but contains a date/time component. You can use this IdGenerator if you need to record the date that a GUID was generated. The date that the GUID was generated can be found using the computeTime(String) method.",
      "descriptionHtml" : "Generates a unique id that is still globally unique similar to \n<a href=\"GuidGenerator.html\" title=\"class in com.adaptris.util\" target=\"_new\"><code>GuidGenerator</code></a> but contains a date/time component. \n<p> You can use this <a href=\"IdGenerator.html\" title=\"interface in com.adaptris.util\" target=\"_new\"><code>IdGenerator</code></a> if you need to record the date that a GUID was generated. The date that the GUID was generated can be found using the <a href=\"#computeTime(java.lang.String)\" target=\"_new\"><code>computeTime(String)</code></a> method. </p>",
      "inheritance" : [
        {
          "name" : "GuidGenerator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/GuidGenerator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MetadataCorrelationIdSource.html",
      "fullClassName" : "com.adaptris.core.jms.MetadataCorrelationIdSource",
      "className" : "MetadataCorrelationIdSource",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "metadata-correlation-id-source",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataCorrelationIdSource\nextends java.lang.Object\nimplements CorrelationIdSource",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataCorrelationIdSource</span>\nextends java.lang.Object\nimplements <a href=\"CorrelationIdSource.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">CorrelationIdSource</a>",
      "description" : "Implementation of CorrelationIdSource which uses the value stored against a configureable metadata key as the JMSCorrelationId .",
      "descriptionHtml" : "<p> Implementation of <code>CorrelationIdSource</code> which uses the value stored against a configureable metadata key as the <code>JMSCorrelationId </code>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsPollingConsumer.html",
      "fullClassName" : "com.adaptris.xa.jms.XAJmsPollingConsumer",
      "className" : "XAJmsPollingConsumer",
      "packageName" : "com.adaptris.xa.jms",
      "componentType" : "consumer",
      "alias" : "xa-jms-polling-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-atomikos.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.xa.jms.XAJmsConnection"
        ],
        "since" : "",
        "summary" : "Listen for JMS messages on the specified queue or topic",
        "tag" : "consumer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue or topic\",\n                  tag=\"consumer,jms\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class XAJmsPollingConsumer\nextends XAJmsPollingConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue or topic\",\n                  tag=\"consumer,jms\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class <span class=\"typeNameLabel\">XAJmsPollingConsumer</span>\nextends <a href=\"XAJmsPollingConsumerImpl.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\">XAJmsPollingConsumerImpl</a>",
      "description" : "JMS Consumer implementation that can target queues or topics via an RFC6167 style destination. This differs from the standard PtpConsumer and PasConsumer in that it supports a destination that is specified in RFC6167 style. For instance jms:queue:myQueueName will consume from a queue called myQueueName and jms:topic:myTopicName from a topic called myTopicName While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. There is also support for subscriptionId which indicates the subscriptionId that should be used when attaching a subscriber to a topic; jms:topic:MyTopicName?subscriptionId=myId would return a JmsDestination.subscriptionId() of myId. If a subscription ID is not specified, then a durable subscriber is never created; specifying a subscription ID automatically means a durable subscriber. For instance you could have the following destinations: jms:queue:MyQueueName jms:topic:MyTopicName jms:topic:MyTopicName?subscriptionId=mySubscriptionId",
      "descriptionHtml" : "JMS Consumer implementation that can target queues or topics via an RFC6167 style destination. \n<p> This differs from the standard <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PtpConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>PtpConsumer</code></a> and <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PasConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>PasConsumer</code></a> in that it supports a destination that is specified in RFC6167 style. For instance <code>jms:queue:myQueueName</code> will consume from a queue called <code>myQueueName</code> and <code>jms:topic:myTopicName</code> from a topic called <code>myTopicName</code> </p> \n<p> While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. There is also support for <code>subscriptionId</code> which indicates the subscriptionId that should be used when attaching a subscriber to a topic; <code>jms:topic:MyTopicName?subscriptionId=myId</code> would return a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsDestination.html?is-external=true#subscriptionId()\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsDestination.subscriptionId()</code></a> of <code>myId</code>. If a subscription ID is not specified, then a durable subscriber is never created; specifying a subscription ID automatically means a durable subscriber. </p> For instance you could have the following destinations: \n<ul> \n <li>jms:queue:MyQueueName</li> \n <li>jms:topic:MyTopicName</li> \n <li>jms:topic:MyTopicName?subscriptionId=mySubscriptionId</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        },
        {
          "name" : "XAJmsPollingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsPollingConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Atomikos",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-atomikos",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/SimpleRecipientList.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.SimpleRecipientList",
      "className" : "SimpleRecipientList",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-simple-recipient-list",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleRecipientList\nextends java.lang.Object\nimplements RecipientList",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleRecipientList</span>\nextends java.lang.Object\nimplements <a href=\"RecipientList.html\" title=\"interface in com.adaptris.core.jms.oracle\" target=\"_new\">RecipientList</a>",
      "description" : "Simple list representation of a list of AQjmsAgents This is primarily designed to be a wrapper around many Recipient instances.",
      "descriptionHtml" : "Simple list representation of a list of AQjmsAgents \n<p> This is primarily designed to be a wrapper around many <a href=\"Recipient.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\"><code>Recipient</code></a> instances. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-nats/4.0.0B1-RELEASE/com/adaptris/interlok/nats/NatsProducer.html",
      "fullClassName" : "com.adaptris.interlok.nats.NatsProducer",
      "className" : "NatsProducer",
      "packageName" : "com.adaptris.interlok.nats",
      "componentType" : "producer",
      "alias" : "nats-standard-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-nats.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.interlok.nats.NatsConnection"
        ],
        "since" : "3.9.3",
        "summary" : "Send a message to a NATS server",
        "tag" : "nats.io, nats"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send a message to a NATS server\",\n                  tag=\"nats.io, nats\",\n                  recommended=NatsConnection.class,\n                  since=\"3.9.3\")\npublic class NatsProducer\nextends RequestReplyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send a message to a NATS server\",\n                  tag=\"nats.io, nats\",\n                  recommended=<a href=\"NatsConnection.html\" title=\"class in com.adaptris.interlok.nats\" target=\"_new\">NatsConnection.class</a>,\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">NatsProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">RequestReplyProducerImp</a>",
      "description" : "Produce the current message to a NATS server with the configured subject. This effectively uses the Connection#publish(String, byte[]) or Connection#request(String, byte[], java.time.Duration) to send the message to NATS. The subject will be derived form the configured destination. Since the payload for NATS.io is always an opaque set of bytes; if you wish to include AdaptrisMessage.getMetadata() in the message, then you will have to configure a AdaptrisMessageEncoder instance; otherwise all metadata is lost.",
      "descriptionHtml" : "Produce the current message to a NATS server with the configured subject. \n<p> This effectively uses the <code>Connection#publish(String, byte[])</code> or <code>Connection#request(String, byte[], java.time.Duration)</code> to send the message to NATS. The subject will be derived form the configured destination. </p> Since the payload for NATS.io is always an opaque set of bytes; if you wish to include \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true#getMetadata()\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage.getMetadata()</code></a> in the message, then you will have to configure a \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageEncoder.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageEncoder</code></a> instance; otherwise all metadata is lost. \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/NATS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-nats",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MappedKeyMetadataFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.MappedKeyMetadataFilter",
      "className" : "MappedKeyMetadataFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "mapped-key-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MappedKeyMetadataFilter\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MappedKeyMetadataFilter</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "MetadataFilter implementation that modifies keys matching a specific regular expression to another key name. Note that this implementation will include all items of metadata. Any keys that match the specified prefix will be replaced using Matcher.replaceAll(String) by getReplacement(). This specific filter is only useful when used as part of a producer that supports filtering which allows you to map header key that are prefixed with a specific text into another header key. This could be useful if you are doing multiple HTTP calls within the same workflow, and you need to keep track of all the individual headers that are returned by each request. So if you have preserved some HTTP headers prefixed with InboundRequest_ then you might want to send specifically those headers back to the requesting client without the prefix. Configure prefix=\"^InboundRequest_(.*)$\" and replacement=\"$1\" which means that InboundRequest_User-Agent would become User-Agent at the point you trigger the producer, but can be treated as InboundRequest_User-Agent throughout the rest of the workflow.",
      "descriptionHtml" : "<a href=\"MetadataFilter.html\" title=\"interface in com.adaptris.core.metadata\" target=\"_new\"><code>MetadataFilter</code></a> implementation that modifies keys matching a specific regular expression to another key name. \n<p> Note that this implementation will include all items of metadata. Any keys that match the specified prefix will be replaced using <code>Matcher.replaceAll(String)</code> by <a href=\"#getReplacement()\" target=\"_new\"><code>getReplacement()</code></a>. </p> \n<p> This specific filter is only useful when used as part of a producer that supports filtering which allows you to map header key that are prefixed with a specific text into another header key. This could be useful if you are doing multiple HTTP calls within the same workflow, and you need to keep track of all the individual headers that are returned by each request. So if you have preserved some HTTP headers prefixed with <code>InboundRequest_</code> then you might want to send specifically those headers back to the requesting client without the prefix. Configure <code>prefix=\"^InboundRequest_(.*)$\"</code> and <code>replacement=\"$1\"</code> which means that InboundRequest_User-Agent would become <code>User-Agent</code> at the point you trigger the producer, but can be treated as <code>InboundRequest_User-Agent</code> throughout the rest of the workflow. </p>",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceFromDatabase.html",
      "fullClassName" : "com.adaptris.core.services.dynamic.ServiceFromDatabase",
      "className" : "ServiceFromDatabase",
      "packageName" : "com.adaptris.core.services.dynamic",
      "componentType" : "object",
      "alias" : "dynamic-service-from-database",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jdbc.DatabaseConnection"
        ],
        "since" : "3.8.4",
        "summary" : "Extract the service to execute from a database",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract the service to execute from a database\",\n                  recommended=DatabaseConnection.class,\n                  since=\"3.8.4\")\npublic class ServiceFromDatabase\nextends ExtractorWithConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract the service to execute from a database\",\n                  recommended=<a href=\"../../jdbc/DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">DatabaseConnection.class</a>,\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">ServiceFromDatabase</span>\nextends <a href=\"ExtractorWithConnection.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\">ExtractorWithConnection</a>",
      "description" : "Extract the service to execute from a database This executes the configured query, takes the first column of the first ResultSet and uses that as the source for the dynamic service. Since it supports the expression syntax; this is perfectly acceptable; It is up to you to protect against SQL injection attacks.  SELECT dynamicService FROM services\n        WHERE src='%message{source}'\n              AND dest='%message{destination}'\n              AND msgType='%message{messageType}'\n The alternative to this would be to use JdbcDataQueryService with a FirstRowMetadataTranslator and subsequently a ServiceFromDataInputParameter (from metadata). That might be more performant as you would benefit from prepared statement caching and mitigate against SQL injection style attacks.",
      "descriptionHtml" : "Extract the service to execute from a database \n<p> This executes the configured query, takes the first column of the first ResultSet and uses that as the source for the dynamic service. </p> \n<p> Since it supports the expression syntax; this is perfectly acceptable; It is up to you to protect against SQL injection attacks. </p>\n<pre> <code>SELECT dynamicService FROM services\n        WHERE src='%message{source}'\n              AND dest='%message{destination}'\n              AND msgType='%message{messageType}'</code>\n </pre> \n<p></p> \n<p> The alternative to this would be to use <a href=\"../jdbc/JdbcDataQueryService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataQueryService</code></a> with a <a href=\"../jdbc/FirstRowMetadataTranslator.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>FirstRowMetadataTranslator</code></a> and subsequently a <a href=\"ServiceFromDataInputParameter.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\"><code>ServiceFromDataInputParameter</code></a> (from metadata). That might be more performant as you would benefit from prepared statement caching and mitigate against SQL injection style attacks. </p>",
      "inheritance" : [
        {
          "name" : "ServiceExtractorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceExtractorImpl.html"
        },
        {
          "name" : "ExtractorWithConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ExtractorWithConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ConfiguredException.html",
      "fullClassName" : "com.adaptris.core.services.exception.ConfiguredException",
      "className" : "ConfiguredException",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "configured-exception",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredException\nextends java.lang.Object\nimplements ExceptionGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredException</span>\nextends java.lang.Object\nimplements <a href=\"ExceptionGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\">ExceptionGenerator</a>",
      "description" : "ExceptionGenerator implementation that generates the exception from static configuration. Use this class with ThrowExceptionService to throw an exception as part of a workflow. The configured message forms the exception message (i.e. Throwable.getMessage()).",
      "descriptionHtml" : "<a href=\"ExceptionGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionGenerator</code></a> implementation that generates the exception from static configuration. \n<p> Use this class with <a href=\"ThrowExceptionService.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\"><code>ThrowExceptionService</code></a> to throw an exception as part of a workflow. The configured message forms the exception message (i.e. <code>Throwable.getMessage()</code>). </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xml-security/4.0.0B1-RELEASE/com/adaptris/xml/security/RawXmlEncryptionFactory.html",
      "fullClassName" : "com.adaptris.xml.security.RawXmlEncryptionFactory",
      "className" : "RawXmlEncryptionFactory",
      "packageName" : "com.adaptris.xml.security",
      "componentType" : "object",
      "alias" : "raw-xml-encryption-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-xml-security.jar",
      "profile" : { },
      "annotationDetails" : "public class RawXmlEncryptionFactory\nextends XmlEncFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RawXmlEncryptionFactory</span>\nextends <a href=\"XmlEncFactory.html\" title=\"class in com.adaptris.xml.security\" target=\"_new\">XmlEncFactory</a>",
      "description" : "Implementation of SecurityServiceFactory for handling XML Encryption. If using this factory, then the entire document is encrypted and wrapped in a single EncryptedData element with the associated MimeType This is pure Encryption implementation, any attempt to do signing will cause a UnsupportedOperationException to be thrown. The underlying encryption facility only allows for the following types of (the key length is implicit in the algorithm type and does not need to be specified) : TRIPLEDES_CBC AES256_CBC AES192_CBC AES192_CBC",
      "descriptionHtml" : "Implementation of SecurityServiceFactory for handling XML Encryption. \n<p> If using this factory, then the entire document is encrypted and wrapped in a single <code>EncryptedData</code> element with the associated MimeType </p> This is pure Encryption implementation, any attempt to do signing will cause a UnsupportedOperationException to be thrown. \n<p></p> \n<p> The underlying encryption facility only allows for the following types of (the key length is implicit in the algorithm type and does not need to be specified) : </p> \n<ul> \n <li>TRIPLEDES_CBC</li> \n <li>AES256_CBC</li> \n <li>AES192_CBC</li> \n <li>AES192_CBC</li> \n</ul>",
      "inheritance" : [
        {
          "name" : "SecurityServiceFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/SecurityServiceFactory.html?is-external=true"
        },
        {
          "name" : "XmlEncFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xml-security/4.0.0B1-RELEASE/com/adaptris/xml/security/XmlEncFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Security/XML",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xml-security",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockWorkflowInterceptor",
      "className" : "MockWorkflowInterceptor",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/DateFormatBuilderWithOptionalFractionAndOffset.html",
      "fullClassName" : "com.adaptris.core.services.metadata.DateFormatBuilderWithOptionalFractionAndOffset",
      "className" : "DateFormatBuilderWithOptionalFractionAndOffset",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "object",
      "alias" : "date-format-builder-with-optional-fraction-and-offset",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DateFormatBuilderWithOptionalFractionAndOffset\nextends DateFormatBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DateFormatBuilderWithOptionalFractionAndOffset</span>\nextends <a href=\"DateFormatBuilder.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">DateFormatBuilder</a>",
      "description" : "Builds a DateFormat instance for use with ReformatDateService and AddTimestampMetadataService. Setting a format of: yyyy-MM-dd'T'HH:mm:ss would successfully parse (supports up to 6 decimals): 2018-08-01T00:00:00.000000Z 2018-08-01T00:00:00.000000 2018-08-01T00:00:00Z 2018-08-01T00:00:00",
      "descriptionHtml" : "Builds a DateFormat instance for use with \n<a href=\"ReformatDateService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ReformatDateService</code></a> and \n<a href=\"AddTimestampMetadataService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>AddTimestampMetadataService</code></a>. \n<p>Setting a format of: yyyy-MM-dd'T'HH:mm:ss would successfully parse (supports up to 6 decimals): </p>\n<ul> \n <li>2018-08-01T00:00:00.000000Z</li> \n <li>2018-08-01T00:00:00.000000</li> \n <li>2018-08-01T00:00:00Z</li> \n <li>2018-08-01T00:00:00</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "DateFormatBuilder",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/DateFormatBuilder.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/ViaSocks4Proxy.html",
      "fullClassName" : "com.adaptris.sftp.ViaSocks4Proxy",
      "className" : "ViaSocks4Proxy",
      "packageName" : "com.adaptris.sftp",
      "componentType" : "object",
      "alias" : "sftp-via-socks4-proxy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ViaSocks4Proxy\nextends ViaProxy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ViaSocks4Proxy</span>\nextends <a href=\"ViaProxy.html\" title=\"class in com.adaptris.sftp\" target=\"_new\">ViaProxy</a>",
      "description" : "Connect via a SOCKS4 proxy",
      "descriptionHtml" : "Connect via a SOCKS4 proxy",
      "inheritance" : [
        {
          "name" : "ViaProxy",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/ViaProxy.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/ViolationsAsMetadata.html",
      "fullClassName" : "com.adaptris.core.transform.schema.ViolationsAsMetadata",
      "className" : "ViolationsAsMetadata",
      "packageName" : "com.adaptris.core.transform.schema",
      "componentType" : "object",
      "alias" : "schema-violations-as-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.2",
        "summary" : "Render an XML representation of the schema violations as standard metadata",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Render an XML representation of the schema violations as standard metadata\",\n                  since=\"3.10.2\")\npublic class ViolationsAsMetadata\nextends ViolationHandlerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Render an XML representation of the schema violations as standard metadata\",\n                  since=\"3.10.2\")\npublic class <span class=\"typeNameLabel\">ViolationsAsMetadata</span>\nextends <a href=\"ViolationHandlerImpl.html\" title=\"class in com.adaptris.core.transform.schema\" target=\"_new\">ViolationHandlerImpl</a>",
      "description" : "Uses SchemaViolations and adds it as standard metadata. This renders any schema violations as XML and stores it as standard metadata against the specified key.",
      "descriptionHtml" : "Uses \n<a href=\"SchemaViolations.html\" title=\"class in com.adaptris.core.transform.schema\" target=\"_new\"><code>SchemaViolations</code></a> and adds it as standard metadata. \n<p> This renders any schema violations as XML and stores it as standard metadata against the specified key. </p>",
      "inheritance" : [
        {
          "name" : "ViolationHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/ViolationHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/ReportBuilder.html",
      "fullClassName" : "com.adaptris.core.http.jetty.retry.ReportBuilder",
      "className" : "ReportBuilder",
      "packageName" : "com.adaptris.core.http.jetty.retry",
      "componentType" : "object",
      "alias" : "jetty-retry-report-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Generate a report on the files stored in the retry store.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Generate a report on the files stored in the retry store.\",\n                  since=\"3.11.1\")\npublic class ReportBuilder\nextends java.lang.Object\nimplements ComponentLifecycle",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Generate a report on the files stored in the retry store.\",\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">ReportBuilder</span>\nextends java.lang.Object\nimplements <a href=\"../../../ComponentLifecycle.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycle</a>",
      "description" : "Supports reporting of what's in the retry store. This is tightly coupled with RetryFromJetty and probably can't be used elsewhere.",
      "descriptionHtml" : "Supports reporting of what's in the retry store. \n<p> This is tightly coupled with <a href=\"RetryFromJetty.html\" title=\"class in com.adaptris.core.http.jetty.retry\" target=\"_new\"><code>RetryFromJetty</code></a> and probably can't be used elsewhere. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/PasswordDecodeMetadataFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.PasswordDecodeMetadataFilter",
      "className" : "PasswordDecodeMetadataFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "password-decoder-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PasswordDecodeMetadataFilter\nextends PasswordMetadataFilter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PasswordDecodeMetadataFilter</span>\nextends <a href=\"PasswordMetadataFilter.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">PasswordMetadataFilter</a>",
      "description" : "Metadata Filter implementation that decodes all values that match the specified key. Note that keys that do not match will still be returned; just that keys that do match PasswordMetadataFilter.getPasswordPatterns() will have Password.decode(String) applied to the values. Please note that a new MetadataElement is created as a result of the encode/deocde process, so any changes may not be reflected in the original message.",
      "descriptionHtml" : "Metadata Filter implementation that decodes all values that match the specified key. \n<p> Note that keys that do not match will still be returned; just that keys that do match <a href=\"PasswordMetadataFilter.html#getPasswordPatterns()\" target=\"_new\"><code>PasswordMetadataFilter.getPasswordPatterns()</code></a> will have <a href=\"../../security/password/Password.html#decode(java.lang.String)\" target=\"_new\"><code>Password.decode(String)</code></a> applied to the values. Please note that a new <code>MetadataElement</code> is created as a result of the encode/deocde process, so any changes may not be reflected in the original message. </p>",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        },
        {
          "name" : "PasswordMetadataFilter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/PasswordMetadataFilter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/SftpAuthenticationWrapper.html",
      "fullClassName" : "com.adaptris.core.ftp.SftpAuthenticationWrapper",
      "className" : "SftpAuthenticationWrapper",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "object",
      "alias" : "sftp-authentication-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "SFTP Authentication Provider that wraps other providers.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"SFTP Authentication Provider that wraps other providers.\")\npublic class SftpAuthenticationWrapper\nextends java.lang.Object\nimplements SftpAuthenticationProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"SFTP Authentication Provider that wraps other providers.\")\npublic class <span class=\"typeNameLabel\">SftpAuthenticationWrapper</span>\nextends java.lang.Object\nimplements <a href=\"SftpAuthenticationProvider.html\" title=\"interface in com.adaptris.core.ftp\" target=\"_new\">SftpAuthenticationProvider</a>",
      "description" : "SftpAuthenticationProvider that wraps other SftpAuthenticationProvider instances.",
      "descriptionHtml" : "<a href=\"SftpAuthenticationProvider.html\" title=\"interface in com.adaptris.core.ftp\" target=\"_new\"><code>SftpAuthenticationProvider</code></a> that wraps other \n<a href=\"SftpAuthenticationProvider.html\" title=\"interface in com.adaptris.core.ftp\" target=\"_new\"><code>SftpAuthenticationProvider</code></a> instances.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/RelaxedFtpConsumer.html",
      "fullClassName" : "com.adaptris.core.ftp.RelaxedFtpConsumer",
      "className" : "RelaxedFtpConsumer",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "consumer",
      "alias" : "relaxed-ftp-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "originalname",
          "fsFileSize",
          "fsConsumeDir",
          "_interlokMessageConsumedFrom"
        ],
        "recommended" : [
          "com.adaptris.core.ftp.FileTransferConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from an FTP/SFTP server without renaming the file first",
        "tag" : "consumer,ftp,ftps,sftp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from an FTP/SFTP server without renaming the file first\",\n                  metadata={\"originalname\",\"fsFileSize\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\"},\n                  tag=\"consumer,ftp,ftps,sftp\",\n                  recommended=FileTransferConnection.class)\npublic class RelaxedFtpConsumer\nextends FtpConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from an FTP/SFTP server without renaming the file first\",\n                  metadata={\"originalname\",\"fsFileSize\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\"},\n                  tag=\"consumer,ftp,ftps,sftp\",\n                  recommended=<a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FileTransferConnection.class</a>)\npublic class <span class=\"typeNameLabel\">RelaxedFtpConsumer</span>\nextends <a href=\"FtpConsumerImpl.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FtpConsumerImpl</a>",
      "description" : "FTP implementation which does not have any guarantees as to the atomicity of operations. This differs from the standard FtpConsumer in that it does not attempt to rename the file before attempting to process the file. If you have multiple consumers reading the same directory with the same filter then it will be possible to process a message twice (or twice partially) or any combination thereof. It is not recommended that you use this FtpConsumer unless there are very specific reasons to; e.g. the remote FTP server does not support the RNFR and RNTO command. After consuming the file, it is deleted. The destination returned by the ConsumeDestination implementation should be in the form in the URL form dictated by the FileTransferConnection flavour including the directory from which you wish to consume from. Simply specifying the IP Address or DNS name of the remote ftp server may cause files to be consumed without specifying a subdirectory (which if you are not in an ftp chroot jail might be a very bad thing). Although multiple file-filters can be configured only filters that work with the filepath will work. Other filter implementations (such as those based on size /last modified) may not work.",
      "descriptionHtml" : "FTP implementation which does not have any guarantees as to the atomicity of operations. \n<p> This differs from the standard <a href=\"FtpConsumer.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\"><code>FtpConsumer</code></a> in that it does not attempt to rename the file before attempting to process the file. If you have multiple consumers reading the same directory with the same filter then it will be possible to process a message twice (or twice partially) or any combination thereof. <strong>It is not recommended that you use this FtpConsumer unless there are very specific reasons to; e.g. the remote FTP server does not support the RNFR and RNTO command.</strong> After consuming the file, it is deleted. </p> \n<p> The destination returned by the ConsumeDestination implementation should be in the form in the URL form dictated by the <a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\"><code>FileTransferConnection</code></a> flavour including the directory from which you wish to consume from. Simply specifying the IP Address or DNS name of the remote ftp server may cause files to be consumed without specifying a subdirectory (which if you are not in an ftp chroot jail might be a very bad thing). </p> \n<p> Although multiple file-filters can be configured only filters that work with the filepath will work. Other filter implementations (such as those based on size /last modified) may not work. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "FtpConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FtpConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/params/SequentialParameterApplicator.html",
      "fullClassName" : "com.adaptris.core.cassandra.params.SequentialParameterApplicator",
      "className" : "SequentialParameterApplicator",
      "packageName" : "com.adaptris.core.cassandra.params",
      "componentType" : "object",
      "alias" : "cassandra-sequential-parameter-applicator",
      "deprecated" : false,
      "jarFileName" : "interlok-cassandra.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Helps to use sequencial parameters in CQL statements",
        "tag" : "cassandra"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Helps to use sequencial parameters in CQL statements\",\n                  tag=\"cassandra\")\npublic class SequentialParameterApplicator\nextends AbstractCassandraParameterApplicator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Helps to use sequencial parameters in CQL statements\",\n                  tag=\"cassandra\")\npublic class <span class=\"typeNameLabel\">SequentialParameterApplicator</span>\nextends <a href=\"AbstractCassandraParameterApplicator.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\">AbstractCassandraParameterApplicator</a>",
      "description" : "CassandraParameterApplicator implementation that applies parameters sequentially. This applies StatementParameter instances in the order that they are declared in adapter configuration and is the default CassandraParameterApplicator implementation",
      "descriptionHtml" : "<a href=\"CassandraParameterApplicator.html\" title=\"interface in com.adaptris.core.cassandra.params\" target=\"_new\"><code>CassandraParameterApplicator</code></a> implementation that applies parameters sequentially. \n<p> This applies <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameter.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>StatementParameter</code></a> instances in the order that they are declared in adapter configuration and is the default <a href=\"CassandraParameterApplicator.html\" title=\"interface in com.adaptris.core.cassandra.params\" target=\"_new\"><code>CassandraParameterApplicator</code></a> implementation </p>",
      "inheritance" : [
        {
          "name" : "AbstractCassandraParameterApplicator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/params/AbstractCassandraParameterApplicator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Cassandra",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-cassandra",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/XpathField.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.XpathField",
      "className" : "XpathField",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-xpath-field",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathField\nextends FieldMapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathField</span>\nextends <a href=\"FieldMapper.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">FieldMapper</a>",
      "description" : "Resolve an XPath on the AdaptrisMessage payload and use that value as a ADTMessage field.",
      "descriptionHtml" : "Resolve an XPath on the AdaptrisMessage payload and use that value as a ADTMessage field.",
      "inheritance" : [
        {
          "name" : "FieldMapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/FieldMapper.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/StandardStatisticManager.html",
      "fullClassName" : "com.adaptris.core.interceptor.StandardStatisticManager",
      "className" : "StandardStatisticManager",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "object",
      "alias" : "standard-statistic-manager",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Base statistic manager that handles timeslices.",
        "tag" : "interceptor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Base statistic manager that handles timeslices.\",\n                  tag=\"interceptor\")\npublic class StandardStatisticManager\nextends BaseStatisticManager",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Base statistic manager that handles timeslices.\",\n                  tag=\"interceptor\")\npublic class <span class=\"typeNameLabel\">StandardStatisticManager</span>\nextends <a href=\"BaseStatisticManager.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">BaseStatisticManager</a>",
      "inheritance" : [
        {
          "name" : "BaseStatisticManager",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/BaseStatisticManager.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-aws-sts/4.0.0B1-RELEASE/com/adaptris/jclouds/sts/SessionTokenCredentialsBuilder.html",
      "fullClassName" : "com.adaptris.jclouds.sts.SessionTokenCredentialsBuilder",
      "className" : "SessionTokenCredentialsBuilder",
      "packageName" : "com.adaptris.jclouds.sts",
      "componentType" : "object",
      "alias" : "jclouds-sts-credentials-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-aws-sts.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Provide credentials via Amazon STS",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Provide credentials via Amazon STS\")\npublic class SessionTokenCredentialsBuilder\nextends com.adaptris.jclouds.common.DefaultCredentialsBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Provide credentials via Amazon STS\")\npublic class <span class=\"typeNameLabel\">SessionTokenCredentialsBuilder</span>\nextends com.adaptris.jclouds.common.DefaultCredentialsBuilder",
      "description" : "AWS STS Credentials Provider",
      "descriptionHtml" : "AWS STS Credentials Provider",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/AWS STS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-aws-sts",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/request/BasicHMACSignature.html",
      "fullClassName" : "com.adaptris.core.http.apache.request.BasicHMACSignature",
      "className" : "BasicHMACSignature",
      "packageName" : "com.adaptris.core.http.apache.request",
      "componentType" : "object",
      "alias" : "apache-http-basic-hmac-signature",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicHMACSignature\nextends HMACSignatureImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicHMACSignature</span>\nextends <a href=\"HMACSignatureImpl.html\" title=\"class in com.adaptris.core.http.apache.request\" target=\"_new\">HMACSignatureImpl</a>",
      "description" : "Attempts to add an HMAC signature to the outgoing request. Note that when using HMAC signatures the 'StringToSign' may be different for each server implementation. In our case we are simply using  HTTP-Verb + \"\\n\" +\n          Path + \\n;\n          HttpHeader:HeaderValue + \"\\n\" +\n          HttpHeaderN:HeaderValue + \"\\n\"\n\n \n as the string to sign; HttpHeaders are configured via HMACSignatureImpl.setHeaders(List). The resulting signature is added as as header against the specified targetHeader in the form identity:Signature. If needs be you can create your own custom implementation by extending HMACSignatureImpl directly.",
      "descriptionHtml" : "Attempts to add an HMAC signature to the outgoing request. \n<p> Note that when using HMAC signatures the <code>'StringToSign'</code> may be different for each server implementation. In our case we are simply using </p>\n<pre> <code>HTTP-Verb + \"\\n\" +\n          Path + \\n;\n          HttpHeader:HeaderValue + \"\\n\" +\n          HttpHeaderN:HeaderValue + \"\\n\"\n\n </code>\n </pre> as the string to sign; HttpHeaders are configured via \n<a href=\"HMACSignatureImpl.html#setHeaders(java.util.List)\" target=\"_new\"><code>HMACSignatureImpl.setHeaders(List)</code></a>. The resulting signature is added as as header against the specified \n<code>targetHeader</code> in the form \n<code>identity:Signature</code>. \n<p></p> \n<p> If needs be you can create your own custom implementation by extending <a href=\"HMACSignatureImpl.html\" title=\"class in com.adaptris.core.http.apache.request\" target=\"_new\"><code>HMACSignatureImpl</code></a> directly. </p>",
      "inheritance" : [
        {
          "name" : "HMACSignatureImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/request/HMACSignatureImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/dynamic/DynamicRfcProducer.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicRfcProducer",
      "className" : "DynamicRfcProducer",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.dynamic",
      "componentType" : "producer",
      "alias" : "sapjco3-dynamic-rfc-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.sap.jco3.rfc.ConfiguredRfcConnection",
          "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicRfcConnection"
        ],
        "since" : "",
        "summary" : "Execute a SAP RFC where the RFC is dynamically inferred from the Document",
        "tag" : "producer,sap,rfc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a SAP RFC where the RFC is dynamically inferred from the Document\",\n                  tag=\"producer,sap,rfc\",\n                  recommended={ConfiguredRfcConnection.class,DynamicRfcConnection.class})\npublic final class DynamicRfcProducer\nextends DynamicProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a SAP RFC where the RFC is dynamically inferred from the Document\",\n                  tag=\"producer,sap,rfc\",\n                  recommended={<a href=\"../ConfiguredRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ConfiguredRfcConnection.class</a>,<a href=\"DynamicRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">DynamicRfcConnection.class</a>})\npublic final class <span class=\"typeNameLabel\">DynamicRfcProducer</span>\nextends <a href=\"DynamicProducer.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">DynamicProducer</a>",
      "description" : "Implementation of AdaptrisMessageProducer based on SAP JCO3 libraries. In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. The input file for this producer should be the one generated by RfcXmlGenerator which creates a sample XML document for a given RFC. If you map your input file to the associated generated sample, then this producer instance can be used to dynamically execute the RFC without having to explicitly configure any ExportParameter or ImportParameter instances.",
      "descriptionHtml" : "<p> Implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducer</code></a> based on SAP JCO3 libraries. </p> \n<p> In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. </p> \n<p> The input file for this producer should be the one generated by <a href=\"RfcXmlGenerator.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\"><code>RfcXmlGenerator</code></a> which creates a sample XML document for a given RFC. If you map your input file to the associated generated sample, then this producer instance can be used to dynamically execute the RFC without having to explicitly configure any <a href=\"../ExportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\"><code>ExportParameter</code></a> or <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\"><code>ImportParameter</code></a> instances. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "DynamicProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/dynamic/DynamicProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/BasicSolaceImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.solace.BasicSolaceImplementation",
      "className" : "BasicSolaceImplementation",
      "packageName" : "com.adaptris.core.jms.solace",
      "componentType" : "object",
      "alias" : "basic-solace-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicSolaceImplementation\nextends UrlVendorImplementation\nimplements LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicSolaceImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">UrlVendorImplementation</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Solace implementation of VendorImplementation. This vendor implementation is the minimal adapter interface to Solace. This was built against Solace 10.6.0",
      "descriptionHtml" : "<p> Solace implementation of <code>VendorImplementation</code>. </p> \n<p> This vendor implementation is the minimal adapter interface to Solace. </p> \n<p> <b>This was built against Solace 10.6.0</b> </p> \n<p></p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/XpathProperty.html",
      "fullClassName" : "com.adaptris.core.msmq.javonet.XpathProperty",
      "className" : "XpathProperty",
      "packageName" : "com.adaptris.core.msmq.javonet",
      "componentType" : "object",
      "alias" : "javonet-msmq-xpath-property",
      "deprecated" : false,
      "jarFileName" : "interlok-msmq-javonet.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathProperty\nextends MessageProperty",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathProperty</span>\nextends <a href=\"MessageProperty.html\" title=\"class in com.adaptris.core.msmq.javonet\" target=\"_new\">MessageProperty</a>",
      "description" : "Resolve an XPath on the AdaptrisMessage payload and use that as a MSMQMessage field.",
      "descriptionHtml" : "Resolve an XPath on the AdaptrisMessage payload and use that as a MSMQMessage field.",
      "inheritance" : [
        {
          "name" : "MessageProperty",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/MessageProperty.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MSMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-msmq-javonet",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedService.html",
      "fullClassName" : "com.adaptris.core.SharedService",
      "className" : "SharedService",
      "packageName" : "com.adaptris.core",
      "componentType" : "service",
      "alias" : "shared-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Service that refers to another Service configured elsewhere",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Service that refers to another Service configured elsewhere\",\n                  tag=\"service\")\npublic class SharedService\nextends SharedServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Service that refers to another Service configured elsewhere\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">SharedService</span>\nextends <a href=\"SharedServiceImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">SharedServiceImpl</a>",
      "description" : "A Service instance that references a Service made available via SharedComponentList. By default the looked-up service is deep cloned before being loaded into your workflows. You can turn off cloning by simply setting \"clone-service=true\".",
      "descriptionHtml" : "<p> A Service instance that references a Service made available via <a href=\"SharedComponentList.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>SharedComponentList</code></a>. </p> \n<p> By default the looked-up service is deep cloned before being loaded into your workflows. <br> You can turn off cloning by simply setting \"clone-service=true\". </p>",
      "inheritance" : [
        {
          "name" : "SharedComponent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedComponent.html"
        },
        {
          "name" : "SharedServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/XmlRuleValidator.html",
      "fullClassName" : "com.adaptris.core.transform.XmlRuleValidator",
      "className" : "XmlRuleValidator",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "object",
      "alias" : "xml-rule-validator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlRuleValidator\nextends MessageValidatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlRuleValidator</span>\nextends <a href=\"MessageValidatorImpl.html\" title=\"class in com.adaptris.core.transform\" target=\"_new\">MessageValidatorImpl</a>",
      "description" : "Used with XmlValidationService to validate an XML message against various rules. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Used with \n<a href=\"XmlValidationService.html\" title=\"class in com.adaptris.core.transform\" target=\"_new\"><code>XmlValidationService</code></a> to validate an XML message against various rules. \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "MessageValidatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/MessageValidatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/actions/ConfiguredAction.html",
      "fullClassName" : "com.adaptris.core.elastic.actions.ConfiguredAction",
      "className" : "ConfiguredAction",
      "packageName" : "com.adaptris.core.elastic.actions",
      "componentType" : "object",
      "alias" : "elastic-configured-action",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "An explicitly configured document action",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"An explicitly configured document action\",\n                  since=\"3.9.1\")\npublic class ConfiguredAction\nextends java.lang.Object\nimplements ActionExtractor",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"An explicitly configured document action\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">ConfiguredAction</span>\nextends java.lang.Object\nimplements <a href=\"ActionExtractor.html\" title=\"interface in com.adaptris.core.elastic.actions\" target=\"_new\">ActionExtractor</a>",
      "description" : "An explicitly configured document action.",
      "descriptionHtml" : "An explicitly configured document action.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/ModifyPayloadExceptionHandler.html",
      "fullClassName" : "com.adaptris.core.json.schema.ModifyPayloadExceptionHandler",
      "className" : "ModifyPayloadExceptionHandler",
      "packageName" : "com.adaptris.core.json.schema",
      "componentType" : "object",
      "alias" : "json-schema-validation-exception-into-message",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Store schema violations as part of the JSON payload",
        "tag" : "json,validation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Store schema violations as part of the JSON payload\",\n                  tag=\"json,validation\")\npublic class ModifyPayloadExceptionHandler\nextends ValidationExceptionHandlerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Store schema violations as part of the JSON payload\",\n                  tag=\"json,validation\")\npublic class <span class=\"typeNameLabel\">ModifyPayloadExceptionHandler</span>\nextends <a href=\"ValidationExceptionHandlerImpl.html\" title=\"class in com.adaptris.core.json.schema\" target=\"_new\">ValidationExceptionHandlerImpl</a>",
      "description" : "Implementation of ValidationExceptionHandler that stores the violations as part of the payload. This implementation modifies the existing payload so that it is rewritten to be something like  \n    { \"original\" : { // the original message },\n      \"schema-violations\" : [ // list of validation failures ]\n    }",
      "descriptionHtml" : "Implementation of \n<a href=\"ValidationExceptionHandler.html\" title=\"interface in com.adaptris.core.json.schema\" target=\"_new\"><code>ValidationExceptionHandler</code></a> that stores the violations as part of the payload. \n<p> This implementation modifies the existing payload so that it is rewritten to be something like </p> \n<pre> <code>\n    { \"original\" : { // the original message },\n      \"schema-violations\" : [ // list of validation failures ]\n    }\n   </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "ValidationExceptionHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/ValidationExceptionHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MetadataFileNameCreator.html",
      "fullClassName" : "com.adaptris.core.MetadataFileNameCreator",
      "className" : "MetadataFileNameCreator",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "metadata-file-name-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataFileNameCreator\nextends java.lang.Object\nimplements FileNameCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataFileNameCreator</span>\nextends java.lang.Object\nimplements <a href=\"FileNameCreator.html\" title=\"interface in com.adaptris.core\" target=\"_new\">FileNameCreator</a>",
      "description" : "Implementation of FileNameCreator which obtains the file name to use from message metadata. In the adapter configuration file this class is aliased as metadata-file-name-creator which is the preferred alternative to the fully qualified classname when building your configuration.",
      "descriptionHtml" : "<p> Implementation of <code>FileNameCreator</code> which obtains the file name to use from message metadata. </p> \n<p> In the adapter configuration file this class is aliased as <b>metadata-file-name-creator</b> which is the preferred alternative to the fully qualified classname when building your configuration. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/DeleteDirectoryService.html",
      "fullClassName" : "com.adaptris.filesystem.DeleteDirectoryService",
      "className" : "DeleteDirectoryService",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "service",
      "alias" : "delete-directory-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Will delete directory and its contents.",
        "tag" : "FS, FileSystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Will delete directory and its contents.\",\n                  tag=\"FS, FileSystem\")\npublic class DeleteDirectoryService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Will delete directory and its contents.\",\n                  tag=\"FS, FileSystem\")\npublic class <span class=\"typeNameLabel\">DeleteDirectoryService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/keystore/ConfiguredUrl.html",
      "fullClassName" : "com.adaptris.security.keystore.ConfiguredUrl",
      "className" : "ConfiguredUrl",
      "packageName" : "com.adaptris.security.keystore",
      "componentType" : "object",
      "alias" : "configured-keystore-url",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredUrl\nextends ConfiguredKeystore",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredUrl</span>\nextends <a href=\"ConfiguredKeystore.html\" title=\"class in com.adaptris.security.keystore\" target=\"_new\">ConfiguredKeystore</a>",
      "description" : "Allows the wrapping of a configured URL as a KeystoreLocation",
      "descriptionHtml" : "Allows the wrapping of a configured URL as a KeystoreLocation",
      "inheritance" : [
        {
          "name" : "ConfiguredKeystore",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/keystore/ConfiguredKeystore.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/JsonToMetadata.html",
      "fullClassName" : "com.adaptris.core.json.JsonToMetadata",
      "className" : "JsonToMetadata",
      "packageName" : "com.adaptris.core.json",
      "componentType" : "service",
      "alias" : "json-to-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extract all root fields from a JSON document as metadata",
        "tag" : "service,json,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract all root fields from a JSON document as metadata\",\n                  tag=\"service,json,metadata\")\npublic class JsonToMetadata\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract all root fields from a JSON document as metadata\",\n                  tag=\"service,json,metadata\")\npublic class <span class=\"typeNameLabel\">JsonToMetadata</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Takes a JSON payload and adds every field at the root element as metadata. This class is included as a convenience service for you to extract all the fields of a simple JSON document as metadata. In the situation where you have a complex nested structure, then you continue use JsonPathService as normal. In the event that there are nested objects, they will be turned into strings and added as-is.   \n    {\n        \"category\": \"fiction\",\n        \"title\": \"The Lord of the Rings Trilogy\",\n        \"price\": 22.99,\n        \"volumes\": [1, 2, 3],\n        \"suggested\": {\n            \"title\": \"The Hobbit\"\n        }\n    }\n  \n  will give you 5 metadata keys category, title, price, volumes, suggested. The field volumes is not a string (it would be an array of integers), but it will be set as metadata as though it were (i.e the value is [1,2,3]); similarly, suggested is a nested JSON object, but it will be simply rendered as a string and added as metadata (i.e the value will be {\"title:\"The Hobbit\"}).",
      "descriptionHtml" : "Takes a JSON payload and adds every field at the root element as metadata. \n<p> This class is included as a convenience service for you to extract all the fields of a simple JSON document as metadata. In the situation where you have a complex nested structure, then you continue use <a href=\"../services/path/json/JsonPathService.html\" title=\"class in com.adaptris.core.services.path.json\" target=\"_new\"><code>JsonPathService</code></a> as normal. In the event that there are nested objects, they will be turned into strings and added as-is. </p> \n<pre>  <code>\n    {\n        \"category\": \"fiction\",\n        \"title\": \"The Lord of the Rings Trilogy\",\n        \"price\": 22.99,\n        \"volumes\": [1, 2, 3],\n        \"suggested\": {\n            \"title\": \"The Hobbit\"\n        }\n    }\n  </code>\n  </pre> \n<p> will give you 5 metadata keys <code>category, title, price, volumes, suggested</code>. The field <code>volumes</code> is not a string (it would be an array of integers), but it will be set as metadata as though it were (i.e the value is <code>[1,2,3]</code>); similarly, <code>suggested</code> is a nested JSON object, but it will be simply rendered as a string and added as metadata (i.e the value will be <code>{\"title:\"The Hobbit\"}</code>). </p>\n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultWorkflowLifecycleStrategy.html",
      "fullClassName" : "com.adaptris.core.DefaultWorkflowLifecycleStrategy",
      "className" : "DefaultWorkflowLifecycleStrategy",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "default-workflow-lifecycle-strategy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultWorkflowLifecycleStrategy\nextends java.lang.Object\nimplements WorkflowLifecycleStrategy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultWorkflowLifecycleStrategy</span>\nextends java.lang.Object\nimplements <a href=\"WorkflowLifecycleStrategy.html\" title=\"interface in com.adaptris.core\" target=\"_new\">WorkflowLifecycleStrategy</a>",
      "description" : "Default strategy for starting workflows. This strategy is functionally equivalent to the way in which workflow operations were originally handled. If a workflow fails to start then an exception is thrown back to the parent channel.",
      "descriptionHtml" : "Default strategy for starting workflows. \n<p> This strategy is functionally equivalent to the way in which workflow operations were originally handled. If a workflow fails to start then an exception is thrown back to the parent channel. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/clients/SharedComponentProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.clients.SharedComponentProvider",
      "className" : "SharedComponentProvider",
      "packageName" : "com.adaptris.tester.runtime.clients",
      "componentType" : "object",
      "alias" : "shared-components-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class SharedComponentProvider\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SharedComponentProvider</span>\nextends java.lang.Object",
      "description" : "Used to add Service to EmbeddedTestClient.",
      "descriptionHtml" : "Used to add \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Service.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>Service</code></a> to \n<a href=\"EmbeddedTestClient.html\" title=\"class in com.adaptris.tester.runtime.clients\" target=\"_new\"><code>EmbeddedTestClient</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/ConfiguredAuthorizationHeader.html",
      "fullClassName" : "com.adaptris.core.http.client.net.ConfiguredAuthorizationHeader",
      "className" : "ConfiguredAuthorizationHeader",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-configured-authorization-header",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredAuthorizationHeader\nextends java.lang.Object\nimplements HttpURLConnectionAuthenticator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredAuthorizationHeader</span>\nextends java.lang.Object\nimplements <a href=\"HttpURLConnectionAuthenticator.html\" title=\"interface in com.adaptris.core.http.client.net\" target=\"_new\">HttpURLConnectionAuthenticator</a>",
      "description" : "Build an HttpConstants.AUTHORIZATION header from static data.",
      "descriptionHtml" : "Build an \n<a href=\"../../HttpConstants.html#AUTHORIZATION\" target=\"_new\"><code>HttpConstants.AUTHORIZATION</code></a> header from static data.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/InFlightWorkflowInterceptor.html",
      "fullClassName" : "com.adaptris.core.interceptor.InFlightWorkflowInterceptor",
      "className" : "InFlightWorkflowInterceptor",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "in-flight-workflow-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that reports on whether there are in flight messages on this workflow",
        "tag" : "interceptor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that reports on whether there are in flight messages on this workflow\",\n                  tag=\"interceptor\")\npublic class InFlightWorkflowInterceptor\nextends WorkflowInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that reports on whether there are in flight messages on this workflow\",\n                  tag=\"interceptor\")\npublic class <span class=\"typeNameLabel\">InFlightWorkflowInterceptor</span>\nextends <a href=\"WorkflowInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">WorkflowInterceptorImpl</a>",
      "description" : "WorkflowInterceptor implementation that exposes acts as the source for MessageInFlightMBean.",
      "descriptionHtml" : "WorkflowInterceptor implementation that exposes acts as the source for \n<a href=\"MessageInFlightMBean.html\" title=\"interface in com.adaptris.core.interceptor\" target=\"_new\"><code>MessageInFlightMBean</code></a>.",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/ProducingStatisticManager.html",
      "fullClassName" : "com.adaptris.core.interceptor.ProducingStatisticManager",
      "className" : "ProducingStatisticManager",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "object",
      "alias" : "producing-statistic-manager",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Statistic manager that allows configuration of a standalone producer for each timeslice when they expire.",
        "tag" : "interceptor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Statistic manager that allows configuration of a standalone producer for each timeslice when they expire.\",\n                  tag=\"interceptor\")\npublic class ProducingStatisticManager\nextends BaseStatisticManager",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Statistic manager that allows configuration of a standalone producer for each timeslice when they expire.\",\n                  tag=\"interceptor\")\npublic class <span class=\"typeNameLabel\">ProducingStatisticManager</span>\nextends <a href=\"BaseStatisticManager.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">BaseStatisticManager</a>",
      "description" : "This statistic manager allows you to configure a marshaller and a stand alone producer. When the produce() method is triggered we will serialize the InterceptorStatistic with the configured marshaller and then execute the producer with the resulting string payload. If the producer should fail, we simply attempt to restart the stand alone producer and continue.",
      "descriptionHtml" : "<p> This statistic manager allows you to configure a marshaller and a stand alone producer. </p> \n<p> When the produce() method is triggered we will serialize the <a href=\"InterceptorStatistic.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>InterceptorStatistic</code></a> with the configured marshaller and then execute the producer with the resulting string payload. </p> \n<p> If the producer should fail, we simply attempt to restart the stand alone producer and continue. </p>",
      "inheritance" : [
        {
          "name" : "BaseStatisticManager",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/BaseStatisticManager.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardProcessingExceptionHandler.html",
      "fullClassName" : "com.adaptris.core.StandardProcessingExceptionHandler",
      "className" : "StandardProcessingExceptionHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "standard-processing-exception-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A configurable exception handling instance",
        "tag" : "error-handling,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A configurable exception handling instance\",\n                  tag=\"error-handling,base\")\npublic class StandardProcessingExceptionHandler\nextends RootProcessingExceptionHandler\nimplements EventHandlerAware",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A configurable exception handling instance\",\n                  tag=\"error-handling,base\")\npublic class <span class=\"typeNameLabel\">StandardProcessingExceptionHandler</span>\nextends <a href=\"RootProcessingExceptionHandler.html\" title=\"class in com.adaptris.core\" target=\"_new\">RootProcessingExceptionHandler</a>\nimplements <a href=\"EventHandlerAware.html\" title=\"interface in com.adaptris.core\" target=\"_new\">EventHandlerAware</a>",
      "description" : "ProcessingExceptionHandler implementation that contains a single service to apply when a message fails.",
      "descriptionHtml" : "<a href=\"ProcessingExceptionHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ProcessingExceptionHandler</a> implementation that contains a single service to apply when a message fails.",
      "inheritance" : [
        {
          "name" : "RootProcessingExceptionHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RootProcessingExceptionHandler.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-pgp/4.0.0B1-RELEASE/com/adaptris/security/pgp/PGPEncryptService.html",
      "fullClassName" : "com.adaptris.security.pgp.PGPEncryptService",
      "className" : "PGPEncryptService",
      "packageName" : "com.adaptris.security.pgp",
      "componentType" : "service",
      "alias" : "pgp-encrypt",
      "deprecated" : false,
      "jarFileName" : "interlok-pgp.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Encrypt data using a PGP/GPG public key",
        "tag" : "pgp,gpg,encrypt,public key"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Encrypt data using a PGP/GPG public key\",\n                  tag=\"pgp,gpg,encrypt,public key\",\n                  since=\"3.9.2\")\npublic class PGPEncryptService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Encrypt data using a PGP/GPG public key\",\n                  tag=\"pgp,gpg,encrypt,public key\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">PGPEncryptService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service provides a way to encrypt messages with GPG/PGP. It requires a public key or the intended recipient, and a message to encrypt. Optionally it will ASCII armor encode the cipher text (default), and include extra integrity checks (default). \n    <pgp-encrypt>\n        <unique-id>mad-lalande</unique-id>\n        <public-key class=\"constant-data-input-parameter\">\n            <value>-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n    mQENBF2ckxABCAC5Kfu39ky3OIXkxwWOJx70G2dLRYvDMHXf3ZraUPNRMIhh3ZGx\n    -----END PGP PUBLIC KEY BLOCK-----</value>\n        </public-key>\n        <clear-text class=\"stream-payload-input-parameter\"/>             <!-- clear text comes from message payload -->\n        <cipher-text class=\"stream-payload-output-parameter\"/>           <!-- cipher text goes back into the message payload -->\n        <armor-encoding>true</armor-encoding>\n        <integrity-check>true</integrity-check>\n    </pgp-encrypt>",
      "descriptionHtml" : "This service provides a way to encrypt messages with GPG/PGP. It requires a public key or the intended recipient, and a message to encrypt. Optionally it will ASCII armor encode the cipher text (default), and include extra integrity checks (default). \n<pre><code>\n    &lt;pgp-encrypt&gt;\n        &lt;unique-id&gt;mad-lalande&lt;/unique-id&gt;\n        &lt;public-key class=\"constant-data-input-parameter\"&gt;\n            &lt;value&gt;-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n    mQENBF2ckxABCAC5Kfu39ky3OIXkxwWOJx70G2dLRYvDMHXf3ZraUPNRMIhh3ZGx\n    -----END PGP PUBLIC KEY BLOCK-----&lt;/value&gt;\n        &lt;/public-key&gt;\n        &lt;clear-text class=\"stream-payload-input-parameter\"/&gt;             &lt;!-- clear text comes from message payload --&gt;\n        &lt;cipher-text class=\"stream-payload-output-parameter\"/&gt;           &lt;!-- cipher text goes back into the message payload --&gt;\n        &lt;armor-encoding&gt;true&lt;/armor-encoding&gt;\n        &lt;integrity-check&gt;true&lt;/integrity-check&gt;\n    &lt;/pgp-encrypt&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Security/PGP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-pgp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/RawContentTypeProvider.html",
      "fullClassName" : "com.adaptris.core.http.RawContentTypeProvider",
      "className" : "RawContentTypeProvider",
      "packageName" : "com.adaptris.core.http",
      "componentType" : "object",
      "alias" : "http-raw-content-type-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RawContentTypeProvider\nextends java.lang.Object\nimplements ContentTypeProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RawContentTypeProvider</span>\nextends java.lang.Object\nimplements <a href=\"ContentTypeProvider.html\" title=\"interface in com.adaptris.core.http\" target=\"_new\">ContentTypeProvider</a>",
      "description" : "Provides a static content type. Differs from ConfiguredContentTypeProvider because it doesn't try to add a charset.",
      "descriptionHtml" : "Provides a static content type. \n<p> Differs from <a href=\"ConfiguredContentTypeProvider.html\" title=\"class in com.adaptris.core.http\" target=\"_new\"><code>ConfiguredContentTypeProvider</code></a> because it doesn't try to add a charset. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/edi/StandardX12CharacterSet.html",
      "fullClassName" : "com.adaptris.edi.StandardX12CharacterSet",
      "className" : "StandardX12CharacterSet",
      "packageName" : "com.adaptris.edi",
      "componentType" : "object",
      "alias" : "edi-standard-x12",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : { },
      "annotationDetails" : "public class StandardX12CharacterSet\nextends java.lang.Object\nimplements CharacterSet",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StandardX12CharacterSet</span>\nextends java.lang.Object\nimplements <a href=\"CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\">CharacterSet</a>",
      "description" : "Standard X12 CharacterSet implementation.",
      "descriptionHtml" : "Standard X12 \n<a href=\"CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\"><code>CharacterSet</code></a> implementation.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/services/StaxTransformPlugin.html",
      "fullClassName" : "com.adaptris.stax.services.StaxTransformPlugin",
      "className" : "StaxTransformPlugin",
      "packageName" : "com.adaptris.stax.services",
      "componentType" : "object",
      "alias" : "stax-transform-plugin",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "transform-plugin implementation for TransformPluginServiceList",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"transform-plugin implementation for TransformPluginServiceList\",\n                  since=\"3.8.4\")\npublic class StaxTransformPlugin\nextends java.lang.Object\nimplements Plugin",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"transform-plugin implementation for TransformPluginServiceList\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">StaxTransformPlugin</span>\nextends java.lang.Object\nimplements <a href=\"Plugin.html\" title=\"interface in com.adaptris.stax.services\" target=\"_new\">Plugin</a>",
      "description" : "Plugin implementation that uses STaX to transform between 2 formats.",
      "descriptionHtml" : "<a href=\"Plugin.html\" title=\"interface in com.adaptris.stax.services\" target=\"_new\"><code>Plugin</code></a> implementation that uses STaX to transform between 2 formats.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-flatfile/4.0.0B1-RELEASE/com/adaptris/core/transform/flatfile/FlatfileTransformService.html",
      "fullClassName" : "com.adaptris.core.transform.flatfile.FlatfileTransformService",
      "className" : "FlatfileTransformService",
      "packageName" : "com.adaptris.core.transform.flatfile",
      "componentType" : "service",
      "alias" : "flat-file-transform-service",
      "deprecated" : false,
      "jarFileName" : "interlok-flatfile.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transform from Flat-File to XML",
        "tag" : "service,transform,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform from Flat-File to XML\",\n                  tag=\"service,transform,xml\")\npublic class FlatfileTransformService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform from Flat-File to XML\",\n                  tag=\"service,transform,xml\")\npublic class <span class=\"typeNameLabel\">FlatfileTransformService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Flat file transformation service.",
      "descriptionHtml" : "<p> Flat file transformation service. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/Flatfile",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-flatfile",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/ProviderInfo.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.ProviderInfo",
      "className" : "ProviderInfo",
      "packageName" : "com.adaptris.core.sap.jco3",
      "componentType" : "object",
      "alias" : "sapjco3-provider-info",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class ProviderInfo\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ProviderInfo</span>\nextends java.lang.Object",
      "description" : "Wraps what would normally be placed into individual property files when configuring SAP JCO 3.x",
      "descriptionHtml" : "Wraps what would normally be placed into individual property files when configuring SAP JCO 3.x",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/PasswordEncodeMetadataFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.PasswordEncodeMetadataFilter",
      "className" : "PasswordEncodeMetadataFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "password-encoder-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PasswordEncodeMetadataFilter\nextends PasswordMetadataFilter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PasswordEncodeMetadataFilter</span>\nextends <a href=\"PasswordMetadataFilter.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">PasswordMetadataFilter</a>",
      "description" : "Metadata Filter implementation that encodes all values that match the specified key. Note that keys that do not match will still be returned; just that keys that do match PasswordMetadataFilter.getPasswordPatterns() will have Password.encode(String,String) applied to the values.Please note that a new MetadataElement is created as a result of the encode/deocde process, so any changes may not be reflected in the original message.",
      "descriptionHtml" : "Metadata Filter implementation that encodes all values that match the specified key. \n<p> Note that keys that do not match will still be returned; just that keys that do match <a href=\"PasswordMetadataFilter.html#getPasswordPatterns()\" target=\"_new\"><code>PasswordMetadataFilter.getPasswordPatterns()</code></a> will have <a href=\"../../security/password/Password.html#encode(java.lang.String,java.lang.String)\" target=\"_new\"><code>Password.encode(String,String)</code></a> applied to the values.Please note that a new <code>MetadataElement</code> is created as a result of the encode/deocde process, so any changes may not be reflected in the original message. </p>",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        },
        {
          "name" : "PasswordMetadataFilter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/PasswordMetadataFilter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/exception/ExceptionWithStacktrace.html",
      "fullClassName" : "com.adaptris.core.json.exception.ExceptionWithStacktrace",
      "className" : "ExceptionWithStacktrace",
      "packageName" : "com.adaptris.core.json.exception",
      "componentType" : "object",
      "alias" : "exception-as-json-with-stacktrace",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Serialize an exception as JSON, along with the stack trace, when using ExceptionReportService",
        "tag" : "json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Serialize an exception as JSON, along with the stack trace, when using ExceptionReportService\",\n                  tag=\"json\")\npublic class ExceptionWithStacktrace\nextends ExceptionAsJson",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Serialize an exception as JSON, along with the stack trace, when using ExceptionReportService\",\n                  tag=\"json\")\npublic class <span class=\"typeNameLabel\">ExceptionWithStacktrace</span>\nextends <a href=\"ExceptionAsJson.html\" title=\"class in com.adaptris.core.json.exception\" target=\"_new\">ExceptionAsJson</a>",
      "description" : "Write the exception as a JSON object using jackson-databind when using a ExceptionReportService. Note that this implementation doesn't write any of the exception causes, as it is possible that they are self-referential, which will cause a problem when trying to serialize them using jackson; it just captures the stack-trace in addition to information captured by ExceptionAsJson.",
      "descriptionHtml" : "Write the exception as a JSON object using \n<code>jackson-databind</code> when using a \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionReportService.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.exception\" class=\"externalLink\" target=\"_new\"><code>ExceptionReportService</code></a>. \n<p> Note that this implementation doesn't write any of the exception causes, as it is possible that they are self-referential, which will cause a problem when trying to serialize them using jackson; it just captures the stack-trace in addition to information captured by <a href=\"ExceptionAsJson.html\" title=\"class in com.adaptris.core.json.exception\" target=\"_new\"><code>ExceptionAsJson</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "ExceptionAsJson",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/exception/ExceptionAsJson.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/StringPayloadDataOutputParameter.html",
      "fullClassName" : "com.adaptris.core.common.StringPayloadDataOutputParameter",
      "className" : "StringPayloadDataOutputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "string-payload-data-output-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StringPayloadDataOutputParameter\nextends java.lang.Object\nimplements DataOutputParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringPayloadDataOutputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataOutputParameter</a>&lt;java.lang.String&gt;",
      "description" : "This DataOutputParameter is used when you want to write data to the AdaptrisMessage payload. An example might be specifying that the XML content required for the XPathService can be found in the payload of an AdaptrisMessage.",
      "descriptionHtml" : "This \n<code>DataOutputParameter</code> is used when you want to write data to the \n<a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> payload. \n<p> An example might be specifying that the XML content required for the <a href=\"../services/path/XPathService.html\" title=\"class in com.adaptris.core.services.path\" target=\"_new\"><code>XPathService</code></a> can be found in the payload of an <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-streaming/4.0.0B1-RELEASE/com/adaptris/core/json/streaming/JsonStreamingOutputFactory.html",
      "fullClassName" : "com.adaptris.core.json.streaming.JsonStreamingOutputFactory",
      "className" : "JsonStreamingOutputFactory",
      "packageName" : "com.adaptris.core.json.streaming",
      "componentType" : "object",
      "alias" : "json-streaming-output",
      "deprecated" : false,
      "jarFileName" : "interlok-json-streaming.jar",
      "profile" : { },
      "annotationDetails" : "public class JsonStreamingOutputFactory\nextends JsonStreamBuilderImpl\nimplements com.adaptris.stax.XmlOutputFactoryBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JsonStreamingOutputFactory</span>\nextends <a href=\"JsonStreamBuilderImpl.html\" title=\"class in com.adaptris.core.json.streaming\" target=\"_new\">JsonStreamBuilderImpl</a>\nimplements com.adaptris.stax.XmlOutputFactoryBuilder",
      "description" : "XmlOutputFactoryBuilder implementation that allows us to write JSON via standard javax.xml.stream interfaces.",
      "descriptionHtml" : "<code>XmlOutputFactoryBuilder</code> implementation that allows us to write JSON via standard \n<code>javax.xml.stream</code> interfaces.",
      "inheritance" : [
        {
          "name" : "JsonStreamBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-streaming/4.0.0B1-RELEASE/com/adaptris/core/json/streaming/JsonStreamBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON Streaming",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-streaming",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lifecycle/WorkflowRetryAndContinue.html",
      "fullClassName" : "com.adaptris.core.lifecycle.WorkflowRetryAndContinue",
      "className" : "WorkflowRetryAndContinue",
      "packageName" : "com.adaptris.core.lifecycle",
      "componentType" : "object",
      "alias" : "workflow-retry-and-continue",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class WorkflowRetryAndContinue\nextends DefaultWorkflowLifecycleStrategy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">WorkflowRetryAndContinue</span>\nextends <a href=\"../DefaultWorkflowLifecycleStrategy.html\" title=\"class in com.adaptris.core\" target=\"_new\">DefaultWorkflowLifecycleStrategy</a>",
      "description" : "Strategy for starting workflows that retries a workflow init or start a number of times. This implementation allows you to retry the init and start for a given workflow a configurable number of times. Each workflow is attempted in sequence, and the failing workflow is retried until either it is successful or the max number of retry attempts has been reached. If the workflow has still failed at this point, it is simply skipped and any remaining workflows initialised or started. Note that if you use this strategy then any configured AdapterLifecycleEvent may be inaccurate.",
      "descriptionHtml" : "Strategy for starting workflows that retries a workflow init or start a number of times. \n<p> This implementation allows you to retry the init and start for a given workflow a configurable number of times. Each workflow is attempted in sequence, and the failing workflow is retried until either it is successful or the max number of retry attempts has been reached. If the workflow has still failed at this point, it is simply skipped and any remaining workflows initialised or started. </p> \n<p> Note that if you use this strategy then any configured <a href=\"../AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>AdapterLifecycleEvent</code></a> may be inaccurate. </p>",
      "inheritance" : [
        {
          "name" : "DefaultWorkflowLifecycleStrategy",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultWorkflowLifecycleStrategy.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/KafkaConnection.html",
      "fullClassName" : "com.adaptris.kafka.KafkaConnection",
      "className" : "KafkaConnection",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "connection",
      "alias" : "apache-kafka-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection to Apache Kafka",
        "tag" : "connections,kafka"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection to Apache Kafka\",\n                  tag=\"connections,kafka\")\npublic class KafkaConnection\nextends NoOpConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection to Apache Kafka\",\n                  tag=\"connections,kafka\")\npublic class <span class=\"typeNameLabel\">KafkaConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">NoOpConnection</a>",
      "description" : "Wraps the Map<String,Object> object used to create KafkaConsumer KafkaProducer instances.",
      "descriptionHtml" : "Wraps the \n<code>Map&lt;String,Object&gt;</code> object used to create \n<code>KafkaConsumer</code> \n<code>KafkaProducer</code> instances.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "NoOpConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-jms/4.0.0B1-RELEASE/com/adaptris/xa/jms/exception/WaitContinueExceptionHandler.html",
      "fullClassName" : "com.adaptris.xa.jms.exception.WaitContinueExceptionHandler",
      "className" : "WaitContinueExceptionHandler",
      "packageName" : "com.adaptris.xa.jms.exception",
      "componentType" : "object",
      "alias" : "xa-wait-exception-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-jms.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Wait for a period of time before attempting to continue.",
        "tag" : "jms,xa"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Wait for a period of time before attempting to continue.\",\n                  tag=\"jms,xa\")\npublic class WaitContinueExceptionHandler\nextends java.lang.Object\nimplements XAExceptionHandler",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Wait for a period of time before attempting to continue.\",\n                  tag=\"jms,xa\")\npublic class <span class=\"typeNameLabel\">WaitContinueExceptionHandler</span>\nextends java.lang.Object\nimplements <a href=\"XAExceptionHandler.html\" title=\"interface in com.adaptris.xa.jms.exception\" target=\"_new\">XAExceptionHandler</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-jms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/SqlServerStatementCreator.html",
      "fullClassName" : "com.adaptris.jdbc.SqlServerStatementCreator",
      "className" : "SqlServerStatementCreator",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "mssql-server-statement-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SqlServerStatementCreator\nextends java.lang.Object\nimplements CallableStatementCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SqlServerStatementCreator</span>\nextends java.lang.Object\nimplements <a href=\"CallableStatementCreator.html\" title=\"interface in com.adaptris.jdbc\" target=\"_new\">CallableStatementCreator</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/rfc5849/AuthorizationData.html",
      "fullClassName" : "com.adaptris.core.oauth.rfc5849.AuthorizationData",
      "className" : "AuthorizationData",
      "packageName" : "com.adaptris.core.oauth.rfc5849",
      "componentType" : "object",
      "alias" : "oauth-rfc5849-authorization-data",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-generic.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Captures authorization data for building the RFC5849 Authorization header",
        "tag" : "oauth,oauthv1,http,https"
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.8.4\",\n                  summary=\"Captures authorization data for building the RFC5849 Authorization header\",\n                  tag=\"oauth,oauthv1,http,https\")\npublic class AuthorizationData\nextends java.lang.Object",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.8.4\",\n                  summary=\"Captures authorization data for building the RFC5849 Authorization header\",\n                  tag=\"oauth,oauthv1,http,https\")\npublic class <span class=\"typeNameLabel\">AuthorizationData</span>\nextends java.lang.Object",
      "description" : "Captures authorization data for building the RFC5849 Authorization header.",
      "descriptionHtml" : "Captures authorization data for building the RFC5849 Authorization header.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Generic",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-generic",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/legacy/ConfiguredCharacterSetFactory.html",
      "fullClassName" : "com.adaptris.core.transform.edi.legacy.ConfiguredCharacterSetFactory",
      "className" : "ConfiguredCharacterSetFactory",
      "packageName" : "com.adaptris.core.transform.edi.legacy",
      "componentType" : "object",
      "alias" : "edi-configured-character-set",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredCharacterSetFactory\nextends java.lang.Object\nimplements CharacterSetFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredCharacterSetFactory</span>\nextends java.lang.Object\nimplements <a href=\"CharacterSetFactory.html\" title=\"interface in com.adaptris.core.transform.edi.legacy\" target=\"_new\">CharacterSetFactory</a>",
      "description" : "An implementation of CharacterSetFactory that allows you to statically configure a CharacterSet. Using this as a CharacterSetFactory is largely redundant, as you could just configure the EdiService.setCharacterSet(CharacterSet) directly. It is only included for completeness.",
      "descriptionHtml" : "An implementation of \n<a href=\"CharacterSetFactory.html\" title=\"interface in com.adaptris.core.transform.edi.legacy\" target=\"_new\"><code>CharacterSetFactory</code></a> that allows you to statically configure a \n<a href=\"../../../../edi/CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\"><code>CharacterSet</code></a>. \n<p> Using this as a <a href=\"CharacterSetFactory.html\" title=\"interface in com.adaptris.core.transform.edi.legacy\" target=\"_new\"><code>CharacterSetFactory</code></a> is largely redundant, as you could just configure the <a href=\"EdiService.html#setCharacterSet(com.adaptris.edi.CharacterSet)\" target=\"_new\"><code>EdiService.setCharacterSet(CharacterSet)</code></a> directly. It is only included for completeness. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/BatchInsertJsonArray.html",
      "fullClassName" : "com.adaptris.core.json.jdbc.BatchInsertJsonArray",
      "className" : "BatchInsertJsonArray",
      "packageName" : "com.adaptris.core.json.jdbc",
      "componentType" : "service",
      "alias" : "json-array-jdbc-batch-insert",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Insert a JSON array into a database",
        "tag" : "service,json,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Insert a JSON array into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class BatchInsertJsonArray\nextends InsertJsonObjects",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Insert a JSON array into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">BatchInsertJsonArray</span>\nextends <a href=\"InsertJsonObjects.html\" title=\"class in com.adaptris.core.json.jdbc\" target=\"_new\">InsertJsonObjects</a>",
      "description" : "Convenience service for inserting a JSON array into a database. This creates insert statements based on the contents of each JSON object inside the array. The actual insert statement will only be generated once based on the first JSON object in the array and executed the appropriate number of times.  \n [\n   { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" },\n   { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" },\n   { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }\n ]\n will effectively execute the following statement INSERT INTO table (firstname,lastname,dob) VALUES (?,?,?) 3 times; batching as required using PreparedStatement.addBatch() / Statement.executeBatch(). Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so { \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}} would still be 3 parameters, the address parameter will be '{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'",
      "descriptionHtml" : "Convenience service for inserting a JSON array into a database. \n<p> This creates insert statements based on the contents of each JSON object inside the array. The actual insert statement will only be generated once based on the first JSON object in the array and executed the appropriate number of times. </p> \n<pre> <code>\n [\n   { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" },\n   { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" },\n   { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }\n ]</code>\n </pre> will effectively execute the following statement \n<code>INSERT INTO table (firstname,lastname,dob) VALUES (?,?,?)</code> 3 times; batching as required using \n<code>PreparedStatement.addBatch()</code> / \n<code>Statement.executeBatch()</code>. \n<p></p> \n<p> Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so <code>{ \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}}</code> would still be 3 parameters, the address parameter will be <code>'{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'</code> </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html?is-external=true"
        },
        {
          "name" : "JdbcMapInsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapInsert.html?is-external=true"
        },
        {
          "name" : "InsertJsonObject",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/InsertJsonObject.html"
        },
        {
          "name" : "InsertJsonObjects",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/InsertJsonObjects.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/translators/StaticCacheValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.cache.translators.StaticCacheValueTranslator",
      "className" : "StaticCacheValueTranslator",
      "packageName" : "com.adaptris.core.services.cache.translators",
      "componentType" : "object",
      "alias" : "static-cache-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StaticCacheValueTranslator\nextends java.lang.Object\nimplements CacheValueTranslator<java.lang.String>, CacheKeyTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StaticCacheValueTranslator</span>\nextends java.lang.Object\nimplements <a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheValueTranslator</a>&lt;java.lang.String&gt;, <a href=\"../CacheKeyTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheKeyTranslator</a>",
      "description" : "Implementation of CacheValueTranslator that could be useful for resolving the key when checking or retrieving from a cache.",
      "descriptionHtml" : "Implementation of \n<a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheValueTranslator</code></a> that could be useful for resolving the key when checking or retrieving from a cache.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/JsonBlobListRendererLines.html",
      "fullClassName" : "com.adaptris.core.json.JsonBlobListRendererLines",
      "className" : "JsonBlobListRendererLines",
      "packageName" : "com.adaptris.core.json",
      "componentType" : "object",
      "alias" : "remote-blob-list-as-json-lines",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Render a list of RemoteBlob objects as a JSON Array, one line per object",
        "tag" : "cloud,aws,jclouds,blob,lines"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Render a list of RemoteBlob objects as a JSON Array, one line per object\",\n                  since=\"3.9.2\",\n                  tag=\"cloud,aws,jclouds,blob,lines\")\npublic class JsonBlobListRendererLines\nextends JsonBlobListRenderer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Render a list of RemoteBlob objects as a JSON Array, one line per object\",\n                  since=\"3.9.2\",\n                  tag=\"cloud,aws,jclouds,blob,lines\")\npublic class <span class=\"typeNameLabel\">JsonBlobListRendererLines</span>\nextends <a href=\"JsonBlobListRenderer.html\" title=\"class in com.adaptris.core.json\" target=\"_new\">JsonBlobListRenderer</a>",
      "description" : "Render a list of RemoteBlob as a JSON Array, one object per line.",
      "descriptionHtml" : "Render a list of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/interlok/cloud/RemoteBlob.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.cloud\" class=\"externalLink\" target=\"_new\"><code>RemoteBlob</code></a> as a JSON Array, one object per line.",
      "inheritance" : [
        {
          "name" : "JsonBlobListRenderer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/JsonBlobListRenderer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltTransformService.html",
      "fullClassName" : "com.adaptris.core.json.jslt.JsltTransformService",
      "className" : "JsltTransformService",
      "packageName" : "com.adaptris.core.json.jslt",
      "componentType" : "service",
      "alias" : "jslt-transform-service",
      "deprecated" : false,
      "jarFileName" : "interlok-jslt.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.12.0",
        "summary" : "Execute a JSLT Transform, using the result as the payload",
        "tag" : "jslt,transform,json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a JSLT Transform, using the result as the payload\",\n                  tag=\"jslt,transform,json\",\n                  since=\"3.12.0\",\n                  recommended=com.adaptris.core.services.cache.CacheConnection.class)\npublic class JsltTransformService\nextends ServiceImp\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a JSLT Transform, using the result as the payload\",\n                  tag=\"jslt,transform,json\",\n                  since=\"3.12.0\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.cache\" class=\"externalLink\" target=\"_new\">com.adaptris.core.services.cache.CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JsltTransformService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Execute a JSLT Transform, using the result as the payload",
      "descriptionHtml" : "Execute a JSLT Transform, using the result as the payload",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSLT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jslt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/GaussianIntervalPoller.html",
      "fullClassName" : "com.adaptris.core.GaussianIntervalPoller",
      "className" : "GaussianIntervalPoller",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "gaussian-interval-poller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class GaussianIntervalPoller\nextends ScheduledTaskPoller",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">GaussianIntervalPoller</span>\nextends <a href=\"ScheduledTaskPoller.html\" title=\"class in com.adaptris.core\" target=\"_new\">ScheduledTaskPoller</a>",
      "description" : "Implementation of Poller which polls at a random interval with a normal distribution. Note: Logic is as follows: Random.nextGaussian() * getMeanInterval() + getStandardDeviationInterval().",
      "descriptionHtml" : "<p> Implementation of <a href=\"Poller.html\" title=\"interface in com.adaptris.core\" target=\"_new\">Poller</a> which polls at a random interval with a normal distribution. </p> \n<p> Note: Logic is as follows: <br> <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Random.nextGaussian() * <a href=\"#getMeanInterval()\" target=\"_new\">getMeanInterval()</a> + <a href=\"#getStandardDeviationInterval()\" target=\"_new\">getStandardDeviationInterval()</a>. </p>",
      "inheritance" : [
        {
          "name" : "PollerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PollerImp.html"
        },
        {
          "name" : "ScheduledTaskPoller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ScheduledTaskPoller.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/CSVDocumentBuilder.html",
      "fullClassName" : "com.adaptris.core.elastic.CSVDocumentBuilder",
      "className" : "CSVDocumentBuilder",
      "packageName" : "com.adaptris.core.elastic",
      "componentType" : "object",
      "alias" : "elastic-csv-document-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Build documents for elasticsearch from a CSV document",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Build documents for elasticsearch from a CSV document\",\n                  since=\"3.9.1\")\npublic class CSVDocumentBuilder\nextends CSVDocumentBuilderImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Build documents for elasticsearch from a CSV document\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">CSVDocumentBuilder</span>\nextends <a href=\"CSVDocumentBuilderImpl.html\" title=\"class in com.adaptris.core.elastic\" target=\"_new\">CSVDocumentBuilderImpl</a>",
      "description" : "Builds a simple document for elastic search. The document that is created contains the following characteristics The first record of the CSV is usually assumed to be a header row, and is used as the fieldName for each entry. If use-header-record is marked as false, then fields will be generated according to their position. The \"unique-id\" for the document is derived from the specified column, duplicates may have unexpected results depending on your configuration.",
      "descriptionHtml" : "Builds a simple document for elastic search. \n<p> The document that is created contains the following characteristics </p>\n<ul> \n <li>The first record of the CSV is usually assumed to be a header row, and is used as the fieldName for each entry. If <code>use-header-record</code> is marked as false, then fields will be generated according to their position.</li> \n <li>The \"unique-id\" for the document is derived from the specified column, duplicates may have unexpected results depending on your configuration.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "CSVDocumentBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/CSVDocumentBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-webspheremq/4.0.0B1-RELEASE/com/adaptris/core/jms/wmq/MqSessionProperty.html",
      "fullClassName" : "com.adaptris.core.jms.wmq.MqSessionProperty",
      "className" : "MqSessionProperty",
      "packageName" : "com.adaptris.core.jms.wmq",
      "componentType" : "object",
      "alias" : "mq-session-property",
      "deprecated" : false,
      "jarFileName" : "interlok-webspheremq.jar",
      "profile" : { },
      "annotationDetails" : "public class MqSessionProperty\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MqSessionProperty</span>\nextends java.lang.Object",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/WebsphereMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-webspheremq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/xa/solace/XaAdvancedSolaceImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.xa.solace.XaAdvancedSolaceImplementation",
      "className" : "XaAdvancedSolaceImplementation",
      "packageName" : "com.adaptris.core.jms.xa.solace",
      "componentType" : "object",
      "alias" : "xa-advanced-solace-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class XaAdvancedSolaceImplementation\nextends AdvancedSolaceImplementation\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XaAdvancedSolaceImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/AdvancedSolaceImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms.solace\" class=\"externalLink\" target=\"_new\">AdvancedSolaceImplementation</a>\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "BasicSolaceImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/BasicSolaceImplementation.html?is-external=true"
        },
        {
          "name" : "AdvancedSolaceImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/AdvancedSolaceImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/lms/StaxPathSplitter.html",
      "fullClassName" : "com.adaptris.stax.lms.StaxPathSplitter",
      "className" : "StaxPathSplitter",
      "packageName" : "com.adaptris.stax.lms",
      "componentType" : "object",
      "alias" : "stax-path-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : { },
      "annotationDetails" : "public class StaxPathSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StaxPathSplitter</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.splitter\" class=\"externalLink\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "Splitter implementation that splits based on STaX events. This allows you to split via simple element traversal, so the path cannot be assumed to be an XPath. /path/to/repeating/element would be fine, but //repeating/element would not. It works based on XMLEventReader and navigates based on StartElement events only.",
      "descriptionHtml" : "Splitter implementation that splits based on STaX events. \n<p> This allows you to split via simple element traversal, so the path cannot be assumed to be an XPath. <code>/path/to/repeating/element</code> would be fine, but <code>//repeating/element</code> would not. It works based on <code>XMLEventReader</code> and navigates based on <code>StartElement</code> events only. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcXPathParameter.html",
      "fullClassName" : "com.adaptris.core.jdbc.JdbcXPathParameter",
      "className" : "JdbcXPathParameter",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-xpath-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JdbcXPathParameter\nextends NullableParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JdbcXPathParameter</span>\nextends <a href=\"NullableParameter.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">NullableParameter</a>",
      "description" : "Stored Procedure parameter implementation, can be used only for IN Stored Procedure parameters. When this implementation is used for an IN parameter, then an xpath expression will be evaluated from the AdaptrisMessage payload and used as the parameter value. You will simply set xpath to a valid xpath expression to retrieve data from the AdaptrisMessage payload. Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in ParameterValueType If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Stored Procedure parameter implementation, can be used only for IN Stored Procedure parameters. \n<p> When this implementation is used for an IN parameter, then an xpath expression will be evaluated from the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> payload and used as the parameter value. You will simply set xpath to a valid xpath expression to retrieve data from the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> payload. </p> \n<p> Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in <a href=\"../../jdbc/ParameterValueType.html\" title=\"enum in com.adaptris.jdbc\" target=\"_new\"><code>ParameterValueType</code></a> </p> \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "AbstractParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AbstractParameter.html"
        },
        {
          "name" : "NullableParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/NullableParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/AggregatingFsConsumer.html",
      "fullClassName" : "com.adaptris.core.fs.AggregatingFsConsumer",
      "className" : "AggregatingFsConsumer",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "object",
      "alias" : "aggregating-fs-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AggregatingFsConsumer\nextends AggregatingConsumerImpl<AggregatingFsConsumeService>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AggregatingFsConsumer</span>\nextends <a href=\"../services/aggregator/AggregatingConsumerImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">AggregatingConsumerImpl</a>&lt;<a href=\"AggregatingFsConsumeService.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\">AggregatingFsConsumeService</a>&gt;",
      "description" : "AggregatingConsumer implementation that allows you to read a separate message from the filesystem that is correlated in some way to the current message. If a filter-expression is available, then this works as a true aggregator; it will trigger the use of a FileFilter, and ultimately cause multiple files to be read and passed to the configured message aggregator. Note that no decision is made about the resulting size of the message, all messages that match the filter-expression will be aggregated; if there a 2000 files sitting in a directory that match the filter-expression, then that is how many will be picked up.",
      "descriptionHtml" : "<a href=\"../services/aggregator/AggregatingConsumer.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>AggregatingConsumer</code></a> implementation that allows you to read a separate message from the filesystem that is correlated in some way to the current message. \n<p> If a filter-expression is available, then this works as a true aggregator; it will trigger the use of a FileFilter, and ultimately cause multiple files to be read and passed to the configured message aggregator. Note that no decision is made about the resulting size of the message, all messages that match the filter-expression will be aggregated; if there a 2000 files sitting in a directory that match the filter-expression, then that is how many will be picked up. </p>",
      "inheritance" : [
        {
          "name" : "AggregatingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/AggregatingConsumerImpl.html"
        },
        {
          "name" : "AggregatingFsConsumeService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/AggregatingFsConsumeService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/payload/FilePayloadProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.payload.FilePayloadProvider",
      "className" : "FilePayloadProvider",
      "packageName" : "com.adaptris.tester.runtime.messages.payload",
      "componentType" : "object",
      "alias" : "file-payload-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class FilePayloadProvider\nextends PayloadProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FilePayloadProvider</span>\nextends <a href=\"PayloadProvider.html\" title=\"class in com.adaptris.tester.runtime.messages.payload\" target=\"_new\">PayloadProvider</a>",
      "inheritance" : [
        {
          "name" : "PayloadProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/payload/PayloadProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/qpid/AdvancedQpidJmsImplementation.html",
      "fullClassName" : "com.adaptris.core.amqp.qpid.AdvancedQpidJmsImplementation",
      "className" : "AdvancedQpidJmsImplementation",
      "packageName" : "com.adaptris.core.amqp.qpid",
      "componentType" : "object",
      "alias" : "qpid-advanced-jms-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-amqp.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedQpidJmsImplementation\nextends BasicQpidJmsImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedQpidJmsImplementation</span>\nextends <a href=\"BasicQpidJmsImplementation.html\" title=\"class in com.adaptris.core.amqp.qpid\" target=\"_new\">BasicQpidJmsImplementation</a>",
      "description" : "AMQP 1.0 implementation of VendorImplementation using Apache Qpid. Note that any custom properties as passed directly to JNDIStorable.setProperties(Map). Behaviour for unsupported properties will be implementation dependent. If you configure a username and password on the wrapping JmsConnection in which case ConnectionFactory.createConnection(String, String) is used when creating the connection otherwise ConnectionFactory.createConnection() will be used. This was built against org.apache.qpid:qpid-jms-client:0.8.0. This vendor implementation doesn't appear to be usable with Azure AMQP as is unless you follow the notes on stack overflow",
      "descriptionHtml" : "AMQP 1.0 implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementation</code></a> using Apache Qpid. \n<p> Note that any custom properties as passed directly to <code>JNDIStorable.setProperties(Map)</code>. Behaviour for unsupported properties will be implementation dependent. If you configure a username and password on the wrapping <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsConnection</code></a> in which case <code>ConnectionFactory.createConnection(String, String)</code> is used when creating the connection otherwise <code>ConnectionFactory.createConnection()</code> will be used. </p> \n<p> This was built against <code>org.apache.qpid:qpid-jms-client:0.8.0</code>. This vendor implementation doesn't appear to be usable with Azure AMQP as is unless you follow the notes on <a href=\"http://stackoverflow.com/questions/40281205/how-can-i-send-receive-a-message-from-azure-service-bus-from-qpid-jms-qpid-jms\" target=\"_new\">stack overflow</a> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "BasicQpidJmsImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/qpid/BasicQpidJmsImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/AMQP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-amqp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/IntegerValueMatcher.html",
      "fullClassName" : "com.adaptris.core.services.metadata.IntegerValueMatcher",
      "className" : "IntegerValueMatcher",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "object",
      "alias" : "integer-value-matcher",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class IntegerValueMatcher\nextends java.lang.Object\nimplements MetadataValueMatcher",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IntegerValueMatcher</span>\nextends java.lang.Object\nimplements <a href=\"MetadataValueMatcher.html\" title=\"interface in com.adaptris.core.services.metadata\" target=\"_new\">MetadataValueMatcher</a>",
      "description" : "Integer based value match implementation of MetadataValueMatcher for MetadataValueBranchingService. This allows a simple integer comparision to determine the branch that should be used. The key portion of the underlying MetadataToServiceIdMappings field is a simple expression that follows the following syntax <operator><value> where valid operators are < > = <= >= Precedence is determined by the natural ASCII sort order (0-9, <, =, > in that order) of the key portion; the first matching condition will be used. e.g. For a given serviceKey which evaluates to 20; if you have both >10 and >=20 configured in MetadataToServiceIdMappings, then >10 will be the matching expression due to the natural sort order of the two key values. The service key created from the associated metadata-keys is used as the left hand side of the expression",
      "descriptionHtml" : "Integer based value match implementation of MetadataValueMatcher for \n<a href=\"MetadataValueBranchingService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>MetadataValueBranchingService</code></a>. \n<p> This allows a simple integer comparision to determine the branch that should be used. The key portion of the underlying MetadataToServiceIdMappings field is a simple expression that follows the following syntax <code>&lt;operator&gt;&lt;value&gt;</code> where valid operators are </p>\n<ol> \n <li>&lt;</li> \n <li>&gt;</li> \n <li>=</li> \n <li>&lt;=</li> \n <li>&gt;=</li> \n</ol> Precedence is determined by the natural ASCII sort order (0-9, &lt;, =, &gt; in that order) of the key portion; the first matching condition will be used. e.g. For a given serviceKey which evaluates to \n<code>20</code>; if you have both &gt;10 and &gt;=20 configured in MetadataToServiceIdMappings, then \n<code>&gt;10</code> will be the matching expression due to the natural sort order of the two key values. \n<p></p> \n<p> The service key created from the associated metadata-keys is used as the left hand side of the expression </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/VerifyIsJson.html",
      "fullClassName" : "com.adaptris.core.json.VerifyIsJson",
      "className" : "VerifyIsJson",
      "packageName" : "com.adaptris.core.json",
      "componentType" : "service",
      "alias" : "verify-is-json",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "Verify that the payload is json using the configured deserializer",
        "tag" : "service,json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Verify that the payload is json using the configured deserializer\",\n                  tag=\"service,json\",\n                  since=\"3.11.0\")\npublic class VerifyIsJson\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Verify that the payload is json using the configured deserializer\",\n                  tag=\"service,json\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">VerifyIsJson</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Verify that the payload is considered json. Verifies that the message payload is in fact json and throws an exception if it is not",
      "descriptionHtml" : "Verify that the payload is considered json. \n<p> Verifies that the message payload is in fact json and throws an exception if it is not </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceFromUrl.html",
      "fullClassName" : "com.adaptris.core.services.dynamic.ServiceFromUrl",
      "className" : "ServiceFromUrl",
      "packageName" : "com.adaptris.core.services.dynamic",
      "componentType" : "object",
      "alias" : "dynamic-service-from-url",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Extract the service to execute from a URL (file/http etc)",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract the service to execute from a URL (file/http etc)\",\n                  since=\"3.8.4\")\npublic class ServiceFromUrl\nextends ServiceExtractorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract the service to execute from a URL (file/http etc)\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">ServiceFromUrl</span>\nextends <a href=\"ServiceExtractorImpl.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\">ServiceExtractorImpl</a>",
      "description" : "Extract the service to execute based on the configured URL.",
      "descriptionHtml" : "Extract the service to execute based on the configured URL.",
      "inheritance" : [
        {
          "name" : "ServiceExtractorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceExtractorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcDataCaptureService.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.JdbcDataCaptureService",
      "className" : "JdbcDataCaptureService",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "service",
      "alias" : "jdbc-data-capture-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jdbc.DatabaseConnection"
        ],
        "since" : "",
        "summary" : "Capture data from the message and store it in a database",
        "tag" : "service,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Capture data from the message and store it in a database\",\n                  tag=\"service,jdbc\",\n                  recommended=DatabaseConnection.class)\npublic class JdbcDataCaptureService\nextends JdbcIteratingDataCaptureServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Capture data from the message and store it in a database\",\n                  tag=\"service,jdbc\",\n                  recommended=<a href=\"../../jdbc/DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">DatabaseConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JdbcDataCaptureService</span>\nextends <a href=\"JdbcIteratingDataCaptureServiceImpl.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">JdbcIteratingDataCaptureServiceImpl</a>",
      "description" : "Capture Data from a AdaptrisMessage and store it in a JDBC-compliant database. While not deprecated; you are encouraged to use JdbcBatchingDataCaptureService instead for performance reasons. Set the JdbcBatchingDataCaptureService.setBatchWindow(Integer) to 1 to have functionally equivalent behaviour to this class. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Capture Data from a AdaptrisMessage and store it in a JDBC-compliant database. \n<p> While not deprecated; you are encouraged to use <a href=\"JdbcBatchingDataCaptureService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcBatchingDataCaptureService</code></a> instead for performance reasons. Set the <a href=\"JdbcBatchingDataCaptureService.html#setBatchWindow(java.lang.Integer)\" target=\"_new\"><code>JdbcBatchingDataCaptureService.setBatchWindow(Integer)</code></a> to <code>1</code> to have functionally equivalent behaviour to this class. </p> \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html"
        },
        {
          "name" : "JdbcServiceWithParameters",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcServiceWithParameters.html"
        },
        {
          "name" : "JdbcDataCaptureServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcDataCaptureServiceImpl.html"
        },
        {
          "name" : "JdbcIteratingDataCaptureServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcIteratingDataCaptureServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/event/AdapterInitEvent.html",
      "fullClassName" : "com.adaptris.core.event.AdapterInitEvent",
      "className" : "AdapterInitEvent",
      "packageName" : "com.adaptris.core.event",
      "componentType" : "object",
      "alias" : "adapter-init-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AdapterInitEvent\nextends AdapterLifecycleEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdapterInitEvent</span>\nextends <a href=\"../AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdapterLifecycleEvent</a>",
      "description" : "AdapterLifecycleEvent indicating that init has been invoked.",
      "descriptionHtml" : "<p> <code>AdapterLifecycleEvent</code> indicating that <code>init</code> has been invoked. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/ProcessedItem.html",
      "fullClassName" : "com.adaptris.core.fs.ProcessedItem",
      "className" : "ProcessedItem",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "object",
      "alias" : "processed-item",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ProcessedItem\nextends java.lang.Object\nimplements java.io.Serializable",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ProcessedItem</span>\nextends java.lang.Object\nimplements java.io.Serializable",
      "description" : "An entry in the ProcessedItemCache that marks a file that was already processed when using a NonDeletingFsConsumer.",
      "descriptionHtml" : "An entry in the \n<a href=\"ProcessedItemCache.html\" title=\"interface in com.adaptris.core.fs\" target=\"_new\"><code>ProcessedItemCache</code></a> that marks a file that was already processed when using a \n<a href=\"NonDeletingFsConsumer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\"><code>NonDeletingFsConsumer</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester-xml/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/xmlunit/AssertXmlPayloadEquals.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.xmlunit.AssertXmlPayloadEquals",
      "className" : "AssertXmlPayloadEquals",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion.xmlunit",
      "componentType" : "object",
      "alias" : "assert-xml-payload-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester-xml.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertXmlPayloadEquals\nextends com.adaptris.tester.runtime.messages.assertion.PayloadAssertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertXmlPayloadEquals</span>\nextends com.adaptris.tester.runtime.messages.assertion.PayloadAssertion",
      "description" : "Checks if TestMessage.getPayload() equals PayloadAssertion.getPayload() Assertions are used to validate the returned message is expected.",
      "descriptionHtml" : "Checks if \n<code>TestMessage.getPayload()</code> equals \n<code>PayloadAssertion.getPayload()</code> \n<p>Assertions are used to validate the returned message is expected.</p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/XML",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester-xml",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/ConfiguredRecipient.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.ConfiguredRecipient",
      "className" : "ConfiguredRecipient",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-configured-recipient",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredRecipient\nextends Recipient",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredRecipient</span>\nextends <a href=\"Recipient.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">Recipient</a>",
      "description" : "Statically configured AQjmsAgent",
      "descriptionHtml" : "Statically configured AQjmsAgent",
      "inheritance" : [
        {
          "name" : "Recipient",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/Recipient.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/IsEmpty.html",
      "fullClassName" : "com.adaptris.core.services.conditional.operator.IsEmpty",
      "className" : "IsEmpty",
      "packageName" : "com.adaptris.core.services.conditional.operator",
      "componentType" : "object",
      "alias" : "is-empty",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a value is null or empty",
        "tag" : "conditional,operator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a value is null or empty\",\n                  tag=\"conditional,operator\")\npublic class IsEmpty\nextends java.lang.Object\nimplements Operator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a value is null or empty\",\n                  tag=\"conditional,operator\")\npublic class <span class=\"typeNameLabel\">IsEmpty</span>\nextends java.lang.Object\nimplements <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Operator</a>",
      "description" : "This Operator simply tests that the given value evaluates to null or an empty string. The value used in the isEmpty test is the Condition that this Operator is configured for; which could be the message payload or a metadata item for example.",
      "descriptionHtml" : "<p> This <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> simply tests that the given value evaluates to null or an empty string. </p> \n<p> The value used in the isEmpty test is the <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> that this <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> is configured for; which could be the message payload or a metadata item for example. <br> </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/NullRepository.html",
      "fullClassName" : "com.adaptris.core.sap.NullRepository",
      "className" : "NullRepository",
      "packageName" : "com.adaptris.core.sap",
      "componentType" : "object",
      "alias" : "sap-noop-tid-repository",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class NullRepository\nextends TransactionIdRepository",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullRepository</span>\nextends <a href=\"TransactionIdRepository.html\" title=\"class in com.adaptris.core.sap\" target=\"_new\">TransactionIdRepository</a>",
      "description" : "Null implementation of the TransactionIdRepository. This implementation simply returns null objects and does nothing when requested to store a transaction id.",
      "descriptionHtml" : "Null implementation of the TransactionIdRepository. \n<p> This implementation simply returns null objects and does nothing when requested to store a transaction id. </p>",
      "inheritance" : [
        {
          "name" : "TransactionIdRepository",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/TransactionIdRepository.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/JacksonJsonDeserializer.html",
      "fullClassName" : "com.adaptris.core.json.JacksonJsonDeserializer",
      "className" : "JacksonJsonDeserializer",
      "packageName" : "com.adaptris.core.json",
      "componentType" : "object",
      "alias" : "jackson-json-deserializer",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Convert an AdaptrisMessage using 'com.fasterxml.jackson.core:jackson-databind'",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Convert an AdaptrisMessage using \\'com.fasterxml.jackson.core:jackson-databind\\'\")\npublic class JacksonJsonDeserializer\nextends java.lang.Object\nimplements JsonDeserializer<com.fasterxml.jackson.databind.JsonNode>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Convert an AdaptrisMessage using \\'com.fasterxml.jackson.core:jackson-databind\\'\")\npublic class <span class=\"typeNameLabel\">JacksonJsonDeserializer</span>\nextends java.lang.Object\nimplements <a href=\"JsonDeserializer.html\" title=\"interface in com.adaptris.core.json\" target=\"_new\">JsonDeserializer</a>&lt;com.fasterxml.jackson.databind.JsonNode&gt;",
      "description" : "Implementation based using the com.fasterxml.jackson.core:jackson-databind library.",
      "descriptionHtml" : "Implementation based using the \n<code>com.fasterxml.jackson.core:jackson-databind</code> library.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/DoubleColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.DoubleColumnTranslator",
      "className" : "DoubleColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-double-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DoubleColumnTranslator\nextends FormattableColumnTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DoubleColumnTranslator</span>\nextends <a href=\"FormattableColumnTranslator.html\" title=\"class in com.adaptris.core.services.jdbc.types\" target=\"_new\">FormattableColumnTranslator</a>",
      "description" : "Column Translator implementation for handling double types",
      "descriptionHtml" : "Column Translator implementation for handling double types",
      "inheritance" : [
        {
          "name" : "FormattableColumnTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/FormattableColumnTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ChannelCloseErrorHandler.html",
      "fullClassName" : "com.adaptris.core.ChannelCloseErrorHandler",
      "className" : "ChannelCloseErrorHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "channel-close-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ChannelCloseErrorHandler\nextends ConnectionErrorHandlerImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ChannelCloseErrorHandler</span>\nextends <a href=\"ConnectionErrorHandlerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ConnectionErrorHandlerImp</a>",
      "description" : "ConnectionErrorHandler which shutdowns the channel where there is a problem.",
      "descriptionHtml" : "<a href=\"ConnectionErrorHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ConnectionErrorHandler</code></a> which shutdowns the channel where there is a problem.",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/KieService.html",
      "fullClassName" : "com.adaptris.kie.services.KieService",
      "className" : "KieService",
      "packageName" : "com.adaptris.kie.services",
      "componentType" : "service",
      "alias" : "kie-service",
      "deprecated" : false,
      "jarFileName" : "interlok-kie.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.kie.services.KieConnection"
        ],
        "since" : "3.8.2",
        "summary" : "Stateful KIE/Drools Engine execution",
        "tag" : "service,drools,kie"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Stateful KIE/Drools Engine execution\",\n                  tag=\"service,drools,kie\",\n                  since=\"3.8.2\",\n                  recommended=KieConnection.class)\npublic class KieService\nextends KieServiceImpl<org.kie.api.runtime.KieSession>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Stateful KIE/Drools Engine execution\",\n                  tag=\"service,drools,kie\",\n                  since=\"3.8.2\",\n                  recommended=<a href=\"KieConnection.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">KieConnection.class</a>)\npublic class <span class=\"typeNameLabel\">KieService</span>\nextends <a href=\"KieServiceImpl.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">KieServiceImpl</a>&lt;org.kie.api.runtime.KieSession&gt;",
      "description" : "Stateful KIE/Drools Engine execution.",
      "descriptionHtml" : "Stateful KIE/Drools Engine execution.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "KieServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/KieServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/KIE",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kie",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertMetadataKeyExists.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertMetadataKeyExists",
      "className" : "AssertMetadataKeyExists",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-metadata-key-exists",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertMetadataKeyExists\nextends AssertMetadataKeyImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertMetadataKeyExists</span>\nextends <a href=\"AssertMetadataKeyImpl.html\" title=\"class in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">AssertMetadataKeyImpl</a>",
      "description" : "Checks the value of TestMessage.getMessageHeaders() contains kvp with key matching AssertMetadataKeyImpl.getKey().",
      "descriptionHtml" : "Checks the value of \n<a href=\"../TestMessage.html#getMessageHeaders()\" target=\"_new\"><code>TestMessage.getMessageHeaders()</code></a> contains kvp with key matching \n<a href=\"AssertMetadataKeyImpl.html#getKey()\" target=\"_new\"><code>AssertMetadataKeyImpl.getKey()</code></a>.",
      "inheritance" : [
        {
          "name" : "AssertMetadataKeyImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertMetadataKeyImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/FixedValuesMetadataFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.FixedValuesMetadataFilter",
      "className" : "FixedValuesMetadataFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "fixed-values-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Replaces all metadata with a fixed set of metadata",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Replaces all metadata with a fixed set of metadata\",\n                  since=\"3.9.0\")\npublic class FixedValuesMetadataFilter\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Replaces all metadata with a fixed set of metadata\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">FixedValuesMetadataFilter</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "MetadataFilter that just uses the configured KeyValuePairSet as the metadata. This class will have the effect of replacing all metadata with a fixed set of metadata.",
      "descriptionHtml" : "<a href=\"MetadataFilter.html\" title=\"interface in com.adaptris.core.metadata\" target=\"_new\"><code>MetadataFilter</code></a> that just uses the configured \n<a href=\"../../util/KeyValuePairSet.html\" title=\"class in com.adaptris.util\" target=\"_new\"><code>KeyValuePairSet</code></a> as the metadata. \n<p> This class will have the effect of replacing all metadata with a fixed set of metadata. </p>",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/ThrottlingInterceptor.html",
      "fullClassName" : "com.adaptris.core.interceptor.ThrottlingInterceptor",
      "className" : "ThrottlingInterceptor",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "throttling-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Throttles message flow based on some message count criteria",
        "tag" : "interceptor,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Throttles message flow based on some message count criteria\",\n                  tag=\"interceptor,jmx\")\npublic class ThrottlingInterceptor\nextends WorkflowInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Throttles message flow based on some message count criteria\",\n                  tag=\"interceptor,jmx\")\npublic class <span class=\"typeNameLabel\">ThrottlingInterceptor</span>\nextends <a href=\"WorkflowInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">WorkflowInterceptorImpl</a>",
      "description" : "The throttling interceptor will attempt to limit the number of messages that are processed by an adapter over a given time slot. A time slice is measured through the setTimeSliceInterval(TimeInterval). Once the first message is processed by this interceptor, a time slice is created. The start of the time slice is the current time, the end of the time slice is set as the current time + the number of time units in the configuration. Every message processed by the interceptor will start a check to see if the current time slice is out of date. If it is out of date, then a new time slice is created. If the current time slice is not out of date, then we check to make sure the maximum messages have not already passed through. If we have not yet reached the maximum messages for the current time slice, we simply increment the message count on the time slice. If we have reached the maximum messages, then we will delay this processing thread until the current time slice is finished, and finally a new time slice is created. Any given instance of the ThrottlingInterceptor can be set to work with a particular cache name. This allows you to configure a throttling interceptor on one or more workflows to all use the same time slice or use a completely different time slice. For example, you can set workflow A and workflow B to both have a throttling interceptor, where both interceptors use the same cache name. This will have the effect of restricting the sum of messages passing through both workflows against the same time slice statistics. Likewise, you may have a third workflow with an interceptor configured to use a different cache name. This means messages passing through the third workflow will not have the same throttling restrictions as those on workflow A and B. The following properties may be set in configuration; time-slice-interval - This is the number of time units each time slice will use. The default value is 5. maximum-messages - The maximum amount of messages allowed to pass through the current time slice The default value is Integer.MAX_VALUE cache-provider - The implementation that handles the time slice memory management. The default is TimeSliceDefaultCacheProvider cache-name - This allows you to set the cache name that the time slice statistics will be created/used from;this must be specified",
      "descriptionHtml" : "The throttling interceptor will attempt to limit the number of messages that are processed by an adapter over a given time slot. \n<p> A time slice is measured through the <a href=\"#setTimeSliceInterval(com.adaptris.util.TimeInterval)\" target=\"_new\"><code>setTimeSliceInterval(TimeInterval)</code></a>. Once the first message is processed by this interceptor, a time slice is created. The start of the time slice is the current time, the end of the time slice is set as the current time + the number of time units in the configuration. Every message processed by the interceptor will start a check to see if the current time slice is out of date. If it is out of date, then a new time slice is created. If the current time slice is not out of date, then we check to make sure the maximum messages have not already passed through. If we have not yet reached the maximum messages for the current time slice, we simply increment the message count on the time slice. If we have reached the maximum messages, then we will delay this processing thread until the current time slice is finished, and finally a new time slice is created. </p> \n<p> Any given instance of the ThrottlingInterceptor can be set to work with a particular cache name. This allows you to configure a throttling interceptor on one or more workflows to all use the same time slice or use a completely different time slice. </p> \n<p> For example, you can set workflow A and workflow B to both have a throttling interceptor, where both interceptors use the same cache name. This will have the effect of restricting the sum of messages passing through both workflows against the same time slice statistics. </p> \n<p> Likewise, you may have a third workflow with an interceptor configured to use a different cache name. This means messages passing through the third workflow will not have the same throttling restrictions as those on workflow A and B. </p> The following properties may be set in configuration; \n<ul> \n <li>time-slice-interval - This is the number of time units each time slice will use. The default value is 5.</li> \n <li>maximum-messages - The maximum amount of messages allowed to pass through the current time slice The default value is <code>Integer.MAX_VALUE</code></li> \n <li>cache-provider - The implementation that handles the time slice memory management. The default is <a href=\"TimeSliceDefaultCacheProvider.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>TimeSliceDefaultCacheProvider</code></a></li> \n <li>cache-name - This allows you to set the cache name that the time slice statistics will be created/used from;<strong>this must be specified</strong></li> \n</ul>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jruby/4.0.0B1-RELEASE/com/adaptris/jruby/JRubyScriptingContainer.html",
      "fullClassName" : "com.adaptris.jruby.JRubyScriptingContainer",
      "className" : "JRubyScriptingContainer",
      "packageName" : "com.adaptris.jruby",
      "componentType" : "service",
      "alias" : "jruby-scripting-service",
      "deprecated" : false,
      "jarFileName" : "interlok-jruby.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Execute a JRuby script stored on the filesystem/classpath",
        "tag" : "service,scripting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a JRuby script stored on the filesystem/classpath\",\n                  tag=\"service,scripting\",\n                  branchSelector=true)\npublic class JRubyScriptingContainer\nextends ServiceImp\nimplements DynamicPollingTemplate.TemplateProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a JRuby script stored on the filesystem/classpath\",\n                  tag=\"service,scripting\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">JRubyScriptingContainer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DynamicPollingTemplate.TemplateProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">DynamicPollingTemplate.TemplateProvider</a>",
      "description" : "Execute a jruby script using JRuby Embed Core Scripting container. Rather than making use of the JSR223 bindings where things need to be controlled via system properties; this makes use of ScriptingContainer to execute your jruby scripts which allows more fine-grained control over the behaviour. In addition to specifying the script that works on the AdaptrisMessage object; you have the option of specifying scripts that should be executed as each part of the lifecycle phases init(), start(), stop(), close(). The service-script will executed at runtime and the AdaptrisMessage that is due to be processed is bound as a variable message. All executed scripts will have an instance of org.slf4j.Logger is also bound as log. These can be used as a standard variables within the script though of course you may need additional qualifiers if you specify a different ContainerBuilderImpl.getVariableBehaviour().",
      "descriptionHtml" : "Execute a jruby script using \n<code>JRuby Embed Core</code> Scripting container. \n<p> Rather than making use of the JSR223 bindings where things need to be controlled via system properties; this makes use of <code>ScriptingContainer</code> to execute your jruby scripts which allows more fine-grained control over the behaviour. </p> \n<p> In addition to specifying the script that works on the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> object; you have the option of specifying scripts that should be executed as each part of the lifecycle phases <code>init(), start(), stop(), close()</code>. </p> \n<p> The <code>service-script</code> will executed at runtime and the AdaptrisMessage that is due to be processed is bound as a variable <code>message</code>. All executed scripts will have an instance of org.slf4j.Logger is also bound as <code>log</code>. These can be used as a standard variables within the script though of course you may need additional qualifiers if you specify a different <a href=\"ContainerBuilderImpl.html#getVariableBehaviour()\" target=\"_new\"><code>ContainerBuilderImpl.getVariableBehaviour()</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Scripting/JRuby",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jruby",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionNot.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.ConditionNot",
      "className" : "ConditionNot",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "not",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Allows you to negate the given condition result",
        "tag" : "condition"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Allows you to negate the given condition result\",\n                  tag=\"condition\")\npublic class ConditionNot\nextends ConditionImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Allows you to negate the given condition result\",\n                  tag=\"condition\")\npublic class <span class=\"typeNameLabel\">ConditionNot</span>\nextends <a href=\"ConditionImpl.html\" title=\"class in com.adaptris.core.services.conditional.conditions\" target=\"_new\">ConditionImpl</a>",
      "description" : "This Condition allows you to negate a child Condition's result.",
      "descriptionHtml" : "<p> This <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> allows you to negate a child <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a>'s result. </p>",
      "inheritance" : [
        {
          "name" : "ConditionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MultiPayloadByteArrayOutputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MultiPayloadByteArrayOutputParameter",
      "className" : "MultiPayloadByteArrayOutputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "multi-payload-byte-array-output-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MultiPayloadByteArrayOutputParameter\nextends ByteArrayPayloadDataOutputParameter\nimplements DataOutputParameter<byte[]>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultiPayloadByteArrayOutputParameter</span>\nextends <a href=\"ByteArrayPayloadDataOutputParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">ByteArrayPayloadDataOutputParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataOutputParameter</a>&lt;byte[]&gt;",
      "description" : "This MultiPayloadDataOutputParameter is used when you want to insert data into the MultiPayloadAdaptrisMessage payload.",
      "descriptionHtml" : "This \n<code>MultiPayloadDataOutputParameter</code> is used when you want to insert data into the \n<a href=\"../MultiPayloadAdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>MultiPayloadAdaptrisMessage</code></a> payload.",
      "inheritance" : [
        {
          "name" : "ByteArrayPayloadDataOutputParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/ByteArrayPayloadDataOutputParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/DefaultClientBuilder.html",
      "fullClassName" : "com.adaptris.core.http.apache.DefaultClientBuilder",
      "className" : "DefaultClientBuilder",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "default-apache-http-client-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultClientBuilder\nextends java.lang.Object\nimplements HttpClientBuilderConfigurator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultClientBuilder</span>\nextends java.lang.Object\nimplements <a href=\"HttpClientBuilderConfigurator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\">HttpClientBuilderConfigurator</a>",
      "description" : "default HttpClientBuilderConfigurator instance",
      "descriptionHtml" : "default \n<a href=\"HttpClientBuilderConfigurator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\"><code>HttpClientBuilderConfigurator</code></a> instance",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-rest-health-check/4.0.0B1-RELEASE/com/adaptris/rest/healthcheck/AdapterState.html",
      "fullClassName" : "com.adaptris.rest.healthcheck.AdapterState",
      "className" : "AdapterState",
      "packageName" : "com.adaptris.rest.healthcheck",
      "componentType" : "object",
      "alias" : "adapter-state",
      "deprecated" : false,
      "jarFileName" : "interlok-rest-health-check.jar",
      "profile" : { },
      "annotationDetails" : "public class AdapterState\nextends State",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdapterState</span>\nextends <a href=\"State.html\" title=\"class in com.adaptris.rest.healthcheck\" target=\"_new\">State</a>",
      "inheritance" : [
        {
          "name" : "State",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-rest-health-check/4.0.0B1-RELEASE/com/adaptris/rest/healthcheck/State.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Management/REST: Health Check",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-rest-health-check",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataStreamOutputParameter.html",
      "fullClassName" : "com.adaptris.core.common.MetadataStreamOutputParameter",
      "className" : "MetadataStreamOutputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "metadata-stream-output-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataStreamOutputParameter\nextends MetadataStreamParameter\nimplements DataOutputParameter<InputStreamWithEncoding>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataStreamOutputParameter</span>\nextends <a href=\"MetadataStreamParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">MetadataStreamParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataOutputParameter</a>&lt;<a href=\"InputStreamWithEncoding.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">InputStreamWithEncoding</a>&gt;",
      "description" : "This DataOutputParameter is used when you want to write some data to AdaptrisMessage metadata.",
      "descriptionHtml" : "This \n<code>DataOutputParameter</code> is used when you want to write some data to \n<a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata.",
      "inheritance" : [
        {
          "name" : "MetadataStreamParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataStreamParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-pdf/4.0.0B1-RELEASE/com/adaptris/core/transform/pdf/PdfToHtmlService.html",
      "fullClassName" : "com.adaptris.core.transform.pdf.PdfToHtmlService",
      "className" : "PdfToHtmlService",
      "packageName" : "com.adaptris.core.transform.pdf",
      "componentType" : "service",
      "alias" : "pdf-to-html-service",
      "deprecated" : false,
      "jarFileName" : "interlok-pdf.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Transform PDF into HTML",
        "tag" : "service,transform,html,pdf"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform PDF into HTML\",\n                  tag=\"service,transform,html,pdf\",\n                  since=\"3.9.0\")\npublic class PdfToHtmlService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform PDF into HTML\",\n                  tag=\"service,transform,html,pdf\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">PdfToHtmlService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Transform service which allows us to generate HTML from PDF.",
      "descriptionHtml" : "Transform service which allows us to generate HTML from PDF.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/PDF",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-pdf",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-expressions/4.0.0B1-RELEASE/com/adaptris/expressions/NumericalResultFormatter.html",
      "fullClassName" : "com.adaptris.expressions.NumericalResultFormatter",
      "className" : "NumericalResultFormatter",
      "packageName" : "com.adaptris.expressions",
      "componentType" : "object",
      "alias" : "numerical-result-formatter",
      "deprecated" : false,
      "jarFileName" : "interlok-expressions.jar",
      "profile" : { },
      "annotationDetails" : "public class NumericalResultFormatter\nextends java.lang.Object\nimplements ResultFormatter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NumericalResultFormatter</span>\nextends java.lang.Object\nimplements <a href=\"ResultFormatter.html\" title=\"interface in com.adaptris.expressions\" target=\"_new\">ResultFormatter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Scripting/Expressions",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-expressions",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/MetadataResponseHeaderProvider.html",
      "fullClassName" : "com.adaptris.core.http.jetty.MetadataResponseHeaderProvider",
      "className" : "MetadataResponseHeaderProvider",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-metadata-response-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataResponseHeaderProvider\nextends java.lang.Object\nimplements ResponseHeaderProvider<javax.servlet.http.HttpServletResponse>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataResponseHeaderProvider</span>\nextends java.lang.Object\nimplements <a href=\"../server/ResponseHeaderProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\">ResponseHeaderProvider</a>&lt;javax.servlet.http.HttpServletResponse&gt;",
      "description" : "ResponseHeaderProvider implementation that providers HTTP response headers from metadata.",
      "descriptionHtml" : "<a href=\"../server/ResponseHeaderProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>ResponseHeaderProvider</code></a> implementation that providers HTTP response headers from metadata.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/config/DefaultPreProcessorLoader.html",
      "fullClassName" : "com.adaptris.core.config.DefaultPreProcessorLoader",
      "className" : "DefaultPreProcessorLoader",
      "packageName" : "com.adaptris.core.config",
      "componentType" : "object",
      "alias" : "default-pre-processor-loader",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultPreProcessorLoader\nextends java.lang.Object\nimplements ConfigPreProcessorLoader",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultPreProcessorLoader</span>\nextends java.lang.Object\nimplements <a href=\"ConfigPreProcessorLoader.html\" title=\"interface in com.adaptris.core.config\" target=\"_new\">ConfigPreProcessorLoader</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/SaxonStreamWriterFactory.html",
      "fullClassName" : "com.adaptris.stax.SaxonStreamWriterFactory",
      "className" : "SaxonStreamWriterFactory",
      "packageName" : "com.adaptris.stax",
      "componentType" : "object",
      "alias" : "stax-saxon-stream-writer",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : { },
      "annotationDetails" : "public class SaxonStreamWriterFactory\nextends java.lang.Object\nimplements XmlOutputFactoryBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SaxonStreamWriterFactory</span>\nextends java.lang.Object\nimplements <a href=\"XmlOutputFactoryBuilder.html\" title=\"interface in com.adaptris.stax\" target=\"_new\">XmlOutputFactoryBuilder</a>",
      "description" : "XmlOutputFactoryBuilder implementation that uses net.sf.saxon.lib.SerializerFactory#getXMLStreamWriter().",
      "descriptionHtml" : "<a href=\"XmlOutputFactoryBuilder.html\" title=\"interface in com.adaptris.stax\" target=\"_new\"><code>XmlOutputFactoryBuilder</code></a> implementation that uses \n<code>net.sf.saxon.lib.SerializerFactory#getXMLStreamWriter()</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/ScriptingService.html",
      "fullClassName" : "com.adaptris.core.services.ScriptingService",
      "className" : "ScriptingService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "scripting-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Execute a JSR223 script stored on the filesystem",
        "tag" : "service,scripting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a JSR223 script stored on the filesystem\",\n                  tag=\"service,scripting\",\n                  branchSelector=true)\npublic class ScriptingService\nextends ScriptingServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a JSR223 script stored on the filesystem\",\n                  tag=\"service,scripting\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">ScriptingService</span>\nextends <a href=\"ScriptingServiceImp.html\" title=\"class in com.adaptris.core.services\" target=\"_new\">ScriptingServiceImp</a>",
      "description" : "Supports arbitary scripting languges that are supported by JSR223. You should take care when configuring this class; it can present an audit trail issue when used in combination with DynamicServiceExecutor if your script executes arbitrary system commands. In that situation, all commands will be executed with the current users permissions and may be subject to the virtual machines security manager. The script is executed and the AdaptrisMessage that is due to be processed is bound against the key \"message\" and an instance of org.slf4j.Logger is also bound to key \"log\". These can be used as a standard variable within the script. Note that this class can be used as the selector as part of a BranchingServiceCollection. If used as such, then you need to remember to invoke AdaptrisMessage.setNextServiceId(String) as part of the script and ScriptingServiceImp.setBranchingEnabled(Boolean) should be true.",
      "descriptionHtml" : "Supports arbitary scripting languges that are supported by JSR223. \n<p> You should take care when configuring this class; it can present an audit trail issue when used in combination with <a href=\"dynamic/DynamicServiceExecutor.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\"><code>DynamicServiceExecutor</code></a> if your script executes arbitrary system commands. In that situation, all commands will be executed with the current users permissions and may be subject to the virtual machines security manager. </p> \n<p> The script is executed and the AdaptrisMessage that is due to be processed is bound against the key \"message\" and an instance of org.slf4j.Logger is also bound to key \"log\". These can be used as a standard variable within the script. </p> \n<p> Note that this class can be used as the selector as part of a <a href=\"../BranchingServiceCollection.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>BranchingServiceCollection</code></a>. If used as such, then you need to remember to invoke <a href=\"../AdaptrisMessage.html#setNextServiceId(java.lang.String)\" target=\"_new\"><code>AdaptrisMessage.setNextServiceId(String)</code></a> as part of the script and <a href=\"ScriptingServiceImp.html#setBranchingEnabled(java.lang.Boolean)\" target=\"_new\"><code>ScriptingServiceImp.setBranchingEnabled(Boolean)</code></a> should be true. </p>\n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "ScriptingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/ScriptingServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3GetOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.S3GetOperation",
      "className" : "S3GetOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-get",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : { },
      "annotationDetails" : "public class S3GetOperation\nextends TransferOperation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">S3GetOperation</span>\nextends <a href=\"TransferOperation.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">TransferOperation</a>",
      "description" : "Get an object from S3 and store the contents of the object either in the message payload or metadata.",
      "descriptionHtml" : "Get an object from S3 and store the contents of the object either in the message payload or metadata.",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        },
        {
          "name" : "ObjectOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ObjectOperationImpl.html"
        },
        {
          "name" : "TransferOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/TransferOperation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-datalake/4.0.0B1-RELEASE/com/adaptris/interlok/azure/datalake/DataLakeProducer.html",
      "fullClassName" : "com.adaptris.interlok.azure.datalake.DataLakeProducer",
      "className" : "DataLakeProducer",
      "packageName" : "com.adaptris.interlok.azure.datalake",
      "componentType" : "producer",
      "alias" : "azure-data-lake-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-datalake.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Put data into a Azure Data Lake",
        "tag" : "producer,azure,data lake,data,lake"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Put data into a Azure Data Lake\",\n                  tag=\"producer,azure,data lake,data,lake\")\npublic class DataLakeProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Put data into a Azure Data Lake\",\n                  tag=\"producer,azure,data lake,data,lake\")\npublic class <span class=\"typeNameLabel\">DataLakeProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "Implementation of a file producer that can upload files to Microsoft Data Lake.",
      "descriptionHtml" : "Implementation of a file producer that can upload files to Microsoft Data Lake.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/DataLake",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-datalake",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-streaming/4.0.0B1-RELEASE/com/adaptris/core/json/streaming/DefaultStreamingTransformationDriver.html",
      "fullClassName" : "com.adaptris.core.json.streaming.DefaultStreamingTransformationDriver",
      "className" : "DefaultStreamingTransformationDriver",
      "packageName" : "com.adaptris.core.json.streaming",
      "componentType" : "object",
      "alias" : "default-streaming-transformation-driver",
      "deprecated" : false,
      "jarFileName" : "interlok-json-streaming.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "streaming xml/json driver using defaults",
        "tag" : "json,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"streaming xml/json driver using defaults\",\n                  tag=\"json,xml\",\n                  since=\"3.11.0\")\npublic class DefaultStreamingTransformationDriver\nextends java.lang.Object\nimplements com.adaptris.core.transform.json.TransformationDriver",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"streaming xml/json driver using defaults\",\n                  tag=\"json,xml\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">DefaultStreamingTransformationDriver</span>\nextends java.lang.Object\nimplements com.adaptris.core.transform.json.TransformationDriver",
      "description" : "TransformationDriver implementation that uses all the defaults.",
      "descriptionHtml" : "<code>TransformationDriver</code> implementation that uses all the defaults.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON Streaming",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-streaming",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/metadata/EmptyMetadataProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.metadata.EmptyMetadataProvider",
      "className" : "EmptyMetadataProvider",
      "packageName" : "com.adaptris.tester.runtime.messages.metadata",
      "componentType" : "object",
      "alias" : "empty-metadata-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class EmptyMetadataProvider\nextends MetadataProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EmptyMetadataProvider</span>\nextends <a href=\"MetadataProvider.html\" title=\"class in com.adaptris.tester.runtime.messages.metadata\" target=\"_new\">MetadataProvider</a>",
      "inheritance" : [
        {
          "name" : "MetadataProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/metadata/MetadataProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/util/MetadataKeysOnly.html",
      "fullClassName" : "com.adaptris.core.util.MetadataKeysOnly",
      "className" : "MetadataKeysOnly",
      "packageName" : "com.adaptris.core.util",
      "componentType" : "object",
      "alias" : "message-logging-with-metadata-keys-only",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Log metadata keys only",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Log metadata keys only\",\n                  since=\"3.8.4\")\npublic class MetadataKeysOnly\nextends java.lang.Object\nimplements MetadataLogger",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Log metadata keys only\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">MetadataKeysOnly</span>\nextends java.lang.Object\nimplements <a href=\"../MetadataLogger.html\" title=\"interface in com.adaptris.core\" target=\"_new\">MetadataLogger</a>",
      "description" : "MetadataLogger implementation that that logs metadata keys only",
      "descriptionHtml" : "MetadataLogger implementation that that logs metadata keys only",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/generic/JsonBasedAccessToken.html",
      "fullClassName" : "com.adaptris.core.oauth.generic.JsonBasedAccessToken",
      "className" : "JsonBasedAccessToken",
      "packageName" : "com.adaptris.core.oauth.generic",
      "componentType" : "object",
      "alias" : "oauth-access-token-via-json",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-generic.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Get a OAUTH token by POSTing a JSON payload to the specified URL.",
        "tag" : "oauth,http,https,json"
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.11.1\",\n                  summary=\"Get a OAUTH token by POSTing a JSON payload to the specified URL.\",\n                  tag=\"oauth,http,https,json\")\npublic class JsonBasedAccessToken\nextends GenericAccessTokenImpl",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.11.1\",\n                  summary=\"Get a OAUTH token by POSTing a JSON payload to the specified URL.\",\n                  tag=\"oauth,http,https,json\")\npublic class <span class=\"typeNameLabel\">JsonBasedAccessToken</span>\nextends <a href=\"GenericAccessTokenImpl.html\" title=\"class in com.adaptris.core.oauth.generic\" target=\"_new\">GenericAccessTokenImpl</a>",
      "description" : "Wraps the a URL Form based OAuth authentication flow. This class is designed for the situation where the OAUTH provider does not have a specific API that we can use. The sequence of events is : Filter the metadata to create a JSON payload; the JSON payload is build exlusively from the metadata keys specified. Post this to the configured URL. Extract the access token information via the configured OauthResponseHandler This then is your access token It is perfectly possible to achieve the same thing with standard configuration; This encapsulates all of that into a single class. If you have encoded passwords in your metadata, consider using a PasswordDecodeMetadataFilter as part of a CompositeMetadataFilter.",
      "descriptionHtml" : "Wraps the a URL Form based OAuth authentication flow. \n<p> This class is designed for the situation where the OAUTH provider does not have a specific API that we can use. The sequence of events is : </p> \n<ul> \n <li>Filter the metadata to create a JSON payload; the JSON payload is build exlusively from the metadata keys specified.</li> \n <li>Post this to the configured URL.</li> \n <li>Extract the access token information via the configured OauthResponseHandler</li> \n <li>This then is your access token</li> \n <p></p> \n <p> It is perfectly possible to achieve the same thing with standard configuration; This encapsulates all of that into a single class. If you have encoded passwords in your metadata, consider using a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/PasswordDecodeMetadataFilter.html?is-external=true\" title=\"class or interface in com.adaptris.core.metadata\" class=\"externalLink\" target=\"_new\"><code>PasswordDecodeMetadataFilter</code></a> as part of a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/CompositeMetadataFilter.html?is-external=true\" title=\"class or interface in com.adaptris.core.metadata\" class=\"externalLink\" target=\"_new\"><code>CompositeMetadataFilter</code></a>. </p>\n</ul>",
      "inheritance" : [
        {
          "name" : "GenericAccessTokenImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/generic/GenericAccessTokenImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Generic",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-generic",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/duplicate/CheckMetadataValueService.html",
      "fullClassName" : "com.adaptris.core.services.duplicate.CheckMetadataValueService",
      "className" : "CheckMetadataValueService",
      "packageName" : "com.adaptris.core.services.duplicate",
      "componentType" : "service",
      "alias" : "check-metadata-value-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Perform a branch based on whether a metadata value has already been processed",
        "tag" : "service,duplicate"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a branch based on whether a metadata value has already been processed\",\n                  tag=\"service,duplicate\")\npublic class CheckMetadataValueService\nextends DuplicateMetadataValueService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a branch based on whether a metadata value has already been processed\",\n                  tag=\"service,duplicate\")\npublic class <span class=\"typeNameLabel\">CheckMetadataValueService</span>\nextends <a href=\"DuplicateMetadataValueService.html\" title=\"class in com.adaptris.core.services.duplicate\" target=\"_new\">DuplicateMetadataValueService</a>",
      "description" : "Branching Service implementation which checks the value stored against a configured metadata key against a list of previously received values. If the value to check is null or empty, a ServiceException is thrown. If the value has previously been received, the configured nextServiceIdIfDuplicate is set on the message. If the value is not contained in the store of previous values, nextServiceIdIfUnique is set.",
      "descriptionHtml" : "<p> Branching <code>Service</code> implementation which checks the value stored against a configured metadata key against a list of previously received values. If the value to check is null or empty, a <code>ServiceException</code> is thrown. If the value has previously been received, the configured <code>nextServiceIdIfDuplicate</code> is set on the message. If the value is not contained in the store of previous values, <code>nextServiceIdIfUnique</code> is set. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "DuplicateMetadataValueService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/duplicate/DuplicateMetadataValueService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/attachment/XmlAttachmentHandler.html",
      "fullClassName" : "com.adaptris.core.mail.attachment.XmlAttachmentHandler",
      "className" : "XmlAttachmentHandler",
      "packageName" : "com.adaptris.core.mail.attachment",
      "componentType" : "object",
      "alias" : "mail-xml-attachment-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlAttachmentHandler\nextends java.lang.Object\nimplements AttachmentHandler",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlAttachmentHandler</span>\nextends java.lang.Object\nimplements <a href=\"AttachmentHandler.html\" title=\"interface in com.adaptris.core.mail.attachment\" target=\"_new\">AttachmentHandler</a>",
      "description" : "Handle attachments for MultiAttachmentSmtpProducer. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Handle attachments for \n<a href=\"MultiAttachmentSmtpProducer.html\" title=\"class in com.adaptris.core.mail.attachment\" target=\"_new\"><code>MultiAttachmentSmtpProducer</code></a>. \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/NoCache.html",
      "fullClassName" : "com.adaptris.core.fs.NoCache",
      "className" : "NoCache",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "object",
      "alias" : "fs-no-processed-item-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoCache\nextends java.lang.Object\nimplements ProcessedItemCache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoCache</span>\nextends java.lang.Object\nimplements <a href=\"ProcessedItemCache.html\" title=\"interface in com.adaptris.core.fs\" target=\"_new\">ProcessedItemCache</a>",
      "description" : "ProcessedItemCache implementation that doesn't cache.",
      "descriptionHtml" : "<a href=\"ProcessedItemCache.html\" title=\"interface in com.adaptris.core.fs\" target=\"_new\"><code>ProcessedItemCache</code></a> implementation that doesn't cache.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/translators/BytePayloadCacheValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.cache.translators.BytePayloadCacheValueTranslator",
      "className" : "BytePayloadCacheValueTranslator",
      "packageName" : "com.adaptris.core.services.cache.translators",
      "componentType" : "object",
      "alias" : "byte-payload-cache-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BytePayloadCacheValueTranslator\nextends java.lang.Object\nimplements CacheValueTranslator<byte[]>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BytePayloadCacheValueTranslator</span>\nextends java.lang.Object\nimplements <a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheValueTranslator</a>&lt;byte[]&gt;",
      "description" : "Implementation of CacheValueTranslator that retrieves / sets the payload of the message.",
      "descriptionHtml" : "Implementation of \n<a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheValueTranslator</code></a> that retrieves / sets the payload of the message.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/IgnoreMailHeaders.html",
      "fullClassName" : "com.adaptris.core.mail.IgnoreMailHeaders",
      "className" : "IgnoreMailHeaders",
      "packageName" : "com.adaptris.core.mail",
      "componentType" : "object",
      "alias" : "ignore-mail-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : { },
      "annotationDetails" : "public class IgnoreMailHeaders\nextends java.lang.Object\nimplements MailHeaderHandler",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IgnoreMailHeaders</span>\nextends java.lang.Object\nimplements <a href=\"MailHeaderHandler.html\" title=\"interface in com.adaptris.core.mail\" target=\"_new\">MailHeaderHandler</a>",
      "description" : "Do nothing with mail headers.",
      "descriptionHtml" : "Do nothing with mail headers.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/attachment/XmlBodyHandler.html",
      "fullClassName" : "com.adaptris.core.mail.attachment.XmlBodyHandler",
      "className" : "XmlBodyHandler",
      "packageName" : "com.adaptris.core.mail.attachment",
      "componentType" : "object",
      "alias" : "mail-xml-body-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlBodyHandler\nextends java.lang.Object\nimplements BodyHandler",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlBodyHandler</span>\nextends java.lang.Object\nimplements <a href=\"BodyHandler.html\" title=\"interface in com.adaptris.core.mail.attachment\" target=\"_new\">BodyHandler</a>",
      "description" : "Handle the body for MultiAttachmentSmtpProducer where the XPath should be treated as an XML document. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Handle the body for \n<a href=\"MultiAttachmentSmtpProducer.html\" title=\"class in com.adaptris.core.mail.attachment\" target=\"_new\"><code>MultiAttachmentSmtpProducer</code></a> where the XPath should be treated as an XML document. \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/FormDataToMetadata.html",
      "fullClassName" : "com.adaptris.core.services.metadata.FormDataToMetadata",
      "className" : "FormDataToMetadata",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "www-url-form-encoded-payload-to-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Turn a application/www-url-form-encoded payload into metadata.",
        "tag" : "service,metadata,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Turn a application/www-url-form-encoded payload into metadata.\",\n                  tag=\"service,metadata,http,https\",\n                  since=\"3.9.0\")\npublic class FormDataToMetadata\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Turn a application/www-url-form-encoded payload into metadata.\",\n                  tag=\"service,metadata,http,https\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">FormDataToMetadata</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Takes a application/x-www-url-form-encoded payload and extracts it as metadata. If the client is sending data to the adapter, it is possible that the client will send data as though it were a standard Html Form post. In situations like that, then the payload is a number of URLEncoded key value pairs. This service can be used to convert all the Request parameters into metadata. contentTypeKey will be checked to see if the content-type is in fact application/x-www-url-form-encoded; if it is, then the payload is parsed as into metadata, note that the payload is always unchanged.",
      "descriptionHtml" : "Takes a application/x-www-url-form-encoded payload and extracts it as metadata. \n<p> If the client is sending data to the adapter, it is possible that the client will send data as though it were a standard Html Form post. In situations like that, then the payload is a number of URLEncoded key value pairs. This service can be used to convert all the Request parameters into metadata. </p> \n<p> <code>contentTypeKey</code> will be checked to see if the content-type is in fact <code>application/x-www-url-form-encoded</code>; if it is, then the payload is parsed as into metadata, note that the payload is always unchanged. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/CharacterStreamStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.CharacterStreamStatementParameter",
      "className" : "CharacterStreamStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-character-stream-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CharacterStreamStatementParameter\nextends NamedStatementParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CharacterStreamStatementParameter</span>\nextends <a href=\"NamedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">NamedStatementParameter</a>",
      "description" : "Character Stream Statement Parameter.",
      "descriptionHtml" : "Character Stream Statement Parameter.",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/UpsertJsonArray.html",
      "fullClassName" : "com.adaptris.core.json.jdbc.UpsertJsonArray",
      "className" : "UpsertJsonArray",
      "packageName" : "com.adaptris.core.json.jdbc",
      "componentType" : "service",
      "alias" : "json-array-jdbc-upsert",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Insert/Update a JSON Array into a database",
        "tag" : "service,json,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Insert/Update a JSON Array into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class UpsertJsonArray\nextends UpsertJsonObjects",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Insert/Update a JSON Array into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">UpsertJsonArray</span>\nextends <a href=\"UpsertJsonObjects.html\" title=\"class in com.adaptris.core.json.jdbc\" target=\"_new\">UpsertJsonObjects</a>",
      "description" : "Convenience service for inserting/updating a JSON array into a database. Creates an insert or update statement based on the contents of the JSON object inside the array. [{ \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\", \"id\": \"1234\"}] will effectively execute the following statement INSERT INTO table (firstname,lastname,dob,id) VALUES (?,?,?,?) or UPDATE table SET firstname=?, lastname=?, dob=? WHERE id = ?; if 1234 already exists as a row. Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so { \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}} would still be 3 parameters, the address parameter will be '{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'",
      "descriptionHtml" : "Convenience service for inserting/updating a JSON array into a database. \n<p> Creates an insert or update statement based on the contents of the JSON object inside the array. <code>[{ \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\", \"id\": \"1234\"}]</code> will effectively execute the following statement <code>INSERT INTO table (firstname,lastname,dob,id) VALUES (?,?,?,?)</code> or <code>UPDATE table SET firstname=?, lastname=?, dob=? WHERE id = ?;</code> if <code>1234</code> already exists as a row. </p> \n<p> Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so <code>{ \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}}</code> would still be 3 parameters, the address parameter will be <code>'{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'</code> </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html?is-external=true"
        },
        {
          "name" : "JdbcMapInsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapInsert.html?is-external=true"
        },
        {
          "name" : "JdbcMapUpsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapUpsert.html?is-external=true"
        },
        {
          "name" : "UpsertJsonObject",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/UpsertJsonObject.html"
        },
        {
          "name" : "UpsertJsonObjects",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/UpsertJsonObjects.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/event/StandardAdapterStartUpEvent.html",
      "fullClassName" : "com.adaptris.core.event.StandardAdapterStartUpEvent",
      "className" : "StandardAdapterStartUpEvent",
      "packageName" : "com.adaptris.core.event",
      "componentType" : "object",
      "alias" : "standard-adapter-start-up-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StandardAdapterStartUpEvent\nextends AdapterStartUpEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StandardAdapterStartUpEvent</span>\nextends <a href=\"../AdapterStartUpEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdapterStartUpEvent</a>",
      "description" : "Event containing Adapter start-up information..",
      "descriptionHtml" : "<p> Event containing <code>Adapter</code> start-up information.. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        },
        {
          "name" : "AdapterStartUpEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterStartUpEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/BranchingServiceCollection.html",
      "fullClassName" : "com.adaptris.core.BranchingServiceCollection",
      "className" : "BranchingServiceCollection",
      "packageName" : "com.adaptris.core",
      "componentType" : "service-collection",
      "alias" : "branching-service-collection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Collection of services where the next service is determined dynamically",
        "tag" : "service,base,branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Collection of services where the next service is determined dynamically\",\n                  tag=\"service,base,branching\")\npublic class BranchingServiceCollection\nextends ServiceCollectionImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Collection of services where the next service is determined dynamically\",\n                  tag=\"service,base,branching\")\npublic class <span class=\"typeNameLabel\">BranchingServiceCollection</span>\nextends <a href=\"ServiceCollectionImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceCollectionImp</a>",
      "description" : "Implementation of ServiceCollection which allows branching services to select the next service to apply.",
      "descriptionHtml" : "Implementation of \n<a href=\"ServiceCollection.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ServiceCollection</code></a> which allows \n<code>branching</code> services to select the next service to apply.",
      "inheritance" : [
        {
          "name" : "Service",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Service.html"
        },
        {
          "name" : "ServiceCollectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceCollectionImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/mail/Pop3sReceiverFactory.html",
      "fullClassName" : "com.adaptris.mail.Pop3sReceiverFactory",
      "className" : "Pop3sReceiverFactory",
      "packageName" : "com.adaptris.mail",
      "componentType" : "object",
      "alias" : "pop3s-receiver-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : { },
      "annotationDetails" : "public class Pop3sReceiverFactory\nextends Pop3ReceiverFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Pop3sReceiverFactory</span>\nextends <a href=\"Pop3ReceiverFactory.html\" title=\"class in com.adaptris.mail\" target=\"_new\">Pop3ReceiverFactory</a>",
      "description" : "MailReceiverFactory that supports POP3S using the commons net POP3SClient. This only supports POP3S. Attempts to use POP3/IMAP(S) will cause an exception. While the underlying protocol is still POP3; This factory will always attempt to initialise TLS in one of two ways: Implicit TLS means that the negotiation happens immediately after the initial connect Explicit TLS means that a STLS command is sent immediately after the initial connect. Because the underlying POP3 client needs to implement the existing MailReceiver interface, it will attempt to retrieve every message available int the POP3 mailbox before any filtering is performed. If the POP3 mailbox is large, or has many messages that need to be filtered; then performance may be impaired.",
      "descriptionHtml" : "<a href=\"MailReceiverFactory.html\" title=\"interface in com.adaptris.mail\" target=\"_new\"><code>MailReceiverFactory</code></a> that supports POP3S using the commons net \n<code>POP3SClient</code>. \n<p> This only supports <code>POP3S</code>. Attempts to use POP3/IMAP(S) will cause an exception. While the underlying protocol is still POP3; This factory will <strong>always</strong> attempt to initialise TLS in one of two ways: </p> \n<ul> \n <li>Implicit TLS means that the negotiation happens immediately after the initial connect</li> \n <li>Explicit TLS means that a <code>STLS</code> command is sent immediately after the initial connect.</li> \n</ul> \n<p> Because the underlying POP3 client needs to implement the existing <a href=\"MailReceiver.html\" title=\"interface in com.adaptris.mail\" target=\"_new\"><code>MailReceiver</code></a> interface, it will attempt to retrieve every message available int the POP3 mailbox before any filtering is performed. If the POP3 mailbox is large, or has many messages that need to be filtered; then performance may be impaired. </p>",
      "inheritance" : [
        {
          "name" : "Pop3ReceiverFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/mail/Pop3ReceiverFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/XmlFileRepository.html",
      "fullClassName" : "com.adaptris.core.sap.XmlFileRepository",
      "className" : "XmlFileRepository",
      "packageName" : "com.adaptris.core.sap",
      "componentType" : "object",
      "alias" : "sap-xml-tid-repository",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlFileRepository\nextends TransactionIdRepository",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlFileRepository</span>\nextends <a href=\"TransactionIdRepository.html\" title=\"class in com.adaptris.core.sap\" target=\"_new\">TransactionIdRepository</a>",
      "description" : "XML implementation of the TransactionIdRepository that stores all the tids in a Set in a file. This object is probably not particularly thread-safe, it does attempt to lock the file for access using a semaphore file, however, this is not guaranteed to work on some filesystems. By default, entries that are present for over 90 days will be purged.",
      "descriptionHtml" : "XML implementation of the TransactionIdRepository that stores all the tids in a Set in a file. \n<p> This object is probably not particularly thread-safe, it does attempt to lock the file for access using a semaphore file, however, this is not guaranteed to work on some filesystems. </p> \n<p> By default, entries that are present for over 90 days will be purged. </p>",
      "inheritance" : [
        {
          "name" : "TransactionIdRepository",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/TransactionIdRepository.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/core/tibrv/RendezvousProducer.html",
      "fullClassName" : "com.adaptris.core.tibrv.RendezvousProducer",
      "className" : "RendezvousProducer",
      "packageName" : "com.adaptris.core.tibrv",
      "componentType" : "producer",
      "alias" : "tibrv-rendezvous-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-tibco.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Send messages to Tibco Rendezvous",
        "tag" : "producer,tibco"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send messages to Tibco Rendezvous\",\n                  tag=\"producer,tibco\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class RendezvousProducer\nextends ProduceOnlyProducerImp\nimplements com.tibco.tibrv.TibrvMsgCallback, LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send messages to Tibco Rendezvous\",\n                  tag=\"producer,tibco\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">RendezvousProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>\nimplements com.tibco.tibrv.TibrvMsgCallback, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Implementation of AdaptrisMessageProducee which handles Tibco Rendezvous messages. Implements TibrvMsgCallback to handle confirmation messages which are received if this class is used in conjunction with CertifiedRendezvousClient.",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageProducee</code> which handles Tibco Rendezvous messages. </p> \n<p> Implements <code>TibrvMsgCallback</code> to handle confirmation messages which are received if this class is used in conjunction with <code>CertifiedRendezvousClient</code>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Tibco",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-tibco",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyPoolingWorkflowInterceptor.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JettyPoolingWorkflowInterceptor",
      "className" : "JettyPoolingWorkflowInterceptor",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "interceptor",
      "alias" : "jetty-pooling-workflow-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that allows a jetty consumer to be part of a PoolingWorkflow",
        "tag" : "interceptor,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that allows a jetty consumer to be part of a PoolingWorkflow\",\n                  tag=\"interceptor,http,https\")\npublic class JettyPoolingWorkflowInterceptor\nextends JettyWorkflowInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that allows a jetty consumer to be part of a PoolingWorkflow\",\n                  tag=\"interceptor,http,https\")\npublic class <span class=\"typeNameLabel\">JettyPoolingWorkflowInterceptor</span>\nextends <a href=\"JettyWorkflowInterceptorImpl.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">JettyWorkflowInterceptorImpl</a>",
      "description" : "WorkflowInterceptor implementation that allows a Jetty Consumer to be part of a PoolingWorkflow.",
      "descriptionHtml" : "WorkflowInterceptor implementation that allows a Jetty Consumer to be part of a \n<a href=\"../../PoolingWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>PoolingWorkflow</code></a>.",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        },
        {
          "name" : "JettyWorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyWorkflowInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/PayloadFromTemplateService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.PayloadFromTemplateService",
      "className" : "PayloadFromTemplateService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "payload-from-template",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.0",
        "summary" : "Construct a new payload based on metadata and a template",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Construct a new payload based on metadata and a template\",\n                  tag=\"service,metadata\",\n                  since=\"3.10.0\")\npublic class PayloadFromTemplateService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Construct a new payload based on metadata and a template\",\n                  tag=\"service,metadata\",\n                  since=\"3.10.0\")\npublic class <span class=\"typeNameLabel\">PayloadFromTemplateService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Replaces the payload with something built from a template and optional metadata keys. Takes the template stored in setTemplate(String) and replaces parts of the template either by resolving the %message expression language or with values from various metadata keys specified in setMetadataTokens(KeyValuePairSet) to create a new payload. This replaces PayloadFromMetadataService. Since under the covers it uses the JDK regular expression engine, take care when your replacement may contain special regular expression characters (such as \\ and $",
      "descriptionHtml" : "Replaces the payload with something built from a template and optional metadata keys. \n<p> Takes the template stored in <a href=\"#setTemplate(java.lang.String)\" target=\"_new\"><code>setTemplate(String)</code></a> and replaces parts of the template either by resolving the <code>%message</code> expression language or with values from various metadata keys specified in <a href=\"#setMetadataTokens(com.adaptris.util.KeyValuePairSet)\" target=\"_new\"><code>setMetadataTokens(KeyValuePairSet)</code></a> to create a new payload. This replaces <code>PayloadFromMetadataService</code>. </p> \n<p> Since under the covers it uses the JDK regular expression engine, take care when your replacement may contain special regular expression characters (such as <code>\\</code> and <code>$</code> </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneRequestor.html",
      "fullClassName" : "com.adaptris.core.StandaloneRequestor",
      "className" : "StandaloneRequestor",
      "packageName" : "com.adaptris.core",
      "componentType" : "service",
      "alias" : "standalone-requestor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Perform a synchronous request operation, storing the reply in the message",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a synchronous request operation, storing the reply in the message\",\n                  tag=\"service\")\npublic class StandaloneRequestor\nextends StandaloneProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a synchronous request operation, storing the reply in the message\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">StandaloneRequestor</span>\nextends <a href=\"StandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\">StandaloneProducer</a>",
      "description" : "StandaloneProducer extension that allows request reply functionality within a service",
      "descriptionHtml" : "StandaloneProducer extension that allows request reply functionality within a service",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "StandaloneProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcObjectMetadataParameter.html",
      "fullClassName" : "com.adaptris.core.jdbc.JdbcObjectMetadataParameter",
      "className" : "JdbcObjectMetadataParameter",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-object-metadata-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JdbcObjectMetadataParameter\nextends JdbcMetadataParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JdbcObjectMetadataParameter</span>\nextends <a href=\"JdbcMetadataParameter.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">JdbcMetadataParameter</a>",
      "description" : "Stored Procedure parameter implementation, can be used for all IN, INOUT and OUT Stored Procedure parameters. If this implementation is used for an IN or an INOUT parameter, then the metadata will be pulled from the AdaptrisMessage and used as the parameter value. If this implementation is used for an OUT or an INOUT parameter, then the value of the matching parameter after the Stored Procedure has run, will be reapplied into the AdaptrisMessage as metadata. You will simply set the metadataKey, to both retrieve a value or to set a new value as above. Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in ParameterValueType",
      "descriptionHtml" : "Stored Procedure parameter implementation, can be used for all IN, INOUT and OUT Stored Procedure parameters. \n<p> If this implementation is used for an IN or an INOUT parameter, then the metadata will be pulled from the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> and used as the parameter value. If this implementation is used for an OUT or an INOUT parameter, then the value of the matching parameter after the Stored Procedure has run, will be reapplied into the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> as metadata. You will simply set the metadataKey, to both retrieve a value or to set a new value as above. </p> \n<p> Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in <a href=\"../../jdbc/ParameterValueType.html\" title=\"enum in com.adaptris.jdbc\" target=\"_new\"><code>ParameterValueType</code></a> </p>",
      "inheritance" : [
        {
          "name" : "AbstractParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AbstractParameter.html"
        },
        {
          "name" : "NullableParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/NullableParameter.html"
        },
        {
          "name" : "JdbcMetadataParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcMetadataParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/MetadataXpathQuery.html",
      "fullClassName" : "com.adaptris.core.services.metadata.xpath.MetadataXpathQuery",
      "className" : "MetadataXpathQuery",
      "packageName" : "com.adaptris.core.services.metadata.xpath",
      "componentType" : "object",
      "alias" : "metadata-xpath-query",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataXpathQuery\nextends MetadataXpathQueryImpl\nimplements XpathQuery",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataXpathQuery</span>\nextends <a href=\"MetadataXpathQueryImpl.html\" title=\"class in com.adaptris.core.services.metadata.xpath\" target=\"_new\">MetadataXpathQueryImpl</a>\nimplements <a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a>",
      "description" : "XpathQuery implementation that retuns a single text item from an xpath derived from metadata.",
      "descriptionHtml" : "<a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a> implementation that retuns a single text item from an xpath derived from metadata.",
      "inheritance" : [
        {
          "name" : "XpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/XpathQueryImpl.html"
        },
        {
          "name" : "MetadataXpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/MetadataXpathQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/SchemaViolation.html",
      "fullClassName" : "com.adaptris.core.transform.schema.SchemaViolation",
      "className" : "SchemaViolation",
      "packageName" : "com.adaptris.core.transform.schema",
      "componentType" : "object",
      "alias" : "schema-violation",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SchemaViolation\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SchemaViolation</span>\nextends java.lang.Object",
      "description" : "Object model representation of all an individual schema violation for rendering purposes.",
      "descriptionHtml" : "Object model representation of all an individual schema violation for rendering purposes.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/server/MetadataStatusProvider.html",
      "fullClassName" : "com.adaptris.core.http.server.MetadataStatusProvider",
      "className" : "MetadataStatusProvider",
      "packageName" : "com.adaptris.core.http.server",
      "componentType" : "object",
      "alias" : "http-metadata-status",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataStatusProvider\nextends java.lang.Object\nimplements HttpStatusProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataStatusProvider</span>\nextends java.lang.Object\nimplements <a href=\"HttpStatusProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\">HttpStatusProvider</a>",
      "description" : "Implementation of HttpStatusProvider that can derive the status and text from AdaptrisMessage metadata. If the configured metadata key does not exist / non-numeric, then getDefaultStatus() is used to provide the Status.",
      "descriptionHtml" : "Implementation of \n<a href=\"HttpStatusProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>HttpStatusProvider</code></a> that can derive the status and text from \n<a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata. \n<p>If the configured metadata key does not exist / non-numeric, then <a href=\"#getDefaultStatus()\" target=\"_new\"><code>getDefaultStatus()</code></a> is used to provide the Status. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/DesprayFromThor.html",
      "fullClassName" : "com.adaptris.hpcc.DesprayFromThor",
      "className" : "DesprayFromThor",
      "packageName" : "com.adaptris.hpcc",
      "componentType" : "producer",
      "alias" : "despray-from-thor",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.hpcc.DfuplusConnection"
        ],
        "since" : "",
        "summary" : "Despray a logical file from HPCC into the current message via dfuplus",
        "tag" : "producer,hpcc,dfuplus,thor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Despray a logical file from HPCC into the current message via dfuplus\",\n                  tag=\"producer,hpcc,dfuplus,thor\",\n                  recommended=DfuplusConnection.class)\npublic class DesprayFromThor\nextends SingleFileRequest",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Despray a logical file from HPCC into the current message via dfuplus\",\n                  tag=\"producer,hpcc,dfuplus,thor\",\n                  recommended=<a href=\"DfuplusConnection.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">DfuplusConnection.class</a>)\npublic class <span class=\"typeNameLabel\">DesprayFromThor</span>\nextends <a href=\"SingleFileRequest.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">SingleFileRequest</a>",
      "description" : "Despray a file from Thor. Note that although this is an implementation of AdaptrisMessageProducerImp the AdaptrisMessageProducer#produce() methods will throw a UnsupportedOperationException. It should be used as part of a StandaloneRequestor where the SingleFileRequest.getLogicalFilename() returns the logical filename of the file that you wish to retrieve. The adapter also needs a running dfuplus action=dafilesrv instance on the machine where the adapter is hosted. Thor will connect to this instance to deliver the files.",
      "descriptionHtml" : "Despray a file from Thor. \n<p> Note that although this is an implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducerImp</code></a> the <code>AdaptrisMessageProducer#produce()</code> methods will throw a <code>UnsupportedOperationException</code>. It should be used as part of a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneRequestor.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneRequestor</code></a> where the <a href=\"SingleFileRequest.html#getLogicalFilename()\" target=\"_new\"><code>SingleFileRequest.getLogicalFilename()</code></a> returns the logical filename of the file that you wish to retrieve. </p> \n<p> The adapter also needs a running <code>dfuplus action=dafilesrv</code> instance on the machine where the adapter is hosted. Thor will connect to this instance to deliver the files. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "DfuPlusWrapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/DfuPlusWrapper.html"
        },
        {
          "name" : "RequestOnlyImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/RequestOnlyImpl.html"
        },
        {
          "name" : "SingleFileRequest",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/SingleFileRequest.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/ExpiringMapCache.html",
      "fullClassName" : "com.adaptris.core.cache.ExpiringMapCache",
      "className" : "ExpiringMapCache",
      "packageName" : "com.adaptris.core.cache",
      "componentType" : "object",
      "alias" : "expiring-map-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.0",
        "summary" : "",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.8.0\")\npublic class ExpiringMapCache\nextends java.lang.Object\nimplements Cache",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.8.0\")\npublic class <span class=\"typeNameLabel\">ExpiringMapCache</span>\nextends java.lang.Object\nimplements <a href=\"Cache.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\">Cache</a>",
      "description" : "Cache implementation backed by net.jodah:expiringmap hosted on github. Note that this implementation supports all the operations defined in Cache so you can use this if you need per-item expiry and other features.",
      "descriptionHtml" : "Cache implementation backed by \n<code>net.jodah:expiringmap</code> hosted on \n<a href=\"https://github.com/jhalterman/expiringmap\" target=\"_new\">github</a>. \n<p> Note that this implementation supports all the operations defined in <a href=\"Cache.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\"><code>Cache</code></a> so you can use this if you need per-item expiry and other features. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/ObjectMetadataExceptionHandler.html",
      "fullClassName" : "com.adaptris.core.json.schema.ObjectMetadataExceptionHandler",
      "className" : "ObjectMetadataExceptionHandler",
      "packageName" : "com.adaptris.core.json.schema",
      "componentType" : "object",
      "alias" : "json-schema-validation-exception-as-object-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Store schema violations as object metadata",
        "tag" : "json,validation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Store schema violations as object metadata\",\n                  tag=\"json,validation\")\npublic class ObjectMetadataExceptionHandler\nextends DefaultValidationExceptionHandler",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Store schema violations as object metadata\",\n                  tag=\"json,validation\")\npublic class <span class=\"typeNameLabel\">ObjectMetadataExceptionHandler</span>\nextends <a href=\"DefaultValidationExceptionHandler.html\" title=\"class in com.adaptris.core.json.schema\" target=\"_new\">DefaultValidationExceptionHandler</a>",
      "description" : "Implementation of ValidationExceptionHandler that stores the actual exception as object metadata.",
      "descriptionHtml" : "Implementation of \n<a href=\"ValidationExceptionHandler.html\" title=\"interface in com.adaptris.core.json.schema\" target=\"_new\"><code>ValidationExceptionHandler</code></a> that stores the actual exception as object metadata.",
      "inheritance" : [
        {
          "name" : "ValidationExceptionHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/ValidationExceptionHandlerImpl.html"
        },
        {
          "name" : "DefaultValidationExceptionHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/DefaultValidationExceptionHandler.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/AS400Connection.html",
      "fullClassName" : "com.adaptris.as400.AS400Connection",
      "className" : "AS400Connection",
      "packageName" : "com.adaptris.as400",
      "componentType" : "connection",
      "alias" : "as400-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-as400.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A connection used for AS400 command calls.",
        "tag" : "connections,as400"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A connection used for AS400 command calls.\",\n                  tag=\"connections,as400\")\npublic class AS400Connection\nextends AdaptrisConnectionImp\nimplements LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A connection used for AS400 command calls.\",\n                  tag=\"connections,as400\")\npublic class <span class=\"typeNameLabel\">AS400Connection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnectionImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "A configurable connection used with Adaptris AS400 components. Simply set the host, username and password.",
      "descriptionHtml" : "<p> A configurable connection used with Adaptris AS400 components. </p> \n<p> Simply set the host, username and password. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OS/AS400",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-as400",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-geode/4.0.0B1-RELEASE/com/adaptris/core/cache/geode/ClientCacheFromFile.html",
      "fullClassName" : "com.adaptris.core.cache.geode.ClientCacheFromFile",
      "className" : "ClientCacheFromFile",
      "packageName" : "com.adaptris.core.cache.geode",
      "componentType" : "object",
      "alias" : "geode-client-cache-from-file",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-geode.jar",
      "profile" : { },
      "annotationDetails" : "public class ClientCacheFromFile\nextends java.lang.Object\nimplements ClientCacheBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ClientCacheFromFile</span>\nextends java.lang.Object\nimplements <a href=\"ClientCacheBuilder.html\" title=\"interface in com.adaptris.core.cache.geode\" target=\"_new\">ClientCacheBuilder</a>",
      "description" : "Uses ClientCacheFactory#set(String, value) with cache-xml-file to build the client cache.",
      "descriptionHtml" : "Uses \n<code>ClientCacheFactory#set(String, value)</code> with \n<code>cache-xml-file</code> to build the client cache.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/Apache Geode",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-geode",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/path/json/JsonPathService.html",
      "fullClassName" : "com.adaptris.core.services.path.json.JsonPathService",
      "className" : "JsonPathService",
      "packageName" : "com.adaptris.core.services.path.json",
      "componentType" : "service",
      "alias" : "json-path-service",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extract a value from a JSON document",
        "tag" : "service,transform,json,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract a value from a JSON document\",\n                  tag=\"service,transform,json,metadata\")\npublic class JsonPathService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract a value from a JSON document\",\n                  tag=\"service,transform,json,metadata\")\npublic class <span class=\"typeNameLabel\">JsonPathService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service allows you to search JSON content and the results are then set back into the message. The searching works in much the same way as XPath, for more information on how to build a JSON path see the JSONPath documentation. For example, if you have a message with the following payload;  \n {\n  \"store\": {\n    \"book\": [ {\n      \"category\": \"reference\",\n      \"author\": \"Nigel Rees\",\n      \"title\": \"Sayings of the Century\",\n      \"price\": 8.95\n    }, {\n      \"category\": \"fiction\",\n      \"author\": \"Evelyn Waugh\",\n      \"title\": \"Sword of Honour\",\n      \"price\": 12.99\n    }, {\n      \"category\": \"fiction\",\n      \"author\": \"Herman Melville\",\n      \"title\": \"Moby Dick\",\n      \"isbn\": \"0-553-21311-3\",\n      \"price\": 8.99\n    }, {\n      \"category\": \"fiction\",\n      \"author\": \"J. R. R. Tolkien\",\n      \"title\": \"The Lord of the Rings\",\n      \"isbn\": \"0-395-19395-8\",\n      \"price\": 22.99\n    } ],\n    \"bicycle\": {\n      \"color\": \"red\",\n      \"price\": 19.95\n    }\n  },\n  \"expensive\": 10\n }\n \n You could configure 2 target destinations, each one creating a new metadata item with the results of the specified search, like this;  \n <json-path-service>\n   <json-path-execution>\n     <source class=\"constant-data-input-parameter\">\n       <value>$.store.book[0].title</value>\n     </source>\n     <target class=\"metadata-data-output-parameter\">\n       <metadata-key>metadata-key-1</metadata-key>\n     </target>\n     <suppress-path-not-found>true</suppress-path-not-found>\n   </json-path-execution>\n   <json-path-execution>\n     <source class=\"constant-data-input-parameter\">\n       <value>$.store.book[1].title</value>\n     </source>\n     <target class=\"metadata-data-output-parameter\">\n       <metadata-key>metadata-key-2</metadata-key>\n     </target>\n   </json-path-execution>\n </json-path-service>\n \n The first target above searches for the first book title, the second target searches for the second book title. Each target-destination will be executed in the order they are configured and therefore with the two targets shown here, your message, after the service has run, will include two new metadata items; metadata-key-1 = \"Sayings of the Century\" metadata-key-2 = \"Sword of Honour\" Any results returned by this service will normally include the json brackets wrapping the returned value. However you can configure this service to unwrap the result for you, such that a value returned as \"[myValue]\" will now be returned as \"myValue\". The default value is false, but to override simply configure the \"unwrap\";  \n <json-path-service>\n  <unwrap-json>true</unwrap-json>\n  ...\n </json-path-service>",
      "descriptionHtml" : "This service allows you to search JSON content and the results are then set back into the message. \n<p> The searching works in much the same way as XPath, for more information on how to build a JSON path see the <a href=\"https://github.com/jayway/JsonPath\" target=\"_new\">JSONPath</a> documentation. </p> \n<br> For example, if you have a message with the following payload; \n<pre> <code>\n {\n  \"store\": {\n    \"book\": [ {\n      \"category\": \"reference\",\n      \"author\": \"Nigel Rees\",\n      \"title\": \"Sayings of the Century\",\n      \"price\": 8.95\n    }, {\n      \"category\": \"fiction\",\n      \"author\": \"Evelyn Waugh\",\n      \"title\": \"Sword of Honour\",\n      \"price\": 12.99\n    }, {\n      \"category\": \"fiction\",\n      \"author\": \"Herman Melville\",\n      \"title\": \"Moby Dick\",\n      \"isbn\": \"0-553-21311-3\",\n      \"price\": 8.99\n    }, {\n      \"category\": \"fiction\",\n      \"author\": \"J. R. R. Tolkien\",\n      \"title\": \"The Lord of the Rings\",\n      \"isbn\": \"0-395-19395-8\",\n      \"price\": 22.99\n    } ],\n    \"bicycle\": {\n      \"color\": \"red\",\n      \"price\": 19.95\n    }\n  },\n  \"expensive\": 10\n }\n </code>\n </pre> You could configure 2 target destinations, each one creating a new metadata item with the results of the specified search, like this; \n<pre> <code>\n &lt;json-path-service&gt;\n   &lt;json-path-execution&gt;\n     &lt;source class=\"constant-data-input-parameter\"&gt;\n       &lt;value&gt;$.store.book[0].title&lt;/value&gt;\n     &lt;/source&gt;\n     &lt;target class=\"metadata-data-output-parameter\"&gt;\n       &lt;metadata-key&gt;metadata-key-1&lt;/metadata-key&gt;\n     &lt;/target&gt;\n     &lt;suppress-path-not-found&gt;true&lt;/suppress-path-not-found&gt;\n   &lt;/json-path-execution&gt;\n   &lt;json-path-execution&gt;\n     &lt;source class=\"constant-data-input-parameter\"&gt;\n       &lt;value&gt;$.store.book[1].title&lt;/value&gt;\n     &lt;/source&gt;\n     &lt;target class=\"metadata-data-output-parameter\"&gt;\n       &lt;metadata-key&gt;metadata-key-2&lt;/metadata-key&gt;\n     &lt;/target&gt;\n   &lt;/json-path-execution&gt;\n &lt;/json-path-service&gt;\n </code>\n </pre> The first target above searches for the first book title, the second target searches for the second book title. Each target-destination will be executed in the order they are configured and therefore with the two targets shown here, your message, after the service has run, will include two new metadata items; \n<ul> \n <li>metadata-key-1 = \"Sayings of the Century\"</li> \n <li>metadata-key-2 = \"Sword of Honour\"</li> \n</ul> \n<p></p> \n<p> Any results returned by this service will normally include the json brackets wrapping the returned value. However you can configure this service to unwrap the result for you, such that a value returned as \"[myValue]\" will now be returned as \"myValue\". <br> The default value is false, but to override simply configure the \"unwrap\"; </p>\n<pre> <code>\n &lt;json-path-service&gt;\n  &lt;unwrap-json&gt;true&lt;/unwrap-json&gt;\n  ...\n &lt;/json-path-service&gt;\n </code>\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-pgp/4.0.0B1-RELEASE/com/adaptris/security/pgp/PGPSignService.html",
      "fullClassName" : "com.adaptris.security.pgp.PGPSignService",
      "className" : "PGPSignService",
      "packageName" : "com.adaptris.security.pgp",
      "componentType" : "service",
      "alias" : "pgp-sign",
      "deprecated" : false,
      "jarFileName" : "interlok-pgp.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Sign data using a PGP/GPG private key",
        "tag" : "pgp,gpg,sign,signature,private key"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Sign data using a PGP/GPG private key\",\n                  tag=\"pgp,gpg,sign,signature,private key\",\n                  since=\"3.9.2\")\npublic class PGPSignService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Sign data using a PGP/GPG private key\",\n                  tag=\"pgp,gpg,sign,signature,private key\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">PGPSignService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service provides a way to sign messages via GPG/PGP. It requires a private key, the passphrase to unlock the key, and a message to sign. Optionally it will ASCII armor encode the signature (default) and create a detached signature (default). \n    <pgp-sign>\n        <unique-id>nostalgic-golick</unique-id>\n        <private-key class=\"constant-data-input-parameter\">\n            <value>-----BEGIN PGP PRIVATE KEY BLOCK-----\n\n    lQPGBF2ckxABCAC5Kfu39ky3OIXkxwWOJx70G2dLRYvDMHXf3ZraUPNRMIhh3ZGx\n    -----END PGP PRIVATE KEY BLOCK-----</value>\n        </private-key>\n        <passphrase class=\"constant-data-input-parameter\">\n            <value>my5ecr3tP455w0rd</value>\n        </passphrase>\n        <clearText class=\"stream-payload-input-parameter\"/>              <!-- clear text comes from message payload -->\n        <armor-encoding>true</armor-encoding>\n        <detached-signature>true</detached-signature>\n        <signature class=\"metadata-stream-output-parameter\">             <!-- detached signature goes into message metadata -->\n            <metadata-key>signature</metadata-key>\n        </signature>\n    </pgp-sign>",
      "descriptionHtml" : "This service provides a way to sign messages via GPG/PGP. It requires a private key, the passphrase to unlock the key, and a message to sign. Optionally it will ASCII armor encode the signature (default) and create a detached signature (default). \n<pre><code>\n    &lt;pgp-sign&gt;\n        &lt;unique-id&gt;nostalgic-golick&lt;/unique-id&gt;\n        &lt;private-key class=\"constant-data-input-parameter\"&gt;\n            &lt;value&gt;-----BEGIN PGP PRIVATE KEY BLOCK-----\n\n    lQPGBF2ckxABCAC5Kfu39ky3OIXkxwWOJx70G2dLRYvDMHXf3ZraUPNRMIhh3ZGx\n    -----END PGP PRIVATE KEY BLOCK-----&lt;/value&gt;\n        &lt;/private-key&gt;\n        &lt;passphrase class=\"constant-data-input-parameter\"&gt;\n            &lt;value&gt;my5ecr3tP455w0rd&lt;/value&gt;\n        &lt;/passphrase&gt;\n        &lt;clearText class=\"stream-payload-input-parameter\"/&gt;              &lt;!-- clear text comes from message payload --&gt;\n        &lt;armor-encoding&gt;true&lt;/armor-encoding&gt;\n        &lt;detached-signature&gt;true&lt;/detached-signature&gt;\n        &lt;signature class=\"metadata-stream-output-parameter\"&gt;             &lt;!-- detached signature goes into message metadata --&gt;\n            &lt;metadata-key&gt;signature&lt;/metadata-key&gt;\n        &lt;/signature&gt;\n    &lt;/pgp-sign&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Security/PGP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-pgp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBReplaceProducer.html",
      "fullClassName" : "com.adaptris.core.mongodb.MongoDBReplaceProducer",
      "className" : "MongoDBReplaceProducer",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "producer",
      "alias" : "mongodb-replace-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.mongodb.MongoDBConnection"
        ],
        "since" : "",
        "summary" : "Replace JSON objects into MongoDB.",
        "tag" : "producer,mongodb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Replace JSON objects into MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=MongoDBConnection.class)\npublic class MongoDBReplaceProducer\nextends MongoDBUpdateReplaceProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Replace JSON objects into MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=<a href=\"MongoDBConnection.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBConnection.class</a>)\npublic class <span class=\"typeNameLabel\">MongoDBReplaceProducer</span>\nextends <a href=\"MongoDBUpdateReplaceProducer.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBUpdateReplaceProducer</a>",
      "description" : "Producer that replaces JSON objects into MongoDB, if a JSON array is given the array will be split and inserted as individual JSON objects.",
      "descriptionHtml" : "Producer that replaces JSON objects into MongoDB, if a JSON array is given the array will be split and inserted as individual JSON objects.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "MongoDBProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBProducer.html"
        },
        {
          "name" : "MongoDBArrayProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBArrayProducer.html"
        },
        {
          "name" : "MongoDBUpdateReplaceProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBUpdateReplaceProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/SftpPasswordAuthentication.html",
      "fullClassName" : "com.adaptris.core.ftp.SftpPasswordAuthentication",
      "className" : "SftpPasswordAuthentication",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "object",
      "alias" : "sftp-password-authentication",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SftpPasswordAuthentication\nextends java.lang.Object\nimplements SftpAuthenticationProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SftpPasswordAuthentication</span>\nextends java.lang.Object\nimplements <a href=\"SftpAuthenticationProvider.html\" title=\"interface in com.adaptris.core.ftp\" target=\"_new\">SftpAuthenticationProvider</a>",
      "description" : "SftpAuthenticationProvider using a password.",
      "descriptionHtml" : "<a href=\"SftpAuthenticationProvider.html\" title=\"interface in com.adaptris.core.ftp\" target=\"_new\"><code>SftpAuthenticationProvider</code></a> using a password.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageCountProducerSessionFactory.html",
      "fullClassName" : "com.adaptris.core.jms.MessageCountProducerSessionFactory",
      "className" : "MessageCountProducerSessionFactory",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-message-count-producer-session",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MessageCountProducerSessionFactory\nextends ProducerSessionFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MessageCountProducerSessionFactory</span>\nextends <a href=\"ProducerSessionFactoryImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">ProducerSessionFactoryImpl</a>",
      "description" : "Implementation of ProducerSessionFactory that creates a new session/producer based the number of messages. This implementaton refreshes the session based on a count of the number of messages.",
      "descriptionHtml" : "Implementation of \n<a href=\"ProducerSessionFactory.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>ProducerSessionFactory</code></a> that creates a new session/producer based the number of messages. \n<p> This implementaton refreshes the session based on a count of the number of messages. </p>",
      "inheritance" : [
        {
          "name" : "ProducerSessionFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ProducerSessionFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/sources/InlineSource.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.sources.InlineSource",
      "className" : "InlineSource",
      "packageName" : "com.adaptris.tester.runtime.services.sources",
      "componentType" : "object",
      "alias" : "inline-source",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class InlineSource\nextends java.lang.Object\nimplements Source",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InlineSource</span>\nextends java.lang.Object\nimplements <a href=\"Source.html\" title=\"interface in com.adaptris.tester.runtime.services.sources\" target=\"_new\">Source</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/DefaultInputFactory.html",
      "fullClassName" : "com.adaptris.stax.DefaultInputFactory",
      "className" : "DefaultInputFactory",
      "packageName" : "com.adaptris.stax",
      "componentType" : "object",
      "alias" : "stax-default-stream-input",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultInputFactory\nextends java.lang.Object\nimplements XmlInputFactoryBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultInputFactory</span>\nextends java.lang.Object\nimplements <a href=\"XmlInputFactoryBuilder.html\" title=\"interface in com.adaptris.stax\" target=\"_new\">XmlInputFactoryBuilder</a>",
      "description" : "Default implementation of XmlInputFactoryBuilder.",
      "descriptionHtml" : "Default implementation of \n<a href=\"XmlInputFactoryBuilder.html\" title=\"interface in com.adaptris.stax\" target=\"_new\"><code>XmlInputFactoryBuilder</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/ComponentLifetimeSession.html",
      "fullClassName" : "com.adaptris.kie.services.ComponentLifetimeSession",
      "className" : "ComponentLifetimeSession",
      "packageName" : "com.adaptris.kie.services",
      "componentType" : "object",
      "alias" : "kie-component-lifecycle-session",
      "deprecated" : false,
      "jarFileName" : "interlok-kie.jar",
      "profile" : { },
      "annotationDetails" : "public class ComponentLifetimeSession\nextends SessionManagementImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ComponentLifetimeSession</span>\nextends <a href=\"SessionManagementImpl.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">SessionManagementImpl</a>",
      "description" : "Session management that retains the same session for the lifetime of the component. The KieSession is created upon the first invocation of get(KieBase, AdaptrisMessage) and is disposed when this component's SessionManagementImpl.stop() method is invoked as part of the parent KieService lifecycle.",
      "descriptionHtml" : "Session management that retains the same session for the lifetime of the component. \n<p> The <code>KieSession</code> is created upon the first invocation of <a href=\"#get(org.kie.api.KieBase,com.adaptris.core.AdaptrisMessage)\" target=\"_new\"><code>get(KieBase, AdaptrisMessage)</code></a> and is disposed when this component's <a href=\"SessionManagementImpl.html#stop()\" target=\"_new\"><code>SessionManagementImpl.stop()</code></a> method is invoked as part of the parent <a href=\"KieService.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\"><code>KieService</code></a> lifecycle. </p>",
      "inheritance" : [
        {
          "name" : "SessionManagementImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/SessionManagementImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/KIE",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kie",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/InParameters.html",
      "fullClassName" : "com.adaptris.core.jdbc.InParameters",
      "className" : "InParameters",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-in-parameters",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class InParameters\nextends JdbcParameterList<InParameter>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InParameters</span>\nextends <a href=\"JdbcParameterList.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">JdbcParameterList</a>&lt;<a href=\"InParameter.html\" title=\"interface in com.adaptris.core.jdbc\" target=\"_new\">InParameter</a>&gt;",
      "description" : "This class contains the IN parameters that a stored procedure will require to be executed.",
      "descriptionHtml" : "This class contains the IN parameters that a stored procedure will require to be executed.",
      "inheritance" : [
        {
          "name" : "JdbcParameterList",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcParameterList.html"
        },
        {
          "name" : "InParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/InParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/RegexpMetadataQuery.html",
      "fullClassName" : "com.adaptris.core.services.metadata.RegexpMetadataQuery",
      "className" : "RegexpMetadataQuery",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "object",
      "alias" : "regexp-metadata-query",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RegexpMetadataQuery\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RegexpMetadataQuery</span>\nextends java.lang.Object",
      "description" : "Performs a Regular Expression based Query on a supplied String.",
      "descriptionHtml" : "<p> Performs a Regular Expression based Query on a supplied String. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/MetadataReplyProvider.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.MetadataReplyProvider",
      "className" : "MetadataReplyProvider",
      "packageName" : "com.adaptris.google.cloud.pubsub",
      "componentType" : "object",
      "alias" : "gcloud-metadata-reply-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Derive a ack/nack based on metadata for GoogleCloudPubSubResponseProducer",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Derive a ack/nack based on metadata for GoogleCloudPubSubResponseProducer\")\npublic class MetadataReplyProvider\nextends java.lang.Object\nimplements ReplyProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Derive a ack/nack based on metadata for GoogleCloudPubSubResponseProducer\")\npublic class <span class=\"typeNameLabel\">MetadataReplyProvider</span>\nextends java.lang.Object\nimplements <a href=\"ReplyProvider.html\" title=\"interface in com.adaptris.google.cloud.pubsub\" target=\"_new\">ReplyProvider</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/BlobStoreService.html",
      "fullClassName" : "com.adaptris.jclouds.blobstore.BlobStoreService",
      "className" : "BlobStoreService",
      "packageName" : "com.adaptris.jclouds.blobstore",
      "componentType" : "service",
      "alias" : "jclouds-blobstore-service",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-blobstore.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.jclouds.blobstore.BlobStoreConnection"
        ],
        "since" : "",
        "summary" : "Perform an operation against a remote object using a pluggable cloud storage provider",
        "tag" : "blob,s3,azure,backblaze,cloud"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform an operation against a remote object using a pluggable cloud storage provider\",\n                  recommended=BlobStoreConnection.class,\n                  tag=\"blob,s3,azure,backblaze,cloud\")\npublic class BlobStoreService\nextends ServiceImp\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform an operation against a remote object using a pluggable cloud storage provider\",\n                  recommended=<a href=\"BlobStoreConnection.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\">BlobStoreConnection.class</a>,\n                  tag=\"blob,s3,azure,backblaze,cloud\")\npublic class <span class=\"typeNameLabel\">BlobStoreService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Perform an operation against a cloud storage provider.",
      "descriptionHtml" : "Perform an operation against a cloud storage provider.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Blobstore",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-blobstore",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-expressions/4.0.0B1-RELEASE/com/adaptris/expressions/FreeFormExpressionService.html",
      "fullClassName" : "com.adaptris.expressions.FreeFormExpressionService",
      "className" : "FreeFormExpressionService",
      "packageName" : "com.adaptris.expressions",
      "componentType" : "service",
      "alias" : "freeform-expression-service",
      "deprecated" : false,
      "jarFileName" : "interlok-expressions.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A service that allows you to evaluate a mathematical/boolean algorithm without specifying parameters.",
        "tag" : "service,expressions"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A service that allows you to evaluate a mathematical/boolean algorithm without specifying parameters.\",\n                  tag=\"service,expressions\")\npublic class FreeFormExpressionService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A service that allows you to evaluate a mathematical/boolean algorithm without specifying parameters.\",\n                  tag=\"service,expressions\")\npublic class <span class=\"typeNameLabel\">FreeFormExpressionService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Implementation of Service that allows you to configure a mathematical/boolean algorithm The major difference between this service and the standard ExpressionService is simply that this service does not require any DataInputParameter's to be configured. Instead you simply use static values in your algorithm, which includes the ability to use the {@link AdaptrisMessage.resolve()}. To choose where to set the result of the algorithm use any single DataOutputParameter. The default result of the expression will be a new metadata item with the key \"expressionResult\". An example: A static algorithm such as the following;    ((10 * 10) * 10)\n Will produce the result 1000 A further example using the AdaptrisMessage.resolve() function allows us to create algorithms where the values are stored in metadata;    ((%message{key1} * %message{key2}) * %message{key3})\n Lets assume that the values for the metadata items identified by the keys 'key1', 'key2' and 'key3' are all \"10\", then again the result will be 1000. Additionally you can also perform boolean calculations. A few examples;      (10 > 5)\n      (%message{key1} <= 50)\n      (%message{key1} == %message{key2})\n      ((%message{key1} - 50 ) == %message{key2})",
      "descriptionHtml" : "<p> Implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Service.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>Service</code></a> that allows you to configure a mathematical/boolean algorithm<br> </p> \n<p> The major difference between this service and the standard <a href=\"ExpressionService.html\" title=\"class in com.adaptris.expressions\" target=\"_new\"><code>ExpressionService</code></a> is simply that this service does not require any <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataInputParameter</code></a>'s to be configured. Instead you simply use static values in your algorithm, which includes the ability to use the {@link AdaptrisMessage.resolve()}. </p> \n<p> To choose where to set the result of the algorithm use any single <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataOutputParameter</code></a>.<br> The default result of the expression will be a new metadata item with the key \"expressionResult\". </p> \n<p> An example:<br> A static algorithm such as the following; </p>\n<pre>   ((10 * 10) * 10)\n </pre> Will produce the result 1000 \n<p></p> \n<p> A further example using the AdaptrisMessage.resolve() function allows us to create algorithms where the values are stored in metadata; </p>\n<pre>   ((%message{key1} * %message{key2}) * %message{key3})\n </pre> Lets assume that the values for the metadata items identified by the keys 'key1', 'key2' and 'key3' are all \"10\", then again the result will be 1000. \n<p></p> \n<p> Additionally you can also perform boolean calculations. A few examples; <br> </p>\n<pre>     (10 &gt; 5)\n </pre> \n<pre>     (%message{key1} &lt;= 50)\n </pre> \n<pre>     (%message{key1} == %message{key2})\n </pre> \n<pre>     ((%message{key1} - 50 ) == %message{key2})\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Scripting/Expressions",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-expressions",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/edi/StandardTradacomsCharacterSet.html",
      "fullClassName" : "com.adaptris.edi.StandardTradacomsCharacterSet",
      "className" : "StandardTradacomsCharacterSet",
      "packageName" : "com.adaptris.edi",
      "componentType" : "object",
      "alias" : "edi-standard-tradacoms",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : { },
      "annotationDetails" : "public class StandardTradacomsCharacterSet\nextends java.lang.Object\nimplements CharacterSet",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StandardTradacomsCharacterSet</span>\nextends java.lang.Object\nimplements <a href=\"CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\">CharacterSet</a>",
      "description" : "Standard TRADACOMS CharacterSet implementation.",
      "descriptionHtml" : "Standard TRADACOMS \n<a href=\"CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\"><code>CharacterSet</code></a> implementation.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/IgnoreOriginalXmlDocumentAggregator.html",
      "fullClassName" : "com.adaptris.core.services.aggregator.IgnoreOriginalXmlDocumentAggregator",
      "className" : "IgnoreOriginalXmlDocumentAggregator",
      "packageName" : "com.adaptris.core.services.aggregator",
      "componentType" : "object",
      "alias" : "ignore-original-xml-document-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class IgnoreOriginalXmlDocumentAggregator\nextends XmlDocumentAggregator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IgnoreOriginalXmlDocumentAggregator</span>\nextends <a href=\"XmlDocumentAggregator.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">XmlDocumentAggregator</a>",
      "description" : "MessageAggregator implementation that creates single XML using each message that needs to be joined up. The original pre-split document is completely ignored; you should specify in the template the XML document that will be used to merge split documents. Use XmlDocumentAggregator.setDocumentEncoding(String) to force the encoding of the resulting XML document to the required value; if not set, then either the original AdaptrisMessage.getCharEncoding() (if set) or UTF-8 will be used in that order.",
      "descriptionHtml" : "<a href=\"MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>MessageAggregator</code></a> implementation that creates single XML using each message that needs to be joined up. \n<p> The original pre-split document is completely ignored; you should specify in the template the XML document that will be used to merge split documents. </p> \n<p> Use <a href=\"XmlDocumentAggregator.html#setDocumentEncoding(java.lang.String)\" target=\"_new\"><code>XmlDocumentAggregator.setDocumentEncoding(String)</code></a> to force the encoding of the resulting XML document to the required value; if not set, then either the original <a href=\"../../AdaptrisMessage.html#getCharEncoding()\" target=\"_new\"><code>AdaptrisMessage.getCharEncoding()</code></a> (if set) or <code>UTF-8</code> will be used in that order. </p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html"
        },
        {
          "name" : "XmlDocumentAggregator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/XmlDocumentAggregator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AddPayloadService.html",
      "fullClassName" : "com.adaptris.core.AddPayloadService",
      "className" : "AddPayloadService",
      "packageName" : "com.adaptris.core",
      "componentType" : "service",
      "alias" : "add-payload-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Add a new payload to a multi-payload message",
        "tag" : "multi-payload,multi,payload,add"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Add a new payload to a multi-payload message\",\n                  tag=\"multi-payload,multi,payload,add\")\npublic class AddPayloadService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Add a new payload to a multi-payload message\",\n                  tag=\"multi-payload,multi,payload,add\")\npublic class <span class=\"typeNameLabel\">AddPayloadService</span>\nextends <a href=\"ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Add a new payload to the message. \n <add-payload-service>\n   <unique-id>add-payload-unique-id</unique-id>\n   <new-payload-id>payload-2</new-payload-id>\n   <new-payload class=\"file-data-input-parameter\">\n     <destination class=\"configured-destination\">\n       <destination><!-- path to file to include as new payload --></destination>\n     </destination>\n   </new-payload>\n </add-payload-service>",
      "descriptionHtml" : "Add a new payload to the message. \n<pre><code>\n &lt;add-payload-service&gt;\n   &lt;unique-id&gt;add-payload-unique-id&lt;/unique-id&gt;\n   &lt;new-payload-id&gt;payload-2&lt;/new-payload-id&gt;\n   &lt;new-payload class=\"file-data-input-parameter\"&gt;\n     &lt;destination class=\"configured-destination\"&gt;\n       &lt;destination&gt;&lt;!-- path to file to include as new payload --&gt;&lt;/destination&gt;\n     &lt;/destination&gt;\n   &lt;/new-payload&gt;\n &lt;/add-payload-service&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-okhttp/4.0.0B1-RELEASE/com/adaptris/okhttp/headers/request/MetadataRequestHeaders.html",
      "fullClassName" : "com.adaptris.okhttp.headers.request.MetadataRequestHeaders",
      "className" : "MetadataRequestHeaders",
      "packageName" : "com.adaptris.okhttp.headers.request",
      "componentType" : "object",
      "alias" : "okhttp-metadata-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-okhttp.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<okhttp3.Request.Builder>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">RequestHeaderProvider</a>&lt;okhttp3.Request.Builder&gt;",
      "description" : "Implementation of RequestHeaderProvider that applies AdaptrisMessage metadata as headers to a OK HTTP request.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>RequestHeaderProvider</code></a> that applies \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata as headers to a OK HTTP request.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/OkHttp",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-okhttp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/TagOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.TagOperation",
      "className" : "TagOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-tag",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tag an object in S3",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tag an object in S3\")\npublic class TagOperation\nextends ObjectOperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tag an object in S3\")\npublic class <span class=\"typeNameLabel\">TagOperation</span>\nextends <a href=\"ObjectOperationImpl.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">ObjectOperationImpl</a>",
      "description" : "Add tags to an object from S3 to another object Uses AmazonS3Client.setObjectTagging(SetObjectTaggingRequest).",
      "descriptionHtml" : "Add tags to an object from S3 to another object \n<p> Uses <code>AmazonS3Client.setObjectTagging(SetObjectTaggingRequest)</code>. </p>",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        },
        {
          "name" : "ObjectOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ObjectOperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/EmptyIdentityBuilder.html",
      "fullClassName" : "com.adaptris.core.security.access.EmptyIdentityBuilder",
      "className" : "EmptyIdentityBuilder",
      "packageName" : "com.adaptris.core.security.access",
      "componentType" : "object",
      "alias" : "empty-identity-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class EmptyIdentityBuilder\nextends IdentityBuilderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EmptyIdentityBuilder</span>\nextends <a href=\"IdentityBuilderImpl.html\" title=\"class in com.adaptris.core.security.access\" target=\"_new\">IdentityBuilderImpl</a>",
      "description" : "A no-op identity builder.",
      "descriptionHtml" : "A no-op identity builder.",
      "inheritance" : [
        {
          "name" : "IdentityBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/IdentityBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/ServiceToTest.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.ServiceToTest",
      "className" : "ServiceToTest",
      "packageName" : "com.adaptris.tester.runtime.services",
      "componentType" : "object",
      "alias" : "service-to-test",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class ServiceToTest\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ServiceToTest</span>\nextends java.lang.Object",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-rest-health-check/4.0.0B1-RELEASE/com/adaptris/rest/WorkflowHealthCheckComponent.html",
      "fullClassName" : "com.adaptris.rest.WorkflowHealthCheckComponent",
      "className" : "WorkflowHealthCheckComponent",
      "packageName" : "com.adaptris.rest",
      "componentType" : "object",
      "alias" : "health-check",
      "deprecated" : false,
      "jarFileName" : "interlok-rest-health-check.jar",
      "profile" : { },
      "annotationDetails" : "public class WorkflowHealthCheckComponent\nextends com.adaptris.rest.AbstractRestfulEndpoint",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">WorkflowHealthCheckComponent</span>\nextends com.adaptris.rest.AbstractRestfulEndpoint",
      "inheritance" : [
        {
          "name" : "MgmtComponentImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/management/MgmtComponentImpl.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Management/REST: Health Check",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-rest-health-check",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/SizeBasedSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.SizeBasedSplitter",
      "className" : "SizeBasedSplitter",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "size-based-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SizeBasedSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SizeBasedSplitter</span>\nextends <a href=\"MessageSplitterImp.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "MessageSplitter implementation that splits by size. Attempts to split an AdaptrisMessage object by size. Reads the specified number of bytes from the input stream when required during the split. Note that while an attempt is made to make sure that each split message is of the same size, this is not guaranteed.",
      "descriptionHtml" : "<a href=\"MessageSplitter.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\"><code>MessageSplitter</code></a> implementation that splits by size. \n<p> Attempts to split an AdaptrisMessage object by size. Reads the specified number of bytes from the input stream when required during the split. Note that while an attempt is made to make sure that each split message is of the same size, this is not guaranteed. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/PseudoRandomIdGenerator.html",
      "fullClassName" : "com.adaptris.util.PseudoRandomIdGenerator",
      "className" : "PseudoRandomIdGenerator",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "pseudo-random-id-generator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PseudoRandomIdGenerator\nextends java.lang.Object\nimplements IdGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PseudoRandomIdGenerator</span>\nextends java.lang.Object\nimplements <a href=\"IdGenerator.html\" title=\"interface in com.adaptris.util\" target=\"_new\">IdGenerator</a>",
      "description" : "Pseudo Random IdGenerator implementation The ID is generated from the a combination of Random.nextBytes(byte[]) (8 bytes, and then base64 encoded), along with the configured prefix to generate an id. No guarantees are made for the uniqueness of the id that is generated. If you wish for a unique-id then you should consider using GuidGenerator instead. Effectively the ID that is generated follows the form  \n    ID              = prefix unique-sequence\n    prefix          = *VCHAR\n    unique sequence = 12(ALPHA/DIGIT/\"+\"/\"/\"/\"=\")\n    \n   If you wish to restrict the length of the resulting ID, then bear in mind that with padding 8 bytes base64 encoded is 12 characters long so consider how long your prefix is.",
      "descriptionHtml" : "Pseudo Random \n<a href=\"IdGenerator.html\" title=\"interface in com.adaptris.util\" target=\"_new\">IdGenerator</a> implementation \n<p> The ID is generated from the a combination of Random.nextBytes(byte[]) (8 bytes, and then base64 encoded), along with the configured prefix to generate an id. No guarantees are made for the uniqueness of the id that is generated. If you wish for a unique-id then you should consider using <a href=\"GuidGenerator.html\" title=\"class in com.adaptris.util\" target=\"_new\"><code>GuidGenerator</code></a> instead. </p> \n<p> Effectively the ID that is generated follows the form </p>\n<pre> <code>\n    ID              = prefix unique-sequence\n    prefix          = *VCHAR\n    unique sequence = 12(ALPHA/DIGIT/\"+\"/\"/\"/\"=\")\n    </code>\n   </pre> \n<p></p> \n<p> If you wish to restrict the length of the resulting ID, then bear in mind that with padding 8 bytes base64 encoded is 12 characters long so consider how long your prefix is. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-okhttp/4.0.0B1-RELEASE/com/adaptris/okhttp/headers/response/DiscardResponseHeaders.html",
      "fullClassName" : "com.adaptris.okhttp.headers.response.DiscardResponseHeaders",
      "className" : "DiscardResponseHeaders",
      "packageName" : "com.adaptris.okhttp.headers.response",
      "componentType" : "object",
      "alias" : "okhttp-discard-response-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-okhttp.jar",
      "profile" : { },
      "annotationDetails" : "public class DiscardResponseHeaders\nextends java.lang.Object\nimplements ResponseHeaderHandler<okhttp3.Response>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DiscardResponseHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">ResponseHeaderHandler</a>&lt;okhttp3.Response&gt;",
      "description" : "ResponseHeaderHandler implementation that discards the headers from the HTTP response.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>ResponseHeaderHandler</code></a> implementation that discards the headers from the HTTP response.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/OkHttp",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-okhttp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/legacy/HexMetadataCharacterSetFactory.html",
      "fullClassName" : "com.adaptris.core.transform.edi.legacy.HexMetadataCharacterSetFactory",
      "className" : "HexMetadataCharacterSetFactory",
      "packageName" : "com.adaptris.core.transform.edi.legacy",
      "componentType" : "object",
      "alias" : "edi-hex-metadata-character-set",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : { },
      "annotationDetails" : "public class HexMetadataCharacterSetFactory\nextends MetadataCharacterSetFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">HexMetadataCharacterSetFactory</span>\nextends <a href=\"MetadataCharacterSetFactory.html\" title=\"class in com.adaptris.core.transform.edi.legacy\" target=\"_new\">MetadataCharacterSetFactory</a>",
      "description" : "An implementation of CharacterSetFactory that derives a CharacterSet implementation from metadata where the values are hex-encoded.",
      "descriptionHtml" : "An implementation of \n<a href=\"CharacterSetFactory.html\" title=\"interface in com.adaptris.core.transform.edi.legacy\" target=\"_new\"><code>CharacterSetFactory</code></a> that derives a \n<a href=\"../../../../edi/CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\"><code>CharacterSet</code></a> implementation from metadata where the values are hex-encoded.",
      "inheritance" : [
        {
          "name" : "MetadataCharacterSetFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/legacy/MetadataCharacterSetFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockChannel",
      "className" : "MockChannel",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "channel",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/fields/ToUpperCaseFieldNameMapper.html",
      "fullClassName" : "com.adaptris.core.elastic.fields.ToUpperCaseFieldNameMapper",
      "className" : "ToUpperCaseFieldNameMapper",
      "packageName" : "com.adaptris.core.elastic.fields",
      "componentType" : "object",
      "alias" : "elastic-uppercase-field-name-mapper",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Map a fieldname to its uppercase variant",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Map a fieldname to its uppercase variant\",\n                  since=\"3.9.1\")\npublic class ToUpperCaseFieldNameMapper\nextends java.lang.Object\nimplements FieldNameMapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Map a fieldname to its uppercase variant\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">ToUpperCaseFieldNameMapper</span>\nextends java.lang.Object\nimplements <a href=\"FieldNameMapper.html\" title=\"interface in com.adaptris.core.elastic.fields\" target=\"_new\">FieldNameMapper</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockStopProcessingService",
      "className" : "MockStopProcessingService",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "service",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/Decimal128ValueConverter.html",
      "fullClassName" : "com.adaptris.core.mongodb.Decimal128ValueConverter",
      "className" : "Decimal128ValueConverter",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "object",
      "alias" : "mongodb-decimal-128-value-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : { },
      "annotationDetails" : "public class Decimal128ValueConverter\nextends ValueConverter<org.bson.types.Decimal128>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Decimal128ValueConverter</span>\nextends <a href=\"ValueConverter.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">ValueConverter</a>&lt;org.bson.types.Decimal128&gt;",
      "inheritance" : [
        {
          "name" : "ValueConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/ValueConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-streaming/4.0.0B1-RELEASE/com/adaptris/core/json/streaming/JsonStreamingConfigBuilder.html",
      "fullClassName" : "com.adaptris.core.json.streaming.JsonStreamingConfigBuilder",
      "className" : "JsonStreamingConfigBuilder",
      "packageName" : "com.adaptris.core.json.streaming",
      "componentType" : "object",
      "alias" : "json-streaming-config",
      "deprecated" : false,
      "jarFileName" : "interlok-json-streaming.jar",
      "profile" : { },
      "annotationDetails" : "public class JsonStreamingConfigBuilder\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JsonStreamingConfigBuilder</span>\nextends java.lang.Object",
      "description" : "Wraps de.odysseus.staxon.json.JsonXMLConfigBuilder for marshalling purposes.",
      "descriptionHtml" : "Wraps \n<code>de.odysseus.staxon.json.JsonXMLConfigBuilder</code> for marshalling purposes.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON Streaming",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-streaming",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/TestCase.html",
      "fullClassName" : "com.adaptris.tester.runtime.TestCase",
      "className" : "TestCase",
      "packageName" : "com.adaptris.tester.runtime",
      "componentType" : "object",
      "alias" : "test-case",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class TestCase\nextends java.lang.Object\nimplements UniqueIdAwareTestComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TestCase</span>\nextends java.lang.Object\nimplements <a href=\"UniqueIdAwareTestComponent.html\" title=\"interface in com.adaptris.tester.runtime\" target=\"_new\">UniqueIdAwareTestComponent</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/UseKeyAsServiceIdValueMatcher.html",
      "fullClassName" : "com.adaptris.core.services.metadata.UseKeyAsServiceIdValueMatcher",
      "className" : "UseKeyAsServiceIdValueMatcher",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "object",
      "alias" : "use-key-as-service-id-value-matcher",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class UseKeyAsServiceIdValueMatcher\nextends java.lang.Object\nimplements MetadataValueMatcher",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">UseKeyAsServiceIdValueMatcher</span>\nextends java.lang.Object\nimplements <a href=\"MetadataValueMatcher.html\" title=\"interface in com.adaptris.core.services.metadata\" target=\"_new\">MetadataValueMatcher</a>",
      "description" : "Implementation of MetadataValueMatcher for MetadataValueBranchingService which returns the serviceKey as identifier of the next Service to apply. This simply allows MetadataValueBranchingService to be used without maintaining a set of mappings between metadata keys and service IDs where the relationship is 1 to 1.",
      "descriptionHtml" : "Implementation of MetadataValueMatcher for \n<a href=\"MetadataValueBranchingService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>MetadataValueBranchingService</code></a> which returns the serviceKey as identifier of the next Service to apply. \n<p> This simply allows MetadataValueBranchingService to be used without maintaining a set of mappings between metadata keys and service IDs where the relationship is 1 to 1. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.XStreamImplicitWrapper",
      "className" : "XStreamImplicitWrapper",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "object",
      "alias" : "xstream-implicit-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConsumer.html",
      "fullClassName" : "com.adaptris.core.jms.JmsConsumer",
      "className" : "JmsConsumer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "consumer",
      "alias" : "jms-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Listen for JMS messages on the specified queue or topic",
        "tag" : "consumer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue or topic\",\n                  tag=\"consumer,jms\",\n                  recommended=JmsConnection.class)\npublic class JmsConsumer\nextends JmsConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue or topic\",\n                  tag=\"consumer,jms\",\n                  recommended=<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JmsConsumer</span>\nextends <a href=\"JmsConsumerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConsumerImpl</a>",
      "description" : "JMS Consumer implementation that can target queues or topics via an RFC6167 style destination. This differs from the standard PtpConsumer and PasConsumer in that it supports a destination that is specified in RFC6167 style. For instance jms:queue:myQueueName will consume from a queue called myQueueName and jms:topic:myTopicName from a topic called myTopicName While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. There is also support for subscriptionId which indicates the subscriptionId that should be used when attaching a subscriber to a topic; jms:topic:MyTopicName?subscriptionId=myId would return a JmsDestination.subscriptionId() of myId. If a subscription ID is not specified, then a durable subscriber is never created; specifying a subscription ID automatically means a durable subscriber. Also supported is the JMS 2.0 sharedConsumerId, should you wish to create a multiple load balancing consumers on a single topic endpoint; jms:topic:MyTopicName?sharedConsumerId=12345 For instance you could have the following destinations: jms:queue:MyQueueName jms:topic:MyTopicName jms:topic:MyTopicName?subscriptionId=mySubscriptionId jms:topic:MyTopicName?sharedConsumerId=mySharedConsumerId jms:topic:MyTopicName?subscriptionId=mySubscriptionId&sharedConsumerId=mySharedConsumerId",
      "descriptionHtml" : "JMS Consumer implementation that can target queues or topics via an RFC6167 style destination. \n<p> This differs from the standard <a href=\"PtpConsumer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>PtpConsumer</code></a> and <a href=\"PasConsumer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>PasConsumer</code></a> in that it supports a destination that is specified in RFC6167 style. For instance <code>jms:queue:myQueueName</code> will consume from a queue called <code>myQueueName</code> and <code>jms:topic:myTopicName</code> from a topic called <code>myTopicName</code> </p> \n<p> While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. There is also support for <code>subscriptionId</code> which indicates the subscriptionId that should be used when attaching a subscriber to a topic; <code>jms:topic:MyTopicName?subscriptionId=myId</code> would return a <a href=\"JmsDestination.html#subscriptionId()\" target=\"_new\"><code>JmsDestination.subscriptionId()</code></a> of <code>myId</code>. If a subscription ID is not specified, then a durable subscriber is never created; specifying a subscription ID automatically means a durable subscriber. </p> \n<p> Also supported is the JMS 2.0 sharedConsumerId, should you wish to create a multiple load balancing consumers on a single topic endpoint; <code>jms:topic:MyTopicName?sharedConsumerId=12345</code> </p> For instance you could have the following destinations: \n<ul> \n <li>jms:queue:MyQueueName</li> \n <li>jms:topic:MyTopicName</li> \n <li>jms:topic:MyTopicName?subscriptionId=mySubscriptionId</li> \n <li>jms:topic:MyTopicName?sharedConsumerId=mySharedConsumerId</li> \n <li>jms:topic:MyTopicName?subscriptionId=mySubscriptionId&amp;sharedConsumerId=mySharedConsumerId</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "JmsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mqtt/4.0.0B1-RELEASE/com/adaptris/core/mqtt/MqttLastWill.html",
      "fullClassName" : "com.adaptris.core.mqtt.MqttLastWill",
      "className" : "MqttLastWill",
      "packageName" : "com.adaptris.core.mqtt",
      "componentType" : "object",
      "alias" : "mqtt-last-will",
      "deprecated" : false,
      "jarFileName" : "interlok-mqtt.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.5.0",
        "summary" : "MQTT connection last will",
        "tag" : "connections,mqtt"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MQTT connection last will\",\n                  tag=\"connections,mqtt\",\n                  since=\"3.5.0\")\npublic class MqttLastWill\nextends java.lang.Object",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MQTT connection last will\",\n                  tag=\"connections,mqtt\",\n                  since=\"3.5.0\")\npublic class <span class=\"typeNameLabel\">MqttLastWill</span>\nextends java.lang.Object",
      "description" : "MQTT connection last will",
      "descriptionHtml" : "MQTT connection last will",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MQTT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mqtt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/RemoveKeyFromCache.html",
      "fullClassName" : "com.adaptris.core.services.cache.RemoveKeyFromCache",
      "className" : "RemoveKeyFromCache",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "service",
      "alias" : "remove-key-from-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.9.2",
        "summary" : "Remove a key from the configured cache",
        "tag" : "service,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Remove a key from the configured cache\",\n                  since=\"3.9.2\",\n                  tag=\"service,cache\",\n                  recommended=CacheConnection.class)\npublic class RemoveKeyFromCache\nextends SingleKeyCacheService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Remove a key from the configured cache\",\n                  since=\"3.9.2\",\n                  tag=\"service,cache\",\n                  recommended=<a href=\"CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">RemoveKeyFromCache</span>\nextends <a href=\"SingleKeyCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">SingleKeyCacheService</a>",
      "description" : "Simplified version of RemoveFromCacheService that doesn't retrieve the value for insertion into the message.",
      "descriptionHtml" : "Simplified version of \n<a href=\"RemoveFromCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>RemoveFromCacheService</code></a> that doesn't retrieve the value for insertion into the message.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CacheServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceImpl.html"
        },
        {
          "name" : "SingleKeyCacheService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/SingleKeyCacheService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/translators/XpathCacheValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.cache.translators.XpathCacheValueTranslator",
      "className" : "XpathCacheValueTranslator",
      "packageName" : "com.adaptris.core.services.cache.translators",
      "componentType" : "object",
      "alias" : "xpath-cache-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathCacheValueTranslator\nextends java.lang.Object\nimplements CacheValueTranslator<java.lang.String>, CacheKeyTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathCacheValueTranslator</span>\nextends java.lang.Object\nimplements <a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheValueTranslator</a>&lt;java.lang.String&gt;, <a href=\"../CacheKeyTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheKeyTranslator</a>",
      "description" : "Implementation of CacheValueTranslator that retrieves a value from the supplied AdaptrisMessage using an XPath. Note: this class only supports retrieval of data, not insertion",
      "descriptionHtml" : "Implementation of \n<a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheValueTranslator</code></a> that retrieves a value from the supplied \n<a href=\"../../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> using an XPath. \n<p> <strong>Note: this class only supports retrieval of data, not insertion</strong> </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sns/4.0.0B1-RELEASE/com/adaptris/aws/sns/PublishToTopic.html",
      "fullClassName" : "com.adaptris.aws.sns.PublishToTopic",
      "className" : "PublishToTopic",
      "packageName" : "com.adaptris.aws.sns",
      "componentType" : "producer",
      "alias" : "amazon-sns-topic-publisher",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-sns.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "SNS_MessageID"
        ],
        "recommended" : [
          "com.adaptris.aws.sns.AmazonSNSConnection"
        ],
        "since" : "",
        "summary" : "Publish a message to an SNS Topic",
        "tag" : "producer,amazon,sns"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Publish a message to an SNS Topic\",\n                  tag=\"producer,amazon,sns\",\n                  recommended=AmazonSNSConnection.class,\n                  metadata=\"SNS_MessageID\")\npublic class PublishToTopic\nextends NotificationProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Publish a message to an SNS Topic\",\n                  tag=\"producer,amazon,sns\",\n                  recommended=<a href=\"AmazonSNSConnection.html\" title=\"class in com.adaptris.aws.sns\" target=\"_new\">AmazonSNSConnection.class</a>,\n                  metadata=\"SNS_MessageID\")\npublic class <span class=\"typeNameLabel\">PublishToTopic</span>\nextends <a href=\"NotificationProducer.html\" title=\"class in com.adaptris.aws.sns\" target=\"_new\">NotificationProducer</a>",
      "description" : "Publish a message to the SNS topic. The associated destination should be the topic ARN (e.g. arn:aws:sns:us-east-1:123456789012:MyNewTopic). It is expected that you have previously created the topic already, either via the AWS CLI or some other means. By default the messageID of the message published to the SNS topic will be stored against the key SNS_MessageID.",
      "descriptionHtml" : "Publish a message to the SNS topic. \n<p> The associated destination should be the topic ARN (e.g. <code>arn:aws:sns:us-east-1:123456789012:MyNewTopic</code>). It is expected that you have previously created the topic already, either via the AWS CLI or some other means. </p> \n<p> By default the messageID of the message published to the SNS topic will be stored against the key <code>SNS_MessageID</code>.</p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        },
        {
          "name" : "NotificationProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sns/4.0.0B1-RELEASE/com/adaptris/aws/sns/NotificationProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/SNS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-sns",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/DynamicBasicAuthorizationHeader.html",
      "fullClassName" : "com.adaptris.core.http.client.net.DynamicBasicAuthorizationHeader",
      "className" : "DynamicBasicAuthorizationHeader",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-dynamic-authorization-header",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DynamicBasicAuthorizationHeader\nextends java.lang.Object\nimplements HttpURLConnectionAuthenticator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DynamicBasicAuthorizationHeader</span>\nextends java.lang.Object\nimplements <a href=\"HttpURLConnectionAuthenticator.html\" title=\"interface in com.adaptris.core.http.client.net\" target=\"_new\">HttpURLConnectionAuthenticator</a>",
      "description" : "Build a HttpConstants.AUTHORIZATION (Basic only) from configuration (or metadata). In some situations it may be preferred to build the HttpConstants.AUTHORIZATION header rather than relying on the behaviour of URLConnection to request a PasswordAuthentication object when accessing protected resources (this is what happens if you use UserPassAuthentication). You can use this class to create a Basic authorization.",
      "descriptionHtml" : "Build a \n<a href=\"../../HttpConstants.html#AUTHORIZATION\" target=\"_new\"><code>HttpConstants.AUTHORIZATION</code></a> (Basic only) from configuration (or metadata). \n<p> In some situations it may be preferred to build the <a href=\"../../HttpConstants.html#AUTHORIZATION\" target=\"_new\"><code>HttpConstants.AUTHORIZATION</code></a> header rather than relying on the behaviour of <code>URLConnection</code> to request a <code>PasswordAuthentication</code> object when accessing protected resources (this is what happens if you use <a href=\"../../auth/UserPassAuthentication.html\" title=\"class in com.adaptris.core.http.auth\" target=\"_new\"><code>UserPassAuthentication</code></a>). You can use this class to create a Basic authorization. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/DynamicServiceExecutor.html",
      "fullClassName" : "com.adaptris.core.services.dynamic.DynamicServiceExecutor",
      "className" : "DynamicServiceExecutor",
      "packageName" : "com.adaptris.core.services.dynamic",
      "componentType" : "service",
      "alias" : "dynamic-service-executor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Lookup and execute a dynamic service",
        "tag" : "service,dynamic"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Lookup and execute a dynamic service\",\n                  tag=\"service,dynamic\")\npublic class DynamicServiceExecutor\nextends ServiceImp\nimplements EventHandlerAware",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Lookup and execute a dynamic service\",\n                  tag=\"service,dynamic\")\npublic class <span class=\"typeNameLabel\">DynamicServiceExecutor</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"../../EventHandlerAware.html\" title=\"interface in com.adaptris.core\" target=\"_new\">EventHandlerAware</a>",
      "description" : "Implementation of Service which dynamically obtains and applies a Service to an AdaptrisMessage based on the contents of the message. This class will attempt to extract a marshalled service from the specified location (which might be the current message), unmarshal that service, and then execute that service against the current message. The use of this type of service is discouraged from a supportability perspective; however there will be use cases where it is appropriate. No checks are performed on the Service that is unmarshalled; any exceptions thrown by unmarshalled service are simply rethrown back to the workflow for standard message error handling.",
      "descriptionHtml" : "Implementation of \n<a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> which dynamically obtains and applies a \n<a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> to an \n<a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> based on the contents of the message. \n<p> This class will attempt to extract a marshalled service from the specified location (which might be the current message), unmarshal that service, and then execute that service against the current message. The use of this type of service is discouraged from a supportability perspective; however there will be use cases where it is appropriate. No checks are performed on the <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> that is unmarshalled; any exceptions thrown by unmarshalled service are simply rethrown back to the workflow for standard message error handling. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/MetadataSQLStatement.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.MetadataSQLStatement",
      "className" : "MetadataSQLStatement",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-metadata-sql-statement",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataSQLStatement\nextends java.lang.Object\nimplements JdbcStatementCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataSQLStatement</span>\nextends java.lang.Object\nimplements <a href=\"JdbcStatementCreator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\">JdbcStatementCreator</a>",
      "description" : "Build an SQL Statement for JdbcDataQueryService from metadata.",
      "descriptionHtml" : "Build an SQL Statement for \n<a href=\"JdbcDataQueryService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataQueryService</code></a> from metadata.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/EndsWithIgnoreCase.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.EndsWithIgnoreCase",
      "className" : "EndsWithIgnoreCase",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "object",
      "alias" : "metadata-ends-with-ignore-case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured metadata value ends with the supplied value, ignoring case.",
        "tag" : "operator,comparator,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured metadata value ends with the supplied value, ignoring case.\",\n                  tag=\"operator,comparator,metadata\")\npublic class EndsWithIgnoreCase\nextends EndsWith",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured metadata value ends with the supplied value, ignoring case.\",\n                  tag=\"operator,comparator,metadata\")\npublic class <span class=\"typeNameLabel\">EndsWithIgnoreCase</span>\nextends <a href=\"EndsWith.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\">EndsWith</a>",
      "description" : "Used with MetadataComparisonService.",
      "descriptionHtml" : "Used with \n<a href=\"MetadataComparisonService.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\"><code>MetadataComparisonService</code></a>.",
      "inheritance" : [
        {
          "name" : "ComparatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ComparatorImpl.html"
        },
        {
          "name" : "EndsWith",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/EndsWith.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/IgnoreOriginalMimeAggregator.html",
      "fullClassName" : "com.adaptris.core.services.aggregator.IgnoreOriginalMimeAggregator",
      "className" : "IgnoreOriginalMimeAggregator",
      "packageName" : "com.adaptris.core.services.aggregator",
      "componentType" : "object",
      "alias" : "ignore-original-mime-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Aggregator implementation that creates a new mime part for each message that needs to be joined up",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Aggregator implementation that creates a new mime part for each message that needs to be joined up\")\npublic class IgnoreOriginalMimeAggregator\nextends MimeAggregator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Aggregator implementation that creates a new mime part for each message that needs to be joined up\")\npublic class <span class=\"typeNameLabel\">IgnoreOriginalMimeAggregator</span>\nextends <a href=\"MimeAggregator.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">MimeAggregator</a>",
      "description" : "MessageAggregator implementation that creates a new mime part for each message that needs to be joined up. The original pre-split document is ignored, the unique ID of the message is used as the Content-ID of the new multipart; the payloads from the split messages are used to form the resulting multipart message. If an explicit Content-Id (expression or otherwise) has been specified then this will be resolved and used as that parts Content-ID otherwise the split message's unique-id will be used. If the same Content-ID is re-used for multiple split messages then results are undefined. The most likely situation is that parts will be lost and only one preserved. As a result of this join operation, the message will be marked as MIME encoded using CoreConstants.MSG_MIME_ENCODED metadata.",
      "descriptionHtml" : "<a href=\"MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>MessageAggregator</code></a> implementation that creates a new mime part for each message that needs to be joined up. \n<p> The original pre-split document is ignored, the unique ID of the message is used as the Content-ID of the new multipart; the payloads from the split messages are used to form the resulting multipart message. If an explicit Content-Id (expression or otherwise) has been specified then this will be resolved and used as that parts <code>Content-ID</code> otherwise the split message's unique-id will be used. If the same <code>Content-ID</code> is re-used for multiple split messages then results are undefined. The most likely situation is that parts will be lost and only one preserved. </p> \n<p> As a result of this join operation, the message will be marked as MIME encoded using <a href=\"../../CoreConstants.html#MSG_MIME_ENCODED\" target=\"_new\"><code>CoreConstants.MSG_MIME_ENCODED</code></a> metadata. </p> \n<p></p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html"
        },
        {
          "name" : "MimeAggregator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MimeAggregator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/duplicate/StoreMetadataValueService.html",
      "fullClassName" : "com.adaptris.core.services.duplicate.StoreMetadataValueService",
      "className" : "StoreMetadataValueService",
      "packageName" : "com.adaptris.core.services.duplicate",
      "componentType" : "service",
      "alias" : "store-metadata-value-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Store metadata values ready for checking by check-metadata-value-service",
        "tag" : "service,duplicate"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Store metadata values ready for checking by check-metadata-value-service\",\n                  tag=\"service,duplicate\")\npublic class StoreMetadataValueService\nextends DuplicateMetadataValueService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Store metadata values ready for checking by check-metadata-value-service\",\n                  tag=\"service,duplicate\")\npublic class <span class=\"typeNameLabel\">StoreMetadataValueService</span>\nextends <a href=\"DuplicateMetadataValueService.html\" title=\"class in com.adaptris.core.services.duplicate\" target=\"_new\">DuplicateMetadataValueService</a>",
      "description" : "Service implementation which stores the value held against a configured metadata key in a persistent list, generally for use by CheckMetadataValueService. If the configured key returns null or empty, a ServiceException is thrown. The underlying store may contain duplicate values. The store of previous values has a configurable maximum size. After a new value is added, if the store exceeds the maximum size the oldest value is removed. The store is then persisted. Storage will be spun off into a separate interface and imps if required.",
      "descriptionHtml" : "<p> <code>Service</code> implementation which stores the value held against a configured metadata key in a persistent list, generally for use by <code>CheckMetadataValueService</code>. If the configured key returns null or empty, a <code>ServiceException</code> is thrown. The underlying store may contain duplicate values. </p> \n<p> The store of previous values has a configurable maximum size. After a new value is added, if the store exceeds the maximum size the oldest value is removed. The store is then persisted. </p> \n<p> Storage will be spun off into a separate interface and imps if required. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "DuplicateMetadataValueService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/duplicate/DuplicateMetadataValueService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcMetadataParameter.html",
      "fullClassName" : "com.adaptris.core.jdbc.JdbcMetadataParameter",
      "className" : "JdbcMetadataParameter",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-metadata-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JdbcMetadataParameter\nextends NullableParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JdbcMetadataParameter</span>\nextends <a href=\"NullableParameter.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">NullableParameter</a>",
      "description" : "Stored Procedure parameter implementation, can be used for all IN, INOUT and OUT Stored Procedure parameters. If this implementation is used for an IN or an INOUT parameter, then the metadata will be pulled from the AdaptrisMessage and used as the parameter value. If this implementation is used for an OUT or an INOUT parameter, then the value of the matching parameter after the Stored Procedure has run, will be reapplied into the AdaptrisMessage as metadata. You will simply set the metadataKey, to both retrieve a value or to set a new value as above. Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in ParameterValueType",
      "descriptionHtml" : "Stored Procedure parameter implementation, can be used for all IN, INOUT and OUT Stored Procedure parameters. \n<p> If this implementation is used for an IN or an INOUT parameter, then the metadata will be pulled from the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> and used as the parameter value. If this implementation is used for an OUT or an INOUT parameter, then the value of the matching parameter after the Stored Procedure has run, will be reapplied into the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> as metadata. You will simply set the metadataKey, to both retrieve a value or to set a new value as above. </p> \n<p> Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in <a href=\"../../jdbc/ParameterValueType.html\" title=\"enum in com.adaptris.jdbc\" target=\"_new\"><code>ParameterValueType</code></a> </p>",
      "inheritance" : [
        {
          "name" : "AbstractParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AbstractParameter.html"
        },
        {
          "name" : "NullableParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/NullableParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionHandlingServiceWrapper.html",
      "fullClassName" : "com.adaptris.core.services.exception.ExceptionHandlingServiceWrapper",
      "className" : "ExceptionHandlingServiceWrapper",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "service",
      "alias" : "exception-handling-service-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Handle exceptions from one service via a separate service",
        "tag" : "service,error-handling"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Handle exceptions from one service via a separate service\",\n                  tag=\"service,error-handling\")\npublic class ExceptionHandlingServiceWrapper\nextends ServiceImp\nimplements EventHandlerAware, ServiceWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Handle exceptions from one service via a separate service\",\n                  tag=\"service,error-handling\")\npublic class <span class=\"typeNameLabel\">ExceptionHandlingServiceWrapper</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"../../EventHandlerAware.html\" title=\"interface in com.adaptris.core\" target=\"_new\">EventHandlerAware</a>, <a href=\"../../ServiceWrapper.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ServiceWrapper</a>",
      "description" : "Wraps services so that errors are intercepted and processed by a different service. This Service wraps a Service; if this wrapped Service throws a ServiceException the configured exceptionHandlingService is applied. Normal message error handling is not triggered unless an exception is thrown from the service handling the exception. This Service is intended for use where an exception processing a message should generate a synchronous reply e.g. when processing web service requests. It could be used where detailed information about the error is required to be sent as part of the reply. This can be acheived by configuring services as part of the exceptionHandlingService. Note that the exception handling service will process the message IN THE STATE AT WHICH IT FAILED (i.e. the payload of the message may have been modified). It might not be possible to recover any meaningful data from this if say, an exception is triggered after encrypting the data with a remote party's public key. If you wish to use process the original message then you should configure a StandardProcessingExceptionHandler at the workflow level. StandardProcessingExceptionHandler allows you to configure arbitrary services to perform operations on messages that have failed.",
      "descriptionHtml" : "Wraps services so that errors are intercepted and processed by a different service. \n<p> This Service wraps a <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a>; if this wrapped Service throws a ServiceException the configured exceptionHandlingService is applied. Normal message error handling is not triggered unless an exception is thrown from the service handling the exception. </p> \n<p> This Service is intended for use where an exception processing a message should generate a synchronous reply e.g. when processing web service requests. It could be used where detailed information about the error is required to be sent as part of the reply. This can be acheived by configuring services as part of the exceptionHandlingService. </p> \n<p> Note that the exception handling service will process the message <b>IN THE STATE AT WHICH IT FAILED</b> (i.e. the payload of the message may have been modified). It might not be possible to recover any meaningful data from this if say, an exception is triggered after encrypting the data with a remote party's public key. If you wish to use process the original message then you should configure a <a href=\"../../StandardProcessingExceptionHandler.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandardProcessingExceptionHandler</code></a> at the workflow level. <a href=\"../../StandardProcessingExceptionHandler.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandardProcessingExceptionHandler</code></a> allows you to configure arbitrary services to perform operations on messages that have failed. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/BasicConsumerConfigBuilder.html",
      "fullClassName" : "com.adaptris.kafka.BasicConsumerConfigBuilder",
      "className" : "BasicConsumerConfigBuilder",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "object",
      "alias" : "kafka-basic-consumer-config",
      "deprecated" : false,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicConsumerConfigBuilder\nextends ConfigBuilderImpl\nimplements ConsumerConfigBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicConsumerConfigBuilder</span>\nextends <a href=\"ConfigBuilderImpl.html\" title=\"class in com.adaptris.kafka\" target=\"_new\">ConfigBuilderImpl</a>\nimplements <a href=\"ConsumerConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\">ConsumerConfigBuilder</a>",
      "description" : "Basic implementation of ConsumerConfigBuilder. Only \"high\" importance properties from the Apache Kafka Consumer Config Documentation are exposed; all other properties are left as default. The key.serializer property is fixed to be a StringSerializer; and the value.serializer property is always an AdaptrisMessageSerializer.",
      "descriptionHtml" : "Basic implementation of \n<a href=\"ConsumerConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\"><code>ConsumerConfigBuilder</code></a>. \n<p> Only \"high\" importance properties from <a href=\"http://kafka.apache.org/documentation.html#newconsumerconfigs\" target=\"_new\">the Apache Kafka Consumer Config Documentation</a> are exposed; all other properties are left as default. The <code>key.serializer</code> property is fixed to be a <code>StringSerializer</code>; and the <code>value.serializer</code> property is always an <a href=\"AdaptrisMessageSerializer.html\" title=\"class in com.adaptris.kafka\" target=\"_new\"><code>AdaptrisMessageSerializer</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "ConfigBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/ConfigBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/TimestampType.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.TimestampType",
      "className" : "TimestampType",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-timestamp-type",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class TimestampType\nextends DateType",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimestampType</span>\nextends <a href=\"DateType.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">DateType</a>",
      "description" : "Handles java.sql.Timestamp fields.",
      "descriptionHtml" : "Handles java.sql.Timestamp fields.",
      "inheritance" : [
        {
          "name" : "DateType",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/DateType.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/OverwriteMode.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.OverwriteMode",
      "className" : "OverwriteMode",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "object",
      "alias" : "smb-overwrite-mode",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Open the (or create a new) file and overwrite it",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Open the (or create a new) file and overwrite it\")\npublic class OverwriteMode\nextends java.lang.Object\nimplements WriteMode",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Open the (or create a new) file and overwrite it\")\npublic class <span class=\"typeNameLabel\">OverwriteMode</span>\nextends java.lang.Object\nimplements <a href=\"WriteMode.html\" title=\"interface in com.adaptris.filesystem.smbj\" target=\"_new\">WriteMode</a>",
      "description" : "Mode which appends to an existing file if it exists. Uses SMB2CreateDisposition#FILE_OVERWRITE_IF to open the file.",
      "descriptionHtml" : "Mode which appends to an existing file if it exists. \n<p> Uses <code>SMB2CreateDisposition#FILE_OVERWRITE_IF</code> to open the file. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.XmlRoundTripService",
      "className" : "XmlRoundTripService",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "service",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jsr107-cache/4.0.0B1-RELEASE/com/adaptris/core/cache/jcache/BasicJsr107Cache.html",
      "fullClassName" : "com.adaptris.core.cache.jcache.BasicJsr107Cache",
      "className" : "BasicJsr107Cache",
      "packageName" : "com.adaptris.core.cache.jcache",
      "componentType" : "object",
      "alias" : "basic-jsr107-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-jsr107-cache.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicJsr107Cache\nextends Jsr107Cache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicJsr107Cache</span>\nextends <a href=\"Jsr107Cache.html\" title=\"class in com.adaptris.core.cache.jcache\" target=\"_new\">Jsr107Cache</a>",
      "description" : "Cache implementation that uses JSR107 defaults. Note that if you have multiple JSR107 providers available, then this might have unexpected behaviours; generally you should use ConfiguredJsr107Cache instead.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/Cache.html?is-external=true\" title=\"class or interface in com.adaptris.core.cache\" class=\"externalLink\" target=\"_new\"><code>Cache</code></a> implementation that uses JSR107 defaults. \n<p> Note that if you have multiple JSR107 providers available, then this might have unexpected behaviours; generally you should use <a href=\"ConfiguredJsr107Cache.html\" title=\"class in com.adaptris.core.cache.jcache\" target=\"_new\"><code>ConfiguredJsr107Cache</code></a> instead. </p>",
      "inheritance" : [
        {
          "name" : "Jsr107Cache",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jsr107-cache/4.0.0B1-RELEASE/com/adaptris/core/cache/jcache/Jsr107Cache.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/JSR107",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jsr107-cache",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/MetadataParameterHandler.html",
      "fullClassName" : "com.adaptris.core.http.jetty.MetadataParameterHandler",
      "className" : "MetadataParameterHandler",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-http-parameters-as-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataParameterHandler\nextends ParameterHandlerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataParameterHandler</span>\nextends <a href=\"ParameterHandlerImpl.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">ParameterHandlerImpl</a>",
      "description" : "ParameterHandler implementation that stores headers as standard metadata.",
      "descriptionHtml" : "<a href=\"../server/ParameterHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>ParameterHandler</code></a> implementation that stores headers as standard metadata.",
      "inheritance" : [
        {
          "name" : "ParameterHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/ParameterHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/request/RemoveHeaders.html",
      "fullClassName" : "com.adaptris.core.http.apache.request.RemoveHeaders",
      "className" : "RemoveHeaders",
      "packageName" : "com.adaptris.core.http.apache.request",
      "componentType" : "object",
      "alias" : "apache-http-remove-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class RemoveHeaders\nextends java.lang.Object\nimplements RequestInterceptorBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RemoveHeaders</span>\nextends java.lang.Object\nimplements <a href=\"RequestInterceptorBuilder.html\" title=\"interface in com.adaptris.core.http.apache.request\" target=\"_new\">RequestInterceptorBuilder</a>",
      "description" : "Remove headers from the outgoing request. This is included for completeness; you might, for instance, want to remove the User-Agent header to avoid being identified as Apache-HTTP...",
      "descriptionHtml" : "Remove headers from the outgoing request. \n<p> This is included for completeness; you might, for instance, want to remove the <code>User-Agent</code> header to avoid being identified as Apache-HTTP... </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/MappedResolver.html",
      "fullClassName" : "com.adaptris.util.text.xml.MappedResolver",
      "className" : "MappedResolver",
      "packageName" : "com.adaptris.util.text.xml",
      "componentType" : "object",
      "alias" : "mapped-entity-resolver",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MappedResolver\nextends Resolver",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MappedResolver</span>\nextends <a href=\"Resolver.html\" title=\"class in com.adaptris.util.text.xml\" target=\"_new\">Resolver</a>",
      "description" : "Resolver that maps URLs to another URL and caches the results.",
      "descriptionHtml" : "Resolver that maps URLs to another URL and caches the results.",
      "inheritance" : [
        {
          "name" : "Resolver",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/Resolver.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/DefaultRetryPolicyFactory.html",
      "fullClassName" : "com.adaptris.aws.DefaultRetryPolicyFactory",
      "className" : "DefaultRetryPolicyFactory",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-default-retry-policy-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultRetryPolicyFactory\nextends java.lang.Object\nimplements RetryPolicyFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultRetryPolicyFactory</span>\nextends java.lang.Object\nimplements <a href=\"RetryPolicyFactory.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">RetryPolicyFactory</a>",
      "description" : "The default retry policy builder using one of the predefined policies from PredefinedRetryPolicies.",
      "descriptionHtml" : "The default retry policy builder using one of the predefined policies from \n<code>PredefinedRetryPolicies</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/DateStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.DateStatementParameter",
      "className" : "DateStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-date-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DateStatementParameter\nextends DatetimeStatementParameter<java.sql.Date>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DateStatementParameter</span>\nextends <a href=\"DatetimeStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">DatetimeStatementParameter</a>&lt;java.sql.Date&gt;",
      "description" : "A Date extension to StatementParameter. This ignores the query-class configuration, and always attempts to format the string into a java.sql.Date using the configured date formatter; if convert-null is true, then empty/blank/whitespace only values will be substituted by System.currentTimeMillis().",
      "descriptionHtml" : "A \n<code>Date</code> extension to StatementParameter. \n<p> This ignores the query-class configuration, and always attempts to format the string into a java.sql.Date using the configured date formatter; if <code>convert-null</code> is true, then empty/blank/whitespace only values will be substituted by <code>System.currentTimeMillis()</code>. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        },
        {
          "name" : "DatetimeStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/DatetimeStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/qpid/BasicQpidJmsImplementation.html",
      "fullClassName" : "com.adaptris.core.amqp.qpid.BasicQpidJmsImplementation",
      "className" : "BasicQpidJmsImplementation",
      "packageName" : "com.adaptris.core.amqp.qpid",
      "componentType" : "object",
      "alias" : "qpid-basic-jms-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-amqp.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicQpidJmsImplementation\nextends UrlVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicQpidJmsImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">UrlVendorImplementation</a>",
      "description" : "AMQP 1.0 implementation of VendorImplementation using Apache Qpid. Everything required to configure the connection needs to be specified on the URL. If you configure a username and password on the wrapping JmsConnection in which case ConnectionFactory.createConnection(String, String) is used when creating the connection otherwise ConnectionFactory.createConnection() will be used. This was built against org.apache.qpid:qpid-jms-client:0.8.0. This vendor implementation doesn't appear to be usable with Azure AMQP as is unless you follow the notes on stack overflow",
      "descriptionHtml" : "AMQP 1.0 implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementation</code></a> using Apache Qpid. \n<p> Everything required to configure the connection needs to be specified on the URL. If you configure a username and password on the wrapping <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsConnection</code></a> in which case <code>ConnectionFactory.createConnection(String, String)</code> is used when creating the connection otherwise <code>ConnectionFactory.createConnection()</code> will be used. </p> \n<p> This was built against <code>org.apache.qpid:qpid-jms-client:0.8.0</code>. This vendor implementation doesn't appear to be usable with Azure AMQP as is unless you follow the notes on <a href=\"http://stackoverflow.com/questions/40281205/how-can-i-send-receive-a-message-from-azure-service-bus-from-qpid-jms-qpid-jms\" target=\"_new\">stack overflow</a> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/AMQP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-amqp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester-json/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/json/AssertJsonPayloadEquals.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.json.AssertJsonPayloadEquals",
      "className" : "AssertJsonPayloadEquals",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion.json",
      "componentType" : "object",
      "alias" : "assert-json-payload-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester-json.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertJsonPayloadEquals\nextends com.adaptris.tester.runtime.messages.assertion.PayloadAssertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertJsonPayloadEquals</span>\nextends com.adaptris.tester.runtime.messages.assertion.PayloadAssertion",
      "description" : "Checks if TestMessage.getPayload() equals PayloadAssertion.getPayload() Assertions are used to validate the returned message is expected.",
      "descriptionHtml" : "Checks if \n<code>TestMessage.getPayload()</code> equals \n<code>PayloadAssertion.getPayload()</code> \n<p>Assertions are used to validate the returned message is expected.</p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionMetadata.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.ConditionMetadata",
      "className" : "ConditionMetadata",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests a metadata key against a configured operator.",
        "tag" : "condition,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests a metadata key against a configured operator.\",\n                  tag=\"condition,metadata\")\npublic class ConditionMetadata\nextends ConditionWithOperator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests a metadata key against a configured operator.\",\n                  tag=\"condition,metadata\")\npublic class <span class=\"typeNameLabel\">ConditionMetadata</span>\nextends <a href=\"ConditionWithOperator.html\" title=\"class in com.adaptris.core.services.conditional.conditions\" target=\"_new\">ConditionWithOperator</a>",
      "description" : "This Condition targets message metadata. All you need do is choose an Operator to apply the conditional test.",
      "descriptionHtml" : "<p> This <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> targets message metadata. All you need do is choose an <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> to apply the conditional test. </p>",
      "inheritance" : [
        {
          "name" : "ConditionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionImpl.html"
        },
        {
          "name" : "ConditionWithOperator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionWithOperator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsConsumer.html",
      "fullClassName" : "com.adaptris.core.fs.FsConsumer",
      "className" : "FsConsumer",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "consumer",
      "alias" : "fs-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "originalname",
          "fsFileSize",
          "lastmodified",
          "fsConsumeDir",
          "_interlokMessageConsumedFrom",
          "fsParentDir"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from the filesystem",
        "tag" : "consumer,fs,filesystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from the filesystem\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=NullConnection.class)\npublic class FsConsumer\nextends FsConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from the filesystem\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">FsConsumer</span>\nextends <a href=\"FsConsumerImpl.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\">FsConsumerImpl</a>",
      "description" : "File system implementation of AdaptrisMessageConsumer based on the com.adaptris.fs package. The configured Destination may return a string in one of two formats If a file based url is used. e.g. file:///c:/path/to/my/directory or file:////path/to/my/directory then the patch is considered to be fully qualified If just a path is returned, then it is considered to be relative to the current working directory. e.g. if /opt/fred is used, and the adapter is installed to /opt/adapter, then the fully qualified name is /opt/adapter/opt/fred. On windows based platforms, you should always use a file based url. Once A file has been consumed from the file-system a standard set of metadata is added to the resulting message; Metadata Key Description originalname Metadata key for storing the original name (generally file name) of a message. lastmodified Metadata key for storing the last modified date of the consumed file. fsFileSize Metadata key for storing the size of the message. fsConsumeDir Metadata key for storing the directory where a file was consumed from. fsParentDir Metadata key for storing the name of the immediate parent directory that a file was consumed from.",
      "descriptionHtml" : "<p> File system implementation of <code>AdaptrisMessageConsumer</code> based on the <code>com.adaptris.fs</code> package. </p> \n<p> The configured <code>Destination</code> may return a string in one of two formats </p> \n<ul> \n <li>If a <code>file</code> based url is used. e.g. file:///c:/path/to/my/directory or file:////path/to/my/directory then the patch is considered to be fully qualified</li> \n <li>If just a path is returned, then it is considered to be relative to the current working directory. e.g. if /opt/fred is used, and the adapter is installed to /opt/adapter, then the fully qualified name is /opt/adapter/opt/fred.</li> \n</ul> \n<p> On windows based platforms, you should always use a file based url. </p> \n<p> Once A file has been consumed from the file-system a standard set of metadata is added to the resulting message; </p>\n<table> \n <tbody>\n  <tr>\n   <th>Metadata Key</th> \n   <th>Description</th> \n  </tr>\n  <tr> \n   <td>originalname</td> \n   <td>Metadata key for storing the original name (generally file name) of a message. </td> \n  </tr> \n  <tr> \n   <td>lastmodified</td> \n   <td>Metadata key for storing the last modified date of the consumed file. </td> \n  </tr> \n  <tr> \n   <td>fsFileSize</td> \n   <td>Metadata key for storing the size of the message.</td> \n  </tr> \n  <tr> \n   <td>fsConsumeDir</td> \n   <td>Metadata key for storing the directory where a file was consumed from. </td> \n  </tr> \n  <tr> \n   <td>fsParentDir</td> \n   <td>Metadata key for storing the name of the immediate parent directory that a file was consumed from. </td> \n  </tr> \n </tbody>\n</table>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "FsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/OverwritePayload.html",
      "fullClassName" : "com.adaptris.core.transform.schema.OverwritePayload",
      "className" : "OverwritePayload",
      "packageName" : "com.adaptris.core.transform.schema",
      "componentType" : "object",
      "alias" : "schema-replace-payload-with-violations",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class OverwritePayload\nextends ViolationHandlerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OverwritePayload</span>\nextends <a href=\"ViolationHandlerImpl.html\" title=\"class in com.adaptris.core.transform.schema\" target=\"_new\">ViolationHandlerImpl</a>",
      "description" : "Replaces the current payload with a report of the schema violations.",
      "descriptionHtml" : "Replaces the current payload with a report of the schema violations.",
      "inheritance" : [
        {
          "name" : "ViolationHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/ViolationHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/core/services/edi/x12/X12HeaderExtract.html",
      "fullClassName" : "com.adaptris.core.services.edi.x12.X12HeaderExtract",
      "className" : "X12HeaderExtract",
      "packageName" : "com.adaptris.core.services.edi.x12",
      "componentType" : "service",
      "alias" : "x12-header-extract",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "AuthorizationInformationQualifier,AuthorizationInformation,SecurityInformationQualifier,SecurityInformation,InterchangeIDSenderQualifier,InterchangeSenderID,InterchangeIDReceiverQualifier,InterchangeReceiverID,InterchangeDate,InterchangeTime,InterchangeControlStandardsIdentifier,InterchangeControlVersionNumber,InterchangeControlNumber,AcknowledgmentRequested,TestIndicator,SubelementSeparator,ElementSeparator"
        ],
        "recommended" : [ ],
        "since" : "3.7.0",
        "summary" : "Extract all the values including separators from an standard ISA record into metadata",
        "tag" : "service,edi,x12,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract all the values including separators from an standard ISA record into metadata\",\n                  tag=\"service,edi,x12,metadata\",\n                  since=\"3.7.0\",\n                  metadata=\"AuthorizationInformationQualifier,AuthorizationInformation,SecurityInformationQualifier,SecurityInformation,InterchangeIDSenderQualifier,InterchangeSenderID,InterchangeIDReceiverQualifier,InterchangeReceiverID,InterchangeDate,InterchangeTime,InterchangeControlStandardsIdentifier,InterchangeControlVersionNumber,InterchangeControlNumber,AcknowledgmentRequested,TestIndicator,SubelementSeparator,ElementSeparator\")\npublic class X12HeaderExtract\nextends LicensedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract all the values including separators from an standard ISA record into metadata\",\n                  tag=\"service,edi,x12,metadata\",\n                  since=\"3.7.0\",\n                  metadata=\"AuthorizationInformationQualifier,AuthorizationInformation,SecurityInformationQualifier,SecurityInformation,InterchangeIDSenderQualifier,InterchangeSenderID,InterchangeIDReceiverQualifier,InterchangeReceiverID,InterchangeDate,InterchangeTime,InterchangeControlStandardsIdentifier,InterchangeControlVersionNumber,InterchangeControlNumber,AcknowledgmentRequested,TestIndicator,SubelementSeparator,ElementSeparator\")\npublic class <span class=\"typeNameLabel\">X12HeaderExtract</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedService</a>",
      "description" : "Extract all the values including separators from an standard ISA record into metadata.",
      "descriptionHtml" : "Extract all the values including separators from an standard ISA record into metadata.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "LicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PasConsumer.html",
      "fullClassName" : "com.adaptris.core.jms.PasConsumer",
      "className" : "PasConsumer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "consumer",
      "alias" : "jms-topic-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Listen for JMS messages on the specified topic",
        "tag" : "consumer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified topic\",\n                  tag=\"consumer,jms\",\n                  recommended=JmsConnection.class)\npublic class PasConsumer\nextends JmsConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified topic\",\n                  tag=\"consumer,jms\",\n                  recommended=<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PasConsumer</span>\nextends <a href=\"JmsConsumerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConsumerImpl</a>",
      "description" : "JMS Publish-and-subscribe implementation of AdaptrisMessageConsumer.",
      "descriptionHtml" : "<p> JMS Publish-and-subscribe implementation of <code>AdaptrisMessageConsumer</code>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "JmsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/event/AdapterStopEvent.html",
      "fullClassName" : "com.adaptris.core.event.AdapterStopEvent",
      "className" : "AdapterStopEvent",
      "packageName" : "com.adaptris.core.event",
      "componentType" : "object",
      "alias" : "adapter-stop-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AdapterStopEvent\nextends AdapterLifecycleEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdapterStopEvent</span>\nextends <a href=\"../AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdapterLifecycleEvent</a>",
      "description" : "AdapterLifecycleEvent indicating that stop has been invoked.",
      "descriptionHtml" : "<p> <code>AdapterLifecycleEvent</code> indicating that <code>stop</code> has been invoked. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/BooleanMetadataConverter.html",
      "fullClassName" : "com.adaptris.core.jms.BooleanMetadataConverter",
      "className" : "BooleanMetadataConverter",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-boolean-metadata-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BooleanMetadataConverter\nextends MetadataConverter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BooleanMetadataConverter</span>\nextends <a href=\"MetadataConverter.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MetadataConverter</a>",
      "description" : "MetadataElement key and value set as property of javax.jms.Message using setBooleanProperty(String key, boolean value).",
      "descriptionHtml" : "<code>MetadataElement</code> key and value set as property of \n<code>javax.jms.Message</code> using \n<code>setBooleanProperty(String key, boolean value)</code>.",
      "inheritance" : [
        {
          "name" : "MetadataConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MetadataConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ConfiguredRequestHeaders.html",
      "fullClassName" : "com.adaptris.core.http.apache.ConfiguredRequestHeaders",
      "className" : "ConfiguredRequestHeaders",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-configured-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<org.apache.http.client.methods.HttpRequestBase>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">RequestHeaderProvider</a>&lt;org.apache.http.client.methods.HttpRequestBase&gt;",
      "description" : "Implementation of RequestHeaderProvider that applies static configured values as headers.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>RequestHeaderProvider</code></a> that applies static configured values as headers.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3HttpExpiresDate.html",
      "fullClassName" : "com.adaptris.aws.s3.meta.S3HttpExpiresDate",
      "className" : "S3HttpExpiresDate",
      "packageName" : "com.adaptris.aws.s3.meta",
      "componentType" : "object",
      "alias" : "s3-http-expires-date",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : { },
      "annotationDetails" : "public class S3HttpExpiresDate\nextends S3ObjectMetadata",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">S3HttpExpiresDate</span>\nextends <a href=\"S3ObjectMetadata.html\" title=\"class in com.adaptris.aws.s3.meta\" target=\"_new\">S3ObjectMetadata</a>",
      "inheritance" : [
        {
          "name" : "S3ObjectMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ObjectMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertNextServiceId.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertNextServiceId",
      "className" : "AssertNextServiceId",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-next-service-id",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertNextServiceId\nextends java.lang.Object\nimplements Assertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertNextServiceId</span>\nextends java.lang.Object\nimplements <a href=\"Assertion.html\" title=\"interface in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">Assertion</a>",
      "description" : "Checks the value of TestMessage.getNextServiceId() equals getValue().",
      "descriptionHtml" : "Checks the value of \n<a href=\"../TestMessage.html#getNextServiceId()\" target=\"_new\"><code>TestMessage.getNextServiceId()</code></a> equals \n<a href=\"#getValue()\" target=\"_new\"><code>getValue()</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertLinePayloadEquals.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertLinePayloadEquals",
      "className" : "AssertLinePayloadEquals",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-line-payload-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertLinePayloadEquals\nextends java.lang.Object\nimplements Assertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertLinePayloadEquals</span>\nextends java.lang.Object\nimplements <a href=\"Assertion.html\" title=\"interface in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">Assertion</a>",
      "description" : "Checks if TestMessage.getPayload() equals getExpectedLines() Assertions are used to validate the returned message is expected.",
      "descriptionHtml" : "Checks if \n<a href=\"../TestMessage.html#getPayload()\" target=\"_new\"><code>TestMessage.getPayload()</code></a> equals \n<a href=\"#getExpectedLines()\" target=\"_new\"><code>getExpectedLines()</code></a> \n<p>Assertions are used to validate the returned message is expected.</p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-failover/4.0.0B1-RELEASE/com/adaptris/failover/FailoverEventHandler.html",
      "fullClassName" : "com.adaptris.failover.FailoverEventHandler",
      "className" : "FailoverEventHandler",
      "packageName" : "com.adaptris.failover",
      "componentType" : "object",
      "alias" : "failover-event-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-failover.jar",
      "profile" : { },
      "annotationDetails" : "public class FailoverEventHandler\nextends DefaultEventHandler",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FailoverEventHandler</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultEventHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">DefaultEventHandler</a>",
      "inheritance" : [
        {
          "name" : "EventHandlerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/EventHandlerBase.html?is-external=true"
        },
        {
          "name" : "DefaultEventHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultEventHandler.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Management/Failover",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-failover",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JdbcLoginServiceFactory.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JdbcLoginServiceFactory",
      "className" : "JdbcLoginServiceFactory",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-jdbc-login-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "allows use of org.eclipse.jetty.security.JDBCLoginService to authenticate users",
        "tag" : "jetty,authentication"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"allows use of org.eclipse.jetty.security.JDBCLoginService to authenticate users\",\n                  tag=\"jetty,authentication\",\n                  since=\"3.9.1\")\npublic class JdbcLoginServiceFactory\nextends LoginServiceFactoryImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"allows use of org.eclipse.jetty.security.JDBCLoginService to authenticate users\",\n                  tag=\"jetty,authentication\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">JdbcLoginServiceFactory</span>\nextends <a href=\"LoginServiceFactoryImpl.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">LoginServiceFactoryImpl</a>",
      "description" : "Allows you to configure a org.eclipse.jetty.security.JDBCLoginService as the login service to use with Jetty. This simply exposes the Jetty JdbcLoginService as Interlok configuration. The documentation from the eclipse jetty site should always be considered canonical.",
      "descriptionHtml" : "Allows you to configure a \n<code>org.eclipse.jetty.security.JDBCLoginService</code> as the login service to use with Jetty. \n<p> This simply exposes the Jetty JdbcLoginService as Interlok configuration. The documentation from <a href=\"https://wiki.eclipse.org/Jetty/Tutorial/Realms\" target=\"_new\">the eclipse jetty site</a> should always be considered canonical. </p>",
      "inheritance" : [
        {
          "name" : "LoginServiceFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/LoginServiceFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/credentials/FixedCredentialsProvider.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.credentials.FixedCredentialsProvider",
      "className" : "FixedCredentialsProvider",
      "packageName" : "com.adaptris.google.cloud.pubsub.credentials",
      "componentType" : "object",
      "alias" : "fixed-credentials-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : { },
      "annotationDetails" : "public class FixedCredentialsProvider\nextends CredentialsProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FixedCredentialsProvider</span>\nextends <a href=\"CredentialsProvider.html\" title=\"class in com.adaptris.google.cloud.pubsub.credentials\" target=\"_new\">CredentialsProvider</a>",
      "inheritance" : [
        {
          "name" : "CredentialsProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/credentials/CredentialsProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MetadataElement.html",
      "fullClassName" : "com.adaptris.core.MetadataElement",
      "className" : "MetadataElement",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "metadata-element",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataElement\nextends java.lang.Object\nimplements NameValuePair, java.lang.Cloneable",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataElement</span>\nextends java.lang.Object\nimplements <a href=\"../util/NameValuePair.html\" title=\"interface in com.adaptris.util\" target=\"_new\">NameValuePair</a>, java.lang.Cloneable",
      "description" : "A key-value pair of String metadata. Instances of this class are used by implementations of AdaptrisMessage to store metadata. Semantic equality of MetadataElement s is based on the value of the 'key' only.",
      "descriptionHtml" : "<p> A key-value pair of <code>String</code> metadata. Instances of this class are used by implementations of <code>AdaptrisMessage</code> to store metadata. Semantic equality of <code>MetadataElement</code> s is based on the value of the 'key' only. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/JdbcJsonOutputLines.html",
      "fullClassName" : "com.adaptris.core.json.jdbc.JdbcJsonOutputLines",
      "className" : "JdbcJsonOutputLines",
      "packageName" : "com.adaptris.core.json.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-json-first-resultset-line-output",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Output the first resultset as JSON line-by-line",
        "tag" : "json,jdbc,line"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Output the first resultset as JSON line-by-line\",\n                  tag=\"json,jdbc,line\")\npublic class JdbcJsonOutputLines\nextends JdbcJsonOutput",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Output the first resultset as JSON line-by-line\",\n                  tag=\"json,jdbc,line\")\npublic class <span class=\"typeNameLabel\">JdbcJsonOutputLines</span>\nextends <a href=\"JdbcJsonOutput.html\" title=\"class in com.adaptris.core.json.jdbc\" target=\"_new\">JdbcJsonOutput</a>",
      "description" : "Implementation of ResultSetTranslator that outputs the first result set as json. Takes the first result set and writes out each row as its own JSON object. You should use this output implementation if you are executing a SELECT via JdbcDataQueryService.  \n    { \"firstName\": \"John\", \"lastName\": \"Doe\" }\n    { \"firstName\": \"Anna\", \"lastName\": \"Smith\" }\n    { \"firstName\": \"Peter\", \"lastName\": \"Jones\" }",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>ResultSetTranslator</code></a> that outputs the first result set as json. \n<p> Takes the first result set and writes out each row as its own JSON object. You should use this output implementation if you are executing a SELECT via <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcDataQueryService.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>JdbcDataQueryService</code></a>. </p> \n<pre> <code>\n    { \"firstName\": \"John\", \"lastName\": \"Doe\" }\n    { \"firstName\": \"Anna\", \"lastName\": \"Smith\" }\n    { \"firstName\": \"Peter\", \"lastName\": \"Jones\" }\n </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html?is-external=true"
        },
        {
          "name" : "StyledResultTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html?is-external=true"
        },
        {
          "name" : "JdbcJsonOutput",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/JdbcJsonOutput.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/routing/json/JsonPathSyntaxIdentifier.html",
      "fullClassName" : "com.adaptris.core.services.routing.json.JsonPathSyntaxIdentifier",
      "className" : "JsonPathSyntaxIdentifier",
      "packageName" : "com.adaptris.core.services.routing.json",
      "componentType" : "object",
      "alias" : "routing-json-path-syntax-identifier",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Syntax Identifier which handles JSON Paths",
        "tag" : "json,routing"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Syntax Identifier which handles JSON Paths\",\n                  tag=\"json,routing\")\npublic class JsonPathSyntaxIdentifier\nextends SyntaxIdentifierImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Syntax Identifier which handles JSON Paths\",\n                  tag=\"json,routing\")\npublic class <span class=\"typeNameLabel\">JsonPathSyntaxIdentifier</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierImpl.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.routing\" class=\"externalLink\" target=\"_new\">SyntaxIdentifierImpl</a>",
      "description" : "Implementation of SyntaxIdentifier which handles JSON paths.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifier.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.routing\" class=\"externalLink\" target=\"_new\"><code>SyntaxIdentifier</code></a> which handles JSON paths.",
      "inheritance" : [
        {
          "name" : "SyntaxIdentifierBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierBase.html?is-external=true"
        },
        {
          "name" : "SyntaxIdentifierImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierImpl.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-onedrive/4.0.0B1-RELEASE/com/adaptris/interlok/azure/onedrive/DocumentUploadService.html",
      "fullClassName" : "com.adaptris.interlok.azure.onedrive.DocumentUploadService",
      "className" : "DocumentUploadService",
      "packageName" : "com.adaptris.interlok.azure.onedrive",
      "componentType" : "service",
      "alias" : "azure-one-drive-document-upload-service",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-onedrive.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.interlok.azure.GraphAPIConnection"
        ],
        "since" : "",
        "summary" : "Upload the contents of a message to a file in OneDrive.",
        "tag" : "file,o365,microsoft,office,365,one drive,upload"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Upload the contents of a message to a file in OneDrive.\",\n                  tag=\"file,o365,microsoft,office,365,one drive,upload\",\n                  recommended=com.adaptris.interlok.azure.GraphAPIConnection.class)\npublic class DocumentUploadService\nextends ServiceImp\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Upload the contents of a message to a file in OneDrive.\",\n                  tag=\"file,o365,microsoft,office,365,one drive,upload\",\n                  recommended=com.adaptris.interlok.azure.GraphAPIConnection.class)\npublic class <span class=\"typeNameLabel\">DocumentUploadService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Upload the contents of a message to a file in OneDrive.",
      "descriptionHtml" : "Upload the contents of a message to a file in OneDrive.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/OneDrive",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-onedrive",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/findreplace/MetadataReplacementSource.html",
      "fullClassName" : "com.adaptris.core.services.findreplace.MetadataReplacementSource",
      "className" : "MetadataReplacementSource",
      "packageName" : "com.adaptris.core.services.findreplace",
      "componentType" : "object",
      "alias" : "metadata-replacement-source",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataReplacementSource\nextends AbstractReplacementSource",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataReplacementSource</span>\nextends <a href=\"AbstractReplacementSource.html\" title=\"class in com.adaptris.core.services.findreplace\" target=\"_new\">AbstractReplacementSource</a>",
      "description" : "ReplacementSource implementation which returns the metadata value when the replacement value is treated as a metadata key. Used with FindAndReplaceService to replace text in the message.",
      "descriptionHtml" : "<a href=\"ReplacementSource.html\" title=\"interface in com.adaptris.core.services.findreplace\" target=\"_new\"><code>ReplacementSource</code></a> implementation which returns the metadata value when the replacement value is treated as a metadata key. \n<p> Used with <a href=\"FindAndReplaceService.html\" title=\"class in com.adaptris.core.services.findreplace\" target=\"_new\"><code>FindAndReplaceService</code></a> to replace text in the message. </p>",
      "inheritance" : [
        {
          "name" : "AbstractReplacementSource",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/findreplace/AbstractReplacementSource.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/InlineItemCache.html",
      "fullClassName" : "com.adaptris.core.fs.InlineItemCache",
      "className" : "InlineItemCache",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "object",
      "alias" : "fs-inline-processed-item-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class InlineItemCache\nextends java.lang.Object\nimplements ProcessedItemCache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InlineItemCache</span>\nextends java.lang.Object\nimplements <a href=\"ProcessedItemCache.html\" title=\"interface in com.adaptris.core.fs\" target=\"_new\">ProcessedItemCache</a>",
      "description" : "In memory cache of items that have been processed.",
      "descriptionHtml" : "In memory cache of items that have been processed.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/ConfiguredReplyProvider.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.ConfiguredReplyProvider",
      "className" : "ConfiguredReplyProvider",
      "packageName" : "com.adaptris.google.cloud.pubsub",
      "componentType" : "object",
      "alias" : "gcloud-configured-reply-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "An explicitly configured ack/nack for GoogleCloudPubSubResponseProducer",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"An explicitly configured ack/nack for GoogleCloudPubSubResponseProducer\")\npublic class ConfiguredReplyProvider\nextends java.lang.Object\nimplements ReplyProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"An explicitly configured ack/nack for GoogleCloudPubSubResponseProducer\")\npublic class <span class=\"typeNameLabel\">ConfiguredReplyProvider</span>\nextends java.lang.Object\nimplements <a href=\"ReplyProvider.html\" title=\"interface in com.adaptris.google.cloud.pubsub\" target=\"_new\">ReplyProvider</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester-json/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/json/AssertJsonPayloadEqualsFile.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.json.AssertJsonPayloadEqualsFile",
      "className" : "AssertJsonPayloadEqualsFile",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion.json",
      "componentType" : "object",
      "alias" : "assert-json-payload-equals-file",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester-json.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertJsonPayloadEqualsFile\nextends com.adaptris.tester.runtime.messages.assertion.AssertPayloadEqualsFile",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertJsonPayloadEqualsFile</span>\nextends com.adaptris.tester.runtime.messages.assertion.AssertPayloadEqualsFile",
      "description" : "Checks if TestMessage.getPayload() equals file contents. Assertions are used to validate the returned message is expected.",
      "descriptionHtml" : "Checks if \n<code>TestMessage.getPayload()</code> equals file contents. \n<p>Assertions are used to validate the returned message is expected.</p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/EndsWith.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.EndsWith",
      "className" : "EndsWith",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "object",
      "alias" : "metadata-ends-with",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured metadata value ends with the supplied value.",
        "tag" : "operator,comparator,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured metadata value ends with the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class EndsWith\nextends ComparatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured metadata value ends with the supplied value.\",\n                  tag=\"operator,comparator,metadata\")\npublic class <span class=\"typeNameLabel\">EndsWith</span>\nextends <a href=\"ComparatorImpl.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\">ComparatorImpl</a>",
      "description" : "Used with MetadataComparisonService.",
      "descriptionHtml" : "Used with \n<a href=\"MetadataComparisonService.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\"><code>MetadataComparisonService</code></a>.",
      "inheritance" : [
        {
          "name" : "ComparatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ComparatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/DefaultStatementCreator.html",
      "fullClassName" : "com.adaptris.jdbc.DefaultStatementCreator",
      "className" : "DefaultStatementCreator",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "default-statement-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultStatementCreator\nextends java.lang.Object\nimplements CallableStatementCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultStatementCreator</span>\nextends java.lang.Object\nimplements <a href=\"CallableStatementCreator.html\" title=\"interface in com.adaptris.jdbc\" target=\"_new\">CallableStatementCreator</a>",
      "description" : "Default CallableStatementCreator.",
      "descriptionHtml" : "Default CallableStatementCreator.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertMetadataNotEquals.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertMetadataNotEquals",
      "className" : "AssertMetadataNotEquals",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-metadata-not-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertMetadataNotEquals\nextends MetadataAssertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertMetadataNotEquals</span>\nextends <a href=\"MetadataAssertion.html\" title=\"class in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">MetadataAssertion</a>",
      "description" : "Checks if all keys and corresponding values set in MetadataAssertion.getMessageHeaders() are not present in TestMessage.getMessageHeaders().",
      "descriptionHtml" : "Checks if all keys and corresponding values set in \n<a href=\"MetadataAssertion.html#getMessageHeaders()\" target=\"_new\"><code>MetadataAssertion.getMessageHeaders()</code></a> are not present in \n<a href=\"../TestMessage.html#getMessageHeaders()\" target=\"_new\"><code>TestMessage.getMessageHeaders()</code></a>.",
      "inheritance" : [
        {
          "name" : "MetadataAssertion",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/MetadataAssertion.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/StringMetadata.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.StringMetadata",
      "className" : "StringMetadata",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-string-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class StringMetadata\nextends MetadataParameter\nimplements ImportParameter, ExportParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringMetadata</span>\nextends <a href=\"MetadataParameter.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">MetadataParameter</a>\nimplements <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ImportParameter</a>, <a href=\"../ExportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ExportParameter</a>",
      "description" : "Allows you use AdaptrisMessage Metadata as either an Import or Export parameter to a given RFC Call.",
      "descriptionHtml" : "Allows you use AdaptrisMessage Metadata as either an Import or Export parameter to a given RFC Call.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        },
        {
          "name" : "MetadataParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/MetadataParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpTopicConsumer.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.SolaceJcsmpTopicConsumer",
      "className" : "SolaceJcsmpTopicConsumer",
      "packageName" : "com.adaptris.core.jcsmp.solace",
      "componentType" : "consumer",
      "alias" : "solace-jcsmp-topic-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "A Solace native JCSMP component that consumes your topic messages from the Solace VPN.",
        "tag" : "subscription,topic,consumer,solace,jcsmp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP component that consumes your topic messages from the Solace VPN.\",\n                  tag=\"subscription,topic,consumer,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class SolaceJcsmpTopicConsumer\nextends SolaceJcsmpAbstractConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP component that consumes your topic messages from the Solace VPN.\",\n                  tag=\"subscription,topic,consumer,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpTopicConsumer</span>\nextends <a href=\"SolaceJcsmpAbstractConsumer.html\" title=\"class in com.adaptris.core.jcsmp.solace\" target=\"_new\">SolaceJcsmpAbstractConsumer</a>",
      "description" : "This implementation of AdaptrisMessageConsumer will use the Solace Jcsmp Api to consume messages from a Topic on your Solace router. There are four main components that you will need to configure; Destination: The Solace end point to consume messages from. End point permissions: Should match the Solace configured end point properties. End point access type: Should match either EXCLUSIVE or NONEXCLUSIVE Acknowledge mode: Should either be CLIENT or AUTO.",
      "descriptionHtml" : "<p> This implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageConsumer</code></a> will use the Solace Jcsmp Api to consume messages from a Topic on your Solace router. </p> \n<p> There are four main components that you will need to configure; </p>\n<ul> \n <li><b>Destination: </b> The Solace end point to consume messages from.</li> \n <li><b>End point permissions: </b> Should match the Solace configured end point properties.</li> \n <li><b>End point access type: </b> Should match either EXCLUSIVE or NONEXCLUSIVE</li> \n <li><b>Acknowledge mode: </b> Should either be CLIENT or AUTO.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "SolaceJcsmpAbstractConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpAbstractConsumer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcEscapedDateStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.JdbcEscapedDateStatementParameter",
      "className" : "JdbcEscapedDateStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-escaped-date-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JdbcEscapedDateStatementParameter\nextends TypedStatementParameter<java.sql.Date>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JdbcEscapedDateStatementParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.sql.Date&gt;",
      "description" : "A Date extension to StatementParameter. This ignores the query-class configuration, and always attempts to format the string into a java.sql.Date using Date.valueOf(String); if convert-null is true, then empty/blank/whitespace only values will be substituted by System.currentTimeMillis().",
      "descriptionHtml" : "A \n<code>Date</code> extension to StatementParameter. \n<p> This ignores the query-class configuration, and always attempts to format the string into a java.sql.Date using <code>Date.valueOf(String)</code>; if <code>convert-null</code> is true, then empty/blank/whitespace only values will be substituted by <code>System.currentTimeMillis()</code>. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/StringColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.StringColumnTranslator",
      "className" : "StringColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-string-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StringColumnTranslator\nextends FormattableColumnTranslator\nimplements ColumnWriter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringColumnTranslator</span>\nextends <a href=\"FormattableColumnTranslator.html\" title=\"class in com.adaptris.core.services.jdbc.types\" target=\"_new\">FormattableColumnTranslator</a>\nimplements <a href=\"ColumnWriter.html\" title=\"interface in com.adaptris.core.services.jdbc.types\" target=\"_new\">ColumnWriter</a>",
      "description" : "Column Translator implementation for handling string types",
      "descriptionHtml" : "Column Translator implementation for handling string types",
      "inheritance" : [
        {
          "name" : "FormattableColumnTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/FormattableColumnTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-salesforce/4.0.0B1-RELEASE/com/adaptris/core/oauth/salesforce/SalesforceAccessToken.html",
      "fullClassName" : "com.adaptris.core.oauth.salesforce.SalesforceAccessToken",
      "className" : "SalesforceAccessToken",
      "packageName" : "com.adaptris.core.oauth.salesforce",
      "componentType" : "object",
      "alias" : "salesforce-access-token",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-salesforce.jar",
      "profile" : { },
      "annotationDetails" : "public class SalesforceAccessToken\nextends java.lang.Object\nimplements AccessTokenBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SalesforceAccessToken</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/oauth/AccessTokenBuilder.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.oauth\" class=\"externalLink\" target=\"_new\">AccessTokenBuilder</a>",
      "description" : "Wraps the salesforce username/password OAuth authentication flow for machine/machine data flow. Based on the java example available within the salesforce-rest-starter project and relies on the jackson json jars being available on the classpath (built against com.fasterxml.jackson.core:jackson-databind:2.6.2) which has been marked as optional in the dependency list to avoid additional jars if you want to just use Apache HTTP. It is perfectly possible to achieve the same thing with standard configuration; it would be a combination of AddMetadataService + CreateQueryStringFromMetadata + (StandardHttpProducer || ApacheHttpProducer) + JsonPathService + AddFormattedMetadataService. This encapsulates all of that into a single class.",
      "descriptionHtml" : "Wraps the salesforce username/password OAuth authentication flow for machine/machine data flow. \n<p> Based on the java example available within the <a href=\"https://github.com/jamesward/salesforce-rest-starter\" target=\"_new\">salesforce-rest-starter</a> project and relies on the jackson json jars being available on the classpath (built against <code>com.fasterxml.jackson.core:jackson-databind:2.6.2</code>) which has been marked as optional in the dependency list to avoid additional jars if you want to just use Apache HTTP. </p> \n<p> It is perfectly possible to achieve the same thing with standard configuration; it would be a combination of <code>AddMetadataService</code> + <code>CreateQueryStringFromMetadata</code> + (<code>StandardHttpProducer</code> || <code>ApacheHttpProducer</code>) + <code>JsonPathService</code> + <code>AddFormattedMetadataService</code>. This encapsulates all of that into a single class. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Salesforce",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-salesforce",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/EdiXmlStreamService.html",
      "fullClassName" : "com.adaptris.core.transform.edi.EdiXmlStreamService",
      "className" : "EdiXmlStreamService",
      "packageName" : "com.adaptris.core.transform.edi",
      "componentType" : "service",
      "alias" : "edi-xml-stream-service",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "EDI to XML (streaming) service.",
        "tag" : "service,transform,edi,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"EDI to XML (streaming) service.\",\n                  tag=\"service,transform,edi,xml\")\npublic class EdiXmlStreamService\nextends EdiCommonStreamService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"EDI to XML (streaming) service.\",\n                  tag=\"service,transform,edi,xml\")\npublic class <span class=\"typeNameLabel\">EdiXmlStreamService</span>\nextends <a href=\"EdiCommonStreamService.html\" title=\"class in com.adaptris.core.transform.edi\" target=\"_new\">EdiCommonStreamService</a>",
      "description" : "EDI to XML (streaming) service. Converts an EDI file into a XML file given the EDI rule definition file (gXml) that informs us of the structure of the incoming EDI document. Requires an EDI and TRANSFORM license Adapter Configuration You have a choice of how to configure the adapter: Manually configure for the edi document Have the edi settings auto detected with: autoDetectMsgDetails Settings messageName name of the edi message we are expecting eg INVOIC messageVersion version of the edi message eg D96A messageOrganisation the EDIFACT governing body eg X12 or EDIFACT inputCharset Sets the encoding of the input edi document, this can be picked up from the incoming adapter message, or you can override it with this setting. Defaults to UTF-8 if no value set. outputCharset Sets the encoding of the generated XMl document, default to UTF-8 if not set. ediSeparatorSet Specifies the separator to use to parse the incoming Edi document. If the autoDetectMsgDetails is set, then these can be picked up from the edi document. Note for X12 it is best to rely on the autodetect settings. The following classes are available: EdifactSeparatorSet - Default EDIFACT separators X12SeparatorSet - Default X12 separators TradacomsSeparatorSet - Default Tradacomm separators CustomSeparatorSet - Characters can be configured as desired xmlTagnames Specifies the XML tagname set to use for the generated XML document. It allows you to customise the only the tagnames used in the document rather than the structure. Defaults to: AdaptrisOriginalXMLTagnames, but see subclasses of: IXMLTagnames for a complete list. trim-white-space-from-data This settings strips whitespace from the actual data that is conveyed in the edi document eg REF+ myname', there is a leading space to the text myname that you may wish removed. By default this is set to false. This option calls java.lang.String.trim() underneath and so leading and trailing spaces are removed. outputEmptyFields This setting causes the output of all fields defined in the gXml in the output xml document. By default this setting is false and only values that are present in the edi document are output. With this option all fields will be output. enableValidation This setting enables validation of the edi document. By default this setting is off. Enabled, it will perform additional checks of the edi document against the rules in the gXml. All errors are built up and the output xml document continues to be generated. Once the edi document is processed, should there be any validation errors then a service exception is thrown. The validation errors can be found in the log file. autoDetectMsgDetails With this setting there is no need to configure the msg details in the adapter config(messageName, messageVersion, messageOrganisation). Instead these are picked up from the input document. The following settings are picked up: messageName - name of the edi message eg INVOIC messageVersion - version of the message eg D96A messageOrganisation - the EDIFACT governing body eg X12 or EDIFACT ediSeparatorSet - Picks up the UNA segment from an EDIFACT msg, or configures the separators for X12. inputCharset - for EDIFACT UNB segments - based on the syntax specifier ie UNOA/UNOB the system sets the associated inputCharset. enableGrammarFileCaching True by default, this avoid unnecessary processing of grammar files by ensuring that they are only read once. Since grammar files don't change once defined so no need to re-read them during processing. grammarCacheLimit This sets the maximum number of grammars that can be loaded in memory at any one given time. The default value should be fine for most instances and defaults to: ParserRulesRegistry.DEFAULT_MAX_RULES_CACHE_SIZE. Metadata config The following config items can be passed through the metadata. These would override any values from the config file, but not the auto-detected values. Note set these keys in lower case. Specifying the message name EdiCommonStreamService.METADATA_KEYS.MESSAGE_NAME Specifying the message version EdiCommonStreamService.METADATA_KEYS.MESSAGE_VERSION Specifying the message organisation EdiCommonStreamService.METADATA_KEYS.MESSAGE_ORGANISATION Specifying the message grammar EdiCommonStreamService.METADATA_KEYS.MESSAGE_GXML, the message will be parsed against this file unless the other metadata items are specified. Simply put: you can pass the grammar file (url) in the metadata along with the message, and the message will be processed against it. If you do specify other metadata elements, then although the grammar will be loaded, the message will be parsed against the grammar indicated by these values rather than the supplied grammar.",
      "descriptionHtml" : "<p> EDI to XML (streaming) service. </p> \n<p> Converts an EDI file into a XML file given the EDI rule definition file (gXml) that informs us of the structure of the incoming EDI document. <strong>Requires an EDI and TRANSFORM license</strong> </p> \n<p> <b>Adapter Configuration</b><br> You have a choice of how to configure the adapter: </p>\n<ul> \n <li>Manually configure for the edi document</li> \n <li>Have the edi settings auto detected with: <i>autoDetectMsgDetails</i></li> \n</ul> \n<br> \n<b>Settings</b>\n<br> \n<ul> \n <li><i>messageName</i><br> name of the edi message we are expecting eg INVOIC</li> \n <li><i>messageVersion</i><br> version of the edi message eg D96A</li> \n <li><i>messageOrganisation</i><br> the EDIFACT governing body eg X12 or EDIFACT</li> \n <li><i>inputCharset</i><br> Sets the encoding of the input edi document, this can be picked up from the incoming adapter message, or you can override it with this setting. Defaults to UTF-8 if no value set.</li> \n <li><i>outputCharset</i><br> Sets the encoding of the generated XMl document, default to UTF-8 if not set.</li> \n <li><i>ediSeparatorSet</i><br> Specifies the separator to use to parse the incoming Edi document. If the <i>autoDetectMsgDetails</i> is set, then these can be picked up from the edi document. Note for X12 it is best to rely on the autodetect settings. The following classes are available: \n  <ul> \n   <li><a href=\"../../../adapter/edistream/parser/edi/EdifactSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\"><code>EdifactSeparatorSet</code></a> - Default EDIFACT separators</li> \n   <li><a href=\"../../../adapter/edistream/parser/edi/X12SeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\"><code>X12SeparatorSet</code></a> - Default X12 separators</li> \n   <li><a href=\"../../../adapter/edistream/parser/edi/TradacomsSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\"><code>TradacomsSeparatorSet</code></a> - Default Tradacomm separators</li> \n   <li><a href=\"../../../adapter/edistream/parser/edi/CustomSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\"><code>CustomSeparatorSet</code></a> - Characters can be configured as desired</li> \n  </ul> </li> \n <li><i>xmlTagnames</i><br> Specifies the XML tagname set to use for the generated XML document. It allows you to customise the only the tagnames used in the document rather than the structure. Defaults to: <a href=\"../../../adapter/edistream/parser/xml/tagnames/AdaptrisOriginalXMLTagnames.html\" title=\"class in com.adaptris.adapter.edistream.parser.xml.tagnames\" target=\"_new\"><code>AdaptrisOriginalXMLTagnames</code></a>, but see subclasses of: <a href=\"../../../adapter/edistream/parser/xml/tagnames/IXMLTagnames.html\" title=\"interface in com.adaptris.adapter.edistream.parser.xml.tagnames\" target=\"_new\"><code>IXMLTagnames</code></a> for a complete list.</li> \n <li>trim-white-space-from-data<br> This settings strips whitespace from the actual data that is conveyed in the edi document eg REF+ myname', there is a leading space to the text myname that you may wish removed. By default this is set to false. This option calls java.lang.String.trim() underneath and so leading and trailing spaces are removed.</li> \n <li><i>outputEmptyFields</i><br> This setting causes the output of all fields defined in the gXml in the output xml document. By default this setting is false and only values that are present in the edi document are output. With this option all fields will be output.</li> \n <li><i>enableValidation</i><br> This setting enables validation of the edi document. By default this setting is off. Enabled, it will perform additional checks of the edi document against the rules in the gXml. All errors are built up and the output xml document continues to be generated. Once the edi document is processed, should there be any validation errors then a service exception is thrown. The validation errors can be found in the log file.</li> \n <li><i>autoDetectMsgDetails</i><br> With this setting there is no need to configure the msg details in the adapter config(messageName, messageVersion, messageOrganisation). Instead these are picked up from the input document. The following settings are picked up: \n  <ul> \n   <li><i>messageName</i> - name of the edi message eg INVOIC</li> \n   <li><i>messageVersion</i> - version of the message eg D96A</li> \n   <li><i>messageOrganisation</i> - the EDIFACT governing body eg X12 or EDIFACT</li> \n   <li><i>ediSeparatorSet</i> - Picks up the UNA segment from an EDIFACT msg, or configures the separators for X12.</li> \n   <li><i>inputCharset</i> - for EDIFACT UNB segments - based on the syntax specifier ie UNOA/UNOB the system sets the associated inputCharset.</li> \n  </ul> </li> \n <li><i>enableGrammarFileCaching</i><br> True by default, this avoid unnecessary processing of grammar files by ensuring that they are only read once. Since grammar files don't change once defined so no need to re-read them during processing.</li> \n <li><i>grammarCacheLimit</i><br> This sets the maximum number of grammars that can be loaded in memory at any one given time. The default value should be fine for most instances and defaults to: <a href=\"../../../adapter/edistream/parser/ParserRulesRegistry.html#DEFAULT_MAX_RULES_CACHE_SIZE\" target=\"_new\"><code>ParserRulesRegistry.DEFAULT_MAX_RULES_CACHE_SIZE</code></a>.</li> \n</ul> \n<p></p> \n<p> <b>Metadata config</b> </p> The following config items can be passed through the metadata. These would override any values from the config file, but not the auto-detected values. Note set these keys in lower case. \n<ul> \n <li>Specifying the message name <a href=\"EdiCommonStreamService.METADATA_KEYS.html#MESSAGE_NAME\" target=\"_new\"><code>EdiCommonStreamService.METADATA_KEYS.MESSAGE_NAME</code></a></li> \n <li>Specifying the message version <a href=\"EdiCommonStreamService.METADATA_KEYS.html#MESSAGE_VERSION\" target=\"_new\"><code>EdiCommonStreamService.METADATA_KEYS.MESSAGE_VERSION</code></a></li> \n <li>Specifying the message organisation <a href=\"EdiCommonStreamService.METADATA_KEYS.html#MESSAGE_ORGANISATION\" target=\"_new\"><code>EdiCommonStreamService.METADATA_KEYS.MESSAGE_ORGANISATION</code></a></li> \n <li>Specifying the message grammar <a href=\"EdiCommonStreamService.METADATA_KEYS.html#MESSAGE_GXML\" target=\"_new\"><code>EdiCommonStreamService.METADATA_KEYS.MESSAGE_GXML</code></a>, the message will be parsed against this file unless the other metadata items are specified.</li> \n</ul> \n<p> Simply put: you can pass the grammar file (url) in the metadata along with the message, and the message will be processed against it. If you do specify other metadata elements, then although the grammar will be loaded, the message will be parsed against the grammar indicated by these values rather than the supplied grammar.</p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "LicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true"
        },
        {
          "name" : "EdiCommonStreamService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/EdiCommonStreamService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/Case.html",
      "fullClassName" : "com.adaptris.core.services.conditional.Case",
      "className" : "Case",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "object",
      "alias" : "case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "a case for a configured switch service",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"a case for a configured switch service\",\n                  since=\"3.9.0\")\npublic class Case\nextends java.lang.Object\nimplements ComponentLifecycle, ComponentLifecycleExtension",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"a case for a configured switch service\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">Case</span>\nextends java.lang.Object\nimplements <a href=\"../../ComponentLifecycle.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycle</a>, <a href=\"../../ComponentLifecycleExtension.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycleExtension</a>",
      "description" : "A 'case' for Switch.",
      "descriptionHtml" : "A 'case' for \n<a href=\"Switch.html\" title=\"class in com.adaptris.core.services.conditional\" target=\"_new\"><code>Switch</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/AdvancedProducerConfigBuilder.html",
      "fullClassName" : "com.adaptris.kafka.AdvancedProducerConfigBuilder",
      "className" : "AdvancedProducerConfigBuilder",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "object",
      "alias" : "kafka-advanced-producer-config",
      "deprecated" : true,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : { },
      "annotationDetails" : "@Deprecated\npublic class AdvancedProducerConfigBuilder\nextends AdvancedConfigBuilder\nimplements ProducerConfigBuilder",
      "annotationDetailsHtml" : "@Deprecated\npublic class <span class=\"typeNameLabel\">AdvancedProducerConfigBuilder</span>\nextends <a href=\"AdvancedConfigBuilder.html\" title=\"class in com.adaptris.kafka\" target=\"_new\">AdvancedConfigBuilder</a>\nimplements <a href=\"ProducerConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\">ProducerConfigBuilder</a>",
      "description" : "Implementation of ProducerConfigBuilder that exposes all configuration. Exposes all possible settings via a KeyValuePairSet. No checking of values is performed other than for the various SSL passwords (such as \"ssl.key.password\") which will be decoded using Password.decode(String) appropriately. Regardless of what is configured; the key.serializer property is fixed to be a StringSerializer; and the value.serializer property is always an AdaptrisMessageSerializer.",
      "descriptionHtml" : "Implementation of \n<a href=\"ProducerConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\"><code>ProducerConfigBuilder</code></a> that exposes all configuration. \n<p> Exposes all possible settings via a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairSet.html?is-external=true\" title=\"class or interface in com.adaptris.util\" class=\"externalLink\" target=\"_new\"><code>KeyValuePairSet</code></a>. No checking of values is performed other than for the various SSL passwords (such as \"ssl.key.password\") which will be decoded using <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/password/Password.html?is-external=true#decode(java.lang.String)\" title=\"class or interface in com.adaptris.security.password\" class=\"externalLink\" target=\"_new\"><code>Password.decode(String)</code></a> appropriately. </p> \n<p> Regardless of what is configured; the <code>key.serializer</code> property is fixed to be a <code>StringSerializer</code>; and the <code>value.serializer</code> property is always an <a href=\"AdaptrisMessageSerializer.html\" title=\"class in com.adaptris.kafka\" target=\"_new\"><code>AdaptrisMessageSerializer</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "AdvancedConfigBuilder",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/AdvancedConfigBuilder.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jmx/XmlNotificationSerializer.html",
      "fullClassName" : "com.adaptris.core.jmx.XmlNotificationSerializer",
      "className" : "XmlNotificationSerializer",
      "packageName" : "com.adaptris.core.jmx",
      "componentType" : "object",
      "alias" : "xml-jmx-notification-serializer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlNotificationSerializer\nextends java.lang.Object\nimplements NotificationSerializer",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlNotificationSerializer</span>\nextends java.lang.Object\nimplements <a href=\"NotificationSerializer.html\" title=\"interface in com.adaptris.core.jmx\" target=\"_new\">NotificationSerializer</a>",
      "description" : "Serializes a Notification into an XML message. Notification.getUserData() is always added as object metadata against the key \"userData\".",
      "descriptionHtml" : "Serializes a \n<code>Notification</code> into an XML message. \n<p> <code>Notification.getUserData()</code> is always added as object metadata against the key <a href=\"NotificationSerializer.html#OBJ_METADATA_USERDATA\" target=\"_new\">\"userData\"</a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester-json/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/json/AssertJsonPathEquals.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.json.AssertJsonPathEquals",
      "className" : "AssertJsonPathEquals",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion.json",
      "componentType" : "object",
      "alias" : "assert-jsonpath-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester-json.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertJsonPathEquals\nextends java.lang.Object\nimplements com.adaptris.tester.runtime.messages.assertion.Assertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertJsonPathEquals</span>\nextends java.lang.Object\nimplements com.adaptris.tester.runtime.messages.assertion.Assertion",
      "description" : "Assert that a JSON Path resolves to some value.",
      "descriptionHtml" : "Assert that a JSON Path resolves to some value.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RandomIntervalPoller.html",
      "fullClassName" : "com.adaptris.core.RandomIntervalPoller",
      "className" : "RandomIntervalPoller",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "random-interval-poller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RandomIntervalPoller\nextends FixedIntervalPoller",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RandomIntervalPoller</span>\nextends <a href=\"FixedIntervalPoller.html\" title=\"class in com.adaptris.core\" target=\"_new\">FixedIntervalPoller</a>",
      "description" : "Implementation of Poller which polls at a random interval with a delay between each execution of up-to the configured poll interval (in ms). This implementation is of marginal use, and is best used to generate messages at pseudo-random intervals.",
      "descriptionHtml" : "Implementation of \n<a href=\"Poller.html\" title=\"interface in com.adaptris.core\" target=\"_new\">Poller</a> which polls at a random interval with a delay between each execution of up-to the configured poll interval (in ms). \n<p> This implementation is of marginal use, and is best used to generate messages at pseudo-random intervals. </p>",
      "inheritance" : [
        {
          "name" : "PollerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PollerImp.html"
        },
        {
          "name" : "ScheduledTaskPoller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ScheduledTaskPoller.html"
        },
        {
          "name" : "FixedIntervalPoller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/FixedIntervalPoller.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/DecryptService.html",
      "fullClassName" : "com.adaptris.aws.kms.DecryptService",
      "className" : "DecryptService",
      "packageName" : "com.adaptris.aws.kms",
      "componentType" : "service",
      "alias" : "aws-kms-decrypt-data",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-kms.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.kms.AWSKMSConnection"
        ],
        "since" : "3.10.1",
        "summary" : "Decrypt data using AWS KMS",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Decrypt data using AWS KMS\",\n                  recommended=AWSKMSConnection.class,\n                  since=\"3.10.1\")\npublic class DecryptService\nextends EncryptDecrypt",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Decrypt data using AWS KMS\",\n                  recommended=<a href=\"AWSKMSConnection.html\" title=\"class in com.adaptris.aws.kms\" target=\"_new\">AWSKMSConnection.class</a>,\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">DecryptService</span>\nextends <a href=\"EncryptDecrypt.html\" title=\"class in com.adaptris.aws.kms\" target=\"_new\">EncryptDecrypt</a>",
      "description" : "Decrypt data using AWS KMS",
      "descriptionHtml" : "Decrypt data using AWS KMS",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "AWSKMSServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/AWSKMSServiceImpl.html"
        },
        {
          "name" : "EncryptDecrypt",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/EncryptDecrypt.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/KMS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-kms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/rabbitmq/AdvancedRabbitMqJmsImplementation.html",
      "fullClassName" : "com.adaptris.core.amqp.rabbitmq.AdvancedRabbitMqJmsImplementation",
      "className" : "AdvancedRabbitMqJmsImplementation",
      "packageName" : "com.adaptris.core.amqp.rabbitmq",
      "componentType" : "object",
      "alias" : "rabbitmq-advanced-jms-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-amqp.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedRabbitMqJmsImplementation\nextends BasicRabbitMqJmsImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedRabbitMqJmsImplementation</span>\nextends <a href=\"BasicRabbitMqJmsImplementation.html\" title=\"class in com.adaptris.core.amqp.rabbitmq\" target=\"_new\">BasicRabbitMqJmsImplementation</a>",
      "description" : "AMQP 0.9.1 implementation of VendorImplementation using RabbitMQ. All available connection factory properties are exposed. If you configure a username and password on the wrapping JmsConnection in which case ConnectionFactory.createConnection(String, String) is used when creating the connection otherwise ConnectionFactory.createConnection() will be used. The enum values from AdvancedRabbitMqJmsImplementation.ConnectionFactoryProperty are matched on a case insensitve basis against the keys in getConnectionFactoryProperties() when configuring the RMQConnectionFactory. In the event that a key does not match one the enums, an attempt will be made to invoke (via reflection) the implied setter with the configured value (e.g. DnsServer=a.b.c.d would cause setDnsServer(\"a.b.c.d\") to be invoked if it exists as a method on RMQConnectionFactory).",
      "descriptionHtml" : "AMQP 0.9.1 implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementation</code></a> using RabbitMQ. \n<p> All available connection factory properties are exposed. If you configure a username and password on the wrapping <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsConnection</code></a> in which case <code>ConnectionFactory.createConnection(String, String)</code> is used when creating the connection otherwise <code>ConnectionFactory.createConnection()</code> will be used. </p> \n<p> The enum values from <a href=\"AdvancedRabbitMqJmsImplementation.ConnectionFactoryProperty.html\" title=\"enum in com.adaptris.core.amqp.rabbitmq\" target=\"_new\"><code>AdvancedRabbitMqJmsImplementation.ConnectionFactoryProperty</code></a> are matched on a case insensitve basis against the keys in <a href=\"#getConnectionFactoryProperties()\" target=\"_new\"><code>getConnectionFactoryProperties()</code></a> when configuring the <code>RMQConnectionFactory</code>. In the event that a key does not match one the enums, an attempt will be made to invoke (via reflection) the implied setter with the configured value (e.g. <code>DnsServer=a.b.c.d</code> would cause <code>setDnsServer(\"a.b.c.d\")</code> to be invoked if it exists as a method on <code>RMQConnectionFactory</code>). </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "BasicRabbitMqJmsImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/rabbitmq/BasicRabbitMqJmsImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/AMQP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-amqp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/ConstantDataInputParameter.html",
      "fullClassName" : "com.adaptris.core.common.ConstantDataInputParameter",
      "className" : "ConstantDataInputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "constant-data-input-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConstantDataInputParameter\nextends java.lang.Object\nimplements DataInputParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConstantDataInputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataInputParameter</a>&lt;java.lang.String&gt;",
      "description" : "This DataInputParameter is used when you want to configure data directly in the Interlok configuration. An example might be configuring the XPath expression directly in Interlok configuration used for the XPathService.",
      "descriptionHtml" : "<p> This <code>DataInputParameter</code> is used when you want to configure data directly in the Interlok configuration. </p> \n<p> An example might be configuring the XPath expression directly in Interlok configuration used for the <a href=\"../services/path/XPathService.html\" title=\"class in com.adaptris.core.services.path\" target=\"_new\"><code>XPathService</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/VarSubPropsPreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.VarSubPropsPreprocessor",
      "className" : "VarSubPropsPreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "properties-variable-substitution-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class VarSubPropsPreprocessor\nextends java.lang.Object\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">VarSubPropsPreprocessor</span>\nextends java.lang.Object\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockService",
      "className" : "MockService",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "service",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/ByteArrayFromMetadata.html",
      "fullClassName" : "com.adaptris.core.common.ByteArrayFromMetadata",
      "className" : "ByteArrayFromMetadata",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "byte-array-from-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Turn a metadata value into a byte array.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Turn a metadata value into a byte array.\",\n                  since=\"3.9.0\")\npublic class ByteArrayFromMetadata\nextends ByteArrayFromMetadataWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Turn a metadata value into a byte array.\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">ByteArrayFromMetadata</span>\nextends <a href=\"ByteArrayFromMetadataWrapper.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">ByteArrayFromMetadataWrapper</a>",
      "description" : "Wraps a metadata value as a byte[]",
      "descriptionHtml" : "Wraps a metadata value as a byte[]",
      "inheritance" : [
        {
          "name" : "ByteArrayFromMetadataWrapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/ByteArrayFromMetadataWrapper.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/MappedMetadataIdentityBuilder.html",
      "fullClassName" : "com.adaptris.core.security.access.MappedMetadataIdentityBuilder",
      "className" : "MappedMetadataIdentityBuilder",
      "packageName" : "com.adaptris.core.security.access",
      "componentType" : "object",
      "alias" : "mapped-metadata-identity-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MappedMetadataIdentityBuilder\nextends MetadataIdentityBuilderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MappedMetadataIdentityBuilder</span>\nextends <a href=\"MetadataIdentityBuilderImpl.html\" title=\"class in com.adaptris.core.security.access\" target=\"_new\">MetadataIdentityBuilderImpl</a>",
      "description" : "Build the identity from metadata which is mapped to specific values. In the event that your metadata keys match the values within the identity map then you are better off using MetadataIdentityBuilder instead.",
      "descriptionHtml" : "Build the identity from metadata which is mapped to specific values. \n<p> In the event that your metadata keys match the values within the identity map then you are better off using <a href=\"MetadataIdentityBuilder.html\" title=\"class in com.adaptris.core.security.access\" target=\"_new\"><code>MetadataIdentityBuilder</code></a> instead. </p>",
      "inheritance" : [
        {
          "name" : "IdentityBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/IdentityBuilderImpl.html"
        },
        {
          "name" : "MetadataIdentityBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/MetadataIdentityBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/ZipAggregator.html",
      "fullClassName" : "com.adaptris.core.services.aggregator.ZipAggregator",
      "className" : "ZipAggregator",
      "packageName" : "com.adaptris.core.services.aggregator",
      "componentType" : "object",
      "alias" : "zip-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ZipAggregator\nextends MessageAggregatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ZipAggregator</span>\nextends <a href=\"MessageAggregatorImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">MessageAggregatorImpl</a>",
      "description" : "MessageAggregator implementation that creates single zip using each message as a file in the zip. Use setFilenameMetadata(String) to change the key that contains the filename to be used in the zip, default: filename. Each message returned by the split needs to set a value of key returned by getFilenameMetadata(), if the a value is not set the message will be ignored. If the filenames are not unique an exception will be thrown.",
      "descriptionHtml" : "<a href=\"MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>MessageAggregator</code></a> implementation that creates single zip using each message as a file in the zip. \n<p> Use <a href=\"#setFilenameMetadata(java.lang.String)\" target=\"_new\"><code>setFilenameMetadata(String)</code></a> to change the key that contains the filename to be used in the zip, default: filename. </p> \n<p>Each message returned by the split needs to set a value of key returned by <a href=\"#getFilenameMetadata()\" target=\"_new\"><code>getFilenameMetadata()</code></a>, if the a value is not set the message will be ignored. If the filenames are not unique an exception will be thrown.</p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-geode/4.0.0B1-RELEASE/com/adaptris/core/cache/geode/PoolLocatorBuilder.html",
      "fullClassName" : "com.adaptris.core.cache.geode.PoolLocatorBuilder",
      "className" : "PoolLocatorBuilder",
      "packageName" : "com.adaptris.core.cache.geode",
      "componentType" : "object",
      "alias" : "geode-client-cache-from-pool-locator",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-geode.jar",
      "profile" : { },
      "annotationDetails" : "public class PoolLocatorBuilder\nextends java.lang.Object\nimplements ClientCacheBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PoolLocatorBuilder</span>\nextends java.lang.Object\nimplements <a href=\"ClientCacheBuilder.html\" title=\"interface in com.adaptris.core.cache.geode\" target=\"_new\">ClientCacheBuilder</a>",
      "description" : "Uses ClientCacheFactory.addPoolLocator(String, int) to build a client cache.",
      "descriptionHtml" : "Uses \n<code>ClientCacheFactory.addPoolLocator(String, int)</code> to build a client cache.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/Apache Geode",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-geode",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-ehcache/4.0.0B1-RELEASE/com/adaptris/core/cache/ehcache/DefaultEhcache.html",
      "fullClassName" : "com.adaptris.core.cache.ehcache.DefaultEhcache",
      "className" : "DefaultEhcache",
      "packageName" : "com.adaptris.core.cache.ehcache",
      "componentType" : "object",
      "alias" : "default-ehcache",
      "deprecated" : false,
      "jarFileName" : "interlok-ehcache.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultEhcache\nextends EhcacheCache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultEhcache</span>\nextends <a href=\"EhcacheCache.html\" title=\"class in com.adaptris.core.cache.ehcache\" target=\"_new\">EhcacheCache</a>",
      "description" : "Implementation of Cache based on Ehcache. By default this uses the CacheManager.create() to create the cache manager which will end up using the default XML configuration (ehcache.xml or ehcache-failsafe.xml). In the event that the cache manager does not contain a cache that matches the name EhcacheCache.getCacheName(), then a new basic one will be implemented based on the additional parameters that are configured. If the cache already exists, then it is used as is, without any additional configuration.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/Cache.html?is-external=true\" title=\"class or interface in com.adaptris.core.cache\" class=\"externalLink\" target=\"_new\"><code>Cache</code></a> based on Ehcache. \n<p> By default this uses the <code>CacheManager.create()</code> to create the cache manager which will end up using the default XML configuration (ehcache.xml or ehcache-failsafe.xml). In the event that the cache manager does not contain a cache that matches the name <a href=\"EhcacheCache.html#getCacheName()\" target=\"_new\"><code>EhcacheCache.getCacheName()</code></a>, then a new basic one will be implemented based on the additional parameters that are configured. If the cache already exists, then it is used as is, without any additional configuration. </p>",
      "inheritance" : [
        {
          "name" : "EhcacheCache",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-ehcache/4.0.0B1-RELEASE/com/adaptris/core/cache/ehcache/EhcacheCache.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/EHCache",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-ehcache",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/ViaHttpProxy.html",
      "fullClassName" : "com.adaptris.sftp.ViaHttpProxy",
      "className" : "ViaHttpProxy",
      "packageName" : "com.adaptris.sftp",
      "componentType" : "object",
      "alias" : "sftp-via-http-proxy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ViaHttpProxy\nextends ViaProxy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ViaHttpProxy</span>\nextends <a href=\"ViaProxy.html\" title=\"class in com.adaptris.sftp\" target=\"_new\">ViaProxy</a>",
      "description" : "Connect via a HTTP proxy",
      "descriptionHtml" : "Connect via a HTTP proxy",
      "inheritance" : [
        {
          "name" : "ViaProxy",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/ViaProxy.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/XpathPreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.XpathPreprocessor",
      "className" : "XpathPreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "xpath-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathPreprocessor\nextends XpathCommon\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathPreprocessor</span>\nextends <a href=\"../../XpathCommon.html\" title=\"class in com.adaptris.tester.runtime\" target=\"_new\">XpathCommon</a>\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "inheritance" : [
        {
          "name" : "XpathCommon",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/XpathCommon.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/ShortCutJettyResponse.html",
      "fullClassName" : "com.adaptris.core.http.jetty.ShortCutJettyResponse",
      "className" : "ShortCutJettyResponse",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "service",
      "alias" : "jetty-commit-response",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Allows you to commit the HTTP response immediately rather than at the end of a PoolingWorkflow",
        "tag" : "service,http,https,jetty"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Allows you to commit the HTTP response immediately rather than at the end of a PoolingWorkflow\",\n                  tag=\"service,http,https,jetty\")\npublic class ShortCutJettyResponse\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Allows you to commit the HTTP response immediately rather than at the end of a PoolingWorkflow\",\n                  tag=\"service,http,https,jetty\")\npublic class <span class=\"typeNameLabel\">ShortCutJettyResponse</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Allows you to short cut JettyPoolingWorkflowInterceptor behaviour in a PoolingWorkflow. Normally, the response is not committed until the workflow is complete. If you have a workflow bound to HTTP that takes a significant amount of time then this can cause arbitrary timeouts within firewalls and proxies. If the client sends a Expect: 102-Processing header, then the adapter will automatically send a 102 response every 20 seconds or so until the workflow has finished. This service allows you to shortcut that behaviour and commit a response before the underlying workflow is complete. You will still need to use StandardResponseProducer prior to using this service. While not strictly enforced, you should consider returning a 202 ACCEPTED rather than a 200 OK if you are going to send the response before the end of the workflow. This would be the more \"correct\" behaviour as per the HTTP specifications.",
      "descriptionHtml" : "Allows you to short cut \n<a href=\"JettyPoolingWorkflowInterceptor.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\"><code>JettyPoolingWorkflowInterceptor</code></a> behaviour in a \n<a href=\"../../PoolingWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>PoolingWorkflow</code></a>. \n<p> Normally, the response is not committed until the workflow is complete. If you have a workflow bound to HTTP that takes a significant amount of time then this can cause arbitrary timeouts within firewalls and proxies. If the client sends a <code>Expect: 102-Processing</code> header, then the adapter will automatically send a 102 response every 20 seconds or so until the workflow has finished. This service allows you to shortcut that behaviour and commit a response before the underlying workflow is complete. You will still need to use <a href=\"StandardResponseProducer.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\"><code>StandardResponseProducer</code></a> prior to using this service. </p> \n<p> While not strictly enforced, you should consider returning a <code>202 ACCEPTED</code> rather than a <code>200 OK</code> if you are going to send the response before the end of the workflow. This would be the more \"correct\" behaviour as per the HTTP specifications. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Adapter.html",
      "fullClassName" : "com.adaptris.core.Adapter",
      "className" : "Adapter",
      "packageName" : "com.adaptris.core",
      "componentType" : "adapter",
      "alias" : "adapter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "The base container for integration activity",
        "tag" : "base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"The base container for integration activity\",\n                  tag=\"base\")\npublic final class Adapter\nextends java.lang.Object\nimplements StateManagedComponentContainer, ComponentLifecycleExtension",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"The base container for integration activity\",\n                  tag=\"base\")\npublic final class <span class=\"typeNameLabel\">Adapter</span>\nextends java.lang.Object\nimplements <a href=\"StateManagedComponentContainer.html\" title=\"interface in com.adaptris.core\" target=\"_new\">StateManagedComponentContainer</a>, <a href=\"ComponentLifecycleExtension.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycleExtension</a>",
      "description" : "Main class in core package. Uses other core components to consume and produce messages. Provides error and event handling capabilities. Client classes, e.g. com.adaptris.core.management.Bootstrap create and manage instances of this class.",
      "descriptionHtml" : "<p> Main class in <code>core</code> package. Uses other <code>core</code> components to consume and produce messages. Provides error and event handling capabilities. Client classes, e.g. <code>com.adaptris.core.management.Bootstrap</code> create and manage instances of this class. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockEventProducer",
      "className" : "MockEventProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltQueryToObjectMetadata.html",
      "fullClassName" : "com.adaptris.core.json.jslt.JsltQueryToObjectMetadata",
      "className" : "JsltQueryToObjectMetadata",
      "packageName" : "com.adaptris.core.json.jslt",
      "componentType" : "object",
      "alias" : "jslt-to-object-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-jslt.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.12.0",
        "summary" : "Execute a JSLT query and store the resulting JsonNode as object metadata against the specified key.",
        "tag" : "jslt,transform,json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a JSLT query and store the resulting JsonNode as object metadata against the specified key.\",\n                  tag=\"jslt,transform,json\",\n                  since=\"3.12.0\")\npublic class JsltQueryToObjectMetadata\nextends JsltQueryImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a JSLT query and store the resulting JsonNode as object metadata against the specified key.\",\n                  tag=\"jslt,transform,json\",\n                  since=\"3.12.0\")\npublic class <span class=\"typeNameLabel\">JsltQueryToObjectMetadata</span>\nextends <a href=\"JsltQueryImpl.html\" title=\"class in com.adaptris.core.json.jslt\" target=\"_new\">JsltQueryImpl</a>",
      "description" : "Evaluate a JSLT expression and store the resulting JsonNode as object metadata against the specified key.",
      "descriptionHtml" : "Evaluate a JSLT expression and store the resulting \n<code>JsonNode</code> as object metadata against the specified key.",
      "inheritance" : [
        {
          "name" : "JsltQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSLT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jslt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionPayload.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.ConditionPayload",
      "className" : "ConditionPayload",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "payload",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests a payload against a configured operator.",
        "tag" : "condition"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests a payload against a configured operator.\",\n                  tag=\"condition\")\npublic class ConditionPayload\nextends ConditionWithOperator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests a payload against a configured operator.\",\n                  tag=\"condition\")\npublic class <span class=\"typeNameLabel\">ConditionPayload</span>\nextends <a href=\"ConditionWithOperator.html\" title=\"class in com.adaptris.core.services.conditional.conditions\" target=\"_new\">ConditionWithOperator</a>",
      "description" : "This Condition targets the message payload. All you need do is choose an Operator to apply the conditional test.",
      "descriptionHtml" : "<p> This <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> targets the message payload. All you need do is choose an <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> to apply the conditional test. </p>",
      "inheritance" : [
        {
          "name" : "ConditionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionImpl.html"
        },
        {
          "name" : "ConditionWithOperator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionWithOperator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltMetadataVariables.html",
      "fullClassName" : "com.adaptris.core.json.jslt.JsltMetadataVariables",
      "className" : "JsltMetadataVariables",
      "packageName" : "com.adaptris.core.json.jslt",
      "componentType" : "object",
      "alias" : "jslt-metadata-variable",
      "deprecated" : false,
      "jarFileName" : "interlok-jslt.jar",
      "profile" : { },
      "annotationDetails" : "public class JsltMetadataVariables\nextends java.lang.Object\nimplements JsltVariableBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JsltMetadataVariables</span>\nextends java.lang.Object\nimplements <a href=\"JsltVariableBuilder.html\" title=\"interface in com.adaptris.core.json.jslt\" target=\"_new\">JsltVariableBuilder</a>",
      "description" : "Builds a map of variables for JSLT from normal message metadata. Note that since metadata is considered internally as Strings, then all the resulting JsonNode will be a TextNode using TextNode.valueOf(String).",
      "descriptionHtml" : "Builds a map of variables for JSLT from normal message metadata. \n<p> Note that since metadata is considered internally as Strings, then all the resulting <code>JsonNode</code> will be a <code>TextNode</code> using <code>TextNode.valueOf(String)</code>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSLT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jslt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionFunction.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.ConditionFunction",
      "className" : "ConditionFunction",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "function",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Condition that makes use of the built in nashorn scripting engine for condition evaluation",
        "tag" : "condition,service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Condition that makes use of the built in nashorn scripting engine for condition evaluation\",\n                  tag=\"condition,service\")\npublic class ConditionFunction\nextends ConditionImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Condition that makes use of the built in nashorn scripting engine for condition evaluation\",\n                  tag=\"condition,service\")\npublic class <span class=\"typeNameLabel\">ConditionFunction</span>\nextends <a href=\"ConditionImpl.html\" title=\"class in com.adaptris.core.services.conditional.conditions\" target=\"_new\">ConditionImpl</a>",
      "description" : "A javascript condition. This makes use of the Invocable extension to ScriptEngine, to allow you to define the function that will be executed to evaluate the condition. The function name should always be evaluateScript; take a single parameter (in this case it will be the current AdaptrisMessage; and return true or false. For instance to check a specific metadata value then you might have this function definition  \n     function evaluateScript(message) {\n       return message.getMetadataValue('myMetadataKey').equals('myValue');\n     }\n \n Similar to EmbeddedScriptingService; the logger is bound as log.",
      "descriptionHtml" : "A javascript condition. \n<p> This makes use of the <code>Invocable</code> extension to <code>ScriptEngine</code>, to allow you to define the function that will be executed to evaluate the condition. The function name should always be <code>evaluateScript</code>; take a single parameter (in this case it will be the current <a href=\"../../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>; and return <code>true or false</code>. For instance to check a specific metadata value then you might have this function definition </p>\n<pre> <code>\n     function evaluateScript(message) {\n       return message.getMetadataValue('myMetadataKey').equals('myValue');\n     }\n </code>\n </pre> \n<p></p> \n<p> Similar to <a href=\"../../EmbeddedScriptingService.html\" title=\"class in com.adaptris.core.services\" target=\"_new\"><code>EmbeddedScriptingService</code></a>; the logger is bound as <code>log</code>. </p>",
      "inheritance" : [
        {
          "name" : "ConditionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/request/AcceptEncoding.html",
      "fullClassName" : "com.adaptris.core.http.apache.request.AcceptEncoding",
      "className" : "AcceptEncoding",
      "packageName" : "com.adaptris.core.http.apache.request",
      "componentType" : "object",
      "alias" : "apache-http-accept-encoding",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class AcceptEncoding\nextends java.lang.Object\nimplements RequestInterceptorBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AcceptEncoding</span>\nextends java.lang.Object\nimplements <a href=\"RequestInterceptorBuilder.html\" title=\"interface in com.adaptris.core.http.apache.request\" target=\"_new\">RequestInterceptorBuilder</a>",
      "description" : "Add an Accept-Encoding header to the outgoing request via RequestAcceptEncoding.",
      "descriptionHtml" : "Add an \n<code>Accept-Encoding</code> header to the outgoing request via \n<code>RequestAcceptEncoding</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/transform/validate/RegexpContentValidation.html",
      "fullClassName" : "com.adaptris.transform.validate.RegexpContentValidation",
      "className" : "RegexpContentValidation",
      "packageName" : "com.adaptris.transform.validate",
      "componentType" : "object",
      "alias" : "xml-content-regexp",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RegexpContentValidation\nextends java.lang.Object\nimplements ContentValidation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RegexpContentValidation</span>\nextends java.lang.Object\nimplements <a href=\"ContentValidation.html\" title=\"interface in com.adaptris.transform.validate\" target=\"_new\">ContentValidation</a>",
      "description" : "Match the content against a regular expression.",
      "descriptionHtml" : "Match the content against a regular expression.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockServiceWithConnection",
      "className" : "MockServiceWithConnection",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "service",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/PossibleExceptionFromMetadata.html",
      "fullClassName" : "com.adaptris.core.services.exception.PossibleExceptionFromMetadata",
      "className" : "PossibleExceptionFromMetadata",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "possible-exception-from-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PossibleExceptionFromMetadata\nextends ExceptionFromMetadataImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PossibleExceptionFromMetadata</span>\nextends <a href=\"ExceptionFromMetadataImpl.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\">ExceptionFromMetadataImpl</a>",
      "description" : "ExceptionGenerator implementation that generates the exception from metadata. Use this class with ThrowExceptionService to throw an exception as part of a workflow. The exception message (i.e. Throwable.getMessage()) is derived from the configured metadata key. If the metadata key does not exist (or returns no value) then no exception will be thrown. This behaviour differs from ExceptionFromMetadata",
      "descriptionHtml" : "<a href=\"ExceptionGenerator.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionGenerator</code></a> implementation that generates the exception from metadata. \n<p> Use this class with <a href=\"ThrowExceptionService.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\"><code>ThrowExceptionService</code></a> to throw an exception as part of a workflow. The exception message (i.e. <code>Throwable.getMessage()</code>) is derived from the configured metadata key. If the metadata key does not exist (or returns no value) then no exception will be thrown. This behaviour differs from <a href=\"ExceptionFromMetadata.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionFromMetadata</code></a> </p>",
      "inheritance" : [
        {
          "name" : "ExceptionFromMetadataImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionFromMetadataImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/PluggableRetryPolicyFactory.html",
      "fullClassName" : "com.adaptris.aws.PluggableRetryPolicyFactory",
      "className" : "PluggableRetryPolicyFactory",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-pluggable-retry-policy-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : { },
      "annotationDetails" : "public class PluggableRetryPolicyFactory\nextends java.lang.Object\nimplements RetryPolicyFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PluggableRetryPolicyFactory</span>\nextends java.lang.Object\nimplements <a href=\"RetryPolicyFactory.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">RetryPolicyFactory</a>",
      "description" : "Basic RetryPolicy builder implementation for AWS that allows you to plug in your own conditions and strategies.",
      "descriptionHtml" : "Basic \n<code>RetryPolicy</code> builder implementation for AWS that allows you to plug in your own conditions and strategies.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullOutOfStateHandler.html",
      "fullClassName" : "com.adaptris.core.NullOutOfStateHandler",
      "className" : "NullOutOfStateHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "null-out-of-state-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullOutOfStateHandler\nextends java.lang.Object\nimplements OutOfStateHandler",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullOutOfStateHandler</span>\nextends java.lang.Object\nimplements <a href=\"OutOfStateHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\">OutOfStateHandler</a>",
      "description" : "Implementation of the OutOfStateHandler which does no checks.",
      "descriptionHtml" : "Implementation of the \n<a href=\"OutOfStateHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>OutOfStateHandler</code></a> which does no checks.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/ElementKeyAndValueFormatter.html",
      "fullClassName" : "com.adaptris.core.metadata.ElementKeyAndValueFormatter",
      "className" : "ElementKeyAndValueFormatter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "element-key-and-value-formatter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ElementKeyAndValueFormatter\nextends java.lang.Object\nimplements ElementFormatter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ElementKeyAndValueFormatter</span>\nextends java.lang.Object\nimplements <a href=\"ElementFormatter.html\" title=\"interface in com.adaptris.core.metadata\" target=\"_new\">ElementFormatter</a>",
      "description" : "Key and value element formatter.",
      "descriptionHtml" : "Key and value element formatter.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/ConnectionTuning.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.ConnectionTuning",
      "className" : "ConnectionTuning",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-connection-tuning",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class ConnectionTuning\nextends java.lang.Object\nimplements Parameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConnectionTuning</span>\nextends java.lang.Object\nimplements <a href=\"Parameter.html\" title=\"interface in com.adaptris.core.jms.solace.parameters\" target=\"_new\">Parameter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/OracleAqTopicImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.OracleAqTopicImplementation",
      "className" : "OracleAqTopicImplementation",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-topic-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "JMS Topic only support for OracleAQ",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JMS Topic only support for OracleAQ\",\n                  since=\"3.9.2\")\npublic class OracleAqTopicImplementation\nextends OracleAqImplementation",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JMS Topic only support for OracleAQ\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">OracleAqTopicImplementation</span>\nextends <a href=\"OracleAqImplementation.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">OracleAqImplementation</a>",
      "description" : "Topic specific variation of OracleAqImplementation. This implementation is suitable if your OracleAQ JMS Driver isn't JMS 1.1 compliant, and limits you to using topics only. You really should think about upgrading to a JMS1.1 compliant driver.",
      "descriptionHtml" : "Topic specific variation of \n<a href=\"OracleAqImplementation.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\"><code>OracleAqImplementation</code></a>. \n<p> This implementation is suitable if your OracleAQ JMS Driver isn't JMS 1.1 compliant, and limits you to using topics only. <strong>You really should think about upgrading to a JMS1.1 compliant driver. </strong></p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "OracleAqImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/OracleAqImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneConsumer.html",
      "fullClassName" : "com.adaptris.core.StandaloneConsumer",
      "className" : "StandaloneConsumer",
      "packageName" : "com.adaptris.core",
      "componentType" : "consumer",
      "alias" : "standalone-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Standalone wrapper for a consumer and connection",
        "tag" : "consumer,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Standalone wrapper for a consumer and connection\",\n                  tag=\"consumer,base\")\npublic class StandaloneConsumer\nextends java.lang.Object\nimplements AdaptrisMessageConsumer, StateManagedComponent, ComponentLifecycleExtension",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Standalone wrapper for a consumer and connection\",\n                  tag=\"consumer,base\")\npublic class <span class=\"typeNameLabel\">StandaloneConsumer</span>\nextends java.lang.Object\nimplements <a href=\"AdaptrisMessageConsumer.html\" title=\"interface in com.adaptris.core\" target=\"_new\">AdaptrisMessageConsumer</a>, <a href=\"StateManagedComponent.html\" title=\"interface in com.adaptris.core\" target=\"_new\">StateManagedComponent</a>, <a href=\"ComponentLifecycleExtension.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycleExtension</a>",
      "description" : "Wrapper class for a AdaptrisMessageConsumer and a AdaptrisConnection. Implements AdaptrisMessageConsumer and delegates all method calls to the underlying consumer.",
      "descriptionHtml" : "<p> Wrapper class for a <code>AdaptrisMessageConsumer</code> and a <code>AdaptrisConnection</code>. Implements <code>AdaptrisMessageConsumer</code> and delegates all method calls to the underlying consumer. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-gcloud/4.0.0B1-RELEASE/com/adaptris/core/oauth/gcloud/KeyFileCredentials.html",
      "fullClassName" : "com.adaptris.core.oauth.gcloud.KeyFileCredentials",
      "className" : "KeyFileCredentials",
      "packageName" : "com.adaptris.core.oauth.gcloud",
      "componentType" : "object",
      "alias" : "key-file-credentials",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-gcloud.jar",
      "profile" : { },
      "annotationDetails" : "public class KeyFileCredentials\nextends ScopedCredentials",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">KeyFileCredentials</span>\nextends <a href=\"ScopedCredentials.html\" title=\"class in com.adaptris.core.oauth.gcloud\" target=\"_new\">ScopedCredentials</a>",
      "inheritance" : [
        {
          "name" : "ScopedCredentials",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-gcloud/4.0.0B1-RELEASE/com/adaptris/core/oauth/gcloud/ScopedCredentials.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Google",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-gcloud",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/DfuplusConnection.html",
      "fullClassName" : "com.adaptris.hpcc.DfuplusConnection",
      "className" : "DfuplusConnection",
      "packageName" : "com.adaptris.hpcc",
      "componentType" : "connection",
      "alias" : "dfuplus-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Wrapper around the dfuplus executable",
        "tag" : "connections,hpcc,dfuplus"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Wrapper around the dfuplus executable\",\n                  tag=\"connections,hpcc,dfuplus\")\npublic class DfuplusConnection\nextends NoOpConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Wrapper around the dfuplus executable\",\n                  tag=\"connections,hpcc,dfuplus\")\npublic class <span class=\"typeNameLabel\">DfuplusConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">NoOpConnection</a>",
      "description" : "Wrapper around the key dfuplus parameters as an AdaptrisConnection implementation. While there is no explicit connection required for dfuplus (as it's a commandline executable); it is still desirable to have the key fields (namely server/username/password) wrapped as a connection so that it is configurable as a SharedConnection which means less boilerplate configuration in the future.",
      "descriptionHtml" : "Wrapper around the key dfuplus parameters as an \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisConnection</code></a> implementation. \n<p> While there is no explicit connection required for dfuplus (as it's a commandline executable); it is still desirable to have the key fields (namely server/username/password) wrapped as a connection so that it is configurable as a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>SharedConnection</code></a> which means less boilerplate configuration in the future. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "NoOpConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-web-token/4.0.0B1-RELEASE/com/adaptris/core/jwt/JWTEncoder.html",
      "fullClassName" : "com.adaptris.core.jwt.JWTEncoder",
      "className" : "JWTEncoder",
      "packageName" : "com.adaptris.core.jwt",
      "componentType" : "service",
      "alias" : "jwt-encode",
      "deprecated" : false,
      "jarFileName" : "interlok-json-web-token.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Encode a header and body to a JSON Web Token",
        "tag" : "jwt,encode,json,web,token"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Encode a header and body to a JSON Web Token\",\n                  tag=\"jwt,encode,json,web,token\",\n                  since=\"3.11.1\")\npublic class JWTEncoder\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Encode a header and body to a JSON Web Token\",\n                  tag=\"jwt,encode,json,web,token\",\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">JWTEncoder</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service provides a way to encode data as a JSON Web Token. \n    <jwt-encode>\n      <unique-id>jwt-encode</unique-id>\n      <header class=\"multi-payload-string-input-parameter\">\n        <payload-id>header</payload-id>\n      </header>\n      <claims class=\"multi-payload-string-input-parameter\">\n        <payload-id>claims</payload-id>\n      </claims>\n      <secret class=\"base64-encoded-secret\">\n        <secret>c64975ba3cf3f9cd58459710b0a42369f34b0759c9967fb5a47eea488e8bea79</secret>\n      </secret>\n      <jwt-output class=\"multi-payload-string-output-parameter\">\n        <payload-id>output</payload-id>\n      </jwt-output>\n    </jwt-encode>",
      "descriptionHtml" : "This service provides a way to encode data as a JSON Web Token. \n<pre><code>\n    &lt;jwt-encode&gt;\n      &lt;unique-id&gt;jwt-encode&lt;/unique-id&gt;\n      &lt;header class=\"multi-payload-string-input-parameter\"&gt;\n        &lt;payload-id&gt;header&lt;/payload-id&gt;\n      &lt;/header&gt;\n      &lt;claims class=\"multi-payload-string-input-parameter\"&gt;\n        &lt;payload-id&gt;claims&lt;/payload-id&gt;\n      &lt;/claims&gt;\n      &lt;secret class=\"base64-encoded-secret\"&gt;\n        &lt;secret&gt;c64975ba3cf3f9cd58459710b0a42369f34b0759c9967fb5a47eea488e8bea79&lt;/secret&gt;\n      &lt;/secret&gt;\n      &lt;jwt-output class=\"multi-payload-string-output-parameter\"&gt;\n        &lt;payload-id&gt;output&lt;/payload-id&gt;\n      &lt;/jwt-output&gt;\n    &lt;/jwt-encode&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JWT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-web-token",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/qpid/BasicQpidImplementation.html",
      "fullClassName" : "com.adaptris.core.amqp.qpid.BasicQpidImplementation",
      "className" : "BasicQpidImplementation",
      "packageName" : "com.adaptris.core.amqp.qpid",
      "componentType" : "object",
      "alias" : "qpid-basic-amqp-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-amqp.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicQpidImplementation\nextends UrlVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicQpidImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">UrlVendorImplementation</a>",
      "description" : "AMQP 1.0 implementation of VendorImplementation using Apache Qpid. Everything required to configure the connection needs to be specified on the URL. If you configure a username and password on the wrapping JmsConnection in which case ConnectionFactory.createConnection(String, String) is used when creating the connection otherwise ConnectionFactory.createConnection() will be used. This vendor implementation is suitable for use with Azure AMQP. If you are using a topic consumer then it must be a durable subscriber where the subscriptionID is the same as the subscription created in the Azure portal; the topic name should be [topic-name]/subscriptions/[subscriptionID]. Your mileage may vary but during testing this was the the only destination configuration that seemed to work; the documentation suggests that this might actually pretending to be a queue. This was built against org.apache.qpid:qpid-amqp-1-0-client-jms:0.32.",
      "descriptionHtml" : "AMQP 1.0 implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementation</code></a> using Apache Qpid. \n<p> Everything required to configure the connection needs to be specified on the URL. If you configure a username and password on the wrapping <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsConnection</code></a> in which case <code>ConnectionFactory.createConnection(String, String)</code> is used when creating the connection otherwise <code>ConnectionFactory.createConnection()</code> will be used. </p> \n<p> This vendor implementation is suitable for use with Azure AMQP. If you are using a topic consumer then it must be a durable subscriber where the subscriptionID is the same as the subscription created in the Azure portal; the topic name should be <code>[topic-name]/subscriptions/[subscriptionID]</code>. Your mileage may vary but during testing this was the the only destination configuration that seemed to work; the documentation suggests that this might actually pretending to be a <code>queue</code>. </p> \n<p> This was built against <code>org.apache.qpid:qpid-amqp-1-0-client-jms:0.32</code>. </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/AMQP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-amqp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/FilesystemRetryStore.html",
      "fullClassName" : "com.adaptris.core.http.jetty.retry.FilesystemRetryStore",
      "className" : "FilesystemRetryStore",
      "packageName" : "com.adaptris.core.http.jetty.retry",
      "componentType" : "object",
      "alias" : "retry-store-filesystem",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Store message for retry on the filesystem.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Store message for retry on the filesystem.\",\n                  since=\"3.11.1\")\npublic class FilesystemRetryStore\nextends java.lang.Object\nimplements RetryStore",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Store message for retry on the filesystem.\",\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">FilesystemRetryStore</span>\nextends java.lang.Object\nimplements <a href=\"RetryStore.html\" title=\"interface in com.adaptris.core.http.jetty.retry\" target=\"_new\">RetryStore</a>",
      "description" : "Writes data into local storage for retry. While not tightly coupled with RetryFromJetty it is designed somewhat exclusively for that. You may be able to make use of it in other ways, but behaviour may change unexpectedly due to changes in RetryFromJetty. The behaviour of this store will assume that each message-id will form a sub-directory off baseUrl. Metadata will be stored [baseUrl]/[msgId]/metadata.properties as a standard properties file; the payload will be stored in [baseUrl]/[msgId]/payload.blob.",
      "descriptionHtml" : "Writes data into local storage for retry. \n<p> While not tightly coupled with <a href=\"RetryFromJetty.html\" title=\"class in com.adaptris.core.http.jetty.retry\" target=\"_new\"><code>RetryFromJetty</code></a> it is designed somewhat exclusively for that. You may be able to make use of it in other ways, but behaviour may change unexpectedly due to changes in <a href=\"RetryFromJetty.html\" title=\"class in com.adaptris.core.http.jetty.retry\" target=\"_new\"><code>RetryFromJetty</code></a>. </p> \n<p> The behaviour of this store will assume that each <code>message-id</code> will form a sub-directory off <code>baseUrl</code>. Metadata will be stored <code>[baseUrl]/[msgId]/metadata.properties</code> as a standard properties file; the payload will be stored in <code>[baseUrl]/[msgId]/payload.blob</code>. </p>\n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jsonpatch/PatchDiffFlag.html",
      "fullClassName" : "com.adaptris.core.json.jsonpatch.PatchDiffFlag",
      "className" : "PatchDiffFlag",
      "packageName" : "com.adaptris.core.json.jsonpatch",
      "componentType" : "object",
      "alias" : "json-patch-diff-flag",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : { },
      "annotationDetails" : "public enum PatchDiffFlag\nextends java.lang.Enum<PatchDiffFlag>",
      "annotationDetailsHtml" : "public enum <span class=\"typeNameLabel\">PatchDiffFlag</span>\nextends java.lang.Enum&lt;<a href=\"PatchDiffFlag.html\" title=\"enum in com.adaptris.core.json.jsonpatch\" target=\"_new\">PatchDiffFlag</a>&gt;",
      "description" : "Mirrors com.flipkart.zjsonpatch.DiffFlags for configuration purposes. Since com.flipkart.zjsonpatch.DiffFlags doesn't have a XStreamAlias, it renders poorly for configuration; this enum is simply here to make things look nice.",
      "descriptionHtml" : "Mirrors \n<code>com.flipkart.zjsonpatch.DiffFlags</code> for configuration purposes. \n<p> Since <code>com.flipkart.zjsonpatch.DiffFlags</code> doesn't have a XStreamAlias, it renders poorly for configuration; this enum is simply here to make things look nice. </p>",
      "inheritance" : [
        {
          "name" : "PatchDiffFlag",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jsonpatch/PatchDiffFlag.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/UserAccess.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.UserAccess",
      "className" : "UserAccess",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "object",
      "alias" : "smb-user-access",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Domain/User/Password access to a SMB share",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Domain/User/Password access to a SMB share\")\npublic class UserAccess\nextends java.lang.Object\nimplements AuthenticationProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Domain/User/Password access to a SMB share\")\npublic class <span class=\"typeNameLabel\">UserAccess</span>\nextends java.lang.Object\nimplements <a href=\"AuthenticationProvider.html\" title=\"interface in com.adaptris.filesystem.smbj\" target=\"_new\">AuthenticationProvider</a>",
      "description" : "Access to an SMB share via the named user/password/domain.",
      "descriptionHtml" : "Access to an SMB share via the named user/password/domain.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportSkipped.html",
      "fullClassName" : "com.adaptris.tester.report.junit.JUnitReportSkipped",
      "className" : "JUnitReportSkipped",
      "packageName" : "com.adaptris.tester.report.junit",
      "componentType" : "object",
      "alias" : "skipped",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class JUnitReportSkipped\nextends java.lang.Object\nimplements JUnitReportTestIssue",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JUnitReportSkipped</span>\nextends java.lang.Object\nimplements <a href=\"JUnitReportTestIssue.html\" title=\"interface in com.adaptris.tester.report.junit\" target=\"_new\">JUnitReportTestIssue</a>",
      "description" : "Skipped implementation of JUnitReportTestIssue used in JUnitReportTestCase for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. When tests are executed via TestCase.execute(String, TestClient, ServiceToTest, ServiceTestConfig) this class is used to set the test issue if applicable using: JUnitReportTestCase.setTestIssue(JUnitReportTestIssue).",
      "descriptionHtml" : "Skipped implementation of \n<a href=\"JUnitReportTestIssue.html\" title=\"interface in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestIssue</code></a> used in \n<a href=\"JUnitReportTestCase.html\" title=\"class in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestCase</code></a> for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. \n<p> When tests are executed via <a href=\"../../runtime/TestCase.html#execute(java.lang.String,com.adaptris.tester.runtime.clients.TestClient,com.adaptris.tester.runtime.services.ServiceToTest,com.adaptris.tester.runtime.ServiceTestConfig)\" target=\"_new\"><code>TestCase.execute(String, TestClient, ServiceToTest, ServiceTestConfig)</code></a> this class is used to set the test issue if applicable using: <a href=\"JUnitReportTestCase.html#setTestIssue(com.adaptris.tester.report.junit.JUnitReportTestIssue)\" target=\"_new\"><code>JUnitReportTestCase.setTestIssue(JUnitReportTestIssue)</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/legacy/EdiXmlService.html",
      "fullClassName" : "com.adaptris.core.transform.edi.legacy.EdiXmlService",
      "className" : "EdiXmlService",
      "packageName" : "com.adaptris.core.transform.edi.legacy",
      "componentType" : "service",
      "alias" : "edi-xml-service",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "EDI to XML (legacy) service.",
        "tag" : "service,transform,edi,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"EDI to XML (legacy) service.\",\n                  tag=\"service,transform,edi,xml\")\npublic class EdiXmlService\nextends EdiService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"EDI to XML (legacy) service.\",\n                  tag=\"service,transform,edi,xml\")\npublic class <span class=\"typeNameLabel\">EdiXmlService</span>\nextends <a href=\"EdiService.html\" title=\"class in com.adaptris.core.transform.edi.legacy\" target=\"_new\">EdiService</a>",
      "description" : "EDI to XML service. Performing EDI to XML transformation depends heavily on having access to the correct gXML file (guideline XML). Further details on gXML are available from Edifecs",
      "descriptionHtml" : "<p> EDI to XML service. </p> \n<p> Performing EDI to XML transformation depends heavily on having access to the correct gXML file (guideline XML). Further details on gXML are available from <a href=\"http://www.edifecs.com\" target=\"_new\">Edifecs</a> </p>\n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "LicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true"
        },
        {
          "name" : "EdiService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/core/transform/edi/legacy/EdiService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/BasicJsonDeserializer.html",
      "fullClassName" : "com.adaptris.core.json.BasicJsonDeserializer",
      "className" : "BasicJsonDeserializer",
      "packageName" : "com.adaptris.core.json",
      "componentType" : "object",
      "alias" : "basic-json-deserializer",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Convert an AdaptrisMessage using 'org.json:json'",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Convert an AdaptrisMessage using \\'org.json:json\\'\")\npublic class BasicJsonDeserializer\nextends java.lang.Object\nimplements JsonDeserializer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Convert an AdaptrisMessage using \\'org.json:json\\'\")\npublic class <span class=\"typeNameLabel\">BasicJsonDeserializer</span>\nextends java.lang.Object\nimplements <a href=\"JsonDeserializer.html\" title=\"interface in com.adaptris.core.json\" target=\"_new\">JsonDeserializer</a>",
      "description" : "Implementation based using the org.json:json library. Note that this will coerce something like { \"key\": string} (note the failure to quote the string into something will pass schema validation but isn't valid JSON.",
      "descriptionHtml" : "Implementation based using the \n<code>org.json:json</code> library. \n<p> Note that this will coerce something like <code>{ \"key\": string}</code> (note the failure to quote the string into something will pass schema validation but isn't valid JSON. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/LastModifiedAscending.html",
      "fullClassName" : "com.adaptris.core.fs.enhanced.LastModifiedAscending",
      "className" : "LastModifiedAscending",
      "packageName" : "com.adaptris.core.fs.enhanced",
      "componentType" : "object",
      "alias" : "fs-sort-last-modified",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LastModifiedAscending\nextends SafeFileSorter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LastModifiedAscending</span>\nextends <a href=\"SafeFileSorter.html\" title=\"class in com.adaptris.core.fs.enhanced\" target=\"_new\">SafeFileSorter</a>",
      "description" : "Sort the list of files by their last modified attribute",
      "descriptionHtml" : "Sort the list of files by their last modified attribute",
      "inheritance" : [
        {
          "name" : "SafeFileSorter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/SafeFileSorter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-pdf/4.0.0B1-RELEASE/com/adaptris/core/transform/pdf/FopTransformService.html",
      "fullClassName" : "com.adaptris.core.transform.pdf.FopTransformService",
      "className" : "FopTransformService",
      "packageName" : "com.adaptris.core.transform.pdf",
      "componentType" : "service",
      "alias" : "fop-transform-service",
      "deprecated" : false,
      "jarFileName" : "interlok-pdf.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transform into a PDF using Apache Fop",
        "tag" : "service,transform,xml,pdf"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform into a PDF using Apache Fop\",\n                  tag=\"service,transform,xml,pdf\")\npublic class FopTransformService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform into a PDF using Apache Fop\",\n                  tag=\"service,transform,xml,pdf\")\npublic class <span class=\"typeNameLabel\">FopTransformService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Transform service based on the Apache Fop project - http://xmlgraphics.apache.org/fop/",
      "descriptionHtml" : "Transform service based on the Apache Fop project - http://xmlgraphics.apache.org/fop/",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/PDF",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-pdf",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lifecycle/WorkflowRetryAndFail.html",
      "fullClassName" : "com.adaptris.core.lifecycle.WorkflowRetryAndFail",
      "className" : "WorkflowRetryAndFail",
      "packageName" : "com.adaptris.core.lifecycle",
      "componentType" : "object",
      "alias" : "workflow-retry-and-fail",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class WorkflowRetryAndFail\nextends WorkflowRetryAndContinue",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">WorkflowRetryAndFail</span>\nextends <a href=\"WorkflowRetryAndContinue.html\" title=\"class in com.adaptris.core.lifecycle\" target=\"_new\">WorkflowRetryAndContinue</a>",
      "description" : "Strategy for starting workflows that retries a workflow init or start a number of times. This implementation allows you to retry the init and start for a given workflow a configurable number of times. Each workflow is attempted in sequence, and the failing workflow is retried until either it is successful or the max number of retry attempts has been reached. If the workflow has still failed at this point, an exception is thrown back to the parent channel.",
      "descriptionHtml" : "Strategy for starting workflows that retries a workflow init or start a number of times. \n<p> This implementation allows you to retry the init and start for a given workflow a configurable number of times. Each workflow is attempted in sequence, and the failing workflow is retried until either it is successful or the max number of retry attempts has been reached. If the workflow has still failed at this point, an exception is thrown back to the parent channel. </p>",
      "inheritance" : [
        {
          "name" : "DefaultWorkflowLifecycleStrategy",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultWorkflowLifecycleStrategy.html"
        },
        {
          "name" : "WorkflowRetryAndContinue",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lifecycle/WorkflowRetryAndContinue.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/SystemPropertiesPreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.SystemPropertiesPreprocessor",
      "className" : "SystemPropertiesPreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "system-properties-substitution-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class SystemPropertiesPreprocessor\nextends java.lang.Object\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SystemPropertiesPreprocessor</span>\nextends java.lang.Object\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/HostConfig.html",
      "fullClassName" : "com.adaptris.sftp.HostConfig",
      "className" : "HostConfig",
      "packageName" : "com.adaptris.sftp",
      "componentType" : "object",
      "alias" : "sftp-host-config",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class HostConfig\nextends java.lang.Object\nimplements com.jcraft.jsch.ConfigRepository.Config",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">HostConfig</span>\nextends java.lang.Object\nimplements com.jcraft.jsch.ConfigRepository.Config",
      "description" : "Contains host configuration for use with PerHostConfigBuilder.",
      "descriptionHtml" : "Contains host configuration for use with \n<a href=\"PerHostConfigBuilder.html\" title=\"class in com.adaptris.sftp\" target=\"_new\"><code>PerHostConfigBuilder</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.StaticMockEventProducer",
      "className" : "StaticMockEventProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ContainsIgnoreCase.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.ContainsIgnoreCase",
      "className" : "ContainsIgnoreCase",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "object",
      "alias" : "metadata-contains-ignore-case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured metadata value contains the supplied value, ignoring case.",
        "tag" : "operator,comparator,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured metadata value contains the supplied value, ignoring case.\",\n                  tag=\"operator,comparator,metadata\")\npublic class ContainsIgnoreCase\nextends Contains",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured metadata value contains the supplied value, ignoring case.\",\n                  tag=\"operator,comparator,metadata\")\npublic class <span class=\"typeNameLabel\">ContainsIgnoreCase</span>\nextends <a href=\"Contains.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\">Contains</a>",
      "description" : "Used with MetadataComparisonService.",
      "descriptionHtml" : "Used with \n<a href=\"MetadataComparisonService.html\" title=\"class in com.adaptris.core.services.metadata.compare\" target=\"_new\"><code>MetadataComparisonService</code></a>.",
      "inheritance" : [
        {
          "name" : "ComparatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/ComparatorImpl.html"
        },
        {
          "name" : "Contains",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/Contains.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/XincludePreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.XincludePreprocessor",
      "className" : "XincludePreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "xinclude-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class XincludePreprocessor\nextends java.lang.Object\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XincludePreprocessor</span>\nextends java.lang.Object\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/ExpiringMapCacheListener.html",
      "fullClassName" : "com.adaptris.core.cache.ExpiringMapCacheListener",
      "className" : "ExpiringMapCacheListener",
      "packageName" : "com.adaptris.core.cache",
      "componentType" : "object",
      "alias" : "expiring-map-cache-listener",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.0",
        "summary" : "",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.8.0\")\npublic class ExpiringMapCacheListener\nextends java.lang.Object\nimplements net.jodah.expiringmap.ExpirationListener<java.lang.String,​java.lang.Object>",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.8.0\")\npublic class <span class=\"typeNameLabel\">ExpiringMapCacheListener</span>\nextends java.lang.Object\nimplements net.jodah.expiringmap.ExpirationListener&lt;java.lang.String,​java.lang.Object&gt;",
      "description" : "ExpirationListener implementation that notifies any configured CacheEventListener that are configured.",
      "descriptionHtml" : "<code>ExpirationListener</code> implementation that notifies any configured \n<a href=\"CacheEventListener.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\"><code>CacheEventListener</code></a> that are configured.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jsonpatch/GeneratePatchDiffService.html",
      "fullClassName" : "com.adaptris.core.json.jsonpatch.GeneratePatchDiffService",
      "className" : "GeneratePatchDiffService",
      "packageName" : "com.adaptris.core.json.jsonpatch",
      "componentType" : "service",
      "alias" : "json-patch-generate-diff",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Generate a JSON patch diff between two documents",
        "tag" : "service,json,jsonpatch"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Generate a JSON patch diff between two documents\",\n                  tag=\"service,json,jsonpatch\",\n                  since=\"3.9.0\")\npublic class GeneratePatchDiffService\nextends JsonPatchService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Generate a JSON patch diff between two documents\",\n                  tag=\"service,json,jsonpatch\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">GeneratePatchDiffService</span>\nextends <a href=\"JsonPatchService.html\" title=\"class in com.adaptris.core.json.jsonpatch\" target=\"_new\">JsonPatchService</a>",
      "description" : "Generate a JSON patch diff between two documents JSON Patch defines a JSON document structure for expressing a sequence of operations to apply to a JavaScript Object Notation (JSON) document. This service generates the JSON that expresses the differences between 2 JSON documents as a sequence of operations. For a given diff-source of {\"a\": 0,\"b\": [1,2]} and a diff-target of {\"b\": [1,2,0]} then the patch transformation generated and stored against output should be [{\"op\":\"move\",\"from\":\"/a\",\"path\":\"/b/2\"}]. Note that zjsonpatch operates on JsonNode objects; this means keeping the both node trees in memory, so behaviour will be size/memory dependent.",
      "descriptionHtml" : "Generate a JSON patch diff between two documents \n<p> JSON Patch defines a JSON document structure for expressing a sequence of operations to apply to a JavaScript Object Notation (JSON) document. This service generates the JSON that expresses the differences between 2 JSON documents as a sequence of operations. </p> \n<p> For a given <code>diff-source</code> of <code>{\"a\": 0,\"b\": [1,2]}</code> and a <code>diff-target</code> of <code>{\"b\": [1,2,0]}</code> then the patch transformation generated and stored against <code>output</code> should be <code>[{\"op\":\"move\",\"from\":\"/a\",\"path\":\"/b/2\"}]</code>. </p> \n<p> Note that <a href=\"https://github.com/flipkart-incubator/zjsonpatch\" target=\"_new\">zjsonpatch</a> operates on JsonNode objects; this means keeping the both node trees in memory, so behaviour will be size/memory dependent. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JsonPatchService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jsonpatch/JsonPatchService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/SigningService.html",
      "fullClassName" : "com.adaptris.core.security.SigningService",
      "className" : "SigningService",
      "packageName" : "com.adaptris.core.security",
      "componentType" : "service",
      "alias" : "signing-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Sign a message",
        "tag" : "service,security"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Sign a message\",\n                  tag=\"service,security\",\n                  branchSelector=true)\npublic class SigningService\nextends EncryptionService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Sign a message\",\n                  tag=\"service,security\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">SigningService</span>\nextends <a href=\"EncryptionService.html\" title=\"class in com.adaptris.core.security\" target=\"_new\">EncryptionService</a>",
      "description" : "Perform Signing. This may be used as part of a BranchingServiceCollection if both CoreSecurityService.setFailId(String) and CoreSecurityService.setSuccessId(String) are configured.",
      "descriptionHtml" : "Perform Signing. \n<p> This may be used as part of a <a href=\"../BranchingServiceCollection.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>BranchingServiceCollection</code></a> if both <a href=\"CoreSecurityService.html#setFailId(java.lang.String)\" target=\"_new\"><code>CoreSecurityService.setFailId(String)</code></a> and <a href=\"CoreSecurityService.html#setSuccessId(java.lang.String)\" target=\"_new\"><code>CoreSecurityService.setSuccessId(String)</code></a> are configured. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CoreSecurityService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/CoreSecurityService.html"
        },
        {
          "name" : "EncryptionService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/EncryptionService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/MetadataHeaderHandler.html",
      "fullClassName" : "com.adaptris.core.http.jetty.MetadataHeaderHandler",
      "className" : "MetadataHeaderHandler",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-http-headers-as-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataHeaderHandler\nextends HeaderHandlerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataHeaderHandler</span>\nextends <a href=\"HeaderHandlerImpl.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">HeaderHandlerImpl</a>",
      "description" : "HeaderHandler implementation that stores HTTP headers as standard metadata.",
      "descriptionHtml" : "<a href=\"../server/HeaderHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>HeaderHandler</code></a> implementation that stores HTTP headers as standard metadata.",
      "inheritance" : [
        {
          "name" : "HeaderHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/HeaderHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflow.html",
      "fullClassName" : "com.adaptris.core.StandardWorkflow",
      "className" : "StandardWorkflow",
      "packageName" : "com.adaptris.core",
      "componentType" : "workflow",
      "alias" : "standard-workflow",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Basic Single Threaded Workflow",
        "tag" : "workflow,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Basic Single Threaded Workflow\",\n                  tag=\"workflow,base\")\npublic class StandardWorkflow\nextends StandardWorkflowImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Basic Single Threaded Workflow\",\n                  tag=\"workflow,base\")\npublic class <span class=\"typeNameLabel\">StandardWorkflow</span>\nextends <a href=\"StandardWorkflowImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">StandardWorkflowImpl</a>",
      "description" : "Standard implementation of Workflow. Links specific destinations in a Channel. Consumes AdaptrisMessages from a single ConsumeDestination, processes these messages using a ServiceCollection, then produces the processed message using a AdaptrisMessageProducer. In the event of an Exception processing a message, passes the problem message to a configured AdaptrisMessageListener.",
      "descriptionHtml" : "<p> Standard implementation of <code>Workflow</code>. Links specific destinations in a <code>Channel</code>. Consumes <code>AdaptrisMessage</code>s from a single <code>ConsumeDestination</code>, processes these messages using a <code>ServiceCollection</code>, then produces the processed message using a <code>AdaptrisMessageProducer</code>. In the event of an <code>Exception</code> processing a message, passes the problem message to a configured <code>AdaptrisMessageListener</code>. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowImp.html"
        },
        {
          "name" : "StandardWorkflowImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflowImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataFilterService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataFilterService",
      "className" : "MetadataFilterService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-filter-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Filter and remove metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Filter and remove metadata\",\n                  tag=\"service,metadata\")\npublic class MetadataFilterService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Filter and remove metadata\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataFilterService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Implementation of Service that filters metadata keys based on a MetadataFilter.",
      "descriptionHtml" : "<p> Implementation of <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> that filters metadata keys based on a <a href=\"../../metadata/MetadataFilter.html\" title=\"interface in com.adaptris.core.metadata\" target=\"_new\"><code>MetadataFilter</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyRouteCondition.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JettyRouteCondition",
      "className" : "JettyRouteCondition",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-route-condition",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Condition that evaluates based on the jettyURI and method",
        "tag" : "condition,jetty"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Condition that evaluates based on the jettyURI and method\",\n                  tag=\"condition,jetty\",\n                  since=\"3.9.0\")\npublic class JettyRouteCondition\nextends ConditionImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Condition that evaluates based on the jettyURI and method\",\n                  tag=\"condition,jetty\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">JettyRouteCondition</span>\nextends <a href=\"../../services/conditional/conditions/ConditionImpl.html\" title=\"class in com.adaptris.core.services.conditional.conditions\" target=\"_new\">ConditionImpl</a>",
      "description" : "Condition implementation that evaulates based on the JettyURI and HTTP method. Designed to be used as part of a Switch service to branch based on the jettyURI and method and takes the metadata values associated with CoreConstants.HTTP_METHOD and JettyConstants.JETTY_URI and matches them against a its configured route. If a route matches the URI and the http method (if specified) then the evaluation is true. Since the URI itself may contain parameters that may need to be extracted as metadata, it is possible to do that as part of the matching process here. Given a URL of /record/zeus/apollo if you have a url-pattern /record/(.*)/(.*) with metadata keys recordId, childId then that metadata will be set as part of the evaluation method. You could achieve the same effect with a ExtractMetadataService as part of your normal service execution chain.",
      "descriptionHtml" : "<a href=\"../../services/conditional/Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> implementation that evaulates based on the JettyURI and HTTP method. \n<p> Designed to be used as part of a <a href=\"../../services/conditional/Switch.html\" title=\"class in com.adaptris.core.services.conditional\" target=\"_new\"><code>Switch</code></a> service to branch based on the jettyURI and method and takes the metadata values associated with <a href=\"../../CoreConstants.html#HTTP_METHOD\" target=\"_new\"><code>CoreConstants.HTTP_METHOD</code></a> and <a href=\"JettyConstants.html#JETTY_URI\" target=\"_new\"><code>JettyConstants.JETTY_URI</code></a> and matches them against a its configured route. If a route matches the URI and the http method (if specified) then the evaluation is true. </p> \n<p> Since the URI itself may contain parameters that may need to be extracted as metadata, it is possible to do that as part of the matching process here. Given a URL of <code>/record/zeus/apollo</code> if you have a url-pattern <code>/record/(.*)/(.*)</code> with metadata keys <code>recordId, childId</code> then that metadata will be set as part of the evaluation method. You could achieve the same effect with a <a href=\"../../services/metadata/ExtractMetadataService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ExtractMetadataService</code></a> as part of your normal service execution chain. </p>",
      "inheritance" : [
        {
          "name" : "ConditionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/MetadataSession.html",
      "fullClassName" : "com.adaptris.kie.services.MetadataSession",
      "className" : "MetadataSession",
      "packageName" : "com.adaptris.kie.services",
      "componentType" : "object",
      "alias" : "kie-metadata-controlled-session",
      "deprecated" : false,
      "jarFileName" : "interlok-kie.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataSession\nextends SessionManagementImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataSession</span>\nextends <a href=\"SessionManagementImpl.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">SessionManagementImpl</a>",
      "description" : "Session management strategy that retains the same session until a certain metadata key is set on the message. The KieSession is created upon the first invocation of get(KieBase, AdaptrisMessage) and is disposed when the AdaptrisMessage contains the metadata key specified by getMetadataKey() (the value doesn't matter).",
      "descriptionHtml" : "Session management strategy that retains the same session until a certain metadata key is set on the message. \n<p> The <code>KieSession</code> is created upon the first invocation of <a href=\"#get(org.kie.api.KieBase,com.adaptris.core.AdaptrisMessage)\" target=\"_new\"><code>get(KieBase, AdaptrisMessage)</code></a> and is disposed when the AdaptrisMessage contains the metadata key specified by <a href=\"#getMetadataKey()\" target=\"_new\"><code>getMetadataKey()</code></a> (the value doesn't matter). </p>",
      "inheritance" : [
        {
          "name" : "SessionManagementImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/SessionManagementImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/KIE",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kie",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-gcloud/4.0.0B1-RELEASE/com/adaptris/core/oauth/gcloud/ApplicationDefaultCredentials.html",
      "fullClassName" : "com.adaptris.core.oauth.gcloud.ApplicationDefaultCredentials",
      "className" : "ApplicationDefaultCredentials",
      "packageName" : "com.adaptris.core.oauth.gcloud",
      "componentType" : "object",
      "alias" : "application-default-credentials",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-gcloud.jar",
      "profile" : { },
      "annotationDetails" : "public class ApplicationDefaultCredentials\nextends ScopedCredentials",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ApplicationDefaultCredentials</span>\nextends <a href=\"ScopedCredentials.html\" title=\"class in com.adaptris.core.oauth.gcloud\" target=\"_new\">ScopedCredentials</a>",
      "inheritance" : [
        {
          "name" : "ScopedCredentials",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-gcloud/4.0.0B1-RELEASE/com/adaptris/core/oauth/gcloud/ScopedCredentials.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Google",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-gcloud",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/MetadataIdentitySequenceNumberService.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.MetadataIdentitySequenceNumberService",
      "className" : "MetadataIdentitySequenceNumberService",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "service",
      "alias" : "jdbc-metadata-sequence-number-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Create a sequence number using a database, the sequence number is associated with a metadata key",
        "tag" : "service,metadata,jdbc,sequence"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Create a sequence number using a database, the sequence number is associated with a metadata key\",\n                  tag=\"service,metadata,jdbc,sequence\")\npublic class MetadataIdentitySequenceNumberService\nextends AbstractJdbcSequenceNumberService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Create a sequence number using a database, the sequence number is associated with a metadata key\",\n                  tag=\"service,metadata,jdbc,sequence\")\npublic class <span class=\"typeNameLabel\">MetadataIdentitySequenceNumberService</span>\nextends <a href=\"AbstractJdbcSequenceNumberService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">AbstractJdbcSequenceNumberService</a>",
      "description" : "Implementation of AbstractJdbcSequenceNumberService where the identity is derived from metadata. The default database schema is assumed to be  \n CREATE TABLE SEQUENCES (ID VARCHAR(255) NOT NULL, SEQ_NUMBER INT)\n \n The default SQL statements reflect this; and provided that a table called 'SEQUENCES' contains at least those two columns then it should work without any changes to the SQL statements. Be aware that all statements default to upper-case which will have an impact if your database is case-sensitive (such as MySQL on Linux).",
      "descriptionHtml" : "Implementation of AbstractJdbcSequenceNumberService where the identity is derived from metadata. \n<p> The default database schema is assumed to be </p>\n<pre> <code>\n CREATE TABLE SEQUENCES (ID VARCHAR(255) NOT NULL, SEQ_NUMBER INT)\n </code>\n </pre> The default SQL statements reflect this; and provided that a table called 'SEQUENCES' contains at least those two columns then it should work without any changes to the SQL statements. Be aware that all statements default to upper-case which will have an impact if your database is case-sensitive (such as MySQL on Linux). \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html"
        },
        {
          "name" : "AbstractJdbcSequenceNumberService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/AbstractJdbcSequenceNumberService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/VerifySignatureService.html",
      "fullClassName" : "com.adaptris.aws.kms.VerifySignatureService",
      "className" : "VerifySignatureService",
      "packageName" : "com.adaptris.aws.kms",
      "componentType" : "service",
      "alias" : "aws-kms-verify-signature",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-kms.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.kms.AWSKMSConnection"
        ],
        "since" : "3.10.1",
        "summary" : "Verify a signature using AWS KMS",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Verify a signature using AWS KMS\",\n                  recommended=AWSKMSConnection.class,\n                  since=\"3.10.1\")\npublic class VerifySignatureService\nextends SignatureService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Verify a signature using AWS KMS\",\n                  recommended=<a href=\"AWSKMSConnection.html\" title=\"class in com.adaptris.aws.kms\" target=\"_new\">AWSKMSConnection.class</a>,\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">VerifySignatureService</span>\nextends <a href=\"SignatureService.html\" title=\"class in com.adaptris.aws.kms\" target=\"_new\">SignatureService</a>",
      "description" : "Verify a signature using AWS KMS. If the signature does not verify for any reason then a normal ServiceException will be thrown.",
      "descriptionHtml" : "Verify a signature using AWS KMS. \n<p> If the signature does not verify for any reason then a normal <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceException.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ServiceException</code></a> will be thrown. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "AWSKMSServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/AWSKMSServiceImpl.html"
        },
        {
          "name" : "SignatureService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/SignatureService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/KMS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-kms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MetadataDocumentCopier.html",
      "fullClassName" : "com.adaptris.core.services.splitter.MetadataDocumentCopier",
      "className" : "MetadataDocumentCopier",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "metadata-document-copier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataDocumentCopier\nextends MessageCopier",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataDocumentCopier</span>\nextends <a href=\"MessageCopier.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageCopier</a>",
      "description" : "Implementation of MessageSplitter which creates multiple instances of the same document based on a metadata key. The split messages will always contain the entire document, the metadata key containing the number of documents to generate.",
      "descriptionHtml" : "Implementation of \n<a href=\"MessageSplitter.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\"><code>MessageSplitter</code></a> which creates multiple instances of the same document based on a metadata key. \n<p> The split messages will always contain the entire document, the metadata key containing the number of documents to generate. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html"
        },
        {
          "name" : "MessageCopier",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageCopier.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/StandardMsmqProducer.html",
      "fullClassName" : "com.adaptris.core.msmq.javonet.StandardMsmqProducer",
      "className" : "StandardMsmqProducer",
      "packageName" : "com.adaptris.core.msmq.javonet",
      "componentType" : "producer",
      "alias" : "javonet-standard-msmq-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-msmq-javonet.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Send messages to MSMQ using .NET",
        "tag" : "consumer,msmq"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send messages to MSMQ using .NET\",\n                  tag=\"consumer,msmq\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class StandardMsmqProducer\nextends ProduceOnlyProducerImp\nimplements LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send messages to MSMQ using .NET\",\n                  tag=\"consumer,msmq\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">StandardMsmqProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Abstract MSMQ implementation of AdaptrisMessageProducer. Request reply is not supported, an UnsupportedOperationException is thrown if an attempt is made to use request() There is no AdaptrisConnection associated with this producer so a NullConnection is appropriate, however, the string returned by the configured com.adaptris.core.ProduceDestination should be a MSMQ Queue name. Check the MessageQueue Class for details of the format string. Note that this MSMQ implementation is built around Microsoft .NET Framework 4.5 so it will require that to be installed and also the Visual C++ Redistributable Packages for Visual Studio 2013",
      "descriptionHtml" : "Abstract MSMQ implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducer</code></a>. \n<p> Request reply is not supported, an UnsupportedOperationException is thrown if an attempt is made to use <code>request()</code> </p> \n<p> There is no <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisConnection</code></a> associated with this producer so a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>NullConnection</code></a> is appropriate, however, the string returned by the configured <code>com.adaptris.core.ProduceDestination</code> should be a MSMQ Queue name. Check the <a href=\"http://msdn.microsoft.com/en-us/library/ch1d814t%28v=vs.110%29.aspx\" target=\"_new\">MessageQueue Class</a> for details of the format string. </p> \n<p> <strong>Note that this MSMQ implementation is built around <a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=30653\" target=\"_new\">Microsoft .NET Framework 4.5</a> so it will require that to be installed and also the <a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=40784\" target=\"_new\">Visual C++ Redistributable Packages for Visual Studio 2013</a></strong> </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MSMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-msmq-javonet",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RangeMatch.html",
      "fullClassName" : "com.adaptris.core.http.client.RangeMatch",
      "className" : "RangeMatch",
      "packageName" : "com.adaptris.core.http.client",
      "componentType" : "object",
      "alias" : "http-status-range-match",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RangeMatch\nextends StatusEvaluatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RangeMatch</span>\nextends <a href=\"StatusEvaluatorImpl.html\" title=\"class in com.adaptris.core.http.client\" target=\"_new\">StatusEvaluatorImpl</a>",
      "description" : "Implementation of StatusEvaluator for use with BranchingHttpRequestService. Matches a service id against range of values (inclusive) e.g. lower=200, upper=299 to match all \"success\" codes.",
      "descriptionHtml" : "Implementation of \n<a href=\"StatusEvaluator.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>StatusEvaluator</code></a> for use with \n<a href=\"net/BranchingHttpRequestService.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>BranchingHttpRequestService</code></a>. \n<p> Matches a service id against range of values (inclusive) e.g. lower=200, upper=299 to match all \"success\" codes. </p>",
      "inheritance" : [
        {
          "name" : "StatusEvaluatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/StatusEvaluatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/JettyHashUserRealmVerifier.html",
      "fullClassName" : "com.adaptris.core.http.jetty.JettyHashUserRealmVerifier",
      "className" : "JettyHashUserRealmVerifier",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-hash-user-realm-identity-verifier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JettyHashUserRealmVerifier\nextends IdentityVerifierImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JettyHashUserRealmVerifier</span>\nextends <a href=\"../../security/access/IdentityVerifierImpl.html\" title=\"class in com.adaptris.core.security.access\" target=\"_new\">IdentityVerifierImpl</a>",
      "description" : "IdentityVerifier implementation that uses the same file as HashLoginServiceFactory to perform identity verification.",
      "descriptionHtml" : "<a href=\"../../security/access/IdentityVerifier.html\" title=\"interface in com.adaptris.core.security.access\" target=\"_new\"><code>IdentityVerifier</code></a> implementation that uses the same file as \n<a href=\"HashLoginServiceFactory.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\"><code>HashLoginServiceFactory</code></a> to perform identity verification.",
      "inheritance" : [
        {
          "name" : "IdentityVerifierImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/IdentityVerifierImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MessageStatistic.html",
      "fullClassName" : "com.adaptris.core.interceptor.MessageStatistic",
      "className" : "MessageStatistic",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "object",
      "alias" : "interceptor-message-statistic",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MessageStatistic\nextends InterceptorStatistic\nimplements java.io.Externalizable, java.lang.Cloneable",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MessageStatistic</span>\nextends <a href=\"InterceptorStatistic.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">InterceptorStatistic</a>\nimplements java.io.Externalizable, java.lang.Cloneable",
      "description" : "A message statistic stored by a MessageMetricsInterceptorImpl instances.",
      "descriptionHtml" : "A message statistic stored by a \n<a href=\"MessageMetricsInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>MessageMetricsInterceptorImpl</code></a> instances.",
      "inheritance" : [
        {
          "name" : "InterceptorStatistic",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/InterceptorStatistic.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/exception/BapiExceptionReport.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.bapi.exception.BapiExceptionReport",
      "className" : "BapiExceptionReport",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.bapi.exception",
      "componentType" : "object",
      "alias" : "sapjco3-exception-as-xml",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class BapiExceptionReport\nextends java.lang.Object\nimplements ExceptionReportGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BapiExceptionReport</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionReportGenerator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.exception\" class=\"externalLink\" target=\"_new\">ExceptionReportGenerator</a>",
      "description" : "ExceptionReportGenerator implementation that uses an exception and creates XML matching the standard RETURN parameter from a BAPI. Based on the exception class, this generates a TYPE, ID, NUMBER, along with the exception message for insertion into the document.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionReportGenerator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.exception\" class=\"externalLink\" target=\"_new\">ExceptionReportGenerator</a> implementation that uses an exception and creates XML matching the standard RETURN parameter from a BAPI. \n<p> Based on the exception class, this generates a TYPE, ID, NUMBER, along with the exception message for insertion into the document. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-activemq/4.0.0B1-RELEASE/com/adaptris/xa/jms/activemq/BasicActiveMqXAImplementation.html",
      "fullClassName" : "com.adaptris.xa.jms.activemq.BasicActiveMqXAImplementation",
      "className" : "BasicActiveMqXAImplementation",
      "packageName" : "com.adaptris.xa.jms.activemq",
      "componentType" : "object",
      "alias" : "basic-active-mq-xa-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-activemq.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicActiveMqXAImplementation\nextends UrlVendorImplementation\nimplements com.adaptris.xa.jms.XAVendorImplementation, LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicActiveMqXAImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">UrlVendorImplementation</a>\nimplements com.adaptris.xa.jms.XAVendorImplementation, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "ActiveMQ implementation of XAVendorImplementation. This was built against ActiveMQ 5.2.0",
      "descriptionHtml" : "<p> ActiveMQ implementation of <code>XAVendorImplementation</code>. </p> \n<p> <b>This was built against ActiveMQ 5.2.0</b> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/ActiveMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-activemq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/JmxWaitService.html",
      "fullClassName" : "com.adaptris.core.services.jmx.JmxWaitService",
      "className" : "JmxWaitService",
      "packageName" : "com.adaptris.core.services.jmx",
      "componentType" : "service",
      "alias" : "jmx-wait-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jmx.JmxConnection"
        ],
        "since" : "",
        "summary" : "Execute a JMX operation",
        "tag" : "service,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a JMX operation\",\n                  tag=\"service,jmx\",\n                  recommended=JmxConnection.class)\npublic class JmxWaitService\nextends JmxOperationServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a JMX operation\",\n                  tag=\"service,jmx\",\n                  recommended=<a href=\"../../jmx/JmxConnection.html\" title=\"class in com.adaptris.core.jmx\" target=\"_new\">JmxConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JmxWaitService</span>\nextends <a href=\"JmxOperationServiceImpl.html\" title=\"class in com.adaptris.core.services.jmx\" target=\"_new\">JmxOperationServiceImpl</a>",
      "description" : "Allows you to make a remote call on a JMX operation and wait until the result from the JMX operation is \"true\" You can set parameters for the call using ValueTranslator implements. The result of the JMX operation is always expected to be a Boolean. When used in conjunction with InFlightWorkflowInterceptor you can use this service to pause processing until the workflow in question does not have any in flight messages.",
      "descriptionHtml" : "<p> Allows you to make a remote call on a JMX operation and wait until the result from the JMX operation is \"true\" </p> \n<p> You can set parameters for the call using <a href=\"ValueTranslator.html\" title=\"interface in com.adaptris.core.services.jmx\" target=\"_new\"><code>ValueTranslator</code></a> implements. The result of the JMX operation is always expected to be a <code>Boolean</code>. When used in conjunction with <a href=\"../../interceptor/InFlightWorkflowInterceptor.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\"><code>InFlightWorkflowInterceptor</code></a> you can use this service to pause processing until the workflow in question does not have any in flight messages. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "JmxOperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/JmxOperationImpl.html"
        },
        {
          "name" : "JmxOperationServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/JmxOperationServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/JsonArrayDocumentBuilder.html",
      "fullClassName" : "com.adaptris.core.elastic.JsonArrayDocumentBuilder",
      "className" : "JsonArrayDocumentBuilder",
      "packageName" : "com.adaptris.core.elastic",
      "componentType" : "object",
      "alias" : "elastic-json-array-document-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Build documents for elasticsearch from a existing JSON array/JSON lines doc",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Build documents for elasticsearch from a existing JSON array/JSON lines doc\",\n                  since=\"3.9.1\")\npublic class JsonArrayDocumentBuilder\nextends JsonDocumentBuilderImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Build documents for elasticsearch from a existing JSON array/JSON lines doc\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">JsonArrayDocumentBuilder</span>\nextends <a href=\"JsonDocumentBuilderImpl.html\" title=\"class in com.adaptris.core.elastic\" target=\"_new\">JsonDocumentBuilderImpl</a>",
      "description" : "Parse a json array (or json lines format)and create documents from it for elasticsearch The unique-id for each document created is derived from the getUniqueIdJsonPath() which defaults to $.uniqueid",
      "descriptionHtml" : "Parse a json array (or json lines format)and create documents from it for elasticsearch \n<p> The unique-id for each document created is derived from the <a href=\"#getUniqueIdJsonPath()\" target=\"_new\"><code>getUniqueIdJsonPath()</code></a> which defaults to <code>$.uniqueid</code> </p>",
      "inheritance" : [
        {
          "name" : "JsonDocumentBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/JsonDocumentBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/CreateQueryStringFromMetadata.html",
      "fullClassName" : "com.adaptris.core.services.metadata.CreateQueryStringFromMetadata",
      "className" : "CreateQueryStringFromMetadata",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "create-query-string-from-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Create the query portion of a URL from metadata",
        "tag" : "service,metadata,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Create the query portion of a URL from metadata\",\n                  tag=\"service,metadata,http,https\")\npublic class CreateQueryStringFromMetadata\nextends UrlEncodedMetadataValues",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Create the query portion of a URL from metadata\",\n                  tag=\"service,metadata,http,https\")\npublic class <span class=\"typeNameLabel\">CreateQueryStringFromMetadata</span>\nextends <a href=\"UrlEncodedMetadataValues.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">UrlEncodedMetadataValues</a>",
      "description" : "Service that creates a URL query string from the specified metadata keys.",
      "descriptionHtml" : "Service that creates a URL query string from the specified metadata keys.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "UrlEncodedMetadataValues",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/UrlEncodedMetadataValues.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/GoogleCloudPubSubResponseProducer.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.GoogleCloudPubSubResponseProducer",
      "className" : "GoogleCloudPubSubResponseProducer",
      "packageName" : "com.adaptris.google.cloud.pubsub",
      "componentType" : "producer",
      "alias" : "google-cloud-pubsub-response-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Publish a ack/nack message to Google pubsub (when auto-acknowledge=false on the consumer)",
        "tag" : "producer,gcloud,messaging"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Publish a ack/nack message to Google pubsub (when auto-acknowledge=false on the consumer)\",\n                  tag=\"producer,gcloud,messaging\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class GoogleCloudPubSubResponseProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Publish a ack/nack message to Google pubsub (when auto-acknowledge=false on the consumer)\",\n                  tag=\"producer,gcloud,messaging\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">GoogleCloudPubSubResponseProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/ServiceExceptionHandler.html",
      "fullClassName" : "com.adaptris.core.services.splitter.ServiceExceptionHandler",
      "className" : "ServiceExceptionHandler",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "default-service-exception-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Default behaviour for handling exceptions during pooled-split-join-service execution",
        "tag" : "service,splitjoin"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Default behaviour for handling exceptions during pooled-split-join-service execution\",\n                  since=\"3.11.1\",\n                  tag=\"service,splitjoin\")\npublic class ServiceExceptionHandler\nextends java.lang.Object\nimplements ServiceErrorHandler",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Default behaviour for handling exceptions during pooled-split-join-service execution\",\n                  since=\"3.11.1\",\n                  tag=\"service,splitjoin\")\npublic class <span class=\"typeNameLabel\">ServiceExceptionHandler</span>\nextends java.lang.Object\nimplements <a href=\"ServiceErrorHandler.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\">ServiceErrorHandler</a>",
      "description" : "Default ServiceErrorHandler that captures exceptions thrown and rethrows the first exception when requested.",
      "descriptionHtml" : "Default \n<a href=\"ServiceErrorHandler.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\"><code>ServiceErrorHandler</code></a> that captures exceptions thrown and rethrows the first exception when requested.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/AggregatingQueueConsumer.html",
      "fullClassName" : "com.adaptris.core.jms.AggregatingQueueConsumer",
      "className" : "AggregatingQueueConsumer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "aggregating-queue-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AggregatingQueueConsumer\nextends AggregatingConsumerImpl<AggregatingJmsConsumeService>\nimplements AggregatingJmsConsumer",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AggregatingQueueConsumer</span>\nextends <a href=\"../services/aggregator/AggregatingConsumerImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">AggregatingConsumerImpl</a>&lt;<a href=\"AggregatingJmsConsumeService.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">AggregatingJmsConsumeService</a>&gt;\nimplements <a href=\"AggregatingJmsConsumer.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">AggregatingJmsConsumer</a>",
      "description" : "AggregatingConsumer implementation that allows you to read a separate message(s) from a queue that need to be aggregated with the current message. If the first message is received within the correct timeframe (based on getTimeout()), then additional messages are waited for based on the same timeout. Once the timeout expires then all the messages are aggregated using the configured aggregator. If the first message is not received within the correct timeframe than an exception is thrown In the worst case scenario, then this consumer will take 2*Timeout to process a single message (e.g. you wait 59 seconds for the first message, and then subsequently wait for another minute if the Timeout is 1 minute).",
      "descriptionHtml" : "<a href=\"../services/aggregator/AggregatingConsumer.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>AggregatingConsumer</code></a> implementation that allows you to read a separate message(s) from a queue that need to be aggregated with the current message. \n<p> </p>\n<ul> \n <li>If the first message is received within the correct timeframe (based on <a href=\"#getTimeout()\" target=\"_new\"><code>getTimeout()</code></a>), then additional messages are waited for based on the same timeout. Once the timeout expires then all the messages are aggregated using the configured aggregator.</li> \n <li>If the first message is not received within the correct timeframe than an exception is thrown</li> \n <li>In the worst case scenario, then this consumer will take 2*Timeout to process a single message (e.g. you wait 59 seconds for the first message, and then subsequently wait for another minute if the Timeout is 1 minute).</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AggregatingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/AggregatingConsumerImpl.html"
        },
        {
          "name" : "AggregatingJmsConsumeService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/AggregatingJmsConsumeService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonTransformService.html",
      "fullClassName" : "com.adaptris.core.transform.json.JsonTransformService",
      "className" : "JsonTransformService",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "service",
      "alias" : "json-transform-service",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transform a JSON document",
        "tag" : "service,transform,json,jolt"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform a JSON document\",\n                  tag=\"service,transform,json,jolt\")\npublic class JsonTransformService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform a JSON document\",\n                  tag=\"service,transform,json,jolt\")\npublic class <span class=\"typeNameLabel\">JsonTransformService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "This service allows you to create a transform for JSON to JSON content. The transform process takes JSON content, which you can source from the AdaptrisMessage payload, metadata or even a file and a transform definition (explained later), which can also be sourced from the payload, metadata or a file. The transform engine, powered by JOLT, will take your source JSON content and apply the transform definition, the result of which will be more JSON content, which can be saved into payload, metadata or even a file. The documentation here is copied from their own documentation and that should always be treated the canonical reference source. The documentation here is simply a primer on the featureset that is supported. Specify the source of the JSON input content and the source of the transform definition by setting the following 2 options; source-json mapping-spec To one of the following; file-data-input-parameter FileDataInputParameter string-payload-data-input-parameter StringPayloadDataInputParameter metadata-data-input-parameter MetadataDataInputParameter metadata-file-input-parameter com.adaptris.core.common.MetadataFileInputParameter Use a DataOutputParameter to specify where the result of the transform by is stored. The transform definition is called \"Shitfr\", explained below, but is generally a static block of JSON content. Although parameters can not be passed into the transform engine, we can apply relatively simple variable substitution on the Shiftr content during service execution. To do this simply specify a MetadataFilter that is not RemoveAllMetadataFilter . In this case, metadata will be filtered, and used to inject data into variable place-holders in the Shiftr content. All metadata key names surrounded by \"${<key-name>}\" will be searched through the Shiftr JSON content and replaced by the metadata value for that key. An example: Assuming Shiftr content like this;  \n {\n   \"rating\": {\n     \"quality\": {\n       \"value\": \"${my-metadata-key1}.quality.Value\", // copy 3 to \"SecondaryRatings.quality.Value\"\n       \"max\": \"${my-metadata-key2}.quality.RatingRange\" // copy 5 to \"SecondaryRatings.quality.RatingRange\"\n     }\n   }\n }\n \n And assuming our message contains payload items that include; Key = \"my-metadata-key1\" Value = \"Value1\" Key = \"my-metadata-key2\" Value = \"Value2\" Just before transform execution, our variable substitution will run giving us final Shift content like this;  \n {\n   \"rating\": {\n     \"quality\": {\n       \"value\": \"Value1.quality.Value\", // copy 3 to \"SecondaryRatings.quality.Value\"\n       \"max\": \"Value2.quality.RatingRange\" // copy 5 to \"SecondaryRatings.quality.RatingRange\"\n     }\n   }\n }\n \n Shiftr is a kind of JOLT transform that specifies where \"data\" from the input JSON should be placed in the output JSON, aka how the input JSON/data should be shifted around to make the output JSON/data. At a base level, a single Shiftr \"command\" is a mapping from an input path to an output path, similar to the \"mv\" command in Unix, \"mv /var/data/mysql/data /media/backup/mysql\". In Shiftr, the input path is a JSON tree structure, and the output path is flattened \"dot notation\" path notation. The idea is that you can start with a copy your JSon input data data and modify it into a Shiftr spec by supplying a \"dot notation\" output path for each piece of data that you care about. For example, given this simple input JSON :  \n {\n   \"rating\": {\n     \"quality\": {\n       \"value\": 3,\n       \"max\": 5\n     }\n   }\n }\n \n A simple Shiftr spec could be constructed by coping of that input, and modifying it to supply an output path for each piece of data :  \n {\n   \"rating\": {\n     \"quality\": {\n       \"value\": \"SecondaryRatings.quality.Value\", // copy 3 to \"SecondaryRatings.quality.Value\"\n       \"max\": \"SecondaryRatings.quality.RatingRange\" // copy 5 to \"SecondaryRatings.quality.RatingRange\"\n     }\n   }\n }\n \n would product the following output JSON :  \n {\n   \"SecondaryRatings\" : {\n     \"quality\" : {\n       \"Value\" : 3,\n       \"RatingRange\" : 5\n     }\n   }\n }\n \n As shown above, Shiftr specs can be entirely made up of literal string values, but it's real power comes from its wildcards.Using wildcards, you can leverage the fact that you know, not just the data and it's immediate key, but the whole input path to that data. Expanding the example above, say we have the following expanded Input JSON:  \n {\n   \"rating\": {\n     \"primary\": {\n       \"value\": 3, // want this value to goto output path \"Rating\"\n       \"max\": 5 // want this value to goto output path \"RatingRange\"\n      },\n      \"quality\": { // want output path \"SecondaryRatings.quality.Id\" = \"quality\", aka we want the value of the key to be used\n        \"value\": 3, // want this value to goto output path \"SecondaryRatings.quality.Value\"\n        \"max\": 5 // want this value to goto output path \"SecondaryRatings.quality.Range\"\n      },\n      \"sharpness\" : { // want output path \"SecondaryRatings.sharpness.Id\" = \"sharpness\"\n        \"value\" : 7, // want this value to goto output path \"SecondaryRatings.sharpness.Value\"\n        \"max\" : 10 // want this value to goto output path \"SecondaryRatings.sharpness.Range\"\n      }\n   }\n }\n \n The Spec would be : \n{\n  \"rating\": {\n    \"primary\": {\n        \"value\": \"Rating\",                       // output -> \"Rating\" : 3\n        \"max\": \"RatingRange\"                     // output -> \"RatingRange\" : 5\n    },\n    \"*\": {                                       // match input data like \"rating.[anything-other-than-primary]\"\n        \"value\": \"SecondaryRatings.&1.Value\",    // the data at \"rating.*.value\" goes to \"SecondaryRatings.*.Value\"\n                                                 // the \"&amp;1\" means use the value one level up the tree ( \"quality\" or \"sharpness\" )\n                                                 // output -> \"SecondaryRatings.quality.Value\" : 3 AND\n                                                 //           \"SecondaryRatings.sharpness.Value\" : 7\n\n        \"max\": \"SecondaryRatings.&1.Range\",      // the data at \"rating.*.max\" goes to \"SecondaryRatings.*.Range\"\n                                                 // the \"&1\" means use the value one level up the tree ( \"quality\" or \"sharpness\" )\n                                                 // output -> \"SecondaryRatings.quality.Range\" : 5 AND\n                                                 //           \"SecondaryRatings.sharpness.Range\" : 10\n\n        \"$\": \"SecondaryRatings.&1.Id\"            // Special operator $ means, use the value of the input key itself as the data\n                                                 // output -> \"SecondaryRatings.quality.Id\" : \"quality\"\n                                                 // output -> \"SecondaryRatings.sharpness.Id\" : \"sharpness\"\n    }\n  }\n}\n\n Yielding the following output: \n{\n  \"Rating\": 3,\n  \"RatingRange\": 5,\n  \"SecondaryRatings\": {\n     \"quality\": {\n        \"Range\": 5,\n        \"Value\": 3,\n        \"Id\": \"quality\"     // the special $ operator allows us to use input key the text value of \"quality\", as the \"Id\" of the output\n     },\n     \"sharpness\": {\n        \"Range\": 10,\n        \"Value\": 7,\n        \"Id\": \"sharpness\"   // the special $ operator allows us to use input key the text value of \"sharpness\", as the \"Id\" of the output\n     }\n  }\n}\n\n Shiftr Wildcards '*' Wildcard Valid only on the LHS ( input JSON keys ) side of a Shiftr Spec. The '*' wildcard can be used by itself or to match part of a key. '*' wildcard by itself : As illustrated in the example above, the '*' wildcard by itself is useful for \"templating\" JSON maps, where each key / value has the same \"format\". \n // example input\n {\n   \"rating\" : {\n     \"quality\": {\n       \"value\": 3,\n       \"max\": 5\n     },\n     \"sharpness\" : {\n       \"value\" : 7,\n       \"max\" : 10\n     }\n   }\n  }\n\n In this example, \"rating.quality\" and \"rating.sharpness\" both have the same structure/format, and thus we can use the '*' to allow use to write more compact rules and avoid having to to explicitly write very similar rules for both \"quality\" and \"sharpness\". '*' wildcard as part of a key : This is useful for working with input JSON with keys that are \"prefixed\". Ex : if you had an input document like \n  {\n     \"tag-Pro\" : \"Awesome\",\n     \"tag-Con\" : \"Bogus\"\n  }\n\n A 'tag-*' would match both keys, and make the whole key and \"matched\" part of the key available. Ex, input key of \"tag-Pro\" with LHS spec \"tag-*\", would \"tag-Pro\" and \"Pro\" available to reference. Note the '*' wildcard is as non-greedy as possible, hence you can use more than one '*' in a key. For example, \"tag-*-*\" would match \"tag-Foo-Bar\", making \"tag-Foo-Bar\", \"Foo\", and \"Bar\" all available to reference. '&' Wildcard Valid on the LHS (left hand side - input JSON keys) and RHS (output data path); Means, dereference against a \"path\" to get a value and use that value as if were a literal key. The canonical form of the wildcard is \"&(0,0)\". The first parameter is where in the input path to look for a value, and the second parameter is which part of the key to use (used with * key). There are syntactic sugar versions of the wildcard, all of the following mean the same thing : '&' = '&0' = '&(0)' = '&(0,0)' . The syntactic sugar versions are nice, as there are a set of data transforms that do not need to use the canonical form, e.g. if your input data does not have any \"prefixed\" keys. '&' Path lookup As Shiftr processes data and walks down the spec, it maintains a data structure describing the path it has walked. The '&' wildcard can access data from that path in a 0 major, upward oriented way. \n  {\n      \"foo\" : {\n          \"bar\" : {\n              \"baz\" :  // &0 = baz, &1 = bar, &2 = foo\n          }\n      }\n  }\n\n '&' Subkey lookup The '&' subkey lookup allows us to referece the values captured by the '*' wildcard. Example, \"tag-*-*\" would match \"tag-Foo-Bar\", making &(0,0) = \"tag-Foo-Bar\" &(0,1) = \"Foo\" &(0,2) = \"Bar\" '$' Wildcard Valid only on the LHS of the spec. The existence of this wildcard is a reflection of the fact that the \"data\" of the input JSON, can be both in the \"values\" and the \"keys\" of the input JSON. The base case operation of Shiftr is to copy input JSON \"values\", thus we need a way to specify that we want to copy the input JSON \"key\" instead. Thus '$' specifies that we want to use an input key, or input key derived value, as the data to be placed in the output JSON. '$' has the same syntax as the '&' wildcard, and can be read as, dereference to get a value, and then use that value as the data to be output. There are two cases where this is useful: when a \"key\" in the input JSON needs to be a \"id\" value in the output JSON, see the ' \"$\": \"SecondaryRatings.&1.Id\" ' example above. you want to make a list of all the input keys \n  // input\n  {\n    \"rating\": {\n      \"primary\": {\n        \"value\": 3,\n        \"max\": 5\n      },\n      \"quality\": {\n        \"value\": 3,\n        \"max\": 7\n      }\n    }\n  }\n\n  // desired output\n  {\n    \"ratings\" : [ \"primary\", \"quality\" ]    // Aside : this is an example of implicit JSON array creation in the output which is detailed further down.\n                                            // For now just observe that the input keys \"primary\" and \"quality\" have both made it to the output.\n  }\n\n  // spec\n  {\n    \"rating\": {\n      \"*\": {               // match all keys below \"rating\"\n        \"$\": \"ratings\"     // output each of the \"keys\" to \"ratings\" in the output\n      }\n    }\n  }\n\n '#' Wildcard Valid both on the LHS and RHS, but has different behavior / format on either side. The way to think of it, is that it allows you to specify a \"synthentic\" value, aka a value not found in the input data. On the RHS of the spec, # is only valid in the the context of an array, like \"[#2]\". What \"[#2]\" means is, go up the three 2 levels and ask that node how many matches it has had, and then use that as an index in the arrays. This means that, while Shiftr is doing its parallel tree walk of the input data and the spec, it tracks how many matches it has processed at each level of the spec tree. This useful if you want to take a JSON map and turn it into a JSON array, and you do not care about the order of the array. On the LHS of the spec, # allows you to specify a hard coded String to be place as a value in the output. The initial use-case for this feature was to be able to process a Boolean input value, and if the value is boolean true write out the string \"enabled\". Note, this was possible before, but it required two Shiftr steps. \n   \"hidden\" : {\n       \"true\" : {                             // if the value of \"hidden\" is true\n           \"#disabled\" : \"clients.clientId\"   // write the word \"disabled\" to the path \"clients.clientId\"\n       }\n   }\n\n '|' Wildcard Valid only on the LHS of the spec. This 'or' wildcard allows you to match multiple input keys. Useful if you don't always know exactly what your input data will be. \n  {\n    \"rating|Rating\" : \"rating-primary\"   // match \"rating\" or \"Rating\" copy the data to \"rating-primary\"\n  }\n\n This is really just syntactic sugar, as the implementation really just treats the key \"rating|Rating\" as two keys when processing. '@' Wildcard Valid on both sides of the spec. The basic '@' on the LHS. This wildcard is necessary if you want to do put both the input value and the input key somewhere in the output JSON. Example '@' wildcard usage : \n  // Say we have a spec that just operates on the value of the input key \"rating\"\n  {\n     \"foo\" : \"place.to.put.value\",  // leveraging the implicit operation of Shiftr which is to operate on input JSON values\n  }\n\n  // if we want to do something with the \"key\" as well as the value\n  {\n     \"foo\" : {\n       \"$\" : \"place.to.put.key\",\n       \"@\" : \"place.to.put.value\"    // '@' explicitly tell Shiftr to operate on the input JSON value of the parent key \"foo\"\n     }\n  }\n\n Thus the '@' wildcard is the mean \"copy the value of the data at this level in the tree, to the output\". Advanced '@' sign wildcard The format is lools like \"@(3,title)\", where \"3\" means go up the tree 3 levels and then lookup the key \"title\" and use the value at that key. JSON Arrays Reading from (input) and writing to (output) JSON Arrays is fully supported. Handling Arrays in the input JSON Shiftr treats JSON arrays in the input data as Maps with numeric keys. \n  // input\n  {\n     \"Photos\": [ \"AAA.jpg\", \"BBB.jpg\" ]\n  }\n\n  // spec\n  {\n     \"Photos\" :\n     {\n       \"1\" : \"photo-&amp;-url\"      // Specify that we only want to operate on the 1-th index of the \"Photos\" input array\n     }\n  }\n\n // output\n {\n     \"photo-1-url\": \"BBB.jpg\"\n }\n\n Handling Arrays in the output JSON Traditional array brackets, [ ], are used to specify array index in the output JSON. []'s are only valid on the RHS of the Shiftr spec. \n  // input\n  {\n    \"photo-1-id\": \"327704\",\n    \"photo-1-url\": \"http://bob.com/0001/327704/photo.jpg\"\n  }\n\n  // spec\n  {\n    \"photo-1-id\": \"Photos[1].Id\",   // Declare the \"Photos\" in the output to be an array,\n    \"photo-1-url\": \"Photos[1].Url\"  // that the 1-th array location should have data\n\n    // same as above but more powerful\n    // note '&amp;' logic can be used inside the '[ ]' notation\n    \"photo-*-url\": \"Photos[&amp;(0,1)].Url\"\n  }\n\n  // output\n  {\n    \"Photos\": [\n      null ,                // note Photos[0] is null, because no data was pushed to it\n      {\n        \"Id\":\"327704\",\n        \"Url\":\"http://bob.com/0001/327704/photo.jpg\"\n      }\n    ]\n  }\n\n JSON arrays in the spec file JSON Arrays in Shiftr spec are used to to specify that piece of input data should be copied to two places in the output JSON. \n  // input\n  { \"foo\" : 3 }\n\n  // spec\n  { \"foo\" : [ \"bar\", \"baz\" ] }    // push the 3, to both the of the output paths\n\n  // output\n  {\n    \"bar\" : 3,\n    \"baz\" : 3\n  }\n\n Implicit Array creation in the output JSON If a spec file is configured to output multiple pieces of data to the same output location, the output location will be turned into a JSON array. \n  // input\n  {\n      \"foo\" : \"bar\",\n      \"tuna\" : \"marlin\"\n  }\n\n  // spec\n  {\n      \"foo\"  : \"baz\",\n      \"tuna\" : \"baz\"\n  }\n\n  // output\n  {\n      \"baz\" : [ \"bar\", \"marlin\" ]     // Note the order of this Array should not be relied upon\n  }\n\n Additional Info Algorithm High Level Walk the input data, and Shiftr spec simultaneously, and execute the Shiftr command/mapping each time there is a match. Simultaneously walk of the spec and input JSon, and maintain a walked \"input\" path data structure. Determine a match between input JSON key and LHS spec, by matching LHS spec keys in the following order : Note that '|' keys are are split into their subkeys, eg \"literal\", '*', or '&amp' LHS keys Try to match the input key with \"literal\" spec key values If no literal match is found, try to match against LHS '&amp;' computed values. For deterministic behavior, if there is more than one '&amp;' LHS key, they are applied/matched in alphabetical order, after the '&amp;' syntactic sugar is replaced with its canonical form. If no match is found, try to match against LHS keys with '*' wildcard values. For deterministic behavior, '*' wildcard keys are sorted and applied/matched in alphabetical order. Note, processing of the '@' and '$' LHS keys always occur if their parent's match, and do not block any other matching. Implementation Notes Instances of this class execute Shiftr transformations given a transform spec of Jackson-style maps of maps and a Jackson-style map-of-maps input.",
      "descriptionHtml" : "This service allows you to create a transform for JSON to JSON content. \n<p> The transform process takes JSON content, which you can source from the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> payload, metadata or even a file and a transform definition (explained later), which can also be sourced from the payload, metadata or a file. The transform engine, powered by <a href=\"https://github.com/bazaarvoice/jolt\" target=\"_new\">JOLT</a>, will take your source JSON content and apply the transform definition, the result of which will be more JSON content, which can be saved into payload, metadata or even a file. The documentation here is copied from their own documentation and that should always be treated the canonical reference source. The documentation here is simply a primer on the featureset that is supported. </p> \n<p> Specify the source of the JSON input content and the source of the transform definition by setting the following 2 options; </p>\n<ul> \n <li>source-json</li> \n <li>mapping-spec</li> \n</ul> To one of the following; \n<ul> \n <li>file-data-input-parameter <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileDataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.core.common\" class=\"externalLink\" target=\"_new\"><code>FileDataInputParameter</code></a></li> \n <li>string-payload-data-input-parameter <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/StringPayloadDataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.core.common\" class=\"externalLink\" target=\"_new\"><code>StringPayloadDataInputParameter</code></a></li> \n <li>metadata-data-input-parameter <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataDataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.core.common\" class=\"externalLink\" target=\"_new\"><code>MetadataDataInputParameter</code></a></li> \n <li>metadata-file-input-parameter <code>com.adaptris.core.common.MetadataFileInputParameter</code></li> \n</ul> \n<p></p> \n<p> Use a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataOutputParameter</code></a> to specify where the result of the transform by is stored. </p> \n<p> The transform definition is called \"Shitfr\", explained below, but is generally a static block of JSON content. Although parameters can not be passed into the transform engine, we can apply relatively simple variable substitution on the Shiftr content during service execution. To do this simply specify a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilter.html?is-external=true\" title=\"class or interface in com.adaptris.core.metadata\" class=\"externalLink\" target=\"_new\"><code>MetadataFilter</code></a> that is not <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/RemoveAllMetadataFilter.html?is-external=true\" title=\"class or interface in com.adaptris.core.metadata\" class=\"externalLink\" target=\"_new\"><code>RemoveAllMetadataFilter</code></a> . In this case, metadata will be filtered, and used to inject data into variable place-holders in the Shiftr content. <br> All metadata key names surrounded by <code>\"${&lt;key-name&gt;}\"</code> will be searched through the Shiftr JSON content and replaced by the metadata value for that key. </p> \n<p> An example: <br> Assuming Shiftr content like this; </p>\n<pre> <code>\n {\n   \"rating\": {\n     \"quality\": {\n       \"value\": \"${my-metadata-key1}.quality.Value\", // copy 3 to \"SecondaryRatings.quality.Value\"\n       \"max\": \"${my-metadata-key2}.quality.RatingRange\" // copy 5 to \"SecondaryRatings.quality.RatingRange\"\n     }\n   }\n }\n </code>\n </pre> And assuming our message contains payload items that include; \n<ul> \n <li>Key = \"my-metadata-key1\" Value = \"Value1\"</li> \n <li>Key = \"my-metadata-key2\" Value = \"Value2\"</li> \n</ul> Just before transform execution, our variable substitution will run giving us final Shift content like this; \n<pre> <code>\n {\n   \"rating\": {\n     \"quality\": {\n       \"value\": \"Value1.quality.Value\", // copy 3 to \"SecondaryRatings.quality.Value\"\n       \"max\": \"Value2.quality.RatingRange\" // copy 5 to \"SecondaryRatings.quality.RatingRange\"\n     }\n   }\n }\n </code>\n </pre> \n<p></p> \n<p> Shiftr is a kind of JOLT transform that specifies where \"data\" from the input JSON should be placed in the output JSON, aka how the input JSON/data should be shifted around to make the output JSON/data. At a base level, a single Shiftr \"command\" is a mapping from an input path to an output path, similar to the \"mv\" command in Unix, \"mv /var/data/mysql/data /media/backup/mysql\". In Shiftr, the input path is a JSON tree structure, and the output path is flattened \"dot notation\" path notation. The idea is that you can start with a copy your JSon input data data and modify it into a Shiftr spec by supplying a \"dot notation\" output path for each piece of data that you care about. For example, given this simple input JSON : </p>\n<pre> <code>\n {\n   \"rating\": {\n     \"quality\": {\n       \"value\": 3,\n       \"max\": 5\n     }\n   }\n }\n </code>\n </pre> \n<p></p> \n<p> A simple Shiftr spec could be constructed by coping of that input, and modifying it to supply an output path for each piece of data : </p>\n<pre> <code>\n {\n   \"rating\": {\n     \"quality\": {\n       \"value\": \"SecondaryRatings.quality.Value\", // copy 3 to \"SecondaryRatings.quality.Value\"\n       \"max\": \"SecondaryRatings.quality.RatingRange\" // copy 5 to \"SecondaryRatings.quality.RatingRange\"\n     }\n   }\n }\n </code>\n </pre> would product the following output JSON : \n<pre> <code>\n {\n   \"SecondaryRatings\" : {\n     \"quality\" : {\n       \"Value\" : 3,\n       \"RatingRange\" : 5\n     }\n   }\n }\n </code>\n </pre> \n<p></p> \n<p> As shown above, Shiftr specs can be entirely made up of literal string values, but it's real power comes from its wildcards.Using wildcards, you can leverage the fact that you know, not just the data and it's immediate key, but the whole input path to that data. Expanding the example above, say we have the following expanded Input JSON: </p>\n<pre> <code>\n {\n   \"rating\": {\n     \"primary\": {\n       \"value\": 3, // want this value to goto output path \"Rating\"\n       \"max\": 5 // want this value to goto output path \"RatingRange\"\n      },\n      \"quality\": { // want output path \"SecondaryRatings.quality.Id\" = \"quality\", aka we want the value of the key to be used\n        \"value\": 3, // want this value to goto output path \"SecondaryRatings.quality.Value\"\n        \"max\": 5 // want this value to goto output path \"SecondaryRatings.quality.Range\"\n      },\n      \"sharpness\" : { // want output path \"SecondaryRatings.sharpness.Id\" = \"sharpness\"\n        \"value\" : 7, // want this value to goto output path \"SecondaryRatings.sharpness.Value\"\n        \"max\" : 10 // want this value to goto output path \"SecondaryRatings.sharpness.Range\"\n      }\n   }\n }\n </code>\n </pre> The Spec would be : \n<pre><code>\n{\n  \"rating\": {\n    \"primary\": {\n        \"value\": \"Rating\",                       // output -&gt; \"Rating\" : 3\n        \"max\": \"RatingRange\"                     // output -&gt; \"RatingRange\" : 5\n    },\n    \"*\": {                                       // match input data like \"rating.[anything-other-than-primary]\"\n        \"value\": \"SecondaryRatings.&amp;1.Value\",    // the data at \"rating.*.value\" goes to \"SecondaryRatings.*.Value\"\n                                                 // the \"&amp;amp;1\" means use the value one level up the tree ( \"quality\" or \"sharpness\" )\n                                                 // output -&gt; \"SecondaryRatings.quality.Value\" : 3 AND\n                                                 //           \"SecondaryRatings.sharpness.Value\" : 7\n\n        \"max\": \"SecondaryRatings.&amp;1.Range\",      // the data at \"rating.*.max\" goes to \"SecondaryRatings.*.Range\"\n                                                 // the \"&amp;1\" means use the value one level up the tree ( \"quality\" or \"sharpness\" )\n                                                 // output -&gt; \"SecondaryRatings.quality.Range\" : 5 AND\n                                                 //           \"SecondaryRatings.sharpness.Range\" : 10\n\n        \"$\": \"SecondaryRatings.&amp;1.Id\"            // Special operator $ means, use the value of the input key itself as the data\n                                                 // output -&gt; \"SecondaryRatings.quality.Id\" : \"quality\"\n                                                 // output -&gt; \"SecondaryRatings.sharpness.Id\" : \"sharpness\"\n    }\n  }\n}\n</code>\n </pre> Yielding the following output: \n<pre><code>\n{\n  \"Rating\": 3,\n  \"RatingRange\": 5,\n  \"SecondaryRatings\": {\n     \"quality\": {\n        \"Range\": 5,\n        \"Value\": 3,\n        \"Id\": \"quality\"     // the special $ operator allows us to use input key the text value of \"quality\", as the \"Id\" of the output\n     },\n     \"sharpness\": {\n        \"Range\": 10,\n        \"Value\": 7,\n        \"Id\": \"sharpness\"   // the special $ operator allows us to use input key the text value of \"sharpness\", as the \"Id\" of the output\n     }\n  }\n}\n</code>\n </pre> \n<p></p> \n<h2>Shiftr Wildcards</h2> \n<h3>'*' Wildcard</h3> \n<p> Valid only on the LHS ( input JSON keys ) side of a Shiftr Spec. The '*' wildcard can be used by itself or to match part of a key. </p>\n<h4>'*' wildcard by itself :</h4> \n<p> As illustrated in the example above, the '*' wildcard by itself is useful for \"templating\" JSON maps, where each key / value has the same \"format\". </p>\n<pre><code>\n // example input\n {\n   \"rating\" : {\n     \"quality\": {\n       \"value\": 3,\n       \"max\": 5\n     },\n     \"sharpness\" : {\n       \"value\" : 7,\n       \"max\" : 10\n     }\n   }\n  }\n</code>\n </pre> In this example, \"rating.quality\" and \"rating.sharpness\" both have the same structure/format, and thus we can use the '*' to allow use to write more compact rules and avoid having to to explicitly write very similar rules for both \"quality\" and \"sharpness\". \n<p></p> \n<h4>'*' wildcard as part of a key :</h4> \n<p> This is useful for working with input JSON with keys that are \"prefixed\". Ex : if you had an input document like </p>\n<pre><code>\n  {\n     \"tag-Pro\" : \"Awesome\",\n     \"tag-Con\" : \"Bogus\"\n  }\n</code>\n </pre> A 'tag-*' would match both keys, and make the whole key and \"matched\" part of the key available. Ex, input key of \"tag-Pro\" with LHS spec \"tag-*\", would \"tag-Pro\" and \"Pro\" available to reference. Note the '*' wildcard is as non-greedy as possible, hence you can use more than one '*' in a key. For example, \"tag-*-*\" would match \"tag-Foo-Bar\", making \"tag-Foo-Bar\", \"Foo\", and \"Bar\" all available to reference. \n<p></p> \n<p> </p>\n<h3>'&amp;' Wildcard</h3> \n<p> Valid on the LHS (left hand side - input JSON keys) and RHS (output data path); Means, dereference against a \"path\" to get a value and use that value as if were a literal key. The canonical form of the wildcard is <code>\"&amp;(0,0)\"</code>. The first parameter is where in the input path to look for a value, and the second parameter is which part of the key to use (used with * key). There are syntactic sugar versions of the wildcard, all of the following mean the same thing : <code>'&amp;' = '&amp;0' = '&amp;(0)' = '&amp;(0,0)' </code>. The syntactic sugar versions are nice, as there are a set of data transforms that do not need to use the canonical form, e.g. if your input data does not have any \"prefixed\" keys. </p>\n<h4>'&amp;' Path lookup</h4> \n<p> As Shiftr processes data and walks down the spec, it maintains a data structure describing the path it has walked. The '&amp;' wildcard can access data from that path in a 0 major, upward oriented way. </p>\n<pre><code>\n  {\n      \"foo\" : {\n          \"bar\" : {\n              \"baz\" :  // &amp;0 = baz, &amp;1 = bar, &amp;2 = foo\n          }\n      }\n  }\n</code>\n </pre> \n<p></p> \n<h4>'&amp;' Subkey lookup</h4> \n<p> The '&amp;' subkey lookup allows us to referece the values captured by the '*' wildcard. Example, \"tag-*-*\" would match \"tag-Foo-Bar\", making </p>\n<ul> \n <li><code>&amp;(0,0) = \"tag-Foo-Bar\"</code></li> \n <li><code>&amp;(0,1) = \"Foo\"</code></li> \n <li><code>&amp;(0,2) = \"Bar\"</code></li> \n</ul> \n<p></p> \n<p> </p>\n<h3>'$' Wildcard</h3> \n<p> Valid only on the LHS of the spec. The existence of this wildcard is a reflection of the fact that the \"data\" of the input JSON, can be both in the \"values\" and the \"keys\" of the input JSON. The base case operation of Shiftr is to copy input JSON \"values\", thus we need a way to specify that we want to copy the input JSON \"key\" instead. Thus '$' specifies that we want to use an input key, or input key derived value, as the data to be placed in the output JSON. '$' has the same syntax as the '&amp;' wildcard, and can be read as, dereference to get a value, and then use that value as the data to be output. </p> \n<p> There are two cases where this is useful: </p>\n<ol> \n <li>when a \"key\" in the input JSON needs to be a \"id\" value in the output JSON, see the ' \"$\": \"SecondaryRatings.&amp;1.Id\" ' example above.</li> \n <li>you want to make a list of all the input keys</li> \n</ol> \n<pre><code>\n  // input\n  {\n    \"rating\": {\n      \"primary\": {\n        \"value\": 3,\n        \"max\": 5\n      },\n      \"quality\": {\n        \"value\": 3,\n        \"max\": 7\n      }\n    }\n  }\n\n  // desired output\n  {\n    \"ratings\" : [ \"primary\", \"quality\" ]    // Aside : this is an example of implicit JSON array creation in the output which is detailed further down.\n                                            // For now just observe that the input keys \"primary\" and \"quality\" have both made it to the output.\n  }\n\n  // spec\n  {\n    \"rating\": {\n      \"*\": {               // match all keys below \"rating\"\n        \"$\": \"ratings\"     // output each of the \"keys\" to \"ratings\" in the output\n      }\n    }\n  }\n</code>\n </pre> \n<p></p> \n<h3>'#' Wildcard</h3> \n<p> Valid both on the LHS and RHS, but has different behavior / format on either side. The way to think of it, is that it allows you to specify a \"synthentic\" value, aka a value not found in the input data. </p> \n<p> On the RHS of the spec, # is only valid in the the context of an array, like <code>\"[#2]\"</code>. What <code>\"[#2]\"</code> means is, go up the three 2 levels and ask that node how many matches it has had, and then use that as an index in the arrays. This means that, while Shiftr is doing its parallel tree walk of the input data and the spec, it tracks how many matches it has processed at each level of the spec tree. This useful if you want to take a JSON map and turn it into a JSON array, and you do not care about the order of the array. </p> \n<p> On the LHS of the spec, # allows you to specify a hard coded String to be place as a value in the output. The initial use-case for this feature was to be able to process a Boolean input value, and if the value is boolean true write out the string \"enabled\". Note, this was possible before, but it required two Shiftr steps. </p>\n<pre><code>\n   \"hidden\" : {\n       \"true\" : {                             // if the value of \"hidden\" is true\n           \"#disabled\" : \"clients.clientId\"   // write the word \"disabled\" to the path \"clients.clientId\"\n       }\n   }\n</code>\n </pre> \n<p></p> \n<h3>'|' Wildcard</h3> \n<p> Valid only on the LHS of the spec. This 'or' wildcard allows you to match multiple input keys. Useful if you don't always know exactly what your input data will be. </p>\n<pre><code>\n  {\n    \"rating|Rating\" : \"rating-primary\"   // match \"rating\" or \"Rating\" copy the data to \"rating-primary\"\n  }\n</code>\n </pre> This is really just syntactic sugar, as the implementation really just treats the key \"rating|Rating\" as two keys when processing. \n<p></p> \n<h3>'@' Wildcard</h3> \n<p> Valid on both sides of the spec. </p> \n<h4>The basic '@' on the LHS.</h4> This wildcard is necessary if you want to do put both the input value and the input key somewhere in the output JSON. Example '@' wildcard usage : \n<pre><code>\n  // Say we have a spec that just operates on the value of the input key \"rating\"\n  {\n     \"foo\" : \"place.to.put.value\",  // leveraging the implicit operation of Shiftr which is to operate on input JSON values\n  }\n\n  // if we want to do something with the \"key\" as well as the value\n  {\n     \"foo\" : {\n       \"$\" : \"place.to.put.key\",\n       \"@\" : \"place.to.put.value\"    // '@' explicitly tell Shiftr to operate on the input JSON value of the parent key \"foo\"\n     }\n  }\n</code>\n </pre> Thus the '@' wildcard is the mean \"copy the value of the data at this level in the tree, to the output\". \n<p></p> \n<h4>Advanced '@' sign wildcard</h4> The format is lools like \n<code>\"@(3,title)\"</code>, where \"3\" means go up the tree 3 levels and then lookup the key \n<code>\"title\"</code> and use the value at that key. \n<p></p> \n<h2>JSON Arrays</h2> \n<p> Reading from (input) and writing to (output) JSON Arrays is fully supported. </p> \n<h3>Handling Arrays in the input JSON</h3> \n<p> Shiftr treats JSON arrays in the input data as Maps with numeric keys. </p>\n<pre><code>\n  // input\n  {\n     \"Photos\": [ \"AAA.jpg\", \"BBB.jpg\" ]\n  }\n\n  // spec\n  {\n     \"Photos\" :\n     {\n       \"1\" : \"photo-&amp;amp;-url\"      // Specify that we only want to operate on the 1-th index of the \"Photos\" input array\n     }\n  }\n\n // output\n {\n     \"photo-1-url\": \"BBB.jpg\"\n }\n</code>\n </pre> \n<p></p> \n<h3>Handling Arrays in the output JSON</h3> \n<p> Traditional array brackets, [ ], are used to specify array index in the output JSON. []'s are only valid on the RHS of the Shiftr spec. </p>\n<pre><code>\n  // input\n  {\n    \"photo-1-id\": \"327704\",\n    \"photo-1-url\": \"http://bob.com/0001/327704/photo.jpg\"\n  }\n\n  // spec\n  {\n    \"photo-1-id\": \"Photos[1].Id\",   // Declare the \"Photos\" in the output to be an array,\n    \"photo-1-url\": \"Photos[1].Url\"  // that the 1-th array location should have data\n\n    // same as above but more powerful\n    // note '&amp;amp;' logic can be used inside the '[ ]' notation\n    \"photo-*-url\": \"Photos[&amp;amp;(0,1)].Url\"\n  }\n\n  // output\n  {\n    \"Photos\": [\n      null ,                // note Photos[0] is null, because no data was pushed to it\n      {\n        \"Id\":\"327704\",\n        \"Url\":\"http://bob.com/0001/327704/photo.jpg\"\n      }\n    ]\n  }\n</code>\n </pre> \n<p></p> \n<h3>JSON arrays in the spec file</h3> \n<p> JSON Arrays in Shiftr spec are used to to specify that piece of input data should be copied to two places in the output JSON. </p>\n<pre><code>\n  // input\n  { \"foo\" : 3 }\n\n  // spec\n  { \"foo\" : [ \"bar\", \"baz\" ] }    // push the 3, to both the of the output paths\n\n  // output\n  {\n    \"bar\" : 3,\n    \"baz\" : 3\n  }\n</code>\n </pre> \n<p></p> \n<h3>Implicit Array creation in the output JSON</h3> \n<p> If a spec file is configured to output multiple pieces of data to the same output location, the output location will be turned into a JSON array. </p>\n<pre><code>\n  // input\n  {\n      \"foo\" : \"bar\",\n      \"tuna\" : \"marlin\"\n  }\n\n  // spec\n  {\n      \"foo\"  : \"baz\",\n      \"tuna\" : \"baz\"\n  }\n\n  // output\n  {\n      \"baz\" : [ \"bar\", \"marlin\" ]     // Note the order of this Array should not be relied upon\n  }\n</code>\n </pre> \n<p></p> \n<h2>Additional Info</h2> \n<h3>Algorithm High Level</h3> \n<p> Walk the input data, and Shiftr spec simultaneously, and execute the Shiftr command/mapping each time there is a match. </p> \n<h3.algorithm low level< h3> \n <ul> \n  <li>Simultaneously walk of the spec and input JSon, and maintain a walked \"input\" path data structure.</li> \n  <li>Determine a match between input JSON key and LHS spec, by matching LHS spec keys in the following order : \n   <ul> \n    <li>Note that <code>'|'</code> keys are are split into their subkeys, eg \"literal\", <code>'*'</code>, or <code>'&amp;amp'</code> LHS keys</li> \n   </ul> </li> \n </ul> \n <ol> \n  <li>Try to match the input key with \"literal\" spec key values</li> \n  <li>If no literal match is found, try to match against LHS <code>'&amp;amp;'</code> computed values. \n   <ol> \n    <li>For deterministic behavior, if there is more than one <code>'&amp;amp;'</code> LHS key, they are applied/matched in alphabetical order, after the <code>'&amp;amp;'</code> syntactic sugar is replaced with its canonical form.</li>  \n   </ol> </li>\n  <li>If no match is found, try to match against LHS keys with '*' wildcard values. \n   <ol> \n    <li>For deterministic behavior, <code>'*'</code> wildcard keys are sorted and applied/matched in alphabetical order.</li> \n   </ol> </li> Note, processing of the '@' and '$' LHS keys always occur if their parent's match, and do not block any other matching. \n  <p></p> \n  <h3>Implementation Notes</h3> \n  <p> Instances of this class execute Shiftr transformations given a transform spec of Jackson-style maps of maps and a Jackson-style map-of-maps input. </p>\n </ol>\n</h3.algorithm>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/NotEquals.html",
      "fullClassName" : "com.adaptris.core.services.conditional.operator.NotEquals",
      "className" : "NotEquals",
      "packageName" : "com.adaptris.core.services.conditional.operator",
      "componentType" : "object",
      "alias" : "not-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured value does not equal the supplied value.",
        "tag" : "conditional,operator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured value does not equal the supplied value.\",\n                  tag=\"conditional,operator\")\npublic class NotEquals\nextends java.lang.Object\nimplements Operator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured value does not equal the supplied value.\",\n                  tag=\"conditional,operator\")\npublic class <span class=\"typeNameLabel\">NotEquals</span>\nextends java.lang.Object\nimplements <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Operator</a>",
      "description" : "This Operator simply tests two values for non-equality. The first value used in the equality test is the Condition that this Operator is configured for; which could be the message payload or a metadata item for example. The second value is the static value configured for this operator. The static value can be a literal value; \"myValue\" or can be metadata resolved for example;   %message{myKey}\n The above will test the metadata value identified by the metadata key \"myKey\".",
      "descriptionHtml" : "<p> This <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> simply tests two values for non-equality. </p> \n<p> The first value used in the equality test is the <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> that this <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> is configured for; which could be the message payload or a metadata item for example. <br> The second value is the static value configured for this operator. </p> \n<p> The static value can be a literal value; \"myValue\" or can be metadata resolved for example; <br> </p>\n<pre>  \n <value>\n  %message{myKey}\n </value>\n </pre> The above will test the metadata value identified by the metadata key \"myKey\". \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/JsonBlobListRenderer.html",
      "fullClassName" : "com.adaptris.core.json.JsonBlobListRenderer",
      "className" : "JsonBlobListRenderer",
      "packageName" : "com.adaptris.core.json",
      "componentType" : "object",
      "alias" : "remote-blob-list-as-json",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Render a list of RemoteBlob objects as a JSON Array",
        "tag" : "cloud,aws,jclouds,blob"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Render a list of RemoteBlob objects as a JSON Array\",\n                  since=\"3.9.2\",\n                  tag=\"cloud,aws,jclouds,blob\")\npublic class JsonBlobListRenderer\nextends java.lang.Object\nimplements BlobListRenderer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Render a list of RemoteBlob objects as a JSON Array\",\n                  since=\"3.9.2\",\n                  tag=\"cloud,aws,jclouds,blob\")\npublic class <span class=\"typeNameLabel\">JsonBlobListRenderer</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/interlok/cloud/BlobListRenderer.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.cloud\" class=\"externalLink\" target=\"_new\">BlobListRenderer</a>",
      "description" : "Render a list of RemoteBlob as a JSON Array.",
      "descriptionHtml" : "Render a list of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/interlok/cloud/RemoteBlob.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.cloud\" class=\"externalLink\" target=\"_new\"><code>RemoteBlob</code></a> as a JSON Array.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/BlobType.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.BlobType",
      "className" : "BlobType",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-blob-type",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class BlobType\nextends java.lang.Object\nimplements TypeWrapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BlobType</span>\nextends java.lang.Object\nimplements <a href=\"TypeWrapper.html\" title=\"interface in com.adaptris.core.jms.oracle\" target=\"_new\">TypeWrapper</a>",
      "description" : "Handles BLOB fields. When creating a blob, this creates a temporary blob in which to store data.",
      "descriptionHtml" : "Handles BLOB fields. \n<p> When creating a blob, this creates a temporary blob in which to store data. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/StandardKafkaConsumer.html",
      "fullClassName" : "com.adaptris.kafka.StandardKafkaConsumer",
      "className" : "StandardKafkaConsumer",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "consumer",
      "alias" : "standard-apache-kafka-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.kafka.KafkaConnection"
        ],
        "since" : "3.6.6",
        "summary" : "Receive messages via Apache Kafka",
        "tag" : "consumer,kafka"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Receive messages via Apache Kafka\",\n                  tag=\"consumer,kafka\",\n                  recommended=KafkaConnection.class,\n                  since=\"3.6.6\")\npublic class StandardKafkaConsumer\nextends AdaptrisMessageConsumerImp\nimplements LoggingContext",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Receive messages via Apache Kafka\",\n                  tag=\"consumer,kafka\",\n                  recommended=<a href=\"KafkaConnection.html\" title=\"class in com.adaptris.kafka\" target=\"_new\">KafkaConnection.class</a>,\n                  since=\"3.6.6\")\npublic class <span class=\"typeNameLabel\">StandardKafkaConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisMessageConsumerImp</a>\nimplements <a href=\"LoggingContext.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\">LoggingContext</a>",
      "description" : "Wrapper around KafkaConsumer.",
      "descriptionHtml" : "Wrapper around \n<code>KafkaConsumer</code>.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/BlobColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.BlobColumnTranslator",
      "className" : "BlobColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-blob-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BlobColumnTranslator\nextends ColumnWriterWithCharEncoding",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BlobColumnTranslator</span>\nextends <a href=\"ColumnWriterWithCharEncoding.html\" title=\"class in com.adaptris.core.services.jdbc.types\" target=\"_new\">ColumnWriterWithCharEncoding</a>",
      "description" : "Column Translator implementation for handling BLOB types",
      "descriptionHtml" : "Column Translator implementation for handling BLOB types",
      "inheritance" : [
        {
          "name" : "ColumnWriterWithCharEncoding",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/ColumnWriterWithCharEncoding.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/HashLoginServiceFactory.html",
      "fullClassName" : "com.adaptris.core.http.jetty.HashLoginServiceFactory",
      "className" : "HashLoginServiceFactory",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-hash-login-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "allows use of org.eclipse.jetty.security.HashLoginService to authenticate users",
        "tag" : "jetty,authentication"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"allows use of org.eclipse.jetty.security.HashLoginService to authenticate users\",\n                  tag=\"jetty,authentication\")\npublic class HashLoginServiceFactory\nextends LoginServiceFactoryImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"allows use of org.eclipse.jetty.security.HashLoginService to authenticate users\",\n                  tag=\"jetty,authentication\")\npublic class <span class=\"typeNameLabel\">HashLoginServiceFactory</span>\nextends <a href=\"LoginServiceFactoryImpl.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">LoginServiceFactoryImpl</a>",
      "description" : "Allows you to configure a HashLoginService for use with Jetty. This simply exposes the Jetty HashLoginService as Interlok configuration. The documentation from the eclipse jetty site should always be considered canonical. The HashLoginService is a realm whose authentication and authorization information is stored in a properties file. Each line in the file contains a username, a password, and zero or more role assignments. The format is  \nusername: password[,rolename ...]\nusername: password[,rolename ...]\n \n where: username is the user's unique identity password is the user's (possibly obfuscated or MD5 encrypted) password; rolename is the user's role. If you need to secure the passwords in your properties file then you can follow the jetty documentation to obfuscate/hash the password. Note that the CRYPT style is based on Unix Crypt which is considered weak and insecure (you probably shouldn't be using it).  \n$ java -cp ./lib/jetty-util.jar  org.eclipse.jetty.util.security.Password myusername MySuperSecretPassword\nOBF:1o4o1zly1rhf1zst1y0s1vu91uvk1ldu1w1c1sot1y7z1sox1w261ldo1uum1vv11y0y1zsx1riz1zlk1o5y\nMD5:d418c3e96fb98e73fd603a8b6134edda\nCRYPT:my8hdCDBVkNU.",
      "descriptionHtml" : "Allows you to configure a \n<code>HashLoginService</code> for use with Jetty. \n<p> This simply exposes the Jetty HashLoginService as Interlok configuration. The documentation from <a href=\"https://wiki.eclipse.org/Jetty/Tutorial/Realms\" target=\"_new\">the eclipse jetty site</a> should always be considered canonical. The HashLoginService is a realm whose authentication and authorization information is stored in a properties file. Each line in the file contains a username, a password, and zero or more role assignments. The format is </p>\n<pre> <code>\nusername: password[,rolename ...]\nusername: password[,rolename ...]\n </code>\n </pre> where: \n<ul> \n <li><strong>username</strong> is the user's unique identity</li> \n <li><strong>password</strong> is the user's (possibly obfuscated or MD5 encrypted) password;</li> \n <li><strong>rolename</strong> is the user's role.</li> \n</ul> \n<p> If you need to secure the passwords in your properties file then you can follow <a href=\"https://www.eclipse.org/jetty/documentation/current/configuring-security-secure-passwords.html\" target=\"_new\">the jetty documentation</a> to obfuscate/hash the password. Note that the <code>CRYPT</code> style is based on Unix Crypt which is considered weak and insecure (you probably shouldn't be using it). </p>\n<pre> <code>\n$ java -cp ./lib/jetty-util.jar  org.eclipse.jetty.util.security.Password myusername MySuperSecretPassword\nOBF:1o4o1zly1rhf1zst1y0s1vu91uvk1ldu1w1c1sot1y7z1sox1w261ldo1uum1vv11y0y1zsx1riz1zlk1o5y\nMD5:d418c3e96fb98e73fd603a8b6134edda\nCRYPT:my8hdCDBVkNU.\n </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "LoginServiceFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/LoginServiceFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxBranchingService.html",
      "fullClassName" : "com.adaptris.core.services.routing.SyntaxBranchingService",
      "className" : "SyntaxBranchingService",
      "packageName" : "com.adaptris.core.services.routing",
      "componentType" : "service",
      "alias" : "syntax-branching-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Perform a branch based on the derived syntax of the message",
        "tag" : "service,branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a branch based on the derived syntax of the message\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class SyntaxBranchingService\nextends BranchingServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a branch based on the derived syntax of the message\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">SyntaxBranchingService</span>\nextends <a href=\"../../BranchingServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">BranchingServiceImp</a>",
      "description" : "Branching Service which determines the next Service to apply according to SyntaxIdentifiers, as used by SyntaxRoutingService.",
      "descriptionHtml" : "<p> Branching Service which determines the next Service to apply according to <code>SyntaxIdentifier</code>s, as used by <code>SyntaxRoutingService</code>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "BranchingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/BranchingServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/GoogleCloudPubSubPullConsumer.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.GoogleCloudPubSubPullConsumer",
      "className" : "GoogleCloudPubSubPullConsumer",
      "packageName" : "com.adaptris.google.cloud.pubsub",
      "componentType" : "consumer",
      "alias" : "google-cloud-pubsub-pull-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "gcloud_topic",
          "gcloud_projectName",
          "gcloud_subscriptionName",
          "gcloud_publishTime"
        ],
        "recommended" : [
          "com.adaptris.google.cloud.pubsub.GoogleCloudPubSubConnection"
        ],
        "since" : "",
        "summary" : "Receive a message to Google pubsub",
        "tag" : "consumer,gcloud,messaging"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Receive a message to Google pubsub\",\n                  tag=\"consumer,gcloud,messaging\",\n                  metadata={\"gcloud_topic\",\"gcloud_projectName\",\"gcloud_subscriptionName\",\"gcloud_publishTime\"},\n                  recommended=GoogleCloudPubSubConnection.class)\npublic class GoogleCloudPubSubPullConsumer\nextends ConsumeConfig\nimplements com.google.cloud.pubsub.v1.MessageReceiver",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Receive a message to Google pubsub\",\n                  tag=\"consumer,gcloud,messaging\",\n                  metadata={\"gcloud_topic\",\"gcloud_projectName\",\"gcloud_subscriptionName\",\"gcloud_publishTime\"},\n                  recommended=<a href=\"GoogleCloudPubSubConnection.html\" title=\"class in com.adaptris.google.cloud.pubsub\" target=\"_new\">GoogleCloudPubSubConnection.class</a>)\npublic class <span class=\"typeNameLabel\">GoogleCloudPubSubPullConsumer</span>\nextends <a href=\"ConsumeConfig.html\" title=\"class in com.adaptris.google.cloud.pubsub\" target=\"_new\">ConsumeConfig</a>\nimplements com.google.cloud.pubsub.v1.MessageReceiver",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "ConsumeConfig",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/ConsumeConfig.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/activemq/AdvancedActiveMqImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.activemq.AdvancedActiveMqImplementation",
      "className" : "AdvancedActiveMqImplementation",
      "packageName" : "com.adaptris.core.jms.activemq",
      "componentType" : "object",
      "alias" : "advanced-active-mq-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedActiveMqImplementation\nextends BasicActiveMqImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedActiveMqImplementation</span>\nextends <a href=\"BasicActiveMqImplementation.html\" title=\"class in com.adaptris.core.jms.activemq\" target=\"_new\">BasicActiveMqImplementation</a>",
      "description" : "ActiveMQ implementation of VendorImplementation. This vendor implementation class directly exposes almost all the getter and setters that are available in the ConnectionFactory for maximum flexibility in configuration. The key from the connection-factory-properties element should match the name of the underlying ActiveMQ ConnectionFactory property.  \n   <connection-factory-properties>\n     <key-value-pair>\n        <key>AlwaysSessionAsync</key>\n        <value>true</value>\n     </key-value-pair>\n   </connection-factory-properties>\n \n will invoke ActiveMQConnectionFactory.setAlwaysSessionAsync(boolean), setting the AlwaysSessionAsync property to true. This was built against ActiveMQ 5.9.0",
      "descriptionHtml" : "<p> ActiveMQ implementation of <code>VendorImplementation</code>. </p> \n<p> This vendor implementation class directly exposes almost all the getter and setters that are available in the ConnectionFactory for maximum flexibility in configuration. </p> \n<p> The key from the <code>connection-factory-properties</code> element should match the name of the underlying ActiveMQ ConnectionFactory property. </p>\n<pre> <code>\n   &lt;connection-factory-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;AlwaysSessionAsync&lt;/key&gt;\n        &lt;value&gt;true&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/connection-factory-properties&gt;\n </code>\n </pre> will invoke \n<code>ActiveMQConnectionFactory.setAlwaysSessionAsync(boolean)</code>, setting the AlwaysSessionAsync property to true. \n<p></p> \n<p> <b>This was built against ActiveMQ 5.9.0</b> </p> \n<p></p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html"
        },
        {
          "name" : "BasicActiveMqImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/activemq/BasicActiveMqImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/RegexMetadataFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.RegexMetadataFilter",
      "className" : "RegexMetadataFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "regex-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RegexMetadataFilter\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RegexMetadataFilter</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "Regular Expression based implementation of MetadataFilter Each of the configured include or exclude elements is considered a regular expression as defined by Pattern. These are then matched against the key portion of the MetadataElement. All the includes are processed first to generate a subset of metadata that is then used to process any exclusions. The include and excludes should be in String regular expression format. If you do not specify any includes, then this implicitly means all elements are included. If you do not specify any excludes then nothing is excluded from the inclusion subset. Typically, you shouldn't need both includes and excludes because your skill with regular expressions mean that you can handle everything you need in either an includes or an excludes block. It is processed this way for completeness.",
      "descriptionHtml" : "Regular Expression based implementation of \n<a href=\"MetadataFilter.html\" title=\"interface in com.adaptris.core.metadata\" target=\"_new\"><code>MetadataFilter</code></a> \n<p> Each of the configured <code>include</code> or <code>exclude</code> elements is considered a regular expression as defined by <code>Pattern</code>. These are then matched against the key portion of the <a href=\"../MetadataElement.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>MetadataElement</code></a>. </p> \n<p> All the includes are processed first to generate a subset of metadata that is then used to process any exclusions. The <code>include</code> and <code>excludes</code> should be in <code>String</code> regular expression format. If you do not specify any includes, then this implicitly means all elements are included. If you do not specify any excludes then nothing is excluded from the inclusion subset. </p> \n<p> Typically, you shouldn't need both <code>includes</code> and <code>excludes</code> because your skill with regular expressions mean that you can handle everything you need in either an <code>includes</code> or an <code>excludes</code> block. It is processed this way for completeness. </p>",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionReport.html",
      "fullClassName" : "com.adaptris.core.services.exception.ExceptionReport",
      "className" : "ExceptionReport",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "exception-report",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ExceptionReport\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExceptionReport</span>\nextends java.lang.Object",
      "description" : "Object that wraps all the information for an exception report.",
      "descriptionHtml" : "Object that wraps all the information for an exception report.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/DeleteFileService.html",
      "fullClassName" : "com.adaptris.filesystem.DeleteFileService",
      "className" : "DeleteFileService",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "service",
      "alias" : "delete-file-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Will delete a file",
        "tag" : "FS, FileSystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Will delete a file\",\n                  tag=\"FS, FileSystem\")\npublic class DeleteFileService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Will delete a file\",\n                  tag=\"FS, FileSystem\")\npublic class <span class=\"typeNameLabel\">DeleteFileService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DebugPoolFactory.html",
      "fullClassName" : "com.adaptris.core.jdbc.DebugPoolFactory",
      "className" : "DebugPoolFactory",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-debug-pool-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Build a connection pool using C3P0 with some debug enabled",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Build a connection pool using C3P0 with some debug enabled\")\npublic class DebugPoolFactory\nextends DefaultPoolFactory",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Build a connection pool using C3P0 with some debug enabled\")\npublic class <span class=\"typeNameLabel\">DebugPoolFactory</span>\nextends <a href=\"DefaultPoolFactory.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">DefaultPoolFactory</a>",
      "description" : "Constructs a C3P0 connection pool with various debug settings enabled.",
      "descriptionHtml" : "Constructs a C3P0 connection pool with various debug settings enabled.",
      "inheritance" : [
        {
          "name" : "DefaultPoolFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DefaultPoolFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReplaceMetadataValue.html",
      "fullClassName" : "com.adaptris.core.services.metadata.ReplaceMetadataValue",
      "className" : "ReplaceMetadataValue",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "replace-metadata-value",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Perform a find and replace on metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a find and replace on metadata\",\n                  tag=\"service,metadata\")\npublic class ReplaceMetadataValue\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a find and replace on metadata\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">ReplaceMetadataValue</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "Implementation of Service that adds a performs a simple find and replace on the specified metadata value. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will taken and if the search-value matches, then the replacement-value will be used as the replacement. You can specify matchgroups as part of the replacment by using the standard $n syntax. It also supports the special syntax of {n} to indicate match groups, but this is not guaranteed to work in all instances and is only made available for legacy purposes.",
      "descriptionHtml" : "<p> Implementation of <code>Service</code> that adds a performs a simple find and replace on the specified metadata value. </p> \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will taken and if the search-value matches, then the replacement-value will be used as the replacement. </p> \n<p> You can specify matchgroups as part of the replacment by using the standard <code>$n</code> syntax. It also supports the special syntax of <code>{n}</code> to indicate match groups, but this is not guaranteed to work in all instances and is only made available for legacy purposes. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/ReplaceWithFirstMessage.html",
      "fullClassName" : "com.adaptris.core.services.aggregator.ReplaceWithFirstMessage",
      "className" : "ReplaceWithFirstMessage",
      "packageName" : "com.adaptris.core.services.aggregator",
      "componentType" : "object",
      "alias" : "replace-with-first-message-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ReplaceWithFirstMessage\nextends MessageAggregatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ReplaceWithFirstMessage</span>\nextends <a href=\"MessageAggregatorImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">MessageAggregatorImpl</a>",
      "description" : "Special implementation of MessageAggregator that replaces the original payload with the first aggregated message. This is primarily designed to be used where there is a one to one relationship between the original and aggregated message. No parsing is done of the first message, it is simply used as is; all other messages that are passed in as part of the collection to be aggregated are ignored.",
      "descriptionHtml" : "Special implementation of \n<a href=\"MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>MessageAggregator</code></a> that replaces the original payload with the first aggregated message. \n<p> This is primarily designed to be used where there is a one to one relationship between the original and aggregated message. No parsing is done of the first message, it is simply used as is; all other messages that are passed in as part of the collection to be aggregated are ignored. </p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/enhanced/AlphabeticDescending.html",
      "fullClassName" : "com.adaptris.core.fs.enhanced.AlphabeticDescending",
      "className" : "AlphabeticDescending",
      "packageName" : "com.adaptris.core.fs.enhanced",
      "componentType" : "object",
      "alias" : "fs-sort-alphabetic-descending",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AlphabeticDescending\nextends java.lang.Object\nimplements FileSorter, java.util.Comparator<java.io.File>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AlphabeticDescending</span>\nextends java.lang.Object\nimplements <a href=\"FileSorter.html\" title=\"interface in com.adaptris.core.fs.enhanced\" target=\"_new\">FileSorter</a>, java.util.Comparator&lt;java.io.File&gt;",
      "description" : "Sort the list of files alphabetically in reverse order",
      "descriptionHtml" : "Sort the list of files alphabetically in reverse order",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/AutomaticTraceFileDelete.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.AutomaticTraceFileDelete",
      "className" : "AutomaticTraceFileDelete",
      "packageName" : "com.adaptris.core.sap.jco3",
      "componentType" : "object",
      "alias" : "sapjco3-automatic-trace-file-delete",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class AutomaticTraceFileDelete\nextends TraceFileHandlerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AutomaticTraceFileDelete</span>\nextends <a href=\"TraceFileHandlerImpl.html\" title=\"class in com.adaptris.core.sap.jco3\" target=\"_new\">TraceFileHandlerImpl</a>",
      "description" : "Automatically purge all the trace files based on the configured criteria. While it is possible to control where the RFC trace files end up through use of system properties and environment properties, this implementation only checks the current working directory for any trace files. If you have configured the SAP Java Connector to create files in an alternative directory then you should perform any artifact clean up manually.",
      "descriptionHtml" : "Automatically purge all the trace files based on the configured criteria. \n<p> While it is possible to control where the RFC trace files end up through use of system properties and environment properties, this implementation only checks the current working directory for any trace files. If you have configured the SAP Java Connector to create files in an alternative directory then you should perform any artifact clean up manually. </p>",
      "inheritance" : [
        {
          "name" : "TraceFileHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/TraceFileHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/NullPreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.NullPreprocessor",
      "className" : "NullPreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "null-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class NullPreprocessor\nextends java.lang.Object\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullPreprocessor</span>\nextends java.lang.Object\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/SendEmailAttachment.html",
      "fullClassName" : "com.adaptris.core.mail.SendEmailAttachment",
      "className" : "SendEmailAttachment",
      "packageName" : "com.adaptris.core.mail",
      "componentType" : "producer",
      "alias" : "send-email-attachment",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Send an email",
        "tag" : "email,smtp,mail"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send an email\",\n                  tag=\"email,smtp,mail\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class SendEmailAttachment\nextends MailProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send an email\",\n                  tag=\"email,smtp,mail\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">SendEmailAttachment</span>\nextends <a href=\"MailProducer.html\" title=\"class in com.adaptris.core.mail\" target=\"_new\">MailProducer</a>",
      "description" : "Replacement for DefaultSmtpProducer if you want to send an email with the payload as an attachment. Note that this producer will ignore any configured AdaptrisMessageEncoder. The template if specified will be assumed to be plain text.",
      "descriptionHtml" : "Replacement for \n<code>DefaultSmtpProducer</code> if you want to send an email with the payload as an attachment. \n<p> Note that this producer will ignore any configured <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageEncoder.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageEncoder</code></a>. The template if specified will be assumed to be plain text. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        },
        {
          "name" : "MailProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/MailProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBUpdateDataTypesProducer.html",
      "fullClassName" : "com.adaptris.core.mongodb.MongoDBUpdateDataTypesProducer",
      "className" : "MongoDBUpdateDataTypesProducer",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "producer",
      "alias" : "mongodb-update-data-types-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.mongodb.MongoDBConnection"
        ],
        "since" : "",
        "summary" : "Update data types in MongoDB.",
        "tag" : "producer,mongodb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Update data types in MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=MongoDBConnection.class)\npublic class MongoDBUpdateDataTypesProducer\nextends MongoDBProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Update data types in MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=<a href=\"MongoDBConnection.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBConnection.class</a>)\npublic class <span class=\"typeNameLabel\">MongoDBUpdateDataTypesProducer</span>\nextends <a href=\"MongoDBProducer.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBProducer</a>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "MongoDBProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonObjectTransformationDriver.html",
      "fullClassName" : "com.adaptris.core.transform.json.JsonObjectTransformationDriver",
      "className" : "JsonObjectTransformationDriver",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "object",
      "alias" : "json-object-transformation-driver",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.0.4",
        "summary" : "JSON/XML Transformation driver, supports a top level JSON Object",
        "tag" : "json,xml,transformation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JSON/XML Transformation driver, supports a top level JSON Object\",\n                  since=\"3.0.4\",\n                  tag=\"json,xml,transformation\")\npublic class JsonObjectTransformationDriver\nextends JsonlibTransformationDriver",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JSON/XML Transformation driver, supports a top level JSON Object\",\n                  since=\"3.0.4\",\n                  tag=\"json,xml,transformation\")\npublic class <span class=\"typeNameLabel\">JsonObjectTransformationDriver</span>\nextends <a href=\"JsonlibTransformationDriver.html\" title=\"class in com.adaptris.core.transform.json\" target=\"_new\">JsonlibTransformationDriver</a>",
      "description" : "Transformation driver that uses instead of JSONObject.fromObject(Object) to read the JSON payload.",
      "descriptionHtml" : "Transformation driver that uses instead of \n<code>JSONObject.fromObject(Object)</code> to read the JSON payload.",
      "inheritance" : [
        {
          "name" : "JsonTransformationDriverImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonTransformationDriverImpl.html"
        },
        {
          "name" : "JsonlibTransformationDriver",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonlibTransformationDriver.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/TimeInterval.html",
      "fullClassName" : "com.adaptris.util.TimeInterval",
      "className" : "TimeInterval",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "time-interval",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class TimeInterval\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimeInterval</span>\nextends java.lang.Object",
      "description" : "Class that describes a time unit for use within the adapter.",
      "descriptionHtml" : "Class that describes a time unit for use within the adapter.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/FormattedFilenameCreator.html",
      "fullClassName" : "com.adaptris.core.FormattedFilenameCreator",
      "className" : "FormattedFilenameCreator",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "formatted-filename-creator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FormattedFilenameCreator\nextends java.lang.Object\nimplements FileNameCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FormattedFilenameCreator</span>\nextends java.lang.Object\nimplements <a href=\"FileNameCreator.html\" title=\"interface in com.adaptris.core\" target=\"_new\">FileNameCreator</a>",
      "description" : "Implementation of FileNameCreator that uses String.format(String, Object...). This is intended as a replacement for StandardFilenameCreator which is now deprecated. It makes use of the JDK1.5 String.format(String, Object...) method which will allow you to generate an arbitary filename rather than being restricted to a prefix + suffix + timestamp. The following rules will apply when you are constructing your formatted filename The format is passed directly to Formatter The message id is always passed in as the first parameter The timestamp (as a Date) is passed in as the second parameter If not explicitly configured, then the format string defaults to \"%1$s\" which simply equates to the message-id Examples If the message in question has a unique-id of b740ddae-ff4d-4576-9bc9-51d0f14b6df4 and the current date and time is \"2012-05-02 09:41:23\" then we would use to following formats to generate output that matches our criteria. \"message.xml\" would give us message.xml (not recommended due to the possibly of naming conflicts) \"%1$s.xml\" would give us b740ddae-ff4d-4576-9bc9-51d0f14b6df4.xml \"message-%1$s-stardate-%2$tF.xml\" would give us message-b740ddae-ff4d-4576-9bc9-51d0f14b6df4-stardate-2012-05-02.xml \"%2$tF_%1$s.xml\" would give us 2012-05-02_b740ddae-ff4d-4576-9bc9-51d0f14b6df4.xml \"message-%1$s-%2$tA.xml\" would give us message-b740ddae-ff4d-4576-9bc9-51d0f14b6df4-Wednesday.xml \"%2$tF-%2$tH%2$tM_%1$s.xml\" would give us 2012-05-02-0941_b740ddae-ff4d-4576-9bc9-51d0f14b6df4.xml \"message-%1$s-%2$tQ.xml\" would give us message-b740ddae-ff4d-4576-9bc9-51d0f14b6df4-1335948092985.xml",
      "descriptionHtml" : "Implementation of FileNameCreator that uses \n<code>String.format(String, Object...)</code>. \n<p> This is intended as a replacement for StandardFilenameCreator which is now deprecated. It makes use of the JDK1.5 <code>String.format(String, Object...)</code> method which will allow you to generate an arbitary filename rather than being restricted to a prefix + suffix + timestamp. </p> \n<p> The following rules will apply when you are constructing your formatted filename </p>\n<ul> \n <li>The format is passed directly to <code>Formatter</code></li> \n <li>The message id is always passed in as the first parameter</li> \n <li>The timestamp (as a <code>Date</code>) is passed in as the second parameter</li> \n <li>If not explicitly configured, then the format string defaults to \"%1$s\" which simply equates to the message-id</li> \n</ul> \n<p></p> \n<h2>Examples</h2> \n<p> If the message in question has a unique-id of b740ddae-ff4d-4576-9bc9-51d0f14b6df4 and the current date and time is \"2012-05-02 09:41:23\" then we would use to following formats to generate output that matches our criteria. </p>\n<ul> \n <li>\"message.xml\" would give us <strong>message.xml</strong> (not recommended due to the possibly of naming conflicts)</li> \n <li>\"%1$s.xml\" would give us <strong>b740ddae-ff4d-4576-9bc9-51d0f14b6df4.xml</strong></li> \n <li>\"message-%1$s-stardate-%2$tF.xml\" would give us <strong>message-b740ddae-ff4d-4576-9bc9-51d0f14b6df4-stardate-2012-05-02.xml</strong></li> \n <li>\"%2$tF_%1$s.xml\" would give us <strong>2012-05-02_b740ddae-ff4d-4576-9bc9-51d0f14b6df4.xml</strong></li> \n <li>\"message-%1$s-%2$tA.xml\" would give us <strong>message-b740ddae-ff4d-4576-9bc9-51d0f14b6df4-Wednesday.xml</strong></li> \n <li>\"%2$tF-%2$tH%2$tM_%1$s.xml\" would give us <strong>2012-05-02-0941_b740ddae-ff4d-4576-9bc9-51d0f14b6df4.xml</strong></li> \n <li>\"message-%1$s-%2$tQ.xml\" would give us <strong>message-b740ddae-ff4d-4576-9bc9-51d0f14b6df4-1335948092985.xml</strong></li> \n</ul> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/InOutParameters.html",
      "fullClassName" : "com.adaptris.core.jdbc.InOutParameters",
      "className" : "InOutParameters",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-in-out-parameters",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class InOutParameters\nextends JdbcParameterList<InOutParameter>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InOutParameters</span>\nextends <a href=\"JdbcParameterList.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">JdbcParameterList</a>&lt;<a href=\"InOutParameter.html\" title=\"interface in com.adaptris.core.jdbc\" target=\"_new\">InOutParameter</a>&gt;",
      "description" : "This class contains the INOUT parameters that a stored procedure will require to be executed.",
      "descriptionHtml" : "This class contains the INOUT parameters that a stored procedure will require to be executed.",
      "inheritance" : [
        {
          "name" : "JdbcParameterList",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcParameterList.html"
        },
        {
          "name" : "InOutParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/InOutParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/core/services/edi/x12/X12MessageTypeExtract.html",
      "fullClassName" : "com.adaptris.core.services.edi.x12.X12MessageTypeExtract",
      "className" : "X12MessageTypeExtract",
      "packageName" : "com.adaptris.core.services.edi.x12",
      "componentType" : "service",
      "alias" : "x12-message-type-extract",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "EdiMessageType"
        ],
        "recommended" : [ ],
        "since" : "3.7.0",
        "summary" : "Extract the Message Type from an X12 Message",
        "tag" : "service,edi,x12,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract the Message Type from an X12 Message\",\n                  tag=\"service,edi,x12,metadata\",\n                  since=\"3.7.0\",\n                  metadata=\"EdiMessageType\")\npublic class X12MessageTypeExtract\nextends LicensedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract the Message Type from an X12 Message\",\n                  tag=\"service,edi,x12,metadata\",\n                  since=\"3.7.0\",\n                  metadata=\"EdiMessageType\")\npublic class <span class=\"typeNameLabel\">X12MessageTypeExtract</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedService</a>",
      "description" : "Extract the Message Type from an X12 Message. Because this relies on the X12 separators already being defined, you should use X12HeaderExtract to populate all the separators from the ISA record first before using this service.",
      "descriptionHtml" : "Extract the Message Type from an X12 Message. \n<p> Because this relies on the X12 separators already being defined, you should use <a href=\"X12HeaderExtract.html\" title=\"class in com.adaptris.core.services.edi.x12\" target=\"_new\"><code>X12HeaderExtract</code></a> to populate all the separators from the ISA record first before using this service. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "LicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedService.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/StandardJndiImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.jndi.StandardJndiImplementation",
      "className" : "StandardJndiImplementation",
      "packageName" : "com.adaptris.core.jms.jndi",
      "componentType" : "object",
      "alias" : "standard-jndi-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StandardJndiImplementation\nextends BaseJndiImplementation\nimplements VendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StandardJndiImplementation</span>\nextends <a href=\"BaseJndiImplementation.html\" title=\"class in com.adaptris.core.jms.jndi\" target=\"_new\">BaseJndiImplementation</a>\nimplements <a href=\"../VendorImplementation.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">VendorImplementation</a>",
      "description" : "VendorImplementation that gets a ConnectionFactory from the configured JNDI Store. This implementation ignores any broker configuration in JmsConnection. Depending on your configuration you will need have additional jars available to the Adapter that handles the specific ConnectionFactories that are referenced in JNDI.",
      "descriptionHtml" : "<a href=\"../VendorImplementation.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>VendorImplementation</code></a> that gets a \n<code>ConnectionFactory</code> from the configured JNDI Store. \n<p> This implementation <b>ignores</b> any broker configuration in <a href=\"../JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>JmsConnection</code></a>. </p> \n<p> Depending on your configuration you will need have additional jars available to the Adapter that handles the specific ConnectionFactories that are referenced in JNDI. </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html"
        },
        {
          "name" : "BaseJndiImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/BaseJndiImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/OrderedItemMetadataFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.OrderedItemMetadataFilter",
      "className" : "OrderedItemMetadataFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "ordered-item-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class OrderedItemMetadataFilter\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OrderedItemMetadataFilter</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "Metadata Filter implementation that returns keys in order defined.",
      "descriptionHtml" : "Metadata Filter implementation that returns keys in order defined.",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcDataQueryService.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.JdbcDataQueryService",
      "className" : "JdbcDataQueryService",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "service",
      "alias" : "jdbc-data-query-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jdbc.DatabaseConnection"
        ],
        "since" : "",
        "summary" : "Query a database and store the results in the message",
        "tag" : "service,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Query a database and store the results in the message\",\n                  tag=\"service,jdbc\",\n                  recommended=DatabaseConnection.class)\npublic class JdbcDataQueryService\nextends JdbcServiceWithParameters\nimplements DynamicPollingTemplate.TemplateProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Query a database and store the results in the message\",\n                  tag=\"service,jdbc\",\n                  recommended=<a href=\"../../jdbc/DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">DatabaseConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JdbcDataQueryService</span>\nextends <a href=\"JdbcServiceWithParameters.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">JdbcServiceWithParameters</a>\nimplements <a href=\"../../DynamicPollingTemplate.TemplateProvider.html\" title=\"interface in com.adaptris.core\" target=\"_new\">DynamicPollingTemplate.TemplateProvider</a>",
      "description" : "Perform a triggered JDBC query and the results of this query that can be stored in the AdaptrisMessage.",
      "descriptionHtml" : "Perform a triggered JDBC query and the results of this query that can be stored in the AdaptrisMessage.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html"
        },
        {
          "name" : "JdbcServiceWithParameters",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcServiceWithParameters.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jolokia/4.0.0B1-RELEASE/com/adaptris/core/management/jolokia/JolokiaComponent.html",
      "fullClassName" : "com.adaptris.core.management.jolokia.JolokiaComponent",
      "className" : "JolokiaComponent",
      "packageName" : "com.adaptris.core.management.jolokia",
      "componentType" : "object",
      "alias" : "jolokia",
      "deprecated" : false,
      "jarFileName" : "interlok-jolokia.jar",
      "profile" : { },
      "annotationDetails" : "public class JolokiaComponent\nextends MgmtComponentImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JolokiaComponent</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/management/MgmtComponentImpl.html?is-external=true\" title=\"class or interface in com.adaptris.core.management\" class=\"externalLink\" target=\"_new\">MgmtComponentImpl</a>",
      "description" : "This class can be used for configuring and starting a Jetty webserver for the adapter. You must provide the jetty config file in the bootstrap.properties file for a Jetty instance to startup. See the Jetty Guide for more information on configuration options. For adding webapps to the server the jettyWebappBase parameter can be used.",
      "descriptionHtml" : "This class can be used for configuring and starting a Jetty webserver for the adapter. \n<p> You must provide the jetty config file in the bootstrap.properties file for a Jetty instance to startup.<br> See the Jetty Guide for more information on configuration options. </p>\n<p> For adding webapps to the server the jettyWebappBase parameter can be used.</p>",
      "inheritance" : [
        {
          "name" : "MgmtComponentImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/management/MgmtComponentImpl.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JMX/Jolokia",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jolokia",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltFixedVariables.html",
      "fullClassName" : "com.adaptris.core.json.jslt.JsltFixedVariables",
      "className" : "JsltFixedVariables",
      "packageName" : "com.adaptris.core.json.jslt",
      "componentType" : "object",
      "alias" : "jslt-fixed-variables",
      "deprecated" : false,
      "jarFileName" : "interlok-jslt.jar",
      "profile" : { },
      "annotationDetails" : "public class JsltFixedVariables\nextends java.lang.Object\nimplements JsltVariableBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JsltFixedVariables</span>\nextends java.lang.Object\nimplements <a href=\"JsltVariableBuilder.html\" title=\"interface in com.adaptris.core.json.jslt\" target=\"_new\">JsltVariableBuilder</a>",
      "description" : "Builds a map of variables for JSLT from a fixed set of configuration. Takes the configured KeyValuePairSet and turns them into a map of TextNode objects.",
      "descriptionHtml" : "Builds a map of variables for JSLT from a fixed set of configuration. \n<p> Takes the configured <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairSet.html?is-external=true\" title=\"class or interface in com.adaptris.util\" class=\"externalLink\" target=\"_new\"><code>KeyValuePairSet</code></a> and turns them into a map of <code>TextNode</code> objects. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSLT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jslt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/dynamic/DynamicRfcConnection.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicRfcConnection",
      "className" : "DynamicRfcConnection",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.dynamic",
      "componentType" : "connection",
      "alias" : "sapjco3-dynamic-rfc-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection type for supporting dynamic SAP JCO3 RFC connections",
        "tag" : "connections,sap,jco"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection type for supporting dynamic SAP JCO3 RFC connections\",\n                  tag=\"connections,sap,jco\")\npublic class DynamicRfcConnection\nextends JcoConnectionBase\nimplements RfcConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection type for supporting dynamic SAP JCO3 RFC connections\",\n                  tag=\"connections,sap,jco\")\npublic class <span class=\"typeNameLabel\">DynamicRfcConnection</span>\nextends <a href=\"../../JcoConnectionBase.html\" title=\"class in com.adaptris.core.sap.jco3\" target=\"_new\">JcoConnectionBase</a>\nimplements <a href=\"../RfcConnection.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">RfcConnection</a>",
      "description" : "Class for managing RFC JCO connections. This class indirectly provides a com.sap.conn.jco.ext.DestinationDataProvider for the underlying RFC Connection by interrogating the associated AdaptrisMessage for metadata that can be used for configuring a connection. This implicitly removes the previous connection associated with getConnectionId() from the underlying com.sap.conn.jco.ext.DestinationDataProvider before attempting to construct a new one. Metadata keys are taken as-is; no verification is done. The following metadata keys are used if they exist in metadata; the table keys and descriptions are copied directly from the SAP Java Connection API documentation (from com.sap.conn.jco.ext.DestinationDataProvider). Note that this implementation may only be used as part of an RfcServiceList. Use as part of a channel will lead to undefined behaviour. Key value Description jco.client.client SAP client jco.client.user Logon user jco.client.alias_user Logon user alias jco.client.passwd Logon password jco.client.lang Logon language jco.client.saprouter SAP router string to use for a system protected by a firewall jco.client.sysnr SAP system number jco.client.ashost SAP application server jco.client.mshost SAP message server jco.client.msserv optional: SAP message server port to use instead of the default sapms<sysid> jco.client.gwhost Gateway host jco.client.gwserv Gateway service jco.client.r3name System ID of the SAP system jco.client.group Group of SAP application servers jco.client.tpname Program ID of external server program jco.client.tphost Host of external server program jco.client.type Type of remote host 2 = R/2, 3 = R/3, E = External jco.client.trace Enable/disable RFC trace (0 or 1) jco.client.cpic_trace Enable/disable CPIC trace (-1 [take over environment value], 0 no trace, 1,2,3 different amount of trace) jco.client.use_sapgui Start a SAP GUI and associate with the connection. (0 - do not start [default], 1 start GUI, 2 start GUI and hide if not used) jco.client.codepage Initial codepage in SAP notation jco.client.getsso2 Get/Don't get a SSO ticket after logon (1 or 0) jco.client.mysapsso2 Use the specified SAP Cookie Version 2 as logon ticket jco.client.x509cert Use the specified X509 certificate as logon ticket jco.client.lcheck Enable/Disable logon check at open time, 1 (enable) or 0 (disable) jco.client.snc_mode Secure network connection (SNC) mode, 0 (off) or 1 (on) jco.client.snc_partnername SNC partner, e.g. p:CN=R3, O=XYZ-INC, C=EN jco.client.snc_qop SNC level of security, 1 to 9 jco.client.snc_myname SNC name. Overrides default SNC partner jco.client.snc_lib Path to library which provides SNC service jco.client.dsr Enable/Disable dsr support (0 or 1) jco.destination.peak_limit Maximum number of active connections that can be created for a destination simultaneously jco.destination.pool_capacity Maximum number of idle connections kept open by the destination. A value of 0 has the effect that there is no connection pooling. jco.destination.expiration_time Time in ms after that the connections hold by the internal pool can be closed jco.destination.expiration_check_period Interval in ms with which the timeout checker thread checks the connections in the pool for expiration jco.destination.max_get_client_time Max time in ms to wait for a connection, if the max allowed number of connections is allocated by the application jco.destination.repository_destination Specifies which destination should be used as repository, i.e. use this destination's repository jco.destination.repository.user Optional: If repository destination is not set, and this property is set, it will be used as user for repository calls. This allows using a different user for repository lookups jco.destination.repository.passwd The password for a repository user. Mandatory, if a repository user should be used. jco.destination.repository.snc_mode Optional: If SNC is used for this destination, it is possible to turn it off for repository connections, if this property is set to 0. Defaults to the value of jco.client.snc_mode",
      "descriptionHtml" : "Class for managing RFC JCO connections. \n<p> This class indirectly provides a <code>com.sap.conn.jco.ext.DestinationDataProvider</code> for the underlying RFC Connection by interrogating the associated <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> for metadata that can be used for configuring a connection. This implicitly removes the previous connection associated with <a href=\"#getConnectionId()\" target=\"_new\"><code>getConnectionId()</code></a> from the underlying <code>com.sap.conn.jco.ext.DestinationDataProvider</code> before attempting to construct a new one. </p> \n<p> Metadata keys are taken as-is; no verification is done. The following metadata keys are used if they exist in metadata; the table keys and descriptions are copied directly from the SAP Java Connection API documentation (from com.sap.conn.jco.ext.DestinationDataProvider). </p> \n<p> Note that this implementation may only be used as part of an <a href=\"../services/RfcServiceList.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.services\" target=\"_new\"><code>RfcServiceList</code></a>. <strong>Use as part of a channel will lead to undefined behaviour</strong>. </p> \n<p> </p>\n<table border=\"1\"> \n <tbody>\n  <tr> \n   <th>Key value</th> \n   <th>Description</th> \n  </tr> \n  <tr> \n   <td>jco.client.client</td> \n   <td>SAP client</td> \n  </tr> \n  <tr> \n   <td>jco.client.user</td> \n   <td>Logon user</td> \n  </tr> \n  <tr> \n   <td>jco.client.alias_user</td> \n   <td>Logon user alias</td> \n  </tr> \n  <tr> \n   <td>jco.client.passwd</td> \n   <td>Logon password</td> \n  </tr> \n  <tr> \n   <td>jco.client.lang</td> \n   <td>Logon language</td> \n  </tr> \n  <tr> \n   <td>jco.client.saprouter</td> \n   <td>SAP router string to use for a system protected by a firewall</td> \n  </tr> \n  <tr> \n   <td>jco.client.sysnr</td> \n   <td>SAP system number</td> \n  </tr> \n  <tr> \n   <td>jco.client.ashost</td> \n   <td>SAP application server</td> \n  </tr> \n  <tr> \n   <td>jco.client.mshost</td> \n   <td>SAP message server</td> \n  </tr> \n  <tr> \n   <td>jco.client.msserv</td> \n   <td>optional: SAP message server port to use instead of the default sapms&lt;sysid&gt;</td> \n  </tr> \n  <tr> \n   <td>jco.client.gwhost</td> \n   <td>Gateway host</td> \n  </tr> \n  <tr> \n   <td>jco.client.gwserv</td> \n   <td>Gateway service</td> \n  </tr> \n  <tr> \n   <td>jco.client.r3name</td> \n   <td>System ID of the SAP system</td> \n  </tr> \n  <tr> \n   <td>jco.client.group</td> \n   <td>Group of SAP application servers</td> \n  </tr> \n  <tr> \n   <td>jco.client.tpname</td> \n   <td>Program ID of external server program</td> \n  </tr> \n  <tr> \n   <td>jco.client.tphost</td> \n   <td>Host of external server program</td> \n  </tr> \n  <tr> \n   <td>jco.client.type</td> \n   <td>Type of remote host 2 = R/2, 3 = R/3, E = External</td> \n  </tr> \n  <tr> \n   <td>jco.client.trace</td> \n   <td>Enable/disable RFC trace (0 or 1)</td> \n  </tr> \n  <tr> \n   <td>jco.client.cpic_trace</td> \n   <td>Enable/disable CPIC trace (-1 [take over environment value], 0 no trace, 1,2,3 different amount of trace)</td> \n  </tr> \n  <tr> \n   <td>jco.client.use_sapgui</td> \n   <td>Start a SAP GUI and associate with the connection. (0 - do not start [default], 1 start GUI, 2 start GUI and hide if not used)</td> \n  </tr> \n  <tr> \n   <td>jco.client.codepage</td> \n   <td>Initial codepage in SAP notation</td> \n  </tr> \n  <tr> \n   <td>jco.client.getsso2</td> \n   <td>Get/Don't get a SSO ticket after logon (1 or 0)</td> \n  </tr> \n  <tr> \n   <td>jco.client.mysapsso2</td> \n   <td>Use the specified SAP Cookie Version 2 as logon ticket</td> \n  </tr> \n  <tr> \n   <td>jco.client.x509cert</td> \n   <td>Use the specified X509 certificate as logon ticket</td> \n  </tr> \n  <tr> \n   <td>jco.client.lcheck</td> \n   <td>Enable/Disable logon check at open time, 1 (enable) or 0 (disable)</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_mode</td> \n   <td>Secure network connection (SNC) mode, 0 (off) or 1 (on)</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_partnername</td> \n   <td>SNC partner, e.g. p:CN=R3, O=XYZ-INC, C=EN</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_qop</td> \n   <td>SNC level of security, 1 to 9</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_myname</td> \n   <td>SNC name. Overrides default SNC partner</td> \n  </tr> \n  <tr> \n   <td>jco.client.snc_lib</td> \n   <td>Path to library which provides SNC service</td> \n  </tr> \n  <tr> \n   <td>jco.client.dsr</td> \n   <td>Enable/Disable dsr support (0 or 1)</td> \n  </tr> \n  <tr> \n   <td>jco.destination.peak_limit</td> \n   <td>Maximum number of active connections that can be created for a destination simultaneously</td> \n  </tr> \n  <tr> \n   <td>jco.destination.pool_capacity</td> \n   <td>Maximum number of idle connections kept open by the destination. A value of <tt>0</tt> has the effect that there is no connection pooling.</td> \n  </tr> \n  <tr> \n   <td>jco.destination.expiration_time</td> \n   <td>Time in ms after that the connections hold by the internal pool can be closed</td> \n  </tr> \n  <tr> \n   <td>jco.destination.expiration_check_period</td> \n   <td>Interval in ms with which the timeout checker thread checks the connections in the pool for expiration</td> \n  </tr> \n  <tr> \n   <td>jco.destination.max_get_client_time</td> \n   <td>Max time in ms to wait for a connection, if the max allowed number of connections is allocated by the application</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository_destination</td> \n   <td>Specifies which destination should be used as repository, i.e. use this destination's repository</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository.user</td> \n   <td>Optional: If repository destination is not set, and this property is set, it will be used as user for repository calls. This allows using a different user for repository lookups</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository.passwd</td> \n   <td>The password for a repository user. Mandatory, if a repository user should be used.</td> \n  </tr> \n  <tr> \n   <td>jco.destination.repository.snc_mode</td> \n   <td>Optional: If SNC is used for this destination, it is possible to turn it off for repository connections, if this property is set to 0. Defaults to the value of jco.client.snc_mode</td> \n  </tr> \n </tbody>\n</table> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "JcoConnectionBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/JcoConnectionBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcStringPayloadParameter.html",
      "fullClassName" : "com.adaptris.core.jdbc.JdbcStringPayloadParameter",
      "className" : "JdbcStringPayloadParameter",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-string-payload-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JdbcStringPayloadParameter\nextends AbstractParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JdbcStringPayloadParameter</span>\nextends <a href=\"AbstractParameter.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">AbstractParameter</a>",
      "description" : "Stored Procedure parameter implementation. This implementation can only be used as an IN parameter; the entire payload (as a String) is the parameter. Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in ParameterValueType",
      "descriptionHtml" : "Stored Procedure parameter implementation. \n<p> This implementation can only be used as an IN parameter; the entire payload (as a String) is the parameter. </p> \n<p> Additionally you will set one or both of \"name\" and/or \"order\". \"name\" will map this parameter to a Stored Procedure parameter using the Stored Procedures method signature. \"order\" will map this parameter according to the parameter number using the Stored Procedures method signature. Note that the \"order\" starts from 1 and not 0, so the first parameter would be order 1. You will also need to set the data type of the parameter; you may use any of the string types defined in <a href=\"../../jdbc/ParameterValueType.html\" title=\"enum in com.adaptris.jdbc\" target=\"_new\"><code>ParameterValueType</code></a> </p>",
      "inheritance" : [
        {
          "name" : "AbstractParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/AbstractParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/SendTuning.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.SendTuning",
      "className" : "SendTuning",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-send-tuning",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class SendTuning\nextends java.lang.Object\nimplements Parameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SendTuning</span>\nextends java.lang.Object\nimplements <a href=\"Parameter.html\" title=\"interface in com.adaptris.core.jms.solace.parameters\" target=\"_new\">Parameter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/PlainIdGenerator.html",
      "fullClassName" : "com.adaptris.util.PlainIdGenerator",
      "className" : "PlainIdGenerator",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "plain-id-generator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PlainIdGenerator\nextends java.lang.Object\nimplements IdGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PlainIdGenerator</span>\nextends java.lang.Object\nimplements <a href=\"IdGenerator.html\" title=\"interface in com.adaptris.util\" target=\"_new\">IdGenerator</a>",
      "description" : "Basic IdGenerator implementation The ID is generated from the a combination of SecureRandom.nextBytes(byte[]), the hashcode of the object, and current timestamp. No guarantees are made for the uniqueness of the ID generated.",
      "descriptionHtml" : "Basic \n<a href=\"IdGenerator.html\" title=\"interface in com.adaptris.util\" target=\"_new\">IdGenerator</a> implementation \n<p> The ID is generated from the a combination of SecureRandom.nextBytes(byte[]), the hashcode of the object, and current timestamp. No guarantees are made for the uniqueness of the ID generated. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullMessageProducer.html",
      "fullClassName" : "com.adaptris.core.NullMessageProducer",
      "className" : "NullMessageProducer",
      "packageName" : "com.adaptris.core",
      "componentType" : "producer",
      "alias" : "null-message-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Default NO-OP producer implementation",
        "tag" : "producer,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Default NO-OP producer implementation\",\n                  tag=\"producer,base\",\n                  recommended=NullConnection.class)\npublic class NullMessageProducer\nextends AdaptrisMessageProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Default NO-OP producer implementation\",\n                  tag=\"producer,base\",\n                  recommended=<a href=\"NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">NullMessageProducer</span>\nextends <a href=\"AdaptrisMessageProducerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdaptrisMessageProducerImp</a>",
      "description" : "Null implementation of AdaptrisMessageProducer.",
      "descriptionHtml" : "<p> Null implementation of <code>AdaptrisMessageProducer</code>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/compare/MetadataComparisonService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.compare.MetadataComparisonService",
      "className" : "MetadataComparisonService",
      "packageName" : "com.adaptris.core.services.metadata.compare",
      "componentType" : "service",
      "alias" : "metadata-comparison-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Compare two metadata values and store the result against a 3rd metadata key",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Compare two metadata values and store the result against a 3rd metadata key\",\n                  tag=\"service,metadata\")\npublic class MetadataComparisonService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Compare two metadata values and store the result against a 3rd metadata key\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataComparisonService</span>\nextends <a href=\"../../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Implementation of Service that compares two items of metadata. Sometimes you just want to compare two metadata values and store the result against a 3rd metadata key. Well this does that.",
      "descriptionHtml" : "Implementation of \n<a href=\"../../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> that compares two items of metadata. \n<p> Sometimes you just want to compare two metadata values and store the result against a 3rd metadata key. Well this does that. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/RegexpMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.RegexpMetadataService",
      "className" : "RegexpMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "regexp-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extract data from the message via a regular expression and store it as metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract data from the message via a regular expression and store it as metadata\",\n                  tag=\"service,metadata\")\npublic class RegexpMetadataService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract data from the message via a regular expression and store it as metadata\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">RegexpMetadataService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Service which information from the message payload and sets it as metadata. Multiple items of metadata may be set, each with its own RegexpMetadataQuery.",
      "descriptionHtml" : "<p> <code>Service</code> which information from the message payload and sets it as metadata. Multiple items of metadata may be set, each with its own <a href=\"RegexpMetadataQuery.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>RegexpMetadataQuery</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/ZipService.html",
      "fullClassName" : "com.adaptris.filesystem.ZipService",
      "className" : "ZipService",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "service",
      "alias" : "zip-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Zip the contents of the message",
        "tag" : "service,zip"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Zip the contents of the message\",\n                  tag=\"service,zip\")\npublic class ZipService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Zip the contents of the message\",\n                  tag=\"service,zip\")\npublic class <span class=\"typeNameLabel\">ZipService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Zip a directory and put the compressed data in the payload.",
      "descriptionHtml" : "Zip a directory and put the compressed data in the payload.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/ServiceUniqueIdPreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.ServiceUniqueIdPreprocessor",
      "className" : "ServiceUniqueIdPreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "service-unique-id-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class ServiceUniqueIdPreprocessor\nextends java.lang.Object\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ServiceUniqueIdPreprocessor</span>\nextends java.lang.Object\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "description" : "Returns service behind the scenes it generates an xpath.    \n   //channel-list/*[unique-id = 'channel-1']/workflow-list/*[unique-id = 'workflow-1']/service-collection/services/*[unique-id = 'service-1']\n   \n Multiple services assumes that the previous id was a service list //*[unique-id = 'service-list-1']/services/*[unique-id = 'service-1'].",
      "descriptionHtml" : "Returns service behind the scenes it generates an xpath. \n<pre>   <code>\n   //channel-list/*[unique-id = 'channel-1']/workflow-list/*[unique-id = 'workflow-1']/service-collection/services/*[unique-id = 'service-1']\n   </code>\n </pre> Multiple services assumes that the previous id was a service list \n<code>//*[unique-id = 'service-list-1']/services/*[unique-id = 'service-1']</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/services/MatchCondition.html",
      "fullClassName" : "com.adaptris.stax.services.MatchCondition",
      "className" : "MatchCondition",
      "packageName" : "com.adaptris.stax.services",
      "componentType" : "object",
      "alias" : "stax-plugin-match-rule",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "InputCondition implementation that matches against a specific regular expression",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"InputCondition implementation that matches against a specific regular expression\",\n                  since=\"3.8.4\")\npublic class MatchCondition\nextends java.lang.Object\nimplements InputCondition",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"InputCondition implementation that matches against a specific regular expression\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">MatchCondition</span>\nextends java.lang.Object\nimplements <a href=\"InputCondition.html\" title=\"interface in com.adaptris.stax.services\" target=\"_new\">InputCondition</a>",
      "description" : "InputCondition implementation that matches against a regular expression.",
      "descriptionHtml" : "<a href=\"InputCondition.html\" title=\"interface in com.adaptris.stax.services\" target=\"_new\"><code>InputCondition</code></a> implementation that matches against a regular expression.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReadMetadataFromFilesystem.html",
      "fullClassName" : "com.adaptris.core.services.metadata.ReadMetadataFromFilesystem",
      "className" : "ReadMetadataFromFilesystem",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "read-metadata-from-filesystem",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Read a set of metadata from the filesystem and add/replace current metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Read a set of metadata from the filesystem and add/replace current metadata\",\n                  tag=\"service,metadata\")\npublic class ReadMetadataFromFilesystem\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Read a set of metadata from the filesystem and add/replace current metadata\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">ReadMetadataFromFilesystem</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Implementation of Service that reads metadata from the filesystem. Used in conjunction with WriteMetadataToFilesystem to allow preservation of metadata across integration points that make use of the filesystem.",
      "descriptionHtml" : "<p> Implementation of <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> that reads metadata from the filesystem. </p> \n<p> Used in conjunction with <a href=\"WriteMetadataToFilesystem.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>WriteMetadataToFilesystem</code></a> to allow preservation of metadata across integration points that make use of the filesystem. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/NullPassThroughConverter.html",
      "fullClassName" : "com.adaptris.util.text.NullPassThroughConverter",
      "className" : "NullPassThroughConverter",
      "packageName" : "com.adaptris.util.text",
      "componentType" : "object",
      "alias" : "null-pass-through-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullPassThroughConverter\nextends java.lang.Object\nimplements NullConverter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullPassThroughConverter</span>\nextends java.lang.Object\nimplements <a href=\"NullConverter.html\" title=\"interface in com.adaptris.util.text\" target=\"_new\">NullConverter</a>",
      "description" : "Implementation of NullConverter that simply returns the value passed in.",
      "descriptionHtml" : "Implementation of NullConverter that simply returns the value passed in.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/CompositeIdentityBuilder.html",
      "fullClassName" : "com.adaptris.core.security.access.CompositeIdentityBuilder",
      "className" : "CompositeIdentityBuilder",
      "packageName" : "com.adaptris.core.security.access",
      "componentType" : "object",
      "alias" : "composite-identity-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeIdentityBuilder\nextends IdentityBuilderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeIdentityBuilder</span>\nextends <a href=\"IdentityBuilderImpl.html\" title=\"class in com.adaptris.core.security.access\" target=\"_new\">IdentityBuilderImpl</a>",
      "description" : "IdentityBuilder implementation that wraps a list of builders.",
      "descriptionHtml" : "<a href=\"IdentityBuilder.html\" title=\"interface in com.adaptris.core.security.access\" target=\"_new\"><code>IdentityBuilder</code></a> implementation that wraps a list of builders.",
      "inheritance" : [
        {
          "name" : "IdentityBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/IdentityBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WaitingOutOfStateHandler.html",
      "fullClassName" : "com.adaptris.core.WaitingOutOfStateHandler",
      "className" : "WaitingOutOfStateHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "waiting-out-of-state-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class WaitingOutOfStateHandler\nextends OutOfStateHandlerImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">WaitingOutOfStateHandler</span>\nextends <a href=\"OutOfStateHandlerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">OutOfStateHandlerImp</a>",
      "description" : "This implementation of the OutOfStateHandler will simply wait on the current Thread for the StateManagedComponent to be in the correct/expected state. While waiting, we will periodically check the StateManagedComponents state. This periodic check can be configured by setting the interval-to-check which is a TimeInterval. We will also only wait for the StateManagedComponent to be in the right state for a maximum time, configured by setting the maximum-wait-time, which is also a TimeInterval. If the maximum time should pass while waiting, we will stop waiting and throw an OutOfStateException. If you do not configure interval-to-check and/or maximum-wait-time, the following defaults will be applied; maximum-wait-time = 2 minutes. interval-to-check = 5 seconds. Example configuration;  \n <waiting-out-of-state-handler>\n    <correct-state>STARTED</correct-state>\n    <maximum-wait-time>\n        <unit>MINUTES</UNIT>\n        <interval>2</interval>\n    </maximum-wait-time>\n    <interval-to-check>\n        <unit>SECONDS<<unit>\n        <interval>5</interval>\n    </interval-to-check>\n </waiting-out-of-state-handler>",
      "descriptionHtml" : "<p> This implementation of the <a href=\"OutOfStateHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>OutOfStateHandler</code></a> will simply wait on the current Thread for the <a href=\"StateManagedComponent.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>StateManagedComponent</code></a> to be in the correct/expected state. </p> \n<p> While waiting, we will periodically check the <a href=\"StateManagedComponent.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>StateManagedComponent</code></a>s state. This periodic check can be configured by setting the interval-to-check which is a <a href=\"../util/TimeInterval.html\" title=\"class in com.adaptris.util\" target=\"_new\"><code>TimeInterval</code></a>. </p> \n<p> We will also only wait for the <a href=\"StateManagedComponent.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>StateManagedComponent</code></a> to be in the right state for a maximum time, configured by setting the maximum-wait-time, which is also a <a href=\"../util/TimeInterval.html\" title=\"class in com.adaptris.util\" target=\"_new\"><code>TimeInterval</code></a>. If the maximum time should pass while waiting, we will stop waiting and throw an <a href=\"OutOfStateException.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>OutOfStateException</code></a>. </p> \n<p> If you do not configure interval-to-check and/or maximum-wait-time, the following defaults will be applied; </p>\n<ul> \n <li>maximum-wait-time = 2 minutes.</li> \n <li>interval-to-check = 5 seconds.</li> \n</ul> \n<p></p> \n<p> Example configuration;<br> </p>\n<pre> <code>\n &lt;waiting-out-of-state-handler&gt;\n    &lt;correct-state&gt;STARTED&lt;/correct-state&gt;\n    &lt;maximum-wait-time&gt;\n        &lt;unit&gt;MINUTES&lt;/UNIT&gt;\n        &lt;interval&gt;2&lt;/interval&gt;\n    &lt;/maximum-wait-time&gt;\n    &lt;interval-to-check&gt;\n        &lt;unit&gt;SECONDS&lt;&lt;unit&gt;\n        &lt;interval&gt;5&lt;/interval&gt;\n    &lt;/interval-to-check&gt;\n &lt;/waiting-out-of-state-handler&gt;\n </code>\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "OutOfStateHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/OutOfStateHandlerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/ByteArrayColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.ByteArrayColumnTranslator",
      "className" : "ByteArrayColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-byte-array-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ByteArrayColumnTranslator\nextends ColumnWriterWithCharEncoding",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ByteArrayColumnTranslator</span>\nextends <a href=\"ColumnWriterWithCharEncoding.html\" title=\"class in com.adaptris.core.services.jdbc.types\" target=\"_new\">ColumnWriterWithCharEncoding</a>",
      "description" : "Column Translator implementation for handling byte array types. Note that this is a largely redundant translator and is only included for completeness; the column types that will be used are generally going to be BLOB or CLOB; I wouldn't really expect to see many types that have to be explicitly treated as a byte array",
      "descriptionHtml" : "Column Translator implementation for handling byte array types. \n<p> Note that this is a largely redundant translator and is only included for completeness; the column types that will be used are generally going to be BLOB or CLOB; I wouldn't really expect to see many types that have to be explicitly treated as a byte array </p>",
      "inheritance" : [
        {
          "name" : "ColumnWriterWithCharEncoding",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/ColumnWriterWithCharEncoding.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-rest-health-check/4.0.0B1-RELEASE/com/adaptris/rest/healthcheck/ChannelState.html",
      "fullClassName" : "com.adaptris.rest.healthcheck.ChannelState",
      "className" : "ChannelState",
      "packageName" : "com.adaptris.rest.healthcheck",
      "componentType" : "object",
      "alias" : "channel-state",
      "deprecated" : false,
      "jarFileName" : "interlok-rest-health-check.jar",
      "profile" : { },
      "annotationDetails" : "public class ChannelState\nextends State",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ChannelState</span>\nextends <a href=\"State.html\" title=\"class in com.adaptris.rest.healthcheck\" target=\"_new\">State</a>",
      "inheritance" : [
        {
          "name" : "State",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-rest-health-check/4.0.0B1-RELEASE/com/adaptris/rest/healthcheck/State.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Management/REST: Health Check",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-rest-health-check",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kinesis/4.0.0B1-RELEASE/com/adaptris/aws/kinesis/KinesisStreamProducer.html",
      "fullClassName" : "com.adaptris.aws.kinesis.KinesisStreamProducer",
      "className" : "KinesisStreamProducer",
      "packageName" : "com.adaptris.aws.kinesis",
      "componentType" : "producer",
      "alias" : "aws-kinesis-stream-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-kinesis.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.kinesis.ProducerLibraryConnection"
        ],
        "since" : "",
        "summary" : "Produce to Amazon Kinesis using the Kinesis Producer Library",
        "tag" : "amazon,aws,kinesis,producer"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Produce to Amazon Kinesis using the Kinesis Producer Library\",\n                  tag=\"amazon,aws,kinesis,producer\",\n                  recommended=ProducerLibraryConnection.class)\npublic class KinesisStreamProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Produce to Amazon Kinesis using the Kinesis Producer Library\",\n                  tag=\"amazon,aws,kinesis,producer\",\n                  recommended=<a href=\"ProducerLibraryConnection.html\" title=\"class in com.adaptris.aws.kinesis\" target=\"_new\">ProducerLibraryConnection.class</a>)\npublic class <span class=\"typeNameLabel\">KinesisStreamProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "Producer to amazon kinesis using the Kinesis Producer Library. This departs from a standard producer in the sense the #getDestination() can be regarded as optional. The reason for this is that both stream and partitionKey are required elements, but #getDestination() only provides a single method (of course we could change it to provide more). So the behaviour here is changed so that if setStream(String) is blank, then we use #getDestination(), otherwise we use getStream(). setPartitionKey(String) should always be populated with a non-blank value, which will be used.",
      "descriptionHtml" : "Producer to amazon kinesis using the Kinesis Producer Library. \n<p> This departs from a standard producer in the sense the <code>#getDestination()</code> can be regarded as optional. The reason for this is that both <code>stream</code> and <code>partitionKey</code> are required elements, but <code>#getDestination()</code> only provides a single method (of course we could change it to provide more). So the behaviour here is changed so that </p>\n<ul> \n <li>if <a href=\"#setStream(java.lang.String)\" target=\"_new\"><code>setStream(String)</code></a> is blank, then we use <code>#getDestination()</code>, otherwise we use <a href=\"#getStream()\" target=\"_new\"><code>getStream()</code></a>.</li> \n <li><a href=\"#setPartitionKey(java.lang.String)\" target=\"_new\"><code>setPartitionKey(String)</code></a> should always be populated with a non-blank value, which will be used.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Kinesis",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-kinesis",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/ConstantParameter.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.ConstantParameter",
      "className" : "ConstantParameter",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-constant-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class ConstantParameter\nextends Parameter\nimplements ImportParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConstantParameter</span>\nextends <a href=\"Parameter.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">Parameter</a>\nimplements <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ImportParameter</a>",
      "description" : "Allows you to pass in a constant as the value of an Import Parameter to an RFC Call.",
      "descriptionHtml" : "Allows you to pass in a constant as the value of an Import Parameter to an RFC Call.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/payload/InlinePayloadProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.payload.InlinePayloadProvider",
      "className" : "InlinePayloadProvider",
      "packageName" : "com.adaptris.tester.runtime.messages.payload",
      "componentType" : "object",
      "alias" : "inline-payload-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class InlinePayloadProvider\nextends PayloadProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InlinePayloadProvider</span>\nextends <a href=\"PayloadProvider.html\" title=\"class in com.adaptris.tester.runtime.messages.payload\" target=\"_new\">PayloadProvider</a>",
      "inheritance" : [
        {
          "name" : "PayloadProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/payload/PayloadProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/translator/SolaceJcsmpTextMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.translator.SolaceJcsmpTextMessageTranslator",
      "className" : "SolaceJcsmpTextMessageTranslator",
      "packageName" : "com.adaptris.core.jcsmp.solace.translator",
      "componentType" : "object",
      "alias" : "solace-jcsmp-text-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "A Solace native JCSMP text message translator.",
        "tag" : "solace,jcsmp,translator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP text message translator.\",\n                  tag=\"solace,jcsmp,translator\",\n                  since=\"3.11.0\")\npublic class SolaceJcsmpTextMessageTranslator\nextends SolaceJcsmpBaseTranslatorImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP text message translator.\",\n                  tag=\"solace,jcsmp,translator\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpTextMessageTranslator</span>\nextends <a href=\"SolaceJcsmpBaseTranslatorImp.html\" title=\"class in com.adaptris.core.jcsmp.solace.translator\" target=\"_new\">SolaceJcsmpBaseTranslatorImp</a>",
      "description" : "A text message translator specifically for Solace's JCSMP API. See SolaceJcsmpBaseTranslatorImp for further details.",
      "descriptionHtml" : "<p> A text message translator specifically for Solace's JCSMP API. </p> \n<p> See <a href=\"SolaceJcsmpBaseTranslatorImp.html\" title=\"class in com.adaptris.core.jcsmp.solace.translator\" target=\"_new\"><code>SolaceJcsmpBaseTranslatorImp</code></a> for further details. </p>",
      "inheritance" : [
        {
          "name" : "SolaceJcsmpBaseTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/translator/SolaceJcsmpBaseTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/JsonMetadataSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.json.JsonMetadataSplitter",
      "className" : "JsonMetadataSplitter",
      "packageName" : "com.adaptris.core.services.splitter.json",
      "componentType" : "object",
      "alias" : "json-metadata-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.2",
        "summary" : "Split a JSON Array into individual JSON objects, immediately turning it into metadata",
        "tag" : "json,splitting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a JSON Array into individual JSON objects, immediately turning it into metadata\",\n                  since=\"3.8.2\",\n                  tag=\"json,splitting\")\npublic class JsonMetadataSplitter\nextends LargeJsonArraySplitter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a JSON Array into individual JSON objects, immediately turning it into metadata\",\n                  since=\"3.8.2\",\n                  tag=\"json,splitting\")\npublic class <span class=\"typeNameLabel\">JsonMetadataSplitter</span>\nextends <a href=\"LargeJsonArraySplitter.html\" title=\"class in com.adaptris.core.services.splitter.json\" target=\"_new\">LargeJsonArraySplitter</a>",
      "description" : "Split a JSON array and immediately create metadata from the split payload. This is simply a convenience splitter implementation that does a combination of LargeJsonArraySplitter with JsonToMetadata in a single step; note that the split message is always empty.",
      "descriptionHtml" : "Split a JSON array and immediately create metadata from the split payload. \n<p> This is simply a convenience splitter implementation that does a combination of <a href=\"LargeJsonArraySplitter.html\" title=\"class in com.adaptris.core.services.splitter.json\" target=\"_new\"><code>LargeJsonArraySplitter</code></a> with <a href=\"../../../json/JsonToMetadata.html\" title=\"class in com.adaptris.core.json\" target=\"_new\"><code>JsonToMetadata</code></a> in a single step; note that the split message is always empty. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        },
        {
          "name" : "LargeJsonArraySplitter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/LargeJsonArraySplitter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/AlwaysFailVerifier.html",
      "fullClassName" : "com.adaptris.core.security.access.AlwaysFailVerifier",
      "className" : "AlwaysFailVerifier",
      "packageName" : "com.adaptris.core.security.access",
      "componentType" : "object",
      "alias" : "always-fail-identity-verifier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AlwaysFailVerifier\nextends IdentityVerifierImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AlwaysFailVerifier</span>\nextends <a href=\"IdentityVerifierImpl.html\" title=\"class in com.adaptris.core.security.access\" target=\"_new\">IdentityVerifierImpl</a>",
      "description" : "Identity verification always fails.",
      "descriptionHtml" : "Identity verification always fails.",
      "inheritance" : [
        {
          "name" : "IdentityVerifierImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/access/IdentityVerifierImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/NullCacheImplementation.html",
      "fullClassName" : "com.adaptris.core.cache.NullCacheImplementation",
      "className" : "NullCacheImplementation",
      "packageName" : "com.adaptris.core.cache",
      "componentType" : "object",
      "alias" : "null-cache-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NullCacheImplementation\nextends java.lang.Object\nimplements Cache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NullCacheImplementation</span>\nextends java.lang.Object\nimplements <a href=\"Cache.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\">Cache</a>",
      "description" : "Implementation of Cache that does nothing. This class is included for completeness, all methods are stubs and it is simply designed to provide default behaviour in the event of misconfiguration.",
      "descriptionHtml" : "Implementation of \n<a href=\"Cache.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\"><code>Cache</code></a> that does nothing. \n<p> This class is included for completeness, all methods are stubs and it is simply designed to provide default behaviour in the event of misconfiguration. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/SimplePayloadResultSetTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.SimplePayloadResultSetTranslator",
      "className" : "SimplePayloadResultSetTranslator",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-simple-output",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SimplePayloadResultSetTranslator\nextends ResultSetTranslatorBase",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimplePayloadResultSetTranslator</span>\nextends <a href=\"ResultSetTranslatorBase.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">ResultSetTranslatorBase</a>",
      "description" : "Takes the first result set, and the specified column (optional) and makes that the payload. Used as part of a JdbcDataQueryService",
      "descriptionHtml" : "Takes the first result set, and the specified column (optional) and makes that the payload. \n<p> Used as part of a <a href=\"JdbcDataQueryService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataQueryService</code></a> </p>",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/clients/EmbeddedTestClient.html",
      "fullClassName" : "com.adaptris.tester.runtime.clients.EmbeddedTestClient",
      "className" : "EmbeddedTestClient",
      "packageName" : "com.adaptris.tester.runtime.clients",
      "componentType" : "object",
      "alias" : "embedded-jmx-test-client",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class EmbeddedTestClient\nextends JMXTestClient",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EmbeddedTestClient</span>\nextends <a href=\"JMXTestClient.html\" title=\"class in com.adaptris.tester.runtime.clients\" target=\"_new\">JMXTestClient</a>",
      "description" : "Implementation of JMXTestClient that creates an embedded version of the Adapter to be used during testing.",
      "descriptionHtml" : "Implementation of \n<a href=\"JMXTestClient.html\" title=\"class in com.adaptris.tester.runtime.clients\" target=\"_new\"><code>JMXTestClient</code></a> that creates an embedded version of the \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Adapter.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>Adapter</code></a> to be used during testing.",
      "inheritance" : [
        {
          "name" : "JMXTestClient",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/clients/JMXTestClient.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/IntegerColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.IntegerColumnTranslator",
      "className" : "IntegerColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-integer-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class IntegerColumnTranslator\nextends FormattableColumnTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IntegerColumnTranslator</span>\nextends <a href=\"FormattableColumnTranslator.html\" title=\"class in com.adaptris.core.services.jdbc.types\" target=\"_new\">FormattableColumnTranslator</a>",
      "description" : "Column Translator implementation for handling integer types",
      "descriptionHtml" : "Column Translator implementation for handling integer types",
      "inheritance" : [
        {
          "name" : "FormattableColumnTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/FormattableColumnTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jsr107-cache/4.0.0B1-RELEASE/com/adaptris/core/cache/jcache/ConfiguredJsr107Cache.html",
      "fullClassName" : "com.adaptris.core.cache.jcache.ConfiguredJsr107Cache",
      "className" : "ConfiguredJsr107Cache",
      "packageName" : "com.adaptris.core.cache.jcache",
      "componentType" : "object",
      "alias" : "configured-jsr107-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-jsr107-cache.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredJsr107Cache\nextends Jsr107Cache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredJsr107Cache</span>\nextends <a href=\"Jsr107Cache.html\" title=\"class in com.adaptris.core.cache.jcache\" target=\"_new\">Jsr107Cache</a>",
      "description" : "Cache implementation that wraps a JSR107/JCache caching provider.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/Cache.html?is-external=true\" title=\"class or interface in com.adaptris.core.cache\" class=\"externalLink\" target=\"_new\"><code>Cache</code></a> implementation that wraps a JSR107/JCache caching provider.",
      "inheritance" : [
        {
          "name" : "Jsr107Cache",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jsr107-cache/4.0.0B1-RELEASE/com/adaptris/core/cache/jcache/Jsr107Cache.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Cache/JSR107",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jsr107-cache",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockAllowsRetriesConnection",
      "className" : "MockAllowsRetriesConnection",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "connection",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lifecycle/BlockingChannelLifecycleStrategy.html",
      "fullClassName" : "com.adaptris.core.lifecycle.BlockingChannelLifecycleStrategy",
      "className" : "BlockingChannelLifecycleStrategy",
      "packageName" : "com.adaptris.core.lifecycle",
      "componentType" : "object",
      "alias" : "blocking-channel-lifecycle-strategy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BlockingChannelLifecycleStrategy\nextends DefaultChannelLifecycleStrategy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BlockingChannelLifecycleStrategy</span>\nextends <a href=\"../DefaultChannelLifecycleStrategy.html\" title=\"class in com.adaptris.core\" target=\"_new\">DefaultChannelLifecycleStrategy</a>",
      "description" : "Blocking strategy for starting channels. Functionally it is equivalent to DefaultChannelLifecycleStrategy; however each channel operation is performed in its own Thread which is named after the Channel's unique id. It may be of use for logging purposes when attempting to start (or stop) many channels.",
      "descriptionHtml" : "Blocking strategy for starting channels. \n<p> Functionally it is equivalent to DefaultChannelLifecycleStrategy; however each channel operation is performed in its own Thread which is named after the Channel's unique id. It may be of use for logging purposes when attempting to start (or stop) many channels. </p>",
      "inheritance" : [
        {
          "name" : "DefaultChannelLifecycleStrategy",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultChannelLifecycleStrategy.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBWriteProducer.html",
      "fullClassName" : "com.adaptris.core.mongodb.MongoDBWriteProducer",
      "className" : "MongoDBWriteProducer",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "producer",
      "alias" : "mongodb-write-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.mongodb.MongoDBConnection"
        ],
        "since" : "",
        "summary" : "Inserts JSON objects into MongoDB.",
        "tag" : "producer,mongodb"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Inserts JSON objects into MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=MongoDBConnection.class)\npublic class MongoDBWriteProducer\nextends MongoDBArrayProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Inserts JSON objects into MongoDB.\",\n                  tag=\"producer,mongodb\",\n                  recommended=<a href=\"MongoDBConnection.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBConnection.class</a>)\npublic class <span class=\"typeNameLabel\">MongoDBWriteProducer</span>\nextends <a href=\"MongoDBArrayProducer.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">MongoDBArrayProducer</a>",
      "description" : "Producer that inserts JSON objects into MongoDB, if a JSON array is given the array will be split and inserted as individual JSON objects.",
      "descriptionHtml" : "Producer that inserts JSON objects into MongoDB, if a JSON array is given the array will be split and inserted as individual JSON objects.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "MongoDBProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBProducer.html"
        },
        {
          "name" : "MongoDBArrayProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/MongoDBArrayProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jsonpatch/ApplyPatchService.html",
      "fullClassName" : "com.adaptris.core.json.jsonpatch.ApplyPatchService",
      "className" : "ApplyPatchService",
      "packageName" : "com.adaptris.core.json.jsonpatch",
      "componentType" : "service",
      "alias" : "json-patch-apply",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Apply a JSON patch diff to a document",
        "tag" : "service,json,jsonpatch"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Apply a JSON patch diff to a document\",\n                  tag=\"service,json,jsonpatch\",\n                  since=\"3.9.0\")\npublic class ApplyPatchService\nextends JsonPatchService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Apply a JSON patch diff to a document\",\n                  tag=\"service,json,jsonpatch\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">ApplyPatchService</span>\nextends <a href=\"JsonPatchService.html\" title=\"class in com.adaptris.core.json.jsonpatch\" target=\"_new\">JsonPatchService</a>",
      "description" : "Apply a JSON patch diff. JSON Patch defines a JSON document structure for expressing a sequence of operations to apply to a JavaScript Object Notation (JSON) document. For a given source of {\"a\": 0,\"b\": [1,2]} and a patch-source of [{\"op\":\"move\",\"from\":\"/a\",\"path\":\"/b/2\"}] then when executing this service you would expect to get {\"b\": [1,2,0]} to be stored against the configured output parameter. Note that zjsonpatch operates on JsonNode objects; this means keeping the node trees in memory, so behaviour will be size/memory dependent.",
      "descriptionHtml" : "Apply a JSON patch diff. \n<p> JSON Patch defines a JSON document structure for expressing a sequence of operations to apply to a JavaScript Object Notation (JSON) document. </p> \n<p> For a given <code>source</code> of <code>{\"a\": 0,\"b\": [1,2]}</code> and a <code>patch-source</code> of <code>[{\"op\":\"move\",\"from\":\"/a\",\"path\":\"/b/2\"}]</code> then when executing this service you would expect to get <code>{\"b\": [1,2,0]}</code> to be stored against the configured <code>output</code> parameter. </p> \n<p> Note that <a href=\"https://github.com/flipkart-incubator/zjsonpatch\" target=\"_new\">zjsonpatch</a> operates on JsonNode objects; this means keeping the node trees in memory, so behaviour will be size/memory dependent. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JsonPatchService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jsonpatch/JsonPatchService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/RetryingServiceWrapper.html",
      "fullClassName" : "com.adaptris.core.services.RetryingServiceWrapper",
      "className" : "RetryingServiceWrapper",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "retrying-service-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Retry a message periodically if the wrapped service fails",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Retry a message periodically if the wrapped service fails\",\n                  tag=\"service\")\npublic class RetryingServiceWrapper\nextends ServiceImp\nimplements EventHandlerAware, ServiceWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Retry a message periodically if the wrapped service fails\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">RetryingServiceWrapper</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"../EventHandlerAware.html\" title=\"interface in com.adaptris.core\" target=\"_new\">EventHandlerAware</a>, <a href=\"../ServiceWrapper.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ServiceWrapper</a>",
      "description" : "This service wrapper, will attempt to run the wrapped service and should the service fail with a ServiceException we will attempt to retry the service according to your configuration. You can control then retrying behaviour with the following two configurable options; num-retries delay-between-retries A value of zero for num-retries will retry the wrapped service infinitely. The default value if not set is 10. The delay-between-retries is of type TimeInterval. The default value if not set is 10 seconds. You may also force the wrapped service to be restarted upon each retry by setting restart-on-failure to true;",
      "descriptionHtml" : "<p> This service wrapper, will attempt to run the wrapped service and should the service fail with a <a href=\"../ServiceException.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>ServiceException</code></a> we will attempt to retry the service according to your configuration. </p> \n<p> You can control then retrying behaviour with the following two configurable options; </p>\n<ul> \n <li>num-retries</li> \n <li>delay-between-retries</li> \n</ul> \n<p></p> \n<p> A value of zero for num-retries will retry the wrapped service infinitely. The default value if not set is 10. </p> \n<p> The delay-between-retries is of type <a href=\"../../util/TimeInterval.html\" title=\"class in com.adaptris.util\" target=\"_new\"><code>TimeInterval</code></a>. The default value if not set is 10 seconds. </p> \n<p> You may also force the wrapped service to be restarted upon each retry by setting restart-on-failure to true; </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing-demo/4.0.0B1-RELEASE/com/adaptris/core/licensed/DummyEnterpriseLicensedService.html",
      "fullClassName" : "com.adaptris.core.licensed.DummyEnterpriseLicensedService",
      "className" : "DummyEnterpriseLicensedService",
      "packageName" : "com.adaptris.core.licensed",
      "componentType" : "service",
      "alias" : "dummy-enterprise-licensed-service",
      "deprecated" : false,
      "jarFileName" : "interlok-licensing-demo.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "no-op service that simply requires a license (Enterprise)",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"no-op service that simply requires a license (Enterprise)\",\n                  since=\"3.9.0\")\npublic class DummyEnterpriseLicensedService\nextends DummyLicensedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"no-op service that simply requires a license (Enterprise)\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">DummyEnterpriseLicensedService</span>\nextends <a href=\"DummyLicensedService.html\" title=\"class in com.adaptris.core.licensed\" target=\"_new\">DummyLicensedService</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "DummyLicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing-demo/4.0.0B1-RELEASE/com/adaptris/core/licensed/DummyLicensedService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok License/Examples",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-licensing-demo",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FtpSslConnection.html",
      "fullClassName" : "com.adaptris.core.ftp.FtpSslConnection",
      "className" : "FtpSslConnection",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "connection",
      "alias" : "ftp-ssl-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a FTP Server with explicit SSL with a username and password",
        "tag" : "connections,ftps"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a FTP Server with explicit SSL with a username and password\",\n                  tag=\"connections,ftps\")\npublic class FtpSslConnection\nextends FtpConnectionImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a FTP Server with explicit SSL with a username and password\",\n                  tag=\"connections,ftps\")\npublic class <span class=\"typeNameLabel\">FtpSslConnection</span>\nextends <a href=\"FtpConnectionImp.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FtpConnectionImp</a>",
      "description" : "Allows connections to FTP (Explicit) SSL connections. This was tested against vsftpd (2.0.5) which was configured with the following additional parameters.  \n      ssl_enable=YES\n      allow_anon_ssl=NO\n      force_local_data_ssl=NO\n      force_local_logins_ssl=NO\n      ssl_tlsv1=YES\n      ssl_sslv2=NO\n      ssl_sslv3=NO\n   \n Implicit FTP/SSL connections have not been tested; but can be enabled using setImplicitSsl(Boolean)",
      "descriptionHtml" : "Allows connections to FTP (Explicit) SSL connections. \n<p> This was tested against vsftpd (2.0.5) which was configured with the following additional parameters. </p> \n<p> </p>\n<pre> <code>\n      ssl_enable=YES\n      allow_anon_ssl=NO\n      force_local_data_ssl=NO\n      force_local_logins_ssl=NO\n      ssl_tlsv1=YES\n      ssl_sslv2=NO\n      ssl_sslv3=NO\n   </code>\n </pre>   \n<p></p> \n<p> <strong>Implicit FTP/SSL connections have not been tested; but can be enabled using <a href=\"#setImplicitSsl(java.lang.Boolean)\" target=\"_new\"><code>setImplicitSsl(Boolean)</code></a></strong> </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "NoOpConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html"
        },
        {
          "name" : "FileTransferConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FileTransferConnection.html"
        },
        {
          "name" : "FileTransferConnectionUsingPassword",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FileTransferConnectionUsingPassword.html"
        },
        {
          "name" : "FtpConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FtpConnectionImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/GuidGenerator.html",
      "fullClassName" : "com.adaptris.util.GuidGenerator",
      "className" : "GuidGenerator",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "guid-generator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class GuidGenerator\nextends java.lang.Object\nimplements IdGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">GuidGenerator</span>\nextends java.lang.Object\nimplements <a href=\"IdGenerator.html\" title=\"interface in com.adaptris.util\" target=\"_new\">IdGenerator</a>",
      "description" : "Creates a GUID using UUID.randomUUID().",
      "descriptionHtml" : "Creates a GUID using \n<code>UUID.randomUUID()</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceFromCache.html",
      "fullClassName" : "com.adaptris.core.services.dynamic.ServiceFromCache",
      "className" : "ServiceFromCache",
      "packageName" : "com.adaptris.core.services.dynamic",
      "componentType" : "object",
      "alias" : "dynamic-service-from-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.8.4",
        "summary" : "Extract the service to execute from a cache",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract the service to execute from a cache\",\n                  recommended=CacheConnection.class,\n                  since=\"3.8.4\")\npublic class ServiceFromCache\nextends ExtractorWithConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract the service to execute from a cache\",\n                  recommended=<a href=\"../cache/CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>,\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">ServiceFromCache</span>\nextends <a href=\"ExtractorWithConnection.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\">ExtractorWithConnection</a>",
      "description" : "Extract the service to execute from a cache This allows you to retrieve a service (stored as a String) from a configured Cache instance; it supports the expression syntax so you can build up the key for the cache from metadata or similar. It will not remove the cache entry. The alternative to this would be to use RetrieveFromCacheService and subsequently a ServiceFromDataInputParameter (from metadata). How the dynamic services are inserted into the cache is up to you.",
      "descriptionHtml" : "Extract the service to execute from a cache \n<p> This allows you to retrieve a service (stored as a String) from a configured <a href=\"../../cache/Cache.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\"><code>Cache</code></a> instance; it supports the expression syntax so you can build up the key for the cache from metadata or similar. It will not remove the cache entry. </p> \n<p> The alternative to this would be to use <a href=\"../cache/RetrieveFromCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>RetrieveFromCacheService</code></a> and subsequently a <a href=\"ServiceFromDataInputParameter.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\"><code>ServiceFromDataInputParameter</code></a> (from metadata). How the dynamic services are inserted into the cache is up to you. </p>",
      "inheritance" : [
        {
          "name" : "ServiceExtractorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ServiceExtractorImpl.html"
        },
        {
          "name" : "ExtractorWithConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/dynamic/ExtractorWithConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/SizeBasedBranchingService.html",
      "fullClassName" : "com.adaptris.core.services.SizeBasedBranchingService",
      "className" : "SizeBasedBranchingService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "size-based-branching-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Perform a branch based on the size of the message",
        "tag" : "service,branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a branch based on the size of the message\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class SizeBasedBranchingService\nextends BranchingServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a branch based on the size of the message\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">SizeBasedBranchingService</span>\nextends <a href=\"../BranchingServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">BranchingServiceImp</a>",
      "description" : "Branching Service which sets the unique ID of the next Service to apply based on the size of the AdaptrisMessage. If the size of the message is exactly equal to the specified criteria then the smaller service id is selected.",
      "descriptionHtml" : "<p> Branching <code>Service</code> which sets the unique ID of the next <code>Service</code> to apply based on the size of the <code>AdaptrisMessage</code>. </p> \n<p> If the size of the message is exactly equal to the specified criteria then the smaller service id is selected. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "BranchingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/BranchingServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/RetrieveFromCacheService.html",
      "fullClassName" : "com.adaptris.core.services.cache.RetrieveFromCacheService",
      "className" : "RetrieveFromCacheService",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "service",
      "alias" : "retrieve-from-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "",
        "summary" : "Retrieve values from the cache",
        "tag" : "service,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Retrieve values from the cache\",\n                  tag=\"service,cache\",\n                  recommended=CacheConnection.class)\npublic class RetrieveFromCacheService\nextends CacheServiceBase",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Retrieve values from the cache\",\n                  tag=\"service,cache\",\n                  recommended=<a href=\"CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">RetrieveFromCacheService</span>\nextends <a href=\"CacheServiceBase.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheServiceBase</a>",
      "description" : "Service that looks up an object from the cache using the configured CacheEntryEvaluator instances. This service uses its configured CacheEntryEvaluator instances to lookup keys stored in the cache, retrieves the value and then stores it against the message using the supplied value translator.",
      "descriptionHtml" : "Service that looks up an object from the cache using the configured \n<a href=\"CacheEntryEvaluator.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheEntryEvaluator</code></a> instances. \n<p> This service uses its configured <a href=\"CacheEntryEvaluator.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheEntryEvaluator</code></a> instances to lookup keys stored in the cache, retrieves the value and then stores it against the message using the supplied value translator. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CacheServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceImpl.html"
        },
        {
          "name" : "CacheServiceBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-webservice-cxf/4.0.0B1-RELEASE/com/adaptris/core/services/cxf/ApacheSoapService.html",
      "fullClassName" : "com.adaptris.core.services.cxf.ApacheSoapService",
      "className" : "ApacheSoapService",
      "packageName" : "com.adaptris.core.services.cxf",
      "componentType" : "service",
      "alias" : "apache-cxf-soap-service",
      "deprecated" : false,
      "jarFileName" : "interlok-webservice-cxf.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Execute a webservice using CXF",
        "tag" : "service,webservices,cxf"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a webservice using CXF\",\n                  tag=\"service,webservices,cxf\")\npublic class ApacheSoapService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a webservice using CXF\",\n                  tag=\"service,webservices,cxf\")\npublic class <span class=\"typeNameLabel\">ApacheSoapService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "SOAP Service Requester that will invoke a webservice using the payload of the message as the operation argument (the service looks after the SOAP envelope). Note that this service attempts to set the system property org.apache.cxf.stax.allowInsecureParser to 1 to remove the dependency on the woodstox stax implementation. Woodstox causes an incompatibility with XStream when it comes to unmarshalling CDATA tags, which can present problems if you are embedding XML as part of PollingTrigger or com.adaptris.core.services.metadata.PayloadFromMetadataService in your adapter configuration. This will cause a warning in the log file which can be safely ignored. If you wish to use woodstox, then explicitly set the property to your preferred value (probably false)as the service will only attempt to set it if it has not already been set.",
      "descriptionHtml" : "<p> SOAP Service Requester that will invoke a webservice using the payload of the message as the operation argument (the service looks after the SOAP envelope). </p> \n<p> Note that this service attempts to set the system property <code>org.apache.cxf.stax.allowInsecureParser</code> to 1 to remove the dependency on the woodstox stax implementation. Woodstox causes an incompatibility with XStream when it comes to unmarshalling CDATA tags, which can present problems if you are embedding XML as part of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PollingTrigger.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>PollingTrigger</code></a> or <code>com.adaptris.core.services.metadata.PayloadFromMetadataService</code> in your adapter configuration. This will cause a warning in the log file which can be safely ignored. </p> \n<p> If you wish to use woodstox, then explicitly set the property to your preferred value (probably <code>false</code>)as the service will only attempt to set it if it has not already been set. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Webservices/CXF",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-webservice-cxf",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsImmediateEventPoller.html",
      "fullClassName" : "com.adaptris.core.fs.FsImmediateEventPoller",
      "className" : "FsImmediateEventPoller",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "object",
      "alias" : "fs-immediate-event-poller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FsImmediateEventPoller\nextends PollerImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FsImmediateEventPoller</span>\nextends <a href=\"../PollerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">PollerImp</a>",
      "description" : "Implementation of Poller which listens for file events. Whenever a file is created this even based poller, will be triggered immediately. Note; This poller implementation should only be used with file system Consumers. And you must configure a (> 0) quiet-period for your fs consumer. The quiet period is used to check that the file has completed it's creation. This poller will only trigger the consumer once a file has completed it's creation. The reason for this is that you may have a big file that starts to be created, this poller will be immediately invoked. If we were to hand over to the consumer at this point (while the file is still copying) the consumer has it's own check to make sure the file has been created in full and therefore not process the file. Instead it assumes there will be another poll shortly. However, if more files are not added to our \"in\" directory for a while, this event will not happen until more files are added. In these situations we could end up not processing files until the next file is added.",
      "descriptionHtml" : "<p> Implementation of <code>Poller</code> which listens for file events. Whenever a file is created this even based poller, will be triggered immediately. </p> \n<p> Note; This poller implementation should only be used with file system Consumers. And you must configure a (&gt; 0) quiet-period for your fs consumer. The quiet period is used to check that the file has completed it's creation. </p> \n<p> This poller will only trigger the consumer once a file has completed it's creation. The reason for this is that you may have a big file that starts to be created, this poller will be immediately invoked. If we were to hand over to the consumer at this point (while the file is still copying) the consumer has it's own check to make sure the file has been created in full and therefore not process the file. Instead it assumes there will be another poll shortly. However, if more files are not added to our \"in\" directory for a while, this event will not happen until more files are added. In these situations we could end up not processing files until the next file is added. </p>",
      "inheritance" : [
        {
          "name" : "PollerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PollerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/AggregatingFsConsumeService.html",
      "fullClassName" : "com.adaptris.core.fs.AggregatingFsConsumeService",
      "className" : "AggregatingFsConsumeService",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "service",
      "alias" : "aggregating-fs-consume-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Allows you to aggregate messages from the filesystem",
        "tag" : "service,aggregation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Allows you to aggregate messages from the filesystem\",\n                  tag=\"service,aggregation\")\npublic class AggregatingFsConsumeService\nextends AggregatingConsumeServiceImpl<NullConnection>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Allows you to aggregate messages from the filesystem\",\n                  tag=\"service,aggregation\")\npublic class <span class=\"typeNameLabel\">AggregatingFsConsumeService</span>\nextends <a href=\"../services/aggregator/AggregatingConsumeServiceImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">AggregatingConsumeServiceImpl</a>&lt;<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection</a>&gt;",
      "description" : "Implentation of AggregatingConsumeService that allows you to consume a related message from a directory based on some criteria.",
      "descriptionHtml" : "Implentation of \n<a href=\"../services/aggregator/AggregatingConsumeService.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>AggregatingConsumeService</code></a> that allows you to consume a related message from a directory based on some criteria.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "AggregatingConsumeServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/AggregatingConsumeServiceImpl.html"
        },
        {
          "name" : "NullConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullService.html",
      "fullClassName" : "com.adaptris.core.NullService",
      "className" : "NullService",
      "packageName" : "com.adaptris.core",
      "componentType" : "service",
      "alias" : "null-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A NO-OP service",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A NO-OP service\",\n                  tag=\"service\")\npublic class NullService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A NO-OP service\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">NullService</span>\nextends <a href=\"ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Null implementation of Service.",
      "descriptionHtml" : "<p> Null implementation of <code>Service</code>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/SimpleFactoryConfiguration.html",
      "fullClassName" : "com.adaptris.core.jms.jndi.SimpleFactoryConfiguration",
      "className" : "SimpleFactoryConfiguration",
      "packageName" : "com.adaptris.core.jms.jndi",
      "componentType" : "object",
      "alias" : "simple-jndi-factory-configuration",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleFactoryConfiguration\nextends java.lang.Object\nimplements ExtraFactoryConfiguration",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleFactoryConfiguration</span>\nextends java.lang.Object\nimplements <a href=\"ExtraFactoryConfiguration.html\" title=\"interface in com.adaptris.core.jms.jndi\" target=\"_new\">ExtraFactoryConfiguration</a>",
      "description" : "ExtraFactoryConfiguration implementation using reflection to configure fields on the ConnectionFactory. This implementation uses reflection to configure fields on the ConnectionFactory after it has been returned from the JNDI store. Generally speaking, this is not encouraged, as you are now keeping configuration in 2 separate locations (both JNDI and adapter config). The ConnectionFactory should be configured in JNDI with all the settings that are required for each connection. As the name suggests, this is a very simple implementation, primitive values are supported along with strings, but not objects. Every fieldname referenced is expected to have an associated method set[fieldname] which has a single parameter; the match for which is case-insensitive. If you have more more complex requirements then you will have to write your own implementation of ExtraFactoryConfiguration.",
      "descriptionHtml" : "<a href=\"ExtraFactoryConfiguration.html\" title=\"interface in com.adaptris.core.jms.jndi\" target=\"_new\"><code>ExtraFactoryConfiguration</code></a> implementation using reflection to configure fields on the ConnectionFactory. \n<p> This implementation uses reflection to configure fields on the ConnectionFactory after it has been returned from the JNDI store. Generally speaking, this is not encouraged, as you are now keeping configuration in 2 separate locations (both JNDI and adapter config). The ConnectionFactory should be configured in JNDI with all the settings that are required for each connection. </p> \n<p> As the name suggests, this is a very simple implementation, primitive values are supported along with strings, but not objects. Every fieldname referenced is expected to have an associated method set[fieldname] which has a single parameter; the match for which is case-insensitive. If you have more more complex requirements then you will have to write your own implementation of <a href=\"ExtraFactoryConfiguration.html\" title=\"interface in com.adaptris.core.jms.jndi\" target=\"_new\"><code>ExtraFactoryConfiguration</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/ExecuteQueryCallableStatementExecutor.html",
      "fullClassName" : "com.adaptris.jdbc.ExecuteQueryCallableStatementExecutor",
      "className" : "ExecuteQueryCallableStatementExecutor",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "execute-query-callable-statement-executor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ExecuteQueryCallableStatementExecutor\nextends java.lang.Object\nimplements CallableStatementExecutor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExecuteQueryCallableStatementExecutor</span>\nextends java.lang.Object\nimplements <a href=\"CallableStatementExecutor.html\" title=\"interface in com.adaptris.jdbc\" target=\"_new\">CallableStatementExecutor</a>",
      "description" : "Implementation of CallableStatementExecutor will use the PreparedStatement.executeQuery() method. Depending on the database vendor, using execute(), executeUpdate() or executeQuery() will deliver your results in a different way.",
      "descriptionHtml" : "Implementation of CallableStatementExecutor will use the \n<code>PreparedStatement.executeQuery()</code> method. \n<p> Depending on the database vendor, using execute(), executeUpdate() or executeQuery() will deliver your results in a different way. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-rest-health-check/4.0.0B1-RELEASE/com/adaptris/rest/healthcheck/AdapterList.html",
      "fullClassName" : "com.adaptris.rest.healthcheck.AdapterList",
      "className" : "AdapterList",
      "packageName" : "com.adaptris.rest.healthcheck",
      "componentType" : "object",
      "alias" : "adapters",
      "deprecated" : false,
      "jarFileName" : "interlok-rest-health-check.jar",
      "profile" : { },
      "annotationDetails" : "public class AdapterList\nextends java.util.AbstractList<AdapterState>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdapterList</span>\nextends java.util.AbstractList&lt;<a href=\"AdapterState.html\" title=\"class in com.adaptris.rest.healthcheck\" target=\"_new\">AdapterState</a>&gt;",
      "description" : "List of adapters that will be returned by the healthcheck",
      "descriptionHtml" : "List of adapters that will be returned by the healthcheck",
      "inheritance" : [
        {
          "name" : "AdapterState",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-rest-health-check/4.0.0B1-RELEASE/com/adaptris/rest/healthcheck/AdapterState.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Management/REST: Health Check",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-rest-health-check",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MapMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MapMetadataService",
      "className" : "MapMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "map-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Change a metadata value based on a regular expression match",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Change a metadata value based on a regular expression match\",\n                  tag=\"service,metadata\")\npublic class MapMetadataService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Change a metadata value based on a regular expression match\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MapMetadataService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Changes the value of a specific metadata key based on a regular expression match of the value associated with the key. It supports the special syntax of {n} as the replacement value. This indicates that the corresponding match group should be used as the replacement value. There are similiarities between this service and ReplaceMetadataValue . This service could be easily replaced with multiple instances of ReplaceMetadataValue and you should consider using that if you have to use match groups.",
      "descriptionHtml" : "Changes the value of a specific metadata key based on a regular expression match of the value associated with the key. \n<p> It supports the special syntax of {n} as the replacement value. This indicates that the corresponding match group should be used as the replacement value. </p> \n<p> There are similiarities between this service and <a href=\"ReplaceMetadataValue.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ReplaceMetadataValue</code></a> . This service could be easily replaced with multiple instances of <a href=\"ReplaceMetadataValue.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ReplaceMetadataValue</code></a> and you should consider using that if you have to use match groups. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/SafeGuidGenerator.html",
      "fullClassName" : "com.adaptris.util.SafeGuidGenerator",
      "className" : "SafeGuidGenerator",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "safe-guid-generator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SafeGuidGenerator\nextends GuidGenerator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SafeGuidGenerator</span>\nextends <a href=\"GuidGenerator.html\" title=\"class in com.adaptris.util\" target=\"_new\">GuidGenerator</a>",
      "description" : "Overrides standard GuidGenerator behaviour using GuidGenerator.safeUUID() for IdGenerator.create(Object) instead.",
      "descriptionHtml" : "Overrides standard \n<a href=\"GuidGenerator.html\" title=\"class in com.adaptris.util\" target=\"_new\"><code>GuidGenerator</code></a> behaviour using \n<a href=\"GuidGenerator.html#safeUUID()\" target=\"_new\"><code>GuidGenerator.safeUUID()</code></a> for \n<a href=\"IdGenerator.html#create(java.lang.Object)\" target=\"_new\"><code>IdGenerator.create(Object)</code></a> instead.",
      "inheritance" : [
        {
          "name" : "GuidGenerator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/GuidGenerator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PasProducer.html",
      "fullClassName" : "com.adaptris.core.jms.PasProducer",
      "className" : "PasProducer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "producer",
      "alias" : "jms-topic-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Place message on a JMS Topic",
        "tag" : "producer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Place message on a JMS Topic\",\n                  tag=\"producer,jms\",\n                  recommended=JmsConnection.class)\npublic class PasProducer\nextends DefinedJmsProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Place message on a JMS Topic\",\n                  tag=\"producer,jms\",\n                  recommended=<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PasProducer</span>\nextends <a href=\"DefinedJmsProducer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">DefinedJmsProducer</a>",
      "description" : "AdaptrisMessageProducer implementation for Topic based JMS. This implementation baselines to JMS 1.1 for minimum API support and its behaviour and support for standard JMS Headers can be controlled in a number of ways. When converting from an AdaptrisMessage into a standard Message; you should choose an implementation of MessageTypeTranslator. The more common types are BytesMessageTranslator, TextMessageTranslator, ObjectMessageTranslator and MapMessageTranslator which correspond to BytesMessage, TextMessage, ObjectMessage and MapMessage respectively. Each MessageTypeTranslator will allow you to move some or all metadata from the AdaptrisMessage to the JMS Message. Of course, there are other vendor specific JMS message types can be used. The Message.getJMSCorrelationID() field is generally used for linking one message to with another. It typically links a reply message with the originating request message. If you need to handle the correlation id in some fashion then typically you would choose an implementation of CorrelationIdSource that explicitly handles the correlation ID; for instance MetadataCorrelationIdSource. Synchronous request/reply messaging behaviour is available for this producer and relies heavily on the Message.getJMSReplyTo() field. Normally if the adapter is initiating the request then a temporary destination is created and this is used as the JMSReplyTo field. Sometimes you may wish to specify your own JMSReplyTo field (where the JMS Vendor doesn't play nice with temporary topics). To do this, then you need to ensure that the metadata key \"JMSAsyncStaticReplyTo\" is set with the appropriate queue name; this will cause that message to be produced to the topic with a JMSReplyTo set to that topic name. You may also use \"JMSAsyncStaticReplyTo\" in an asynchronous workflow; if the metadata key exists in the message then it will be used to populate the JMSReplyTo Field. By convention, the Message.getJMSPriority(), Message.getJMSDeliveryMode(), and Message.getJMSExpiration() are configured directly (expiration here is semantically equivalent to the element JmsProducerImpl.setTtl(Long) on the producer. It is possible to control it dynamically on a per message basis using the element JmsProducerImpl.setPerMessageProperties(Boolean). If you opt to control these fields on a per message basis then the following metadata keys are used : \"JMSPriority\" - This overrides the priority of the message and should be an integer value. \"JMSDeliveryMode\" - This overrides the delivery mode of the message, and can either be an integer or a string value understood by DeliveryMode \"JMSExpiration\" - This overrides the expiration of the message, and can either be an long value specifying when the message expires, or a string value in the form \"yyyy-MM-dd'T'HH:mm:ssZ\". It will be used to calculate the correct TTL.",
      "descriptionHtml" : "<a href=\"../AdaptrisMessageProducer.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessageProducer</code></a> implementation for Topic based JMS. \n<p> This implementation baselines to JMS 1.1 for minimum API support and its behaviour and support for standard JMS Headers can be controlled in a number of ways. </p> \n<p> When converting from an <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> into a standard <code>Message</code>; you should choose an implementation of <a href=\"MessageTypeTranslator.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>MessageTypeTranslator</code></a>. The more common types are <a href=\"BytesMessageTranslator.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>BytesMessageTranslator</code></a>, <a href=\"TextMessageTranslator.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>TextMessageTranslator</code></a>, <a href=\"ObjectMessageTranslator.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>ObjectMessageTranslator</code></a> and <a href=\"MapMessageTranslator.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>MapMessageTranslator</code></a> which correspond to <code>BytesMessage</code>, <code>TextMessage</code>, <code>ObjectMessage</code> and <code>MapMessage</code> respectively. Each <a href=\"MessageTypeTranslator.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>MessageTypeTranslator</code></a> will allow you to move some or all metadata from the AdaptrisMessage to the JMS Message. Of course, there are other vendor specific JMS message types can be used. </p> \n<p> The <code>Message.getJMSCorrelationID()</code> field is generally used for linking one message to with another. It typically links a reply message with the originating request message. If you need to handle the correlation id in some fashion then typically you would choose an implementation of <a href=\"CorrelationIdSource.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>CorrelationIdSource</code></a> that explicitly handles the correlation ID; for instance <a href=\"MetadataCorrelationIdSource.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>MetadataCorrelationIdSource</code></a>. </p> \n<p> Synchronous request/reply messaging behaviour is available for this producer and relies heavily on the <code>Message.getJMSReplyTo()</code> field. Normally if the adapter is initiating the request then a temporary destination is created and this is used as the JMSReplyTo field. Sometimes you may wish to specify your own JMSReplyTo field (where the JMS Vendor doesn't play nice with temporary topics). To do this, then you need to ensure that the metadata key <a href=\"JmsConstants.html#JMS_ASYNC_STATIC_REPLY_TO\" target=\"_new\">\"JMSAsyncStaticReplyTo\"</a> is set with the appropriate queue name; this will cause that message to be produced to the topic with a JMSReplyTo set to that topic name. You may also use <a href=\"JmsConstants.html#JMS_ASYNC_STATIC_REPLY_TO\" target=\"_new\">\"JMSAsyncStaticReplyTo\"</a> in an asynchronous workflow; if the metadata key exists in the message then it will be used to populate the JMSReplyTo Field. </p> \n<p> By convention, the <code>Message.getJMSPriority()</code>, <code>Message.getJMSDeliveryMode()</code>, and <code>Message.getJMSExpiration()</code> are configured directly (expiration here is semantically equivalent to the element <a href=\"JmsProducerImpl.html#setTtl(java.lang.Long)\" target=\"_new\"><code>JmsProducerImpl.setTtl(Long)</code></a> on the producer. It is possible to control it dynamically on a per message basis using the element <a href=\"JmsProducerImpl.html#setPerMessageProperties(java.lang.Boolean)\" target=\"_new\"><code>JmsProducerImpl.setPerMessageProperties(Boolean)</code></a>. If you opt to control these fields on a per message basis then the following metadata keys are used : </p> \n<ul> \n <li><a href=\"JmsConstants.html#JMS_PRIORITY\" target=\"_new\">\"JMSPriority\"</a> - This overrides the priority of the message and should be an integer value.</li> \n <li><a href=\"JmsConstants.html#JMS_DELIVERY_MODE\" target=\"_new\">\"JMSDeliveryMode\"</a> - This overrides the delivery mode of the message, and can either be an integer or a string value understood by <a href=\"DeliveryMode.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>DeliveryMode</code></a></li> \n <li><a href=\"JmsConstants.html#JMS_EXPIRATION\" target=\"_new\">\"JMSExpiration\"</a> - This overrides the expiration of the message, and can either be an long value specifying when the message expires, or a string value in the form \"yyyy-MM-dd'T'HH:mm:ssZ\". It will be used to calculate the correct TTL.</li> \n</ul>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html"
        },
        {
          "name" : "JmsProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducerImpl.html"
        },
        {
          "name" : "DefinedJmsProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/DefinedJmsProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/async/XAJmsProducerAsync.html",
      "fullClassName" : "com.adaptris.xa.jms.async.XAJmsProducerAsync",
      "className" : "XAJmsProducerAsync",
      "packageName" : "com.adaptris.xa.jms.async",
      "componentType" : "producer",
      "alias" : "xa-jms-producer-async",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-atomikos.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.xa.jms.XAJmsConnection"
        ],
        "since" : "",
        "summary" : "Produce JMS asynchronous messages to the specified queue or topic, using XA transactions.",
        "tag" : "consumer,jms,xa,async"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Produce JMS asynchronous messages to the specified queue or topic, using XA transactions.\",\n                  tag=\"consumer,jms,xa,async\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class XAJmsProducerAsync\nextends XAJmsProducer\nimplements AsyncProducerAware",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Produce JMS asynchronous messages to the specified queue or topic, using XA transactions.\",\n                  tag=\"consumer,jms,xa,async\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class <span class=\"typeNameLabel\">XAJmsProducerAsync</span>\nextends <a href=\"../XAJmsProducer.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\">XAJmsProducer</a>\nimplements <a href=\"AsyncProducerAware.html\" title=\"interface in com.adaptris.xa.jms.async\" target=\"_new\">AsyncProducerAware</a>",
      "description" : "A JMS producer that extends the base functionality of the XAJmsProducer This differs from the standard XAJmsProducer by providing support for JMS 2.0 asynchronous call-backs. This producer is designed to work with the XAWorkflowAsync and the XAJmsConsumerAsync. The async producer will send messages to your JMS endpoint but will not wait for the acknowledgement before continuing. At some point in the future this your JMS async consumer will receive a notification for each produced message, indicating if the message has indeed been acknowledged or not.",
      "descriptionHtml" : "A JMS producer that extends the base functionality of the \n<a href=\"../XAJmsProducer.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\"><code>XAJmsProducer</code></a> \n<p> This differs from the standard <a href=\"../XAJmsProducer.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\"><code>XAJmsProducer</code></a> by providing support for JMS 2.0 asynchronous call-backs. </p> This producer is designed to work with the \n<a href=\"XAWorkflowAsync.html\" title=\"class in com.adaptris.xa.jms.async\" target=\"_new\"><code>XAWorkflowAsync</code></a> and the \n<a href=\"XAJmsConsumerAsync.html\" title=\"class in com.adaptris.xa.jms.async\" target=\"_new\"><code>XAJmsConsumerAsync</code></a>. \n<p></p> \n<p> The async producer will send messages to your JMS endpoint but will not wait for the acknowledgement before continuing. At some point in the future this your JMS async consumer will receive a notification for each produced message, indicating if the message has indeed been acknowledged or not. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "JmsProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducerImpl.html?is-external=true"
        },
        {
          "name" : "JmsProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducer.html?is-external=true"
        },
        {
          "name" : "XAJmsProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsProducerImpl.html"
        },
        {
          "name" : "XAJmsProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Atomikos",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-atomikos",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/params/NullStatementPrimer.html",
      "fullClassName" : "com.adaptris.core.cassandra.params.NullStatementPrimer",
      "className" : "NullStatementPrimer",
      "packageName" : "com.adaptris.core.cassandra.params",
      "componentType" : "object",
      "alias" : "null-statement-primer",
      "deprecated" : false,
      "jarFileName" : "interlok-cassandra.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Prepare each CQL statement upon every execution",
        "tag" : "cassandra"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Prepare each CQL statement upon every execution\",\n                  tag=\"cassandra\")\npublic class NullStatementPrimer\nextends java.lang.Object\nimplements StatementPrimer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Prepare each CQL statement upon every execution\",\n                  tag=\"cassandra\")\npublic class <span class=\"typeNameLabel\">NullStatementPrimer</span>\nextends java.lang.Object\nimplements <a href=\"StatementPrimer.html\" title=\"interface in com.adaptris.core.cassandra.params\" target=\"_new\">StatementPrimer</a>",
      "description" : "This StatementPrimer will simply use your current session object to Cassandra to prepare each statement upon every execution. Consider using the CachedStatementPrimer if performance is an issue.",
      "descriptionHtml" : "<p> This <a href=\"StatementPrimer.html\" title=\"interface in com.adaptris.core.cassandra.params\" target=\"_new\"><code>StatementPrimer</code></a> will simply use your current session object to Cassandra to prepare each statement upon every execution. </p> \n<p> Consider using the <a href=\"CachedStatementPrimer.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>CachedStatementPrimer</code></a> if performance is an issue. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Cassandra",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-cassandra",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/Matches.html",
      "fullClassName" : "com.adaptris.core.services.conditional.operator.Matches",
      "className" : "Matches",
      "packageName" : "com.adaptris.core.services.conditional.operator",
      "componentType" : "object",
      "alias" : "matches",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured value matches the supplied value.",
        "tag" : "conditional,operator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured value matches the supplied value.\",\n                  tag=\"conditional,operator\")\npublic class Matches\nextends java.lang.Object\nimplements Operator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured value matches the supplied value.\",\n                  tag=\"conditional,operator\")\npublic class <span class=\"typeNameLabel\">Matches</span>\nextends java.lang.Object\nimplements <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Operator</a>",
      "description" : "This Operator simply tests two values for using String.matches(String). The first value used in the equality test is the Condition that this Operator is configured for; which could be the message payload or a metadata item for example. The second value is the static value configured for this operator. The static value can be a literal value; \"myValue\" or can be metadata resolved for example;   %message{myKey}\n The above will test the metadata value identified by the metadata key \"myKey\".",
      "descriptionHtml" : "<p> This <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> simply tests two values for using <code>String.matches(String)</code>. </p> \n<p> The first value used in the equality test is the <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> that this <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> is configured for; which could be the message payload or a metadata item for example. <br> The second value is the static value configured for this operator. </p> \n<p> The static value can be a literal value; \"myValue\" or can be metadata resolved for example; <br> </p>\n<pre>  \n <value>\n  %message{myKey}\n </value>\n </pre> The above will test the metadata value identified by the metadata key \"myKey\". \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsTransactedWorkflow.html",
      "fullClassName" : "com.adaptris.core.jms.JmsTransactedWorkflow",
      "className" : "JmsTransactedWorkflow",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "workflow",
      "alias" : "jms-transacted-workflow",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "JMS specific workflow that supports rollback of messages",
        "tag" : "workflow,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JMS specific workflow that supports rollback of messages\",\n                  tag=\"workflow,jms\")\npublic final class JmsTransactedWorkflow\nextends StandardWorkflow",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JMS specific workflow that supports rollback of messages\",\n                  tag=\"workflow,jms\")\npublic final class <span class=\"typeNameLabel\">JmsTransactedWorkflow</span>\nextends <a href=\"../StandardWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\">StandardWorkflow</a>",
      "description" : "Subclass of StandardWorkflow for use with JMS consumers. This differs from a StandardWorkflow as it assumes that the configured JMS Consumer has a transacted session which needs to informed of any failures so the messages can be rolled back. Additionally, this workflow may not be configured with any ProduceExceptionHandler as this will not allow the transaction to rolled back correctly. In order to get behaviour similiar to ProduceExceptionHandler, you should use StandaloneProducer as part of the service collection in order to produce the payload to the required destination.",
      "descriptionHtml" : "Subclass of \n<a href=\"../StandardWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandardWorkflow</code></a> for use with JMS consumers. \n<p> This differs from a StandardWorkflow as it assumes that the configured JMS Consumer has a transacted session which needs to informed of any failures so the messages can be rolled back. </p> \n<p> Additionally, this workflow may not be configured with any <a href=\"../ProduceExceptionHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ProduceExceptionHandler</code></a> as this will not allow the transaction to rolled back correctly. In order to get behaviour similiar to <a href=\"../ProduceExceptionHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ProduceExceptionHandler</code></a>, you should use <a href=\"../StandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneProducer</code></a> as part of the service collection in order to produce the payload to the required destination. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowImp.html"
        },
        {
          "name" : "StandardWorkflowImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflowImpl.html"
        },
        {
          "name" : "StandardWorkflow",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflow.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/ElseService.html",
      "fullClassName" : "com.adaptris.core.services.conditional.ElseService",
      "className" : "ElseService",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "object",
      "alias" : "else",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A service/list that should be executed after conditions have NOT been met. ",
        "tag" : "service, conditional"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A service/list that should be executed after conditions have NOT been met. \",\n                  tag=\"service, conditional\")\npublic class ElseService\nextends java.lang.Object\nimplements ComponentLifecycle, ComponentLifecycleExtension",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A service/list that should be executed after conditions have NOT been met. \",\n                  tag=\"service, conditional\")\npublic class <span class=\"typeNameLabel\">ElseService</span>\nextends java.lang.Object\nimplements <a href=\"../../ComponentLifecycle.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycle</a>, <a href=\"../../ComponentLifecycleExtension.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycleExtension</a>",
      "description" : "This service holder is used to hold the service or list of services that will be executed by logical expressions, such as IfElse should configured Condition's NOT pass.",
      "descriptionHtml" : "<p> This service holder is used to hold the service or list of services that will be executed by logical expressions, such as <a href=\"IfElse.html\" title=\"class in com.adaptris.core.services.conditional\" target=\"_new\"><code>IfElse</code></a> should configured <a href=\"Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a>'s NOT pass. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/dynamic/BapiXmlGenerator.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.dynamic.BapiXmlGenerator",
      "className" : "BapiXmlGenerator",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.dynamic",
      "componentType" : "service",
      "alias" : "sapjco3-bapi-xml-generator",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.sap.jco3.rfc.ConfiguredRfcConnection",
          "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicRfcConnection"
        ],
        "since" : "",
        "summary" : "Helper that generates an XML input file for a SAP BAPI",
        "tag" : "service,sap,bapi"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Helper that generates an XML input file for a SAP BAPI\",\n                  tag=\"service,sap,bapi\",\n                  recommended={ConfiguredRfcConnection.class,DynamicRfcConnection.class})\npublic class BapiXmlGenerator\nextends RfcXmlGenerator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Helper that generates an XML input file for a SAP BAPI\",\n                  tag=\"service,sap,bapi\",\n                  recommended={<a href=\"../ConfiguredRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ConfiguredRfcConnection.class</a>,<a href=\"DynamicRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">DynamicRfcConnection.class</a>})\npublic class <span class=\"typeNameLabel\">BapiXmlGenerator</span>\nextends <a href=\"RfcXmlGenerator.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">RfcXmlGenerator</a>",
      "description" : "Service implementation that generates an XML input file sample for a BAPI. This service determines the BAPI to invoke based on the the xpath local-name(/*). After querying the configured repository, it generates a sample document that contains all the elements required to execute a BAPI. If you map your input file to the generated example, then it will be possible to use DynamicBapiProducer as your producer without explicitly configuring any ExportParameter or ImportParameter instances. Input parameters will always be a child of the [BAPI_NAME]/INPUT element Output parameters will always be a child of the [BAPI_NAME]/OUTPUT element Table parameters will be a child of the [BAPI_NAME]/INPUT/TABLES element and also the [BAPI_NAME]/OUTPUT/TABLES element as tables could form both a an input and output parameter; how you can have multiple rows for a table parameter should be obvious from the resulting XML. CHANGING parameters are not currently supported. Every element has attribute information for mapping and informational purposes; it is redundant at runtime",
      "descriptionHtml" : "Service implementation that generates an XML input file sample for a BAPI. \n<p> This service determines the BAPI to invoke based on the the xpath <code>local-name(/*)</code>. After querying the configured repository, it generates a sample document that contains all the elements required to execute a BAPI. If you map your input file to the generated example, then it will be possible to use <a href=\"DynamicBapiProducer.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\"><code>DynamicBapiProducer</code></a> as your producer without explicitly configuring any <a href=\"../ExportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\"><code>ExportParameter</code></a> or <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\"><code>ImportParameter</code></a> instances. </p> \n<ul> \n <li>Input parameters will always be a child of the <code>[BAPI_NAME]/INPUT</code> element</li> \n <li>Output parameters will always be a child of the <code>[BAPI_NAME]/OUTPUT</code> element</li> \n <li>Table parameters will be a child of the <code>[BAPI_NAME]/INPUT/TABLES</code> element and also the <code>[BAPI_NAME]/OUTPUT/TABLES</code> element as tables could form both a an input and output parameter; how you can have multiple rows for a table parameter should be obvious from the resulting XML.</li> \n <li>CHANGING parameters are not currently supported.</li> \n <li>Every element has attribute information for mapping and informational purposes; it is redundant at runtime</li> \n</ul>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "RfcXmlGenerator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/dynamic/RfcXmlGenerator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/CompositeRequestHeaders.html",
      "fullClassName" : "com.adaptris.core.http.client.net.CompositeRequestHeaders",
      "className" : "CompositeRequestHeaders",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-composite-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<java.net.HttpURLConnection>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"../RequestHeaderProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\">RequestHeaderProvider</a>&lt;java.net.HttpURLConnection&gt;",
      "description" : "Implementation of RequestHeaderProvider that uses nested providers to add headers to a HttpURLConnection. This implementation is primarily so that you can mix and match both static and metadata driven headers; the order in which you configure them determines what is actually present as headers.",
      "descriptionHtml" : "Implementation of \n<a href=\"../RequestHeaderProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>RequestHeaderProvider</code></a> that uses nested providers to add headers to a \n<code>HttpURLConnection</code>. \n<p>This implementation is primarily so that you can mix and match both static and metadata driven headers; the order in which you configure them determines what is actually present as headers. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/LineCountSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.LineCountSplitter",
      "className" : "LineCountSplitter",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "line-count-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LineCountSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LineCountSplitter</span>\nextends <a href=\"MessageSplitterImp.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "Split an AdaptrisMessage object by line. Counts the number of lines, and creates a new message based on some configured number. This Splitter can handle arbitrarily large (File Backed) messages.",
      "descriptionHtml" : "<p> Split an AdaptrisMessage object by line. Counts the number of lines, and creates a new message based on some configured number. This Splitter can handle arbitrarily large (File Backed) messages. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/BasicMessageSplitterService.html",
      "fullClassName" : "com.adaptris.core.services.splitter.BasicMessageSplitterService",
      "className" : "BasicMessageSplitterService",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "service",
      "alias" : "basic-message-splitter-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Split a message and produce each split message somewhere",
        "tag" : "service,splitter"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a message and produce each split message somewhere\",\n                  tag=\"service,splitter\")\npublic class BasicMessageSplitterService\nextends MessageSplitterServiceImp\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a message and produce each split message somewhere\",\n                  tag=\"service,splitter\")\npublic class <span class=\"typeNameLabel\">BasicMessageSplitterService</span>\nextends <a href=\"MessageSplitterServiceImp.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageSplitterServiceImp</a>\nimplements <a href=\"../../ConnectedService.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ConnectedService</a>",
      "description" : "Splits incoming AdaptrisMessages into several AdaptrisMessages using an implementation of MessageSplitter. This implementation simply uses the configured producer and connection to produce the split message.",
      "descriptionHtml" : "<p> Splits incoming <a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>s into several <code>AdaptrisMessage</code>s using an implementation of <a href=\"MessageSplitter.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\"><code>MessageSplitter</code></a>. </p> \n<p> This implementation simply uses the configured producer and connection to produce the split message. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MessageSplitterServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/lms/StaxStartDocument.html",
      "fullClassName" : "com.adaptris.stax.lms.StaxStartDocument",
      "className" : "StaxStartDocument",
      "packageName" : "com.adaptris.stax.lms",
      "componentType" : "service",
      "alias" : "stax-xml-start-document",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.6",
        "summary" : "Prepare for writing large XML output via STaX",
        "tag" : "service,transform,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Prepare for writing large XML output via STaX\",\n                  tag=\"service,transform,xml\",\n                  since=\"3.6.6\")\npublic class StaxStartDocument\nextends StaxXmlOutput",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Prepare for writing large XML output via STaX\",\n                  tag=\"service,transform,xml\",\n                  since=\"3.6.6\")\npublic class <span class=\"typeNameLabel\">StaxStartDocument</span>\nextends <a href=\"StaxXmlOutput.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\">StaxXmlOutput</a>",
      "description" : "Prepare ourselves for writing some large XML output via STaX. For this service to work, the underlying AdaptrisMessageFactory associated with the AdaptrisMessage instance must be a FileBackedMessageFactory and subsequent processing should include multiple instances of StaxWriteElement to write XML elements and finally StaxEndDocument to commit the output; so effectively your processing chain should be  \n   <stax-xml-start-document/>\n     ... 0 or more instances of <stax-xml-write-element/>\n   <stax-xml-end-document/>",
      "descriptionHtml" : "Prepare ourselves for writing some large XML output via STaX. \n<p> For this service to work, the underlying <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageFactory.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageFactory</code></a> associated with the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> instance must be a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/FileBackedMessageFactory.html?is-external=true\" title=\"class or interface in com.adaptris.core.lms\" class=\"externalLink\" target=\"_new\"><code>FileBackedMessageFactory</code></a> and subsequent processing should include multiple instances of <a href=\"StaxWriteElement.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\"><code>StaxWriteElement</code></a> to write XML elements and finally <a href=\"StaxEndDocument.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\"><code>StaxEndDocument</code></a> to commit the output; so effectively your processing chain should be </p>\n<pre> <code>\n   &lt;stax-xml-start-document/&gt;\n     ... 0 or more instances of &lt;stax-xml-write-element/&gt;\n   &lt;stax-xml-end-document/&gt;\n </code>\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "StaxXmlOutput",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/lms/StaxXmlOutput.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/AmazonS3Connection.html",
      "fullClassName" : "com.adaptris.aws.s3.AmazonS3Connection",
      "className" : "AmazonS3Connection",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "connection",
      "alias" : "amazon-s3-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.s3.S3Service"
        ],
        "since" : "",
        "summary" : "Connection for supporting connectivity to Amazon S3",
        "tag" : "connections,amazon,s3"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection for supporting connectivity to Amazon S3\",\n                  tag=\"connections,amazon,s3\",\n                  recommended=S3Service.class)\npublic class AmazonS3Connection\nextends com.adaptris.aws.AWSConnection\nimplements ClientWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection for supporting connectivity to Amazon S3\",\n                  tag=\"connections,amazon,s3\",\n                  recommended=<a href=\"S3Service.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">S3Service.class</a>)\npublic class <span class=\"typeNameLabel\">AmazonS3Connection</span>\nextends com.adaptris.aws.AWSConnection\nimplements <a href=\"ClientWrapper.html\" title=\"interface in com.adaptris.aws.s3\" target=\"_new\">ClientWrapper</a>",
      "description" : "AdaptrisConnection implementation for Amazon S3. This class directly exposes almost all the getter and setters that are available in ClientConfiguration via the AWSConnection.getClientConfiguration() property for maximum flexibility in configuration. The key from the client-configuration element should match the name of the underlying ClientConfiguration property; so if you wanted to control the user-agent you would do :  \n   <client-configuration>\n     <key-value-pair>\n        <key>UserAgent</key>\n        <value>My User Agent</value>\n     </key-value-pair>\n   </client-configuration>",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnection</a> implementation for Amazon S3. \n<p> This class directly exposes almost all the getter and setters that are available in <code>ClientConfiguration</code> via the <code>AWSConnection.getClientConfiguration()</code> property for maximum flexibility in configuration. </p> \n<p> The key from the <code>client-configuration</code> element should match the name of the underlying ClientConfiguration property; so if you wanted to control the user-agent you would do : </p> \n<pre> <code>\n   &lt;client-configuration&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;UserAgent&lt;/key&gt;\n        &lt;value&gt;My User Agent&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/client-configuration&gt;\n </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/ConstantValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jmx.ConstantValueTranslator",
      "className" : "ConstantValueTranslator",
      "packageName" : "com.adaptris.core.services.jmx",
      "componentType" : "object",
      "alias" : "jmx-constant-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConstantValueTranslator\nextends ValueTranslatorImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConstantValueTranslator</span>\nextends <a href=\"ValueTranslatorImp.html\" title=\"class in com.adaptris.core.services.jmx\" target=\"_new\">ValueTranslatorImp</a>",
      "description" : "This implementation of @{link ValueTranslator} uses a static String value, that can be used as a parameter for Jmx operations. If your Jmx operation requires a different type of data other than String, simply set the type to the fully qualified name of the required type. A conversion will then take place which will require your your desired class to have a string constructor, or be a Date, where the value is the milliseconds.",
      "descriptionHtml" : "<p> This implementation of @{link ValueTranslator} uses a static String value, that can be used as a parameter for Jmx operations. </p> \n<p> If your Jmx operation requires a different type of data other than String, simply set the type to the fully qualified name of the required type. A conversion will then take place which will require your your desired class to have a string constructor, or be a <code>Date</code>, where the value is the milliseconds. </p>",
      "inheritance" : [
        {
          "name" : "ValueTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/ValueTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheConnection.html",
      "fullClassName" : "com.adaptris.core.services.cache.CacheConnection",
      "className" : "CacheConnection",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "connection",
      "alias" : "cache-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CacheConnection\nextends AdaptrisConnectionImp\nimplements CacheProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CacheConnection</span>\nextends <a href=\"../../AdaptrisConnectionImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdaptrisConnectionImp</a>\nimplements <a href=\"../../cache/CacheProvider.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\">CacheProvider</a>",
      "description" : "A Connection to a cache instance.",
      "descriptionHtml" : "A Connection to a cache instance.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/cache/InternalBasicRulesCache.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.cache.InternalBasicRulesCache",
      "className" : "InternalBasicRulesCache",
      "packageName" : "com.adaptris.adapter.edistream.parser.cache",
      "componentType" : "object",
      "alias" : "edi-internal-rules-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class InternalBasicRulesCache\nextends java.lang.Object\nimplements IRulesCache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InternalBasicRulesCache</span>\nextends java.lang.Object\nimplements <a href=\"IRulesCache.html\" title=\"interface in com.adaptris.adapter.edistream.parser.cache\" target=\"_new\">IRulesCache</a>",
      "description" : "Basic internal cache implementation for holding parsed grammar files",
      "descriptionHtml" : "Basic internal cache implementation for holding parsed grammar files",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/LargeJsonArrayPathSplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.json.LargeJsonArrayPathSplitter",
      "className" : "LargeJsonArrayPathSplitter",
      "packageName" : "com.adaptris.core.services.splitter.json",
      "componentType" : "object",
      "alias" : "large-json-array-path-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Split an arbitrarily large JSON array, with use of simple element traversal.",
        "tag" : "json,splitting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split an arbitrarily large JSON array, with use of simple element traversal.\",\n                  since=\"3.8.4\",\n                  tag=\"json,splitting\")\npublic class LargeJsonArrayPathSplitter\nextends LargeJsonArraySplitter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split an arbitrarily large JSON array, with use of simple element traversal.\",\n                  since=\"3.8.4\",\n                  tag=\"json,splitting\")\npublic class <span class=\"typeNameLabel\">LargeJsonArrayPathSplitter</span>\nextends <a href=\"LargeJsonArraySplitter.html\" title=\"class in com.adaptris.core.services.splitter.json\" target=\"_new\">LargeJsonArraySplitter</a>",
      "description" : "Split an arbitrarily large JSON array. This allows you to split via simple element traversal, so the path cannot be assumed to be an XPath. /path/to/repeating/element would be fine, but //repeating/element would not. It works based on JsonParser and navigates based on JsonToken.START_OBJECT events only. Note: tested with an 85Mb file containing an array of >15k JSON objects",
      "descriptionHtml" : "Split an arbitrarily large JSON array. \n<p> This allows you to split via simple element traversal, so the path cannot be assumed to be an XPath. <code>/path/to/repeating/element</code> would be fine, but <code>//repeating/element</code> would not. It works based on <code>JsonParser</code> and navigates based on <code>JsonToken.START_OBJECT</code> events only. </p> \n<p> Note: tested with an 85Mb file containing an array of &gt;15k JSON objects </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        },
        {
          "name" : "LargeJsonArraySplitter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/LargeJsonArraySplitter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3BucketList.html",
      "fullClassName" : "com.adaptris.aws.s3.S3BucketList",
      "className" : "S3BucketList",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "service",
      "alias" : "s3-bucket-list",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "List contents of an S3 bucket as part of a polling-trigger",
        "tag" : "aws,s3,polling"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"List contents of an S3 bucket as part of a polling-trigger\",\n                  since=\"3.9.2\",\n                  tag=\"aws,s3,polling\")\npublic class S3BucketList\nextends ServiceImp\nimplements DynamicPollingTemplate.TemplateProvider, ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"List contents of an S3 bucket as part of a polling-trigger\",\n                  since=\"3.9.2\",\n                  tag=\"aws,s3,polling\")\npublic class <span class=\"typeNameLabel\">S3BucketList</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DynamicPollingTemplate.TemplateProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">DynamicPollingTemplate.TemplateProvider</a>, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Query a S3 Location for a list of blobs stored there. Under the covers it re-uses S3Service with a ListOperation and does a full lifecycle on the underlying service each time it is triggered. This is intended for use as part of a DynamicPollingTemplate; as a result keys are not intended to be resolved using the %message expression language; they will, however, be passed as-is into the underlying service (which may still resolve them).",
      "descriptionHtml" : "Query a S3 Location for a list of blobs stored there. \n<p> Under the covers it re-uses <a href=\"S3Service.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\"><code>S3Service</code></a> with a <a href=\"ListOperation.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\"><code>ListOperation</code></a> and does a full lifecycle on the underlying service each time it is triggered. This is intended for use as part of a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DynamicPollingTemplate.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>DynamicPollingTemplate</code></a>; as a result keys are not intended to be resolved using the <code>%message</code> expression language; they will, however, be passed as-is into the underlying service (which may still resolve them). </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicenseExpiryHeartbeatEvent.html",
      "fullClassName" : "com.adaptris.core.licensing.LicenseExpiryHeartbeatEvent",
      "className" : "LicenseExpiryHeartbeatEvent",
      "packageName" : "com.adaptris.core.licensing",
      "componentType" : "object",
      "alias" : "license-expiry-heartbeat-event",
      "deprecated" : false,
      "jarFileName" : "interlok-licensing.jar",
      "profile" : { },
      "annotationDetails" : "public class LicenseExpiryHeartbeatEvent\nextends HeartbeatEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LicenseExpiryHeartbeatEvent</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/HeartbeatEvent.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">HeartbeatEvent</a>",
      "description" : "Built upon the standard Adapter HeartbeatEvent. This event will log a warning if your Interlok license will expire within the configured period. If the license will not expire then a simple trace log will be generated, much the same as the HeartbeatEvent. You can configure the expiry warning period like this; 30 In the adapter configuration file this class is aliased as license-expiry-heartbeat-event which is the preferred alternative to the fully qualified classname when building your configuration.",
      "descriptionHtml" : "<p> Built upon the standard <code>Adapter</code> <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/HeartbeatEvent.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>HeartbeatEvent</code></a>. This event will log a warning if your Interlok license will expire within the configured period. If the license will not expire then a simple trace log will be generated, much the same as the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/HeartbeatEvent.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>HeartbeatEvent</code></a>. </p> \n<p> You can configure the expiry warning period like this; <br> <code> \n  <expiry-period-days>\n   30\n  </expiry-period-days> </code> </p> \n<p> In the adapter configuration file this class is aliased as <b>license-expiry-heartbeat-event</b> which is the preferred alternative to the fully qualified classname when building your configuration. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html?is-external=true"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html?is-external=true"
        },
        {
          "name" : "HeartbeatEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/HeartbeatEvent.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Licence",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-licensing",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/RelaxedFtpProducer.html",
      "fullClassName" : "com.adaptris.core.ftp.RelaxedFtpProducer",
      "className" : "RelaxedFtpProducer",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "producer",
      "alias" : "relaxed-ftp-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.ftp.FileTransferConnection"
        ],
        "since" : "",
        "summary" : "Put a file on a FTP/SFTP server; uses PUT only",
        "tag" : "producer,ftp,ftps,sftp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Put a file on a FTP/SFTP server; uses PUT only\",\n                  tag=\"producer,ftp,ftps,sftp\",\n                  recommended=FileTransferConnection.class)\npublic class RelaxedFtpProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Put a file on a FTP/SFTP server; uses PUT only\",\n                  tag=\"producer,ftp,ftps,sftp\",\n                  recommended=<a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FileTransferConnection.class</a>)\npublic class <span class=\"typeNameLabel\">RelaxedFtpProducer</span>\nextends <a href=\"../ProduceOnlyProducerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "Ftp producer implementation. This differs from the standard FtpProducer as it does not use a staging area to upload file, nor does it rename the file from the staging directory into the destination directory once the upload is complete. It simply writes directly to the specified directory. If the remote system starts processing the file before upload is complete then you may encounter undefined behaviour in your back-end system. If the remote file is deleted before upload is complete, then depending on the server, this may not generate any errors, and you will have a partial file that the adapter thinks was successfully delivered. There are lots of ways in which this can go wrong. It is not recommended that you use this FtpProducer unless there are very specific reasons to; e.g. the remote FTP server does not support the RNFR and RNTO command. The destination returned by the ProduceDestination implementation should be in the form in the URL form dictated by the FileTransferConnection flavour including the directory from which you wish to write to. Simply specifying the IP Address or DNS name of the remote ftp server will cause files to be written without specifying a directory (which if you are not in an ftp chroot jail might be a very bad thing). This implementation does not support RequestReply.",
      "descriptionHtml" : "Ftp producer implementation. \n<p> This differs from the standard <a href=\"FtpProducer.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\"><code>FtpProducer</code></a> as it does not use a staging area to upload file, nor does it rename the file from the staging directory into the destination directory once the upload is complete. It simply writes directly to the specified directory. </p> \n<p> If the remote system starts processing the file before upload is complete then you may encounter undefined behaviour in your back-end system. If the remote file is deleted before upload is complete, then depending on the server, this may not generate any errors, and you will have a partial file that the adapter thinks was successfully delivered. <strong>There are lots of ways in which this can go wrong</strong>. It is not recommended that you use this FtpProducer unless there are very specific reasons to; e.g. the remote FTP server does not support the RNFR and RNTO command. </p> \n<p> The destination returned by the ProduceDestination implementation should be in the form in the URL form dictated by the <a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\"><code>FileTransferConnection</code></a> flavour including the directory from which you wish to write to. Simply specifying the IP Address or DNS name of the remote ftp server will cause files to be written without specifying a directory (which if you are not in an ftp chroot jail might be a very bad thing). </p> \n<p> This implementation does not support RequestReply. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatDateService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.ReformatDateService",
      "className" : "ReformatDateService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "reformat-date-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Reformat a data value stored in metadata",
        "tag" : "service,metadata,timestamp,datetime"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Reformat a data value stored in metadata\",\n                  tag=\"service,metadata,timestamp,datetime\")\npublic class ReformatDateService\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Reformat a data value stored in metadata\",\n                  tag=\"service,metadata,timestamp,datetime\")\npublic class <span class=\"typeNameLabel\">ReformatDateService</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "Reformats the date and time stored against a metadata key. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will be treated as a date to be reformatted. In addition to supporting all the patterns allowed by SimpleDateFormat, this service also supports the special values SECONDS_SINCE_EPOCH and MILLISECONDS_SINCE_EPOCH which describe the number of seconds and milliseconds since midnight Jan 1, 1970 UTC respectively. If specified as the source format, then the long value will be converted into a Date before formatting (scientific notation is supported as per BigDecimal(String)); if specified as the destination format, then the raw long value will be emitted.",
      "descriptionHtml" : "Reformats the date and time stored against a metadata key. \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will be treated as a date to be reformatted. </p> \n<p> In addition to supporting all the patterns allowed by <code>SimpleDateFormat</code>, this service also supports the special values <code>SECONDS_SINCE_EPOCH</code> and <code>MILLISECONDS_SINCE_EPOCH</code> which describe the number of seconds and milliseconds since midnight Jan 1, 1970 UTC respectively. If specified as the source format, then the <code>long</code> value will be converted into a <code>Date</code> before formatting (scientific notation is supported as per <code>BigDecimal(String)</code>); if specified as the destination format, then the raw long value will be emitted. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/FailOnError.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.bapi.FailOnError",
      "className" : "FailOnError",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.bapi",
      "componentType" : "object",
      "alias" : "sapjco3-bapireturn-fail-on-error",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class FailOnError\nextends ReturnParserImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FailOnError</span>\nextends <a href=\"ReturnParserImpl.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.bapi\" target=\"_new\">ReturnParserImpl</a>",
      "description" : "Throws an exception if the 'TYPE' of the BAPIRETURN structure/table indicates an error.",
      "descriptionHtml" : "Throws an exception if the 'TYPE' of the BAPIRETURN structure/table indicates an error.",
      "inheritance" : [
        {
          "name" : "ReturnParserImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/bapi/ReturnParserImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyWorkflow.html",
      "fullClassName" : "com.adaptris.core.RequestReplyWorkflow",
      "className" : "RequestReplyWorkflow",
      "packageName" : "com.adaptris.core",
      "componentType" : "workflow",
      "alias" : "request-reply-workflow",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Workflow designed for synchronous replies back to the requestor",
        "tag" : "workflow,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Workflow designed for synchronous replies back to the requestor\",\n                  tag=\"workflow,base\")\npublic class RequestReplyWorkflow\nextends StandardWorkflow",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Workflow designed for synchronous replies back to the requestor\",\n                  tag=\"workflow,base\")\npublic class <span class=\"typeNameLabel\">RequestReplyWorkflow</span>\nextends <a href=\"StandardWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\">StandardWorkflow</a>",
      "description" : "Implementation of Workflow to handle synchronous replies. Key differences to StandardWorkflow are uses the request method of the configured AdaptrisMessageProducer. has a setReplyServiceCollection(ServiceCollection) and setReplyProducer(AdaptrisMessageProducer) which are used to process any messages prior to returning it back to the requestor Does not obey the use of CoreConstants.KEY_WORKFLOW_SKIP_PRODUCER, the producer is always triggered. Note that the reply producer shares the original AdaptrisMessageConsumer's connection, on the basis that it will be replying to wherever the request came from. Note that this workflow implementation has largely been superseded by using a StandardWorkflow or PoolingWorkflow with the appropriate services in side it; but remains available for completeness",
      "descriptionHtml" : "Implementation of \n<a href=\"Workflow.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Workflow</code></a> to handle synchronous replies. \n<p> Key differences to <a href=\"StandardWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandardWorkflow</code></a> are </p>\n<ul> \n <li>uses the <code>request</code> method of the configured <a href=\"AdaptrisMessageProducer.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessageProducer</code></a>.</li> \n <li>has a <a href=\"#setReplyServiceCollection(com.adaptris.core.ServiceCollection)\" target=\"_new\"><code>setReplyServiceCollection(ServiceCollection)</code></a> and <a href=\"#setReplyProducer(com.adaptris.core.AdaptrisMessageProducer)\" target=\"_new\"><code>setReplyProducer(AdaptrisMessageProducer)</code></a> which are used to process any messages prior to returning it back to the requestor</li> \n <li>Does not obey the use of <a href=\"CoreConstants.html#KEY_WORKFLOW_SKIP_PRODUCER\" target=\"_new\"><code>CoreConstants.KEY_WORKFLOW_SKIP_PRODUCER</code></a>, the producer is always triggered.</li> \n</ul> \n<p></p> \n<p> Note that the reply producer shares the original <a href=\"AdaptrisMessageConsumer.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessageConsumer</code></a>'s connection, on the basis that it will be replying to wherever the request came from. </p> \n<p>Note that this workflow implementation has largely been superseded by using a <a href=\"StandardWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandardWorkflow</code></a> or <a href=\"PoolingWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>PoolingWorkflow</code></a> with the appropriate services in side it; but remains available for completeness</p>",
      "inheritance" : [
        {
          "name" : "WorkflowImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowImp.html"
        },
        {
          "name" : "StandardWorkflowImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflowImpl.html"
        },
        {
          "name" : "StandardWorkflow",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflow.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/jdbc/CsvResultSetTranslator.html",
      "fullClassName" : "com.adaptris.csv.jdbc.CsvResultSetTranslator",
      "className" : "CsvResultSetTranslator",
      "packageName" : "com.adaptris.csv.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-csv-output",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.0",
        "summary" : "Output each row in the result set as a line in a CSV",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Output each row in the result set as a line in a CSV\",\n                  since=\"3.8.0\")\npublic class CsvResultSetTranslator\nextends ResultSetTranslatorImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Output each row in the result set as a line in a CSV\",\n                  since=\"3.8.0\")\npublic class <span class=\"typeNameLabel\">CsvResultSetTranslator</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\">ResultSetTranslatorImp</a>",
      "description" : "Implementation of ResultSetTranslator that outputs each row as a part of a CSV.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>ResultSetTranslator</code></a> that outputs each row as a part of a CSV.",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html?is-external=true"
        },
        {
          "name" : "StyledResultTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html?is-external=true"
        },
        {
          "name" : "ResultSetTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/NoOpAcknowledgementHandler.html",
      "fullClassName" : "com.adaptris.core.jms.NoOpAcknowledgementHandler",
      "className" : "NoOpAcknowledgementHandler",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "no-op-acknowledgement-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "JMS Acknowledgement handler that skips all acknowledgements, rollbacks and commits.",
        "tag" : "jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JMS Acknowledgement handler that skips all acknowledgements, rollbacks and commits.\",\n                  tag=\"jms\")\npublic class NoOpAcknowledgementHandler\nextends java.lang.Object\nimplements AcknowledgementHandler",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JMS Acknowledgement handler that skips all acknowledgements, rollbacks and commits.\",\n                  tag=\"jms\")\npublic class <span class=\"typeNameLabel\">NoOpAcknowledgementHandler</span>\nextends java.lang.Object\nimplements <a href=\"AcknowledgementHandler.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\">AcknowledgementHandler</a>",
      "description" : "AcknowledgementHandler implementation that does nothing. Typically this implementation would be used when you're using managed JMS transactions such as XA or running in AUTO_ACKNOWLEDGE mode.",
      "descriptionHtml" : "<p> <code>AcknowledgementHandler</code> implementation that does nothing. </p> \n<p> Typically this implementation would be used when you're using managed JMS transactions such as XA or running in AUTO_ACKNOWLEDGE mode. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/MoveFileService.html",
      "fullClassName" : "com.adaptris.filesystem.MoveFileService",
      "className" : "MoveFileService",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "service",
      "alias" : "move-file-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Will move a files and/or directories to \"new-path\"",
        "tag" : "FS, FileSystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Will move a files and/or directories to \\\"new-path\\\"\",\n                  tag=\"FS, FileSystem\")\npublic class MoveFileService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Will move a files and/or directories to \\\"new-path\\\"\",\n                  tag=\"FS, FileSystem\")\npublic class <span class=\"typeNameLabel\">MoveFileService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Move files and / or directories to \"new-path\"",
      "descriptionHtml" : "Move files and / or directories to \"new-path\"",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/exception/ExceptionAsString.html",
      "fullClassName" : "com.adaptris.core.services.exception.ExceptionAsString",
      "className" : "ExceptionAsString",
      "packageName" : "com.adaptris.core.services.exception",
      "componentType" : "object",
      "alias" : "exception-as-string",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ExceptionAsString\nextends java.lang.Object\nimplements ExceptionSerializer",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExceptionAsString</span>\nextends java.lang.Object\nimplements <a href=\"ExceptionSerializer.html\" title=\"interface in com.adaptris.core.services.exception\" target=\"_new\">ExceptionSerializer</a>",
      "description" : "Serializes the exception as a String. Note that this uses org.apache.commons.lang3.exception.ExceptionUtils#getFullStackTrace(Throwable) which means that the root cause is first",
      "descriptionHtml" : "Serializes the exception as a String. \n<p> Note that this uses <code>org.apache.commons.lang3.exception.ExceptionUtils#getFullStackTrace(Throwable)</code> which means that the root cause is first </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/ByteArrayPayloadDataOutputParameter.html",
      "fullClassName" : "com.adaptris.core.common.ByteArrayPayloadDataOutputParameter",
      "className" : "ByteArrayPayloadDataOutputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "byte-array-payload-data-output-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ByteArrayPayloadDataOutputParameter\nextends java.lang.Object\nimplements DataOutputParameter<byte[]>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ByteArrayPayloadDataOutputParameter</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataOutputParameter</a>&lt;byte[]&gt;",
      "description" : "This DataOutputParameter is used when you want to write data to the AdaptrisMessage payload. An example might be specifying that the XML content required for the XPathService can be found in the payload of an AdaptrisMessage.",
      "descriptionHtml" : "This \n<code>DataOutputParameter</code> is used when you want to write data to the \n<a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> payload. \n<p> An example might be specifying that the XML content required for the <a href=\"../services/path/XPathService.html\" title=\"class in com.adaptris.core.services.path\" target=\"_new\"><code>XPathService</code></a> can be found in the payload of an <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-monitor-agent/4.0.0B1-RELEASE/com/adaptris/monitor/agent/UDPConnection.html",
      "fullClassName" : "com.adaptris.monitor.agent.UDPConnection",
      "className" : "UDPConnection",
      "packageName" : "com.adaptris.monitor.agent",
      "componentType" : "connection",
      "deprecated" : false,
      "jarFileName" : "interlok-monitor-agent.jar",
      "profile" : { },
      "annotationDetails" : "public class UDPConnection\nextends AdaptrisConnectionImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">UDPConnection</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnectionImp</a>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Profiling/Monitor",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-monitor-agent",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/translator/SolaceJcsmpXmlContentMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.translator.SolaceJcsmpXmlContentMessageTranslator",
      "className" : "SolaceJcsmpXmlContentMessageTranslator",
      "packageName" : "com.adaptris.core.jcsmp.solace.translator",
      "componentType" : "object",
      "alias" : "solace-jcsmp-xml-content-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "A Solace native JCSMP xml content message translator.",
        "tag" : "solace,jcsmp,translator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP xml content message translator.\",\n                  tag=\"solace,jcsmp,translator\",\n                  since=\"3.11.0\")\npublic class SolaceJcsmpXmlContentMessageTranslator\nextends SolaceJcsmpBaseTranslatorImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP xml content message translator.\",\n                  tag=\"solace,jcsmp,translator\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpXmlContentMessageTranslator</span>\nextends <a href=\"SolaceJcsmpBaseTranslatorImp.html\" title=\"class in com.adaptris.core.jcsmp.solace.translator\" target=\"_new\">SolaceJcsmpBaseTranslatorImp</a>",
      "description" : "An xml content message translator specifically for Solace's JCSMP API. See SolaceJcsmpBaseTranslatorImp for further details.",
      "descriptionHtml" : "<p> An xml content message translator specifically for Solace's JCSMP API. </p> \n<p> See <a href=\"SolaceJcsmpBaseTranslatorImp.html\" title=\"class in com.adaptris.core.jcsmp.solace.translator\" target=\"_new\"><code>SolaceJcsmpBaseTranslatorImp</code></a> for further details. </p>",
      "inheritance" : [
        {
          "name" : "SolaceJcsmpBaseTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/translator/SolaceJcsmpBaseTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairCollection.html",
      "fullClassName" : "com.adaptris.util.KeyValuePairCollection",
      "className" : "KeyValuePairCollection",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "key-value-pair-collection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class KeyValuePairCollection\nextends KeyValuePairBag",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">KeyValuePairCollection</span>\nextends <a href=\"KeyValuePairBag.html\" title=\"class in com.adaptris.util\" target=\"_new\">KeyValuePairBag</a>",
      "description" : "An collection of KeyValuePair instances.",
      "descriptionHtml" : "<p> An collection of <a href=\"KeyValuePair.html\" title=\"class in com.adaptris.util\" target=\"_new\">KeyValuePair</a> instances. </p>",
      "inheritance" : [
        {
          "name" : "KeyValuePair",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePair.html"
        },
        {
          "name" : "KeyValuePairBag",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairBag.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FtpConsumer.html",
      "fullClassName" : "com.adaptris.core.ftp.FtpConsumer",
      "className" : "FtpConsumer",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "consumer",
      "alias" : "ftp-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "originalname",
          "fsFileSize",
          "fsConsumeDir",
          "_interlokMessageConsumedFrom"
        ],
        "recommended" : [
          "com.adaptris.core.ftp.FileTransferConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from an FTP or SFTP server",
        "tag" : "consumer,ftp,ftps,sftp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from an FTP or SFTP server\",\n                  tag=\"consumer,ftp,ftps,sftp\",\n                  metadata={\"originalname\",\"fsFileSize\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\"},\n                  recommended=FileTransferConnection.class)\npublic class FtpConsumer\nextends FtpConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from an FTP or SFTP server\",\n                  tag=\"consumer,ftp,ftps,sftp\",\n                  metadata={\"originalname\",\"fsFileSize\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\"},\n                  recommended=<a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FileTransferConnection.class</a>)\npublic class <span class=\"typeNameLabel\">FtpConsumer</span>\nextends <a href=\"FtpConsumerImpl.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FtpConsumerImpl</a>",
      "description" : "FTP implementation of the AdaptrisMessageConsumer interface. The connection type for this consumer should always be a concrete implementation of FileTransferConnection. The destination returned by the ConsumeDestination implementation should be in the form in the URL form dictated by the FileTransferConnection flavour or simply the IP Address / DNS name of the target Server. If the URL form is used, then it is possible to override the username, password, and port settings of the server, in all other cases the configuration specified in the FileTransferConnection object will be used. In the event the proc-directory is not configured, then after processing the file, it is deleted. If proc-directory is configured, then the remote file will be renamed to this directory The configuration of this consumer closely mirrors that of the FsConsumer though it does not, at the moment, share any common hierarchy with a key difference; although multiple file-filters can be configured only filters that work with the filepath will work. Other filter implementations (such as those based on size /last modified) may not work.",
      "descriptionHtml" : "FTP implementation of the AdaptrisMessageConsumer interface. \n<p> The connection type for this consumer should always be a concrete implementation of <a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\"><code>FileTransferConnection</code></a>. </p> \n<p> The destination returned by the ConsumeDestination implementation should be in the form in the URL form dictated by the <code>FileTransferConnection</code> flavour or simply the IP Address / DNS name of the target Server. If the URL form is used, then it is possible to override the username, password, and port settings of the server, in all other cases the configuration specified in the <code>FileTransferConnection</code> object will be used. </p> \n<p> In the event the proc-directory is not configured, then after processing the file, it is deleted. If proc-directory is configured, then the remote file will be renamed to this directory </p> \n<p> The configuration of this consumer closely mirrors that of the FsConsumer though it does not, at the moment, share any common hierarchy with a key difference; although multiple file-filters can be configured only filters that work with the filepath will work. Other filter implementations (such as those based on size /last modified) may not work. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "FtpConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FtpConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportFailure.html",
      "fullClassName" : "com.adaptris.tester.report.junit.JUnitReportFailure",
      "className" : "JUnitReportFailure",
      "packageName" : "com.adaptris.tester.report.junit",
      "componentType" : "object",
      "alias" : "failure",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "@XStreamConverter(value=com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter.class,\n                  strings=\"text\")\npublic class JUnitReportFailure\nextends JUnitReportTestIssueTyped",
      "annotationDetailsHtml" : "@XStreamConverter(value=com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter.class,\n                  strings=\"text\")\npublic class <span class=\"typeNameLabel\">JUnitReportFailure</span>\nextends <a href=\"JUnitReportTestIssueTyped.html\" title=\"class in com.adaptris.tester.report.junit\" target=\"_new\">JUnitReportTestIssueTyped</a>",
      "description" : "Failure implementation of JUnitReportTestIssue used in JUnitReportTestCase for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML. NOTE: The difference between failure and error, is a failure meant something expected didn't happen, where as error means something unexpected happened. When tests are executed via TestCase.execute(String, TestClient, ServiceToTest, ServiceTestConfig) this class is used to set the test issue if applicable using: JUnitReportTestCase.setTestIssue(JUnitReportTestIssue).",
      "descriptionHtml" : "Failure implementation of \n<a href=\"JUnitReportTestIssue.html\" title=\"interface in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestIssue</code></a> used in \n<a href=\"JUnitReportTestCase.html\" title=\"class in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestCase</code></a> for storing results. \n<p> The intention of class and classes in the hierarchy is to produce JUnit style XML. </p> \n<p> NOTE: The difference between failure and error, is a failure meant something expected didn't happen, where as error means something unexpected happened. </p> \n<p> When tests are executed via <a href=\"../../runtime/TestCase.html#execute(java.lang.String,com.adaptris.tester.runtime.clients.TestClient,com.adaptris.tester.runtime.services.ServiceToTest,com.adaptris.tester.runtime.ServiceTestConfig)\" target=\"_new\"><code>TestCase.execute(String, TestClient, ServiceToTest, ServiceTestConfig)</code></a> this class is used to set the test issue if applicable using: <a href=\"JUnitReportTestCase.html#setTestIssue(com.adaptris.tester.report.junit.JUnitReportTestIssue)\" target=\"_new\"><code>JUnitReportTestCase.setTestIssue(JUnitReportTestIssue)</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "JUnitReportTestIssueTyped",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportTestIssueTyped.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataInputStreamWrapper.html",
      "fullClassName" : "com.adaptris.core.common.MetadataInputStreamWrapper",
      "className" : "MetadataInputStreamWrapper",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "metadata-input-stream-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "MessageWrapper implementation wraps a metadata value as an InputStream",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MessageWrapper implementation wraps a metadata value as an InputStream\",\n                  since=\"3.9.0\")\npublic class MetadataInputStreamWrapper\nextends MetadataStreamParameter\nimplements MessageWrapper<java.io.InputStream>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MessageWrapper implementation wraps a metadata value as an InputStream\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">MetadataInputStreamWrapper</span>\nextends <a href=\"MetadataStreamParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">MetadataStreamParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\">MessageWrapper</a>&lt;java.io.InputStream&gt;",
      "description" : "MessageWrapper implementation wraps a metadata value as an InputStream.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>MessageWrapper</code></a> implementation wraps a metadata value as an \n<code>InputStream</code>.",
      "inheritance" : [
        {
          "name" : "MetadataStreamParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/MetadataStreamParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CheckCacheService.html",
      "fullClassName" : "com.adaptris.core.services.cache.CheckCacheService",
      "className" : "CheckCacheService",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "service",
      "alias" : "check-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.5.1",
        "summary" : "Check the cache for a key",
        "tag" : "service,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Check the cache for a key\",\n                  tag=\"service,cache\",\n                  branchSelector=true,\n                  since=\"3.5.1\",\n                  recommended=CacheConnection.class)\npublic class CheckCacheService\nextends CacheServiceBase",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Check the cache for a key\",\n                  tag=\"service,cache\",\n                  branchSelector=true,\n                  since=\"3.5.1\",\n                  recommended=<a href=\"CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">CheckCacheService</span>\nextends <a href=\"CacheServiceBase.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheServiceBase</a>",
      "description" : "Service implementation that checks if specific key(s) exist in the cache.",
      "descriptionHtml" : "<a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> implementation that checks if specific key(s) exist in the cache.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CacheServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceImpl.html"
        },
        {
          "name" : "CacheServiceBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MultiPayloadMessageAggregator.html",
      "fullClassName" : "com.adaptris.core.services.aggregator.MultiPayloadMessageAggregator",
      "className" : "MultiPayloadMessageAggregator",
      "packageName" : "com.adaptris.core.services.aggregator",
      "componentType" : "object",
      "alias" : "multi-payload-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10",
        "summary" : "Combine many Adaptris messages into a single multi-payload message with each payload separate",
        "tag" : "multi-payload,aggregator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Combine many Adaptris messages into a single multi-payload message with each payload separate\",\n                  tag=\"multi-payload,aggregator\",\n                  since=\"3.10\")\npublic class MultiPayloadMessageAggregator\nextends MessageAggregatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Combine many Adaptris messages into a single multi-payload message with each payload separate\",\n                  tag=\"multi-payload,aggregator\",\n                  since=\"3.10\")\npublic class <span class=\"typeNameLabel\">MultiPayloadMessageAggregator</span>\nextends <a href=\"MessageAggregatorImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">MessageAggregatorImpl</a>",
      "description" : "Combine multiple standard Adaptris messages into a single multi-payload Adaptris message. \n <split-join-service>\n   <unique-id>split-join-id</unique-id>\n   <service class=\"shared-service\">\n     <lookup-name>for-each-service-list-id</lookup-name>\n     <unique-id>for-each-service-list-id</unique-id>\n   </service>\n   <splitter class=\"multi-payload-splitter\"/>\n   <aggregator class=\"multi-payload-aggregator\">\n     <replace-original-message>false</replace-original-message>\n   </aggregator>\n </split-join-service>",
      "descriptionHtml" : "Combine multiple standard Adaptris messages into a single multi-payload Adaptris message. \n<pre><code>\n &lt;split-join-service&gt;\n   &lt;unique-id&gt;split-join-id&lt;/unique-id&gt;\n   &lt;service class=\"shared-service\"&gt;\n     &lt;lookup-name&gt;for-each-service-list-id&lt;/lookup-name&gt;\n     &lt;unique-id&gt;for-each-service-list-id&lt;/unique-id&gt;\n   &lt;/service&gt;\n   &lt;splitter class=\"multi-payload-splitter\"/&gt;\n   &lt;aggregator class=\"multi-payload-aggregator\"&gt;\n     &lt;replace-original-message&gt;false&lt;/replace-original-message&gt;\n   &lt;/aggregator&gt;\n &lt;/split-join-service&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/edi/CustomSeparatorSet.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.edi.CustomSeparatorSet",
      "className" : "CustomSeparatorSet",
      "packageName" : "com.adaptris.adapter.edistream.parser.edi",
      "componentType" : "object",
      "alias" : "edi-custom-separators",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class CustomSeparatorSet\nextends AbstractSeparatorSet\nimplements IEdiSeparatorSet",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CustomSeparatorSet</span>\nextends <a href=\"AbstractSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\">AbstractSeparatorSet</a>\nimplements <a href=\"IEdiSeparatorSet.html\" title=\"interface in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\">IEdiSeparatorSet</a>",
      "inheritance" : [
        {
          "name" : "AbstractSeparatorSet",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/edi/AbstractSeparatorSet.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/AS400CommandConsumer.html",
      "fullClassName" : "com.adaptris.as400.AS400CommandConsumer",
      "className" : "AS400CommandConsumer",
      "packageName" : "com.adaptris.as400",
      "componentType" : "consumer",
      "alias" : "as400-command-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-as400.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A consumer, that executes commands on an AS400 system, periodically.",
        "tag" : "consumer,as400"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A consumer, that executes commands on an AS400 system, periodically.\",\n                  tag=\"consumer,as400\")\npublic class AS400CommandConsumer\nextends AdaptrisPollingConsumer\nimplements LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A consumer, that executes commands on an AS400 system, periodically.\",\n                  tag=\"consumer,as400\")\npublic class <span class=\"typeNameLabel\">AS400CommandConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisPollingConsumer</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "A consumer that will execute a configured command on an AS400 system returning the results. Configure a poller and this consumer will run periodically according to your poller configuration. Each command you want to execute may require parameters, in which case you can configure \"inputs\"; one of the CommandParameter implementations for each parameter. The results of each invocation can be translated back into the message by configuring \"outputs\". Very similar to the \"inputs\". You will need to know in advance how many outputs you will be expecting. If you do not configure enough outputs, some results may be lost for a command call. Simply set the host, username and password.",
      "descriptionHtml" : "<p> A consumer that will execute a configured command on an AS400 system returning the results. </p> \n<p> Configure a poller and this consumer will run periodically according to your poller configuration. </p> \n<p> Each command you want to execute may require parameters, in which case you can configure \"inputs\"; one of the <a href=\"params/CommandParameter.html\" title=\"class in com.adaptris.as400.params\" target=\"_new\"><code>CommandParameter</code></a> implementations for each parameter. </p> \n<p> The results of each invocation can be translated back into the message by configuring \"outputs\".<br> Very similar to the \"inputs\". You will need to know in advance how many outputs you will be expecting. If you do not configure enough outputs, some results may be lost for a command call. </p> \n<p> Simply set the host, username and password. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OS/AS400",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-as400",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/AddLoggingContext.html",
      "fullClassName" : "com.adaptris.core.services.AddLoggingContext",
      "className" : "AddLoggingContext",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "add-logging-context-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Add a mapped diagnostic context for logging; useful for filtering",
        "tag" : "service,logging,debug"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Add a mapped diagnostic context for logging; useful for filtering\",\n                  tag=\"service,logging,debug\")\npublic class AddLoggingContext\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Add a mapped diagnostic context for logging; useful for filtering\",\n                  tag=\"service,logging,debug\")\npublic class <span class=\"typeNameLabel\">AddLoggingContext</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Add a mapped diagnostic context via MDC.put(String, String). It can be useful to use a mapped diagnostic context to provide additional information into your logfile if the underlying logging system supports it (e.g. logback or log4j2) As the diagnostic logging context is thread based; bear in mind that you will lose the context if part of the service execution chain contains a something like PoolingMessageSplitterService or similar (i.e. something with an underlying thread pool that acts on the message).",
      "descriptionHtml" : "Add a mapped diagnostic context via \n<code>MDC.put(String, String)</code>. \n<p> It can be useful to use a mapped diagnostic context to provide additional information into your logfile if the underlying logging system supports it (e.g. logback or log4j2) </p> \n<p> As the diagnostic logging context is thread based; bear in mind that you will lose the context if part of the service execution chain contains a something like <a href=\"splitter/PoolingMessageSplitterService.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\"><code>PoolingMessageSplitterService</code></a> or similar (i.e. something with an underlying thread pool that acts on the message). </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/system/StaticCommandArgument.html",
      "fullClassName" : "com.adaptris.core.services.system.StaticCommandArgument",
      "className" : "StaticCommandArgument",
      "packageName" : "com.adaptris.core.services.system",
      "componentType" : "object",
      "alias" : "system-command-static-argument",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StaticCommandArgument\nextends java.lang.Object\nimplements CommandArgument",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StaticCommandArgument</span>\nextends java.lang.Object\nimplements <a href=\"CommandArgument.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\">CommandArgument</a>",
      "description" : "Returns a fixed value for this command line argument.",
      "descriptionHtml" : "Returns a fixed value for this command line argument.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/event/AdapterCloseEvent.html",
      "fullClassName" : "com.adaptris.core.event.AdapterCloseEvent",
      "className" : "AdapterCloseEvent",
      "packageName" : "com.adaptris.core.event",
      "componentType" : "object",
      "alias" : "adapter-close-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AdapterCloseEvent\nextends AdapterLifecycleEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdapterCloseEvent</span>\nextends <a href=\"../AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdapterLifecycleEvent</a>",
      "description" : "AdapterLifecycleEvent indicating that close has been invoked.",
      "descriptionHtml" : "<p> <code>AdapterLifecycleEvent</code> indicating that <code>close</code> has been invoked. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/GoogleCloudPubSubTransformService.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.GoogleCloudPubSubTransformService",
      "className" : "GoogleCloudPubSubTransformService",
      "packageName" : "com.adaptris.google.cloud.pubsub",
      "componentType" : "service",
      "alias" : "google-cloud-pubsub-transform-service",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Map from google pubsub message format to an Interlok message",
        "tag" : "service,gcloud"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Map from google pubsub message format to an Interlok message\",\n                  tag=\"service,gcloud\")\npublic class GoogleCloudPubSubTransformService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Map from google pubsub message format to an Interlok message\",\n                  tag=\"service,gcloud\")\npublic class <span class=\"typeNameLabel\">GoogleCloudPubSubTransformService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/MessageIdProperty.html",
      "fullClassName" : "com.adaptris.core.msmq.javonet.MessageIdProperty",
      "className" : "MessageIdProperty",
      "packageName" : "com.adaptris.core.msmq.javonet",
      "componentType" : "object",
      "alias" : "javonet-msmq-message-id",
      "deprecated" : false,
      "jarFileName" : "interlok-msmq-javonet.jar",
      "profile" : { },
      "annotationDetails" : "public class MessageIdProperty\nextends MessageProperty",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MessageIdProperty</span>\nextends <a href=\"MessageProperty.html\" title=\"class in com.adaptris.core.msmq.javonet\" target=\"_new\">MessageProperty</a>",
      "description" : "Copies the AdaptrisMessage uniqueId to and from MSMQ Message fields. Note that System.Messaging.Message does not allow you to set the Id property; it is always auto-assigned. As a result, if you attempt to map the AdaptrisMessage ID to this field, it will fail.",
      "descriptionHtml" : "Copies the AdaptrisMessage uniqueId to and from MSMQ Message fields. \n<p> Note that <code>System.Messaging.Message</code> does not allow you to set the <code>Id</code> property; it is always auto-assigned. As a result, if you attempt to map the AdaptrisMessage ID to this field, it will fail. </p>",
      "inheritance" : [
        {
          "name" : "MessageProperty",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-msmq-javonet/4.0.0B1-RELEASE/com/adaptris/core/msmq/javonet/MessageProperty.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MSMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-msmq-javonet",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/helpers/DynamicPortProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.helpers.DynamicPortProvider",
      "className" : "DynamicPortProvider",
      "packageName" : "com.adaptris.tester.runtime.helpers",
      "componentType" : "object",
      "alias" : "dynamic-port-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class DynamicPortProvider\nextends java.lang.Object\nimplements PortProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DynamicPortProvider</span>\nextends java.lang.Object\nimplements <a href=\"PortProvider.html\" title=\"interface in com.adaptris.tester.runtime.helpers\" target=\"_new\">PortProvider</a>",
      "description" : "Implementation of PortProvider that returns available port based on offset. Under the covers it uses PortManager",
      "descriptionHtml" : "Implementation of \n<a href=\"PortProvider.html\" title=\"interface in com.adaptris.tester.runtime.helpers\" target=\"_new\"><code>PortProvider</code></a> that returns available port based on offset. \n<p> Under the covers it uses <a href=\"../../utils/PortManager.html\" title=\"class in com.adaptris.tester.utils\" target=\"_new\"><code>PortManager</code></a> \n <!--/p--></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/ResponseHeadersAsObjectMetadata.html",
      "fullClassName" : "com.adaptris.core.http.client.net.ResponseHeadersAsObjectMetadata",
      "className" : "ResponseHeadersAsObjectMetadata",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-response-headers-as-object-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ResponseHeadersAsObjectMetadata\nextends MetadataResponseHeaderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ResponseHeadersAsObjectMetadata</span>\nextends <a href=\"MetadataResponseHeaderImpl.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\">MetadataResponseHeaderImpl</a>",
      "description" : "Concrete implementation of ResponseHeaderHandler which adds all the HTTP headers from the response as object metadata to the AdaptrisMessage. For each header field that exists, there will be a corresponding URLConnectionHeaderField in object metadata. Note that HttpURLConnection exposes header fields as a List<String> so this is reflected in the URLConnectionHeaderField. In most situations there will only be a single entry in the list. This will include header fields where the key is null; this will end up as the string \"null\". HttpURLConnection exposes the HTTP status line (e.g. 200 HTTP/1.1 OK as a header field with no key so this will generally be the object metadata associated with \"null\".",
      "descriptionHtml" : "Concrete implementation of \n<a href=\"../ResponseHeaderHandler.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>ResponseHeaderHandler</code></a> which adds all the HTTP headers from the response as object metadata to the \n<a href=\"../../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>. \n<p>For each header field that exists, there will be a corresponding <a href=\"URLConnectionHeaderField.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>URLConnectionHeaderField</code></a> in object metadata. Note that <code>HttpURLConnection</code> exposes header fields as a <code>List&lt;String&gt;</code> so this is reflected in the <a href=\"URLConnectionHeaderField.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>URLConnectionHeaderField</code></a>. In most situations there will only be a single entry in the list. </p> \n<p>This will include header fields where the key is <code>null</code>; this will end up as the string <code>\"null\"</code>. <code>HttpURLConnection</code> exposes the HTTP status line (e.g. <code>200 HTTP/1.1 OK</code> as a header field with no key so this will generally be the object metadata associated with <code>\"null\"</code>. </p>",
      "inheritance" : [
        {
          "name" : "MetadataResponseHeaderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/MetadataResponseHeaderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jruby/4.0.0B1-RELEASE/com/adaptris/jruby/ScriptWrapper.html",
      "fullClassName" : "com.adaptris.jruby.ScriptWrapper",
      "className" : "ScriptWrapper",
      "packageName" : "com.adaptris.jruby",
      "componentType" : "object",
      "alias" : "jruby-script-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-jruby.jar",
      "profile" : { },
      "annotationDetails" : "public class ScriptWrapper\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ScriptWrapper</span>\nextends java.lang.Object",
      "description" : "Wraps a jruby script location.",
      "descriptionHtml" : "Wraps a jruby script location.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Scripting/JRuby",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jruby",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/edi/X12SeparatorSet.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.edi.X12SeparatorSet",
      "className" : "X12SeparatorSet",
      "packageName" : "com.adaptris.adapter.edistream.parser.edi",
      "componentType" : "object",
      "alias" : "edi-x12-separators",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class X12SeparatorSet\nextends AbstractSeparatorSet\nimplements IEdiSeparatorSet",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">X12SeparatorSet</span>\nextends <a href=\"AbstractSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\">AbstractSeparatorSet</a>\nimplements <a href=\"IEdiSeparatorSet.html\" title=\"interface in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\">IEdiSeparatorSet</a>",
      "description" : "Defines typical separators used for X12 messages. Note that X12 msgs can use varying separators rather stick to a specific set. Best to enable autodetect functionality to pick these up dynamically, and rely on this class as a backup.",
      "descriptionHtml" : "Defines typical separators used for X12 messages.\n<br> Note that X12 msgs can use varying separators rather stick to a specific set. Best to enable autodetect functionality to pick these up dynamically, and rely on this class as a backup.",
      "inheritance" : [
        {
          "name" : "AbstractSeparatorSet",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/edi/AbstractSeparatorSet.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/jdbc/MetadataColumnFilter.html",
      "fullClassName" : "com.adaptris.csv.jdbc.MetadataColumnFilter",
      "className" : "MetadataColumnFilter",
      "packageName" : "com.adaptris.csv.jdbc",
      "componentType" : "object",
      "alias" : "csv-metadata-column-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.0",
        "summary" : "Filter CSV column output based on metadata keys",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Filter CSV column output based on metadata keys\",\n                  since=\"3.8.0\")\npublic class MetadataColumnFilter\nextends java.lang.Object\nimplements ColumnFilter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Filter CSV column output based on metadata keys\",\n                  since=\"3.8.0\")\npublic class <span class=\"typeNameLabel\">MetadataColumnFilter</span>\nextends java.lang.Object\nimplements <a href=\"ColumnFilter.html\" title=\"interface in com.adaptris.csv.jdbc\" target=\"_new\">ColumnFilter</a>",
      "description" : "ColumnFilter implementation that allows you to filter columns based on metadata.",
      "descriptionHtml" : "<a href=\"ColumnFilter.html\" title=\"interface in com.adaptris.csv.jdbc\" target=\"_new\"><code>ColumnFilter</code></a> implementation that allows you to filter columns based on metadata.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/GenerateSignatureService.html",
      "fullClassName" : "com.adaptris.aws.kms.GenerateSignatureService",
      "className" : "GenerateSignatureService",
      "packageName" : "com.adaptris.aws.kms",
      "componentType" : "service",
      "alias" : "aws-kms-generate-signature",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-kms.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.kms.AWSKMSConnection"
        ],
        "since" : "3.10.1",
        "summary" : "Signing via AWS KMS",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Signing via AWS KMS\",\n                  recommended=AWSKMSConnection.class,\n                  since=\"3.10.1\")\npublic class GenerateSignatureService\nextends SignatureService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Signing via AWS KMS\",\n                  recommended=<a href=\"AWSKMSConnection.html\" title=\"class in com.adaptris.aws.kms\" target=\"_new\">AWSKMSConnection.class</a>,\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">GenerateSignatureService</span>\nextends <a href=\"SignatureService.html\" title=\"class in com.adaptris.aws.kms\" target=\"_new\">SignatureService</a>",
      "description" : "Generate a signature using AWS KMS.",
      "descriptionHtml" : "Generate a signature using AWS KMS.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "AWSKMSServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/AWSKMSServiceImpl.html"
        },
        {
          "name" : "SignatureService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/SignatureService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/KMS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-kms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kinesis/4.0.0B1-RELEASE/com/adaptris/aws/kinesis/KinesisSynchronousStreamProducer.html",
      "fullClassName" : "com.adaptris.aws.kinesis.KinesisSynchronousStreamProducer",
      "className" : "KinesisSynchronousStreamProducer",
      "packageName" : "com.adaptris.aws.kinesis",
      "componentType" : "producer",
      "alias" : "aws-kinesis-synchronous-stream-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-kinesis.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.kinesis.ProducerLibraryConnection"
        ],
        "since" : "",
        "summary" : "Produce synchronously to Amazon Kinesis using the Kinesis Producer Library",
        "tag" : "amazon,aws,kinesis,producer"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Produce synchronously to Amazon Kinesis using the Kinesis Producer Library\",\n                  tag=\"amazon,aws,kinesis,producer\",\n                  recommended=ProducerLibraryConnection.class)\npublic class KinesisSynchronousStreamProducer\nextends KinesisStreamProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Produce synchronously to Amazon Kinesis using the Kinesis Producer Library\",\n                  tag=\"amazon,aws,kinesis,producer\",\n                  recommended=<a href=\"ProducerLibraryConnection.html\" title=\"class in com.adaptris.aws.kinesis\" target=\"_new\">ProducerLibraryConnection.class</a>)\npublic class <span class=\"typeNameLabel\">KinesisSynchronousStreamProducer</span>\nextends <a href=\"KinesisStreamProducer.html\" title=\"class in com.adaptris.aws.kinesis\" target=\"_new\">KinesisStreamProducer</a>",
      "description" : "Producer to amazon kinesis using the Kinesis Producer Library. Different from KinesisStreamProducer in that it waits for a confirmation of produce to the stream, rather than offloading to the KPL. This departs from a standard producer in the sense the #getDestination() can be regarded as optional. The reason for this is that both stream and partitionKey are required elements, but #getDestination() only provides a single method (of course we could change it to provide more). So the behaviour here is changed so that if KinesisStreamProducer.setStream(String) is blank, then we use #getDestination(), otherwise we use KinesisStreamProducer.getStream(). KinesisStreamProducer.setPartitionKey(String) should always be populated with a non-blank value, which will be used.",
      "descriptionHtml" : "Producer to amazon kinesis using the Kinesis Producer Library. \n<p> Different from <a href=\"KinesisStreamProducer.html\" title=\"class in com.adaptris.aws.kinesis\" target=\"_new\"><code>KinesisStreamProducer</code></a> in that it waits for a confirmation of produce to the stream, rather than offloading to the KPL. </p> \n<p> This departs from a standard producer in the sense the <code>#getDestination()</code> can be regarded as optional. The reason for this is that both <code>stream</code> and <code>partitionKey</code> are required elements, but <code>#getDestination()</code> only provides a single method (of course we could change it to provide more). So the behaviour here is changed so that </p>\n<ul> \n <li>if <a href=\"KinesisStreamProducer.html#setStream(java.lang.String)\" target=\"_new\"><code>KinesisStreamProducer.setStream(String)</code></a> is blank, then we use <code>#getDestination()</code>, otherwise we use <a href=\"KinesisStreamProducer.html#getStream()\" target=\"_new\"><code>KinesisStreamProducer.getStream()</code></a>.</li> \n <li><a href=\"KinesisStreamProducer.html#setPartitionKey(java.lang.String)\" target=\"_new\"><code>KinesisStreamProducer.setPartitionKey(String)</code></a> should always be populated with a non-blank value, which will be used.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        },
        {
          "name" : "KinesisStreamProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kinesis/4.0.0B1-RELEASE/com/adaptris/aws/kinesis/KinesisStreamProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Kinesis",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-kinesis",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/generic/JsonResponseHandler.html",
      "fullClassName" : "com.adaptris.core.oauth.generic.JsonResponseHandler",
      "className" : "JsonResponseHandler",
      "packageName" : "com.adaptris.core.oauth.generic",
      "componentType" : "object",
      "alias" : "oauth-json-response",
      "deprecated" : false,
      "jarFileName" : "interlok-oauth-generic.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.1",
        "summary" : "Handle an OAUTH JSON response.",
        "tag" : "oauth,http,https"
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.8.1\",\n                  summary=\"Handle an OAUTH JSON response.\",\n                  tag=\"oauth,http,https\")\npublic class JsonResponseHandler\nextends ResponseHandlerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.8.1\",\n                  summary=\"Handle an OAUTH JSON response.\",\n                  tag=\"oauth,http,https\")\npublic class <span class=\"typeNameLabel\">JsonResponseHandler</span>\nextends <a href=\"ResponseHandlerImpl.html\" title=\"class in com.adaptris.core.oauth.generic\" target=\"_new\">ResponseHandlerImpl</a>",
      "description" : "Handle an OAUTH JSON response. Configure the various token values using standard jsonpath notation; they will be extracted from the HTTP response to build the access token.",
      "descriptionHtml" : "Handle an OAUTH JSON response. \n<p> Configure the various token values using standard <code>jsonpath</code> notation; they will be extracted from the HTTP response to build the access token. </p>",
      "inheritance" : [
        {
          "name" : "ResponseHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-oauth-generic/4.0.0B1-RELEASE/com/adaptris/core/oauth/generic/ResponseHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OAUTH/Generic",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-oauth-generic",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/SolaceJndiVendorImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.solace.SolaceJndiVendorImplementation",
      "className" : "SolaceJndiVendorImplementation",
      "packageName" : "com.adaptris.core.jms.solace",
      "componentType" : "object",
      "alias" : "solace-jndi-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Custom solace JNDI implementation that has consumer creation reties should it error when starting up/restarting..",
        "tag" : "consumer,jms,jndi,vendor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Custom solace JNDI implementation that has consumer creation reties should it error when starting up/restarting..\",\n                  tag=\"consumer,jms,jndi,vendor\")\npublic class SolaceJndiVendorImplementation\nextends StandardJndiImplementation",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Custom solace JNDI implementation that has consumer creation reties should it error when starting up/restarting..\",\n                  tag=\"consumer,jms,jndi,vendor\")\npublic class <span class=\"typeNameLabel\">SolaceJndiVendorImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/StandardJndiImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms.jndi\" class=\"externalLink\" target=\"_new\">StandardJndiImplementation</a>",
      "description" : "JNDI Solace implementation of VendorImplementation. This vendor implementation allows you to configure the JNDI properties that will fetch the connection-factory from the Solace JNDI store.. The main reason to use this JNDI implementation rather than the standard JNDI implementation, is that this one allows us retry creating the consumer should it fail. Typically this might happen if a Solace queue has been shutdown. In which case the consumer creation will fail. This was built against Solace 10.6.0",
      "descriptionHtml" : "<p> JNDI Solace implementation of <code>VendorImplementation</code>. </p> \n<p> This vendor implementation allows you to configure the JNDI properties that will fetch the connection-factory from the Solace JNDI store.. </p> \n<p> The main reason to use this JNDI implementation rather than the standard JNDI implementation, is that this one allows us retry creating the consumer should it fail. Typically this might happen if a Solace queue has been shutdown. In which case the consumer creation will fail. </p> \n<p> <b>This was built against Solace 10.6.0</b> </p> \n<p></p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "BaseJndiImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/BaseJndiImplementation.html?is-external=true"
        },
        {
          "name" : "StandardJndiImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/StandardJndiImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/OnMaxThrowException.html",
      "fullClassName" : "com.adaptris.core.services.conditional.OnMaxThrowException",
      "className" : "OnMaxThrowException",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "object",
      "alias" : "max-loops-throw-exception",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "MaxLoopBehaviour implementation that throws a ServiceException.",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MaxLoopBehaviour implementation that throws a ServiceException.\",\n                  since=\"3.9.1\")\npublic class OnMaxThrowException\nextends java.lang.Object\nimplements MaxLoopBehaviour",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MaxLoopBehaviour implementation that throws a ServiceException.\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">OnMaxThrowException</span>\nextends java.lang.Object\nimplements <a href=\"MaxLoopBehaviour.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">MaxLoopBehaviour</a>",
      "description" : "MaxLoopBehaviour implementation that throws a ServiceException. When the maximum number of loops is hit; an exception is thrown.",
      "descriptionHtml" : "<a href=\"MaxLoopBehaviour.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>MaxLoopBehaviour</code></a> implementation that throws a \n<a href=\"../../ServiceException.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>ServiceException</code></a>. \n<p> When the maximum number of loops is hit; an exception is thrown. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-web-token/4.0.0B1-RELEASE/com/adaptris/core/jwt/secrets/Base64EncodedSecret.html",
      "fullClassName" : "com.adaptris.core.jwt.secrets.Base64EncodedSecret",
      "className" : "Base64EncodedSecret",
      "packageName" : "com.adaptris.core.jwt.secrets",
      "componentType" : "object",
      "alias" : "base64-encoded-secret",
      "deprecated" : false,
      "jarFileName" : "interlok-json-web-token.jar",
      "profile" : { },
      "annotationDetails" : "public class Base64EncodedSecret\nextends java.lang.Object\nimplements SecretConfigurator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Base64EncodedSecret</span>\nextends java.lang.Object\nimplements <a href=\"SecretConfigurator.html\" title=\"interface in com.adaptris.core.jwt.secrets\" target=\"_new\">SecretConfigurator</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JWT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-web-token",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/LargeMessageWorkflow.html",
      "fullClassName" : "com.adaptris.core.lms.LargeMessageWorkflow",
      "className" : "LargeMessageWorkflow",
      "packageName" : "com.adaptris.core.lms",
      "componentType" : "workflow",
      "alias" : "large-message-workflow",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Workflow that supports arbitrarily large messages",
        "tag" : "workflow,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Workflow that supports arbitrarily large messages\",\n                  tag=\"workflow,base\")\npublic class LargeMessageWorkflow\nextends StandardWorkflow",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Workflow that supports arbitrarily large messages\",\n                  tag=\"workflow,base\")\npublic class <span class=\"typeNameLabel\">LargeMessageWorkflow</span>\nextends <a href=\"../StandardWorkflow.html\" title=\"class in com.adaptris.core\" target=\"_new\">StandardWorkflow</a>",
      "description" : "Workflow that does not store the original message for error-handling purposes. This workflow is intended to provide better performance when faced with extremely large messages. The behaviour of StandardWorkflow is to attempt to clone the message before attempting trigger the workflow; This can take an exceptionally long time if the message is greater than 300Mb, leading to a simple FsConsumer to FsProducer taking something like 300000ms. While error handling is supported, the current message in transit is provided to the ProcessingExceptionHandler; so best practise when using this workflow is to immediately archive it with LargeFsProducer and use that for recovery.",
      "descriptionHtml" : "Workflow that does not store the original message for error-handling purposes. \n<p> This workflow is intended to provide better performance when faced with extremely large messages. The behaviour of StandardWorkflow is to attempt to clone the message before attempting trigger the workflow; This can take an exceptionally long time if the message is greater than 300Mb, leading to a simple FsConsumer to FsProducer taking something like 300000ms. </p> \n<p> While error handling is supported, the current message in transit is provided to the <a href=\"../ProcessingExceptionHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ProcessingExceptionHandler</code></a>; so best practise when using this workflow is to immediately archive it with <a href=\"LargeFsProducer.html\" title=\"class in com.adaptris.core.lms\" target=\"_new\"><code>LargeFsProducer</code></a> and use that for recovery. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/WorkflowImp.html"
        },
        {
          "name" : "StandardWorkflowImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflowImpl.html"
        },
        {
          "name" : "StandardWorkflow",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardWorkflow.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/MetadataXpathNodeListQuery.html",
      "fullClassName" : "com.adaptris.core.services.metadata.xpath.MetadataXpathNodeListQuery",
      "className" : "MetadataXpathNodeListQuery",
      "packageName" : "com.adaptris.core.services.metadata.xpath",
      "componentType" : "object",
      "alias" : "metadata-xpath-nodelist-query",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataXpathNodeListQuery\nextends MetadataXpathQueryImpl\nimplements XpathObjectQuery",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataXpathNodeListQuery</span>\nextends <a href=\"MetadataXpathQueryImpl.html\" title=\"class in com.adaptris.core.services.metadata.xpath\" target=\"_new\">MetadataXpathQueryImpl</a>\nimplements <a href=\"XpathObjectQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathObjectQuery</a>",
      "description" : "XpathQuery implementation that retuns a NodeList from an xpath derived from metadata. Note that depending on the XPath engine; it is possible that XpathQueryImpl.setAllowEmptyResults(Boolean) may have no effect, as it may return a zero length NodeList.",
      "descriptionHtml" : "<a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a> implementation that retuns a \n<code>NodeList</code> from an xpath derived from metadata. \n<p> Note that depending on the XPath engine; it is possible that <a href=\"XpathQueryImpl.html#setAllowEmptyResults(java.lang.Boolean)\" target=\"_new\"><code>XpathQueryImpl.setAllowEmptyResults(Boolean)</code></a> may have no effect, as it may return a zero length NodeList. </p>",
      "inheritance" : [
        {
          "name" : "XpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/XpathQueryImpl.html"
        },
        {
          "name" : "MetadataXpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/MetadataXpathQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/NoOpHeaderHandler.html",
      "fullClassName" : "com.adaptris.core.http.jetty.NoOpHeaderHandler",
      "className" : "NoOpHeaderHandler",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-http-ignore-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoOpHeaderHandler\nextends java.lang.Object\nimplements HeaderHandler<javax.servlet.http.HttpServletRequest>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoOpHeaderHandler</span>\nextends java.lang.Object\nimplements <a href=\"../server/HeaderHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\">HeaderHandler</a>&lt;javax.servlet.http.HttpServletRequest&gt;",
      "description" : "HeaderHandler implementation that ignores HTTP headers.",
      "descriptionHtml" : "<a href=\"../server/HeaderHandler.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>HeaderHandler</code></a> implementation that ignores HTTP headers.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/transaction/XAJmsTransactionManager.html",
      "fullClassName" : "com.adaptris.xa.jms.transaction.XAJmsTransactionManager",
      "className" : "XAJmsTransactionManager",
      "packageName" : "com.adaptris.xa.jms.transaction",
      "componentType" : "object",
      "alias" : "xa-jms-transaction-manager",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-atomikos.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transaction manager that enlists/delists per transaction.",
        "tag" : "transactions,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transaction manager that enlists/delists per transaction.\",\n                  tag=\"transactions,jms\")\npublic class XAJmsTransactionManager\nextends java.lang.Object\nimplements TransactionManager, java.io.Serializable, LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transaction manager that enlists/delists per transaction.\",\n                  tag=\"transactions,jms\")\npublic class <span class=\"typeNameLabel\">XAJmsTransactionManager</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transaction/TransactionManager.html?is-external=true\" title=\"class or interface in com.adaptris.core.transaction\" class=\"externalLink\" target=\"_new\">TransactionManager</a>, java.io.Serializable, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Basic transaction manager that attaches any created transactions to the current thread. You can further configure the transaction manager by adding a transactions.properties file to your classpath. For this TransactionManager implementation you must set the following property in your transactions.properties file;  com.atomikos.icatch.automatic_resource_registration=true A typical transactions.properties file will look like the following;  com.atomikos.icatch.automatic_resource_registration=true\n com.atomikos.icatch.max_timeout=3600000\n com.atomikos.icatch.default_jta_timeout=3600000\n The two timeout values above must be set to a value greater than the time it takes your consumer to begin a transaction, process messages and finally commit/rollback the transaction.",
      "descriptionHtml" : "<p> Basic transaction manager that attaches any created transactions to the current thread. </p> \n<p> You can further configure the transaction manager by adding a transactions.properties file to your classpath. </p> \n<p> For this TransactionManager implementation you must set the following property in your transactions.properties file; </p>\n<pre> com.atomikos.icatch.automatic_resource_registration=true </pre> \n<p></p> \n<p> A typical transactions.properties file will look like the following; </p>\n<pre> com.atomikos.icatch.automatic_resource_registration=true\n com.atomikos.icatch.max_timeout=3600000\n com.atomikos.icatch.default_jta_timeout=3600000\n </pre> \n<p></p> \n<p> The two timeout values above must be set to a value greater than the time it takes your consumer to begin a transaction, process messages and finally commit/rollback the transaction. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Atomikos",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-atomikos",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/XmlDocumentAggregator.html",
      "fullClassName" : "com.adaptris.core.services.aggregator.XmlDocumentAggregator",
      "className" : "XmlDocumentAggregator",
      "packageName" : "com.adaptris.core.services.aggregator",
      "componentType" : "object",
      "alias" : "xml-document-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlDocumentAggregator\nextends MessageAggregatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlDocumentAggregator</span>\nextends <a href=\"MessageAggregatorImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">MessageAggregatorImpl</a>",
      "description" : "MessageAggregator implementation that creates single XML using each message that needs to be joined up. The original pre-split document forms the basis of the resulting document; each of the split documents is merged into the main document using the configured DocumentMerge function. Use setDocumentEncoding(String) to force the encoding of the resulting XML document to the required value; if not set, then either the original AdaptrisMessage.getCharEncoding() (if set) or UTF-8 will be used in that order.",
      "descriptionHtml" : "<a href=\"MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>MessageAggregator</code></a> implementation that creates single XML using each message that needs to be joined up. \n<p> The original pre-split document forms the basis of the resulting document; each of the split documents is merged into the main document using the configured <a href=\"../../../util/text/xml/DocumentMerge.html\" title=\"interface in com.adaptris.util.text.xml\" target=\"_new\"><code>DocumentMerge</code></a> function. </p> \n<p> Use <a href=\"#setDocumentEncoding(java.lang.String)\" target=\"_new\"><code>setDocumentEncoding(String)</code></a> to force the encoding of the resulting XML document to the required value; if not set, then either the original <a href=\"../../AdaptrisMessage.html#getCharEncoding()\" target=\"_new\"><code>AdaptrisMessage.getCharEncoding()</code></a> (if set) or <code>UTF-8</code> will be used in that order. </p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataToPayloadService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataToPayloadService",
      "className" : "MetadataToPayloadService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-to-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Takes a metadata value and sets that as the payload",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Takes a metadata value and sets that as the payload\",\n                  tag=\"service,metadata\")\npublic class MetadataToPayloadService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Takes a metadata value and sets that as the payload\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataToPayloadService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Takes a metadata value and sets that as the payload. This can be treated as a simplified form of PayloadFromMetadataService which does not have a template and just uses the actual metadata value as the payload. It is also designed as the reverse form of PayloadToMetadataService and allows you to take a piece of object metadata containing byte[] and make it the payload. This service will throw an error if the target metadata item does not exist. This service also supports a resolvable metadata key via MetadataResolver; and if the metadata source is MetadataToPayloadService.MetadataSource.Standard then an additional InterlokMessage.resolve(String, boolean) step is executed.",
      "descriptionHtml" : "Takes a metadata value and sets that as the payload. \n<p> This can be treated as a simplified form of <code>PayloadFromMetadataService</code> which does not have a template and just uses the actual metadata value as the payload. It is also designed as the reverse form of <a href=\"PayloadToMetadataService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>PayloadToMetadataService</code></a> and allows you to take a piece of object metadata containing <code>byte[]</code> and make it the payload. </p> \n<p> This service will throw an error if the target metadata item does not exist. </p> \n<p> This service also supports a resolvable metadata key via <a href=\"../../metadata/MetadataResolver.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\"><code>MetadataResolver</code></a>; and if the metadata source is <a href=\"MetadataToPayloadService.MetadataSource.html#Standard\" target=\"_new\"><code>MetadataToPayloadService.MetadataSource.Standard</code></a> then an additional <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#resolve(java.lang.String,boolean)\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.resolve(String, boolean)</code></a> step is executed. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/RemoveFromCacheService.html",
      "fullClassName" : "com.adaptris.core.services.cache.RemoveFromCacheService",
      "className" : "RemoveFromCacheService",
      "packageName" : "com.adaptris.core.services.cache",
      "componentType" : "service",
      "alias" : "remove-from-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "",
        "summary" : "Retrieve values from a cache, and remove those values from the cache",
        "tag" : "service,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Retrieve values from a cache, and remove those values from the cache\",\n                  tag=\"service,cache\",\n                  recommended=CacheConnection.class)\npublic class RemoveFromCacheService\nextends RetrieveFromCacheService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Retrieve values from a cache, and remove those values from the cache\",\n                  tag=\"service,cache\",\n                  recommended=<a href=\"CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">RemoveFromCacheService</span>\nextends <a href=\"RetrieveFromCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">RetrieveFromCacheService</a>",
      "description" : "Service that retrieves an item from the cache and then removes it",
      "descriptionHtml" : "Service that retrieves an item from the cache and then removes it",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "CacheServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceImpl.html"
        },
        {
          "name" : "CacheServiceBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/CacheServiceBase.html"
        },
        {
          "name" : "RetrieveFromCacheService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/RetrieveFromCacheService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/DynamicBasicAuthorizationHeader.html",
      "fullClassName" : "com.adaptris.core.http.apache.DynamicBasicAuthorizationHeader",
      "className" : "DynamicBasicAuthorizationHeader",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-dynamic-authorization-header",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class DynamicBasicAuthorizationHeader\nextends java.lang.Object\nimplements ApacheRequestAuthenticator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DynamicBasicAuthorizationHeader</span>\nextends java.lang.Object\nimplements <a href=\"ApacheRequestAuthenticator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\">ApacheRequestAuthenticator</a>",
      "description" : "Build a HttpConstants.AUTHORIZATION (Basic only) from configuration (or metadata). In some situations it may be preferred to build the HttpConstants.AUTHORIZATION header rather than relying on the behaviour of URLConnection to request a PasswordAuthentication object when accessing protected resources (this is what happens if you use UserPassAuthentication). You can use this class to create a Basic authorization.",
      "descriptionHtml" : "Build a \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/HttpConstants.html?is-external=true#AUTHORIZATION\" title=\"class or interface in com.adaptris.core.http\" class=\"externalLink\" target=\"_new\"><code>HttpConstants.AUTHORIZATION</code></a> (Basic only) from configuration (or metadata). \n<p> In some situations it may be preferred to build the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/HttpConstants.html?is-external=true#AUTHORIZATION\" title=\"class or interface in com.adaptris.core.http\" class=\"externalLink\" target=\"_new\"><code>HttpConstants.AUTHORIZATION</code></a> header rather than relying on the behaviour of <code>URLConnection</code> to request a <code>PasswordAuthentication</code> object when accessing protected resources (this is what happens if you use <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/auth/UserPassAuthentication.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.auth\" class=\"externalLink\" target=\"_new\"><code>UserPassAuthentication</code></a>). You can use this class to create a Basic authorization. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltVariables.html",
      "fullClassName" : "com.adaptris.core.json.jslt.JsltVariables",
      "className" : "JsltVariables",
      "packageName" : "com.adaptris.core.json.jslt",
      "componentType" : "object",
      "alias" : "jslt-variables",
      "deprecated" : false,
      "jarFileName" : "interlok-jslt.jar",
      "profile" : { },
      "annotationDetails" : "public class JsltVariables\nextends java.lang.Object\nimplements JsltVariableBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JsltVariables</span>\nextends java.lang.Object\nimplements <a href=\"JsltVariableBuilder.html\" title=\"interface in com.adaptris.core.json.jslt\" target=\"_new\">JsltVariableBuilder</a>",
      "description" : "Wrapper from handling multiple types of variables for inclusion into a JSLT transform.",
      "descriptionHtml" : "Wrapper from handling multiple types of variables for inclusion into a JSLT transform.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSLT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jslt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/translators/StringPayloadCacheTranslator.html",
      "fullClassName" : "com.adaptris.core.services.cache.translators.StringPayloadCacheTranslator",
      "className" : "StringPayloadCacheTranslator",
      "packageName" : "com.adaptris.core.services.cache.translators",
      "componentType" : "object",
      "alias" : "string-payload-cache-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class StringPayloadCacheTranslator\nextends java.lang.Object\nimplements CacheValueTranslator<java.lang.String>, CacheKeyTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringPayloadCacheTranslator</span>\nextends java.lang.Object\nimplements <a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheValueTranslator</a>&lt;java.lang.String&gt;, <a href=\"../CacheKeyTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheKeyTranslator</a>",
      "description" : "Implementation of CacheValueTranslator that retrieves / sets the payload of the message.",
      "descriptionHtml" : "Implementation of \n<a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheValueTranslator</code></a> that retrieves / sets the payload of the message.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sqs/4.0.0B1-RELEASE/com/adaptris/aws/sqs/AmazonSQSConsumer.html",
      "fullClassName" : "com.adaptris.aws.sqs.AmazonSQSConsumer",
      "className" : "AmazonSQSConsumer",
      "packageName" : "com.adaptris.aws.sqs",
      "componentType" : "consumer",
      "alias" : "amazon-sqs-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-sqs.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "SQSMessageID"
        ],
        "recommended" : [
          "com.adaptris.aws.sqs.AmazonSQSConnection"
        ],
        "since" : "",
        "summary" : "Receive messages from Amazon SQS",
        "tag" : "consumer,amazon,sqs"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Receive messages from Amazon SQS\",\n                  tag=\"consumer,amazon,sqs\",\n                  recommended=AmazonSQSConnection.class,\n                  metadata=\"SQSMessageID\")\npublic class AmazonSQSConsumer\nextends AdaptrisPollingConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Receive messages from Amazon SQS\",\n                  tag=\"consumer,amazon,sqs\",\n                  recommended=<a href=\"AmazonSQSConnection.html\" title=\"class in com.adaptris.aws.sqs\" target=\"_new\">AmazonSQSConnection.class</a>,\n                  metadata=\"SQSMessageID\")\npublic class <span class=\"typeNameLabel\">AmazonSQSConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisPollingConsumer</a>",
      "description" : "Amazon Web Services SQS implementation of AdaptrisMessageConsumer.",
      "descriptionHtml" : "<p> Amazon Web Services SQS implementation of <code>AdaptrisMessageConsumer</code>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/SQS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-sqs",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/datastore/SimpleDataStore.html",
      "fullClassName" : "com.adaptris.util.datastore.SimpleDataStore",
      "className" : "SimpleDataStore",
      "packageName" : "com.adaptris.util.datastore",
      "componentType" : "object",
      "alias" : "simple-data-store",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleDataStore\nextends DataStore",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleDataStore</span>\nextends <a href=\"DataStore.html\" title=\"class in com.adaptris.util.datastore\" target=\"_new\">DataStore</a>",
      "description" : "SimpleDataStore. A simple concrete implementation of the datastore class. The Datastore, takes a number of properties which determines its behaviour, these are:-  \n  #The Fully qualified filename where data will be stored.\n  simpledatastore.fileName\n  #The Fully qualified filename where a semaphore lock file will be stored.\n  simpledatastore.lockFile\n  #The number of attempts made to get a lock before an error is thrown\n  simpledatastore.maxLockAttempts",
      "descriptionHtml" : "SimpleDataStore. \n<p> A simple concrete implementation of the datastore class. </p>\n<p> The Datastore, takes a number of properties which determines its behaviour, these are:- </p>\n<p> </p>\n<pre> <code>\n  #The Fully qualified filename where data will be stored.\n  simpledatastore.fileName\n  #The Fully qualified filename where a semaphore lock file will be stored.\n  simpledatastore.lockFile\n  #The number of attempts made to get a lock before an error is thrown\n  simpledatastore.maxLockAttempts\n </code>\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "DataStore",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/datastore/DataStore.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/TrimMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.TrimMetadataService",
      "className" : "TrimMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "trim-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Trim leading/trailing spaces from metadata",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Trim leading/trailing spaces from metadata\",\n                  tag=\"service,metadata\")\npublic class TrimMetadataService\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Trim leading/trailing spaces from metadata\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">TrimMetadataService</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "Trim a metadata values of leading and trailing whitespace. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will be trimmed.",
      "descriptionHtml" : "Trim a metadata values of leading and trailing whitespace. \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will be trimmed. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/ClearLoggingContext.html",
      "fullClassName" : "com.adaptris.core.services.ClearLoggingContext",
      "className" : "ClearLoggingContext",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "clear-logging-context-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.0",
        "summary" : "Remove all mapped diagnostic contexts",
        "tag" : "service,logging,debug"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Remove all mapped diagnostic contexts\",\n                  tag=\"service,logging,debug\",\n                  since=\"3.10.0\")\npublic class ClearLoggingContext\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Remove all mapped diagnostic contexts\",\n                  tag=\"service,logging,debug\",\n                  since=\"3.10.0\")\npublic class <span class=\"typeNameLabel\">ClearLoggingContext</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Remove all mapped diagnostic context via MDC.clear().",
      "descriptionHtml" : "Remove all mapped diagnostic context via \n<code>MDC.clear()</code>.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/FileExtractionMode.html",
      "fullClassName" : "com.adaptris.filesystem.FileExtractionMode",
      "className" : "FileExtractionMode",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "object",
      "alias" : "file-extraction-mode",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : { },
      "annotationDetails" : "public class FileExtractionMode\nextends java.lang.Object\nimplements ExtractionMode",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FileExtractionMode</span>\nextends java.lang.Object\nimplements <a href=\"ExtractionMode.html\" title=\"interface in com.adaptris.filesystem\" target=\"_new\">ExtractionMode</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transaction/SharedTransactionManager.html",
      "fullClassName" : "com.adaptris.core.transaction.SharedTransactionManager",
      "className" : "SharedTransactionManager",
      "packageName" : "com.adaptris.core.transaction",
      "componentType" : "object",
      "alias" : "shared-transaction-manager",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Transaction Manager that refers to another Transaction Manager configured elsewhere",
        "tag" : "transactionManager,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Transaction Manager that refers to another Transaction Manager configured elsewhere\",\n                  tag=\"transactionManager,base\")\npublic class SharedTransactionManager\nextends SharedComponent\nimplements TransactionManager",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Transaction Manager that refers to another Transaction Manager configured elsewhere\",\n                  tag=\"transactionManager,base\")\npublic class <span class=\"typeNameLabel\">SharedTransactionManager</span>\nextends <a href=\"../SharedComponent.html\" title=\"class in com.adaptris.core\" target=\"_new\">SharedComponent</a>\nimplements <a href=\"TransactionManager.html\" title=\"interface in com.adaptris.core.transaction\" target=\"_new\">TransactionManager</a>",
      "inheritance" : [
        {
          "name" : "SharedComponent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedComponent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-triggered/4.0.0B1-RELEASE/com/adaptris/core/triggered/JmxConsumer.html",
      "fullClassName" : "com.adaptris.core.triggered.JmxConsumer",
      "className" : "JmxConsumer",
      "packageName" : "com.adaptris.core.triggered",
      "componentType" : "consumer",
      "alias" : "triggered-jmx-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-triggered.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Consumer type that can fires based on a JMX invocation",
        "tag" : "consumer,jmx,triggered"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Consumer type that can fires based on a JMX invocation\",\n                  tag=\"consumer,jmx,triggered\")\npublic class JmxConsumer\nextends AdaptrisMessageConsumerImp\nimplements LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Consumer type that can fires based on a JMX invocation\",\n                  tag=\"consumer,jmx,triggered\")\npublic class <span class=\"typeNameLabel\">JmxConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisMessageConsumerImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Consumer type that can fires based on a JMX invocation. The unique id is used as part of the ObjectName \"Adaptris:type=TriggeredChannel, uid=\"",
      "descriptionHtml" : "Consumer type that can fires based on a JMX invocation. \n<p> The unique id is used as part of the <code>ObjectName</code> <a href=\"#JMX_OBJECT_NAME_PREFIX\" target=\"_new\">\"Adaptris:type=TriggeredChannel, uid=\"</a> </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Misc/Triggered",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-triggered",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-web-token/4.0.0B1-RELEASE/com/adaptris/core/jwt/secrets/PGPSecret.html",
      "fullClassName" : "com.adaptris.core.jwt.secrets.PGPSecret",
      "className" : "PGPSecret",
      "packageName" : "com.adaptris.core.jwt.secrets",
      "componentType" : "object",
      "alias" : "pgp-secret",
      "deprecated" : false,
      "jarFileName" : "interlok-json-web-token.jar",
      "profile" : { },
      "annotationDetails" : "public class PGPSecret\nextends java.lang.Object\nimplements SecretConfigurator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PGPSecret</span>\nextends java.lang.Object\nimplements <a href=\"SecretConfigurator.html\" title=\"interface in com.adaptris.core.jwt.secrets\" target=\"_new\">SecretConfigurator</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JWT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-web-token",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/MultiPayloadXmlTransformService.html",
      "fullClassName" : "com.adaptris.core.transform.MultiPayloadXmlTransformService",
      "className" : "MultiPayloadXmlTransformService",
      "packageName" : "com.adaptris.core.transform",
      "componentType" : "service",
      "alias" : "multi-payload-xml-transform-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Execute an XSLT transform",
        "tag" : "service,transform,xml,multi,payload,multi-payload"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute an XSLT transform\",\n                  tag=\"service,transform,xml,multi,payload,multi-payload\")\npublic class MultiPayloadXmlTransformService\nextends XmlTransformService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute an XSLT transform\",\n                  tag=\"service,transform,xml,multi,payload,multi-payload\")\npublic class <span class=\"typeNameLabel\">MultiPayloadXmlTransformService</span>\nextends <a href=\"XmlTransformService.html\" title=\"class in com.adaptris.core.transform\" target=\"_new\">XmlTransformService</a>",
      "description" : "Implementation of Service which provides transformation of XML payloads contained within the new multi-payload message. You are required to configure the XML transformer factory; see the javadoc and implementations of XmlTransformerFactory for details on the supported transformer factories. Configuration including allow over-ride behaviour matches previous implementation.",
      "descriptionHtml" : "Implementation of \n<code>Service</code> which provides transformation of XML payloads contained within the new multi-payload message. You are required to configure the XML transformer factory; see the javadoc and implementations of \n<a href=\"../../util/text/xml/XmlTransformerFactory.html\" title=\"interface in com.adaptris.util.text.xml\" target=\"_new\"><code>XmlTransformerFactory</code></a> for details on the supported transformer factories. Configuration including allow over-ride behaviour matches previous implementation.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "XmlTransformService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/XmlTransformService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/cache/translators/MetadataCacheValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.cache.translators.MetadataCacheValueTranslator",
      "className" : "MetadataCacheValueTranslator",
      "packageName" : "com.adaptris.core.services.cache.translators",
      "componentType" : "object",
      "alias" : "metadata-cache-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataCacheValueTranslator\nextends java.lang.Object\nimplements CacheValueTranslator<java.lang.String>, CacheKeyTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataCacheValueTranslator</span>\nextends java.lang.Object\nimplements <a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheValueTranslator</a>&lt;java.lang.String&gt;, <a href=\"../CacheKeyTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\">CacheKeyTranslator</a>",
      "description" : "Implementation of CacheValueTranslator that maps values to / from metadata on the message.",
      "descriptionHtml" : "Implementation of \n<a href=\"../CacheValueTranslator.html\" title=\"interface in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheValueTranslator</code></a> that maps values to / from metadata on the message.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/translator/SolaceJcsmpBytesXmlMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.translator.SolaceJcsmpBytesXmlMessageTranslator",
      "className" : "SolaceJcsmpBytesXmlMessageTranslator",
      "packageName" : "com.adaptris.core.jcsmp.solace.translator",
      "componentType" : "object",
      "alias" : "solace-jcsmp-bytes-xml-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "A Solace native JCSMP bytes xml message translator.",
        "tag" : "solace,jcsmp,translator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP bytes xml message translator.\",\n                  tag=\"solace,jcsmp,translator\",\n                  since=\"3.9.3\")\npublic class SolaceJcsmpBytesXmlMessageTranslator\nextends SolaceJcsmpBaseTranslatorImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP bytes xml message translator.\",\n                  tag=\"solace,jcsmp,translator\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpBytesXmlMessageTranslator</span>\nextends <a href=\"SolaceJcsmpBaseTranslatorImp.html\" title=\"class in com.adaptris.core.jcsmp.solace.translator\" target=\"_new\">SolaceJcsmpBaseTranslatorImp</a>",
      "description" : "A bytes xml message translator specifically for Solace's JCSMP API. See SolaceJcsmpBaseTranslatorImp for further details.",
      "descriptionHtml" : "<p> A bytes xml message translator specifically for Solace's JCSMP API. </p> \n<p> See <a href=\"SolaceJcsmpBaseTranslatorImp.html\" title=\"class in com.adaptris.core.jcsmp.solace.translator\" target=\"_new\"><code>SolaceJcsmpBaseTranslatorImp</code></a> for further details. </p>",
      "inheritance" : [
        {
          "name" : "SolaceJcsmpBaseTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/translator/SolaceJcsmpBaseTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedComponentList.html",
      "fullClassName" : "com.adaptris.core.SharedComponentList",
      "className" : "SharedComponentList",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "shared-components",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Collection of Shared Components",
        "tag" : "base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Collection of Shared Components\",\n                  tag=\"base\")\npublic class SharedComponentList\nextends java.lang.Object\nimplements ComponentLifecycle, ComponentLifecycleExtension",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Collection of Shared Components\",\n                  tag=\"base\")\npublic class <span class=\"typeNameLabel\">SharedComponentList</span>\nextends java.lang.Object\nimplements <a href=\"ComponentLifecycle.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycle</a>, <a href=\"ComponentLifecycleExtension.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycleExtension</a>",
      "description" : "A common store for components.",
      "descriptionHtml" : "A common store for components.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/ExecuteCallableStatementExecutor.html",
      "fullClassName" : "com.adaptris.jdbc.ExecuteCallableStatementExecutor",
      "className" : "ExecuteCallableStatementExecutor",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "execute-callable-statement-executor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ExecuteCallableStatementExecutor\nextends CallableStatementExecutorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExecuteCallableStatementExecutor</span>\nextends <a href=\"CallableStatementExecutorImpl.html\" title=\"class in com.adaptris.jdbc\" target=\"_new\">CallableStatementExecutorImpl</a>",
      "description" : "Implementation of CallableStatementExecutor will use the PreparedStatement.execute() method. Depending on the database vendor, using execute(), executeUpdate() or executeQuery() will deliver your results in a different way.",
      "descriptionHtml" : "Implementation of CallableStatementExecutor will use the \n<code>PreparedStatement.execute()</code> method. \n<p> Depending on the database vendor, using execute(), executeUpdate() or executeQuery() will deliver your results in a different way. </p>",
      "inheritance" : [
        {
          "name" : "CallableStatementExecutorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/CallableStatementExecutorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/CompositeResponseHeaderHandler.html",
      "fullClassName" : "com.adaptris.core.http.apache.CompositeResponseHeaderHandler",
      "className" : "CompositeResponseHeaderHandler",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-composite-response-header-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeResponseHeaderHandler\nextends java.lang.Object\nimplements ResponseHeaderHandler<org.apache.http.HttpResponse>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeResponseHeaderHandler</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">ResponseHeaderHandler</a>&lt;org.apache.http.HttpResponse&gt;",
      "description" : "Implementation of ResponseHeaderHandler that uses nested handlers to extract headers from a HttpResponse. This implementation is primarily so that you can mix and matchhow you capture response headers; If you wanted to use both ResponseHeadersAsMetadata and ResponseHeadersAsObjectMetadata then you can.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>ResponseHeaderHandler</code></a> that uses nested handlers to extract headers from a \n<code>HttpResponse</code>. \n<p>This implementation is primarily so that you can mix and matchhow you capture response headers; If you wanted to use both <a href=\"ResponseHeadersAsMetadata.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\"><code>ResponseHeadersAsMetadata</code></a> and <a href=\"ResponseHeadersAsObjectMetadata.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\"><code>ResponseHeadersAsObjectMetadata</code></a> then you can. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/BasicSonicMqImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.BasicSonicMqImplementation",
      "className" : "BasicSonicMqImplementation",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "object",
      "alias" : "basic-sonic-mq-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicSonicMqImplementation\nextends UrlVendorImplementation\nimplements LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicSonicMqImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">UrlVendorImplementation</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Progress SonicMQ implementation of VendorImplementation. Depending on your SonicMQ configuration you will need at least the sonic_Client.jar sonic_Channel.jar sonic_Crypto.jar sonic_XMessage.jar from your SonicMQ installation",
      "descriptionHtml" : "<p> Progress SonicMQ implementation of <code>VendorImplementation</code>. </p> \n<p> Depending on your SonicMQ configuration you will need at least the sonic_Client.jar sonic_Channel.jar sonic_Crypto.jar sonic_XMessage.jar from your SonicMQ installation </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/findreplace/FindAndReplaceUnit.html",
      "fullClassName" : "com.adaptris.core.services.findreplace.FindAndReplaceUnit",
      "className" : "FindAndReplaceUnit",
      "packageName" : "com.adaptris.core.services.findreplace",
      "componentType" : "object",
      "alias" : "find-and-replace-unit",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FindAndReplaceUnit\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FindAndReplaceUnit</span>\nextends java.lang.Object",
      "description" : "A unit of configuration for doing find and replace.",
      "descriptionHtml" : "A unit of configuration for doing find and replace.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/DefaultAWSAuthentication.html",
      "fullClassName" : "com.adaptris.aws.DefaultAWSAuthentication",
      "className" : "DefaultAWSAuthentication",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-default-authentication",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Use the default authentication logic of the AWS SDK (IAM Roles, System Properties, Environment variables, etc",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Use the default authentication logic of the AWS SDK (IAM Roles, System Properties, Environment variables, etc\")\npublic class DefaultAWSAuthentication\nextends java.lang.Object\nimplements AWSAuthentication",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Use the default authentication logic of the AWS SDK (IAM Roles, System Properties, Environment variables, etc\")\npublic class <span class=\"typeNameLabel\">DefaultAWSAuthentication</span>\nextends java.lang.Object\nimplements <a href=\"AWSAuthentication.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">AWSAuthentication</a>",
      "description" : "Use the default authentication logic of the AWS SDK (IAM Roles, System Properties, Environment variables, etc",
      "descriptionHtml" : "Use the default authentication logic of the AWS SDK (IAM Roles, System Properties, Environment variables, etc",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsProducer.html",
      "fullClassName" : "com.adaptris.core.fs.FsProducer",
      "className" : "FsProducer",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "producer",
      "alias" : "fs-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "producedname",
          "fsProduceDir"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Write the current message to the filesystem",
        "tag" : "producer,fs,filesystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Write the current message to the filesystem\",\n                  tag=\"producer,fs,filesystem\",\n                  recommended=NullConnection.class,\n                  metadata={\"producedname\",\"fsProduceDir\"})\npublic class FsProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Write the current message to the filesystem\",\n                  tag=\"producer,fs,filesystem\",\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>,\n                  metadata={\"producedname\",\"fsProduceDir\"})\npublic class <span class=\"typeNameLabel\">FsProducer</span>\nextends <a href=\"../ProduceOnlyProducerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "AdaptrisMessageProducer implementation that writes to the file system.",
      "descriptionHtml" : "<a href=\"../AdaptrisMessageProducer.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessageProducer</code></a> implementation that writes to the file system.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PollingTrigger.html",
      "fullClassName" : "com.adaptris.core.PollingTrigger",
      "className" : "PollingTrigger",
      "packageName" : "com.adaptris.core",
      "componentType" : "consumer",
      "alias" : "polling-trigger",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Generate a static trigger message on a schedule",
        "tag" : "consumer,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Generate a static trigger message on a schedule\",\n                  tag=\"consumer,base\",\n                  recommended=NullConnection.class)\npublic class PollingTrigger\nextends AdaptrisPollingConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Generate a static trigger message on a schedule\",\n                  tag=\"consumer,base\",\n                  recommended=<a href=\"NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PollingTrigger</span>\nextends <a href=\"AdaptrisPollingConsumer.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdaptrisPollingConsumer</a>",
      "description" : "Periodically sends a template message to trigger a Workflow",
      "descriptionHtml" : "<p> Periodically sends a template message to trigger a <a href=\"Workflow.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Workflow</code></a> </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/LogMessageService.html",
      "fullClassName" : "com.adaptris.core.services.LogMessageService",
      "className" : "LogMessageService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "log-message-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Log the message to the log file; useful for debugging",
        "tag" : "service,logging,debug"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Log the message to the log file; useful for debugging\",\n                  tag=\"service,logging,debug\")\npublic class LogMessageService\nextends LoggingServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Log the message to the log file; useful for debugging\",\n                  tag=\"service,logging,debug\")\npublic class <span class=\"typeNameLabel\">LogMessageService</span>\nextends <a href=\"LoggingServiceImpl.html\" title=\"class in com.adaptris.core.services\" target=\"_new\">LoggingServiceImpl</a>",
      "description" : "Service which logs the AdaptrisMessage to the configured logger for debugging purposes.",
      "descriptionHtml" : "<p> Service which logs the <code>AdaptrisMessage</code> to the configured logger for debugging purposes. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "LoggingServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/LoggingServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpQueueProducer.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.SolaceJcsmpQueueProducer",
      "className" : "SolaceJcsmpQueueProducer",
      "packageName" : "com.adaptris.core.jcsmp.solace",
      "componentType" : "producer",
      "alias" : "solace-jcsmp-queue-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "A Solace native JCSMP component will produce your messages to the Solace VPN queue.",
        "tag" : "queue,producer,solace,jcsmp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP component will produce your messages to the Solace VPN queue.\",\n                  tag=\"queue,producer,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class SolaceJcsmpQueueProducer\nextends SolaceJcsmpAbstractProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP component will produce your messages to the Solace VPN queue.\",\n                  tag=\"queue,producer,solace,jcsmp\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpQueueProducer</span>\nextends <a href=\"SolaceJcsmpAbstractProducer.html\" title=\"class in com.adaptris.core.jcsmp.solace\" target=\"_new\">SolaceJcsmpAbstractProducer</a>",
      "description" : "This implementation of AdaptrisMessageProducer will use the Solace Jcsmp Api to produce messages to a queue on your Solace router.",
      "descriptionHtml" : "<p> This implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducer</code></a> will use the Solace Jcsmp Api to produce messages to a queue on your Solace router. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        },
        {
          "name" : "SolaceJcsmpAbstractProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/SolaceJcsmpAbstractProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ValidateMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.ValidateMetadataService",
      "className" : "ValidateMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "validate-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Verify a message has all the required metadata keys",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Verify a message has all the required metadata keys\",\n                  tag=\"service,metadata\")\npublic class ValidateMetadataService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Verify a message has all the required metadata keys\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">ValidateMetadataService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Verify that a message has all the required metadata keys set. If any of the required keys does not have a values stored against it, a ServiceException is thrown.",
      "descriptionHtml" : "Verify that a message has all the required metadata keys set. \n<p> If any of the required keys does not have a values stored against it, a <code>ServiceException</code> is thrown. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/DiscardEmptyValuesFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.DiscardEmptyValuesFilter",
      "className" : "DiscardEmptyValuesFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "discard-empty-values-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DiscardEmptyValuesFilter\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DiscardEmptyValuesFilter</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "Metadata Filter implementation that removes all metadata which have an empty value.",
      "descriptionHtml" : "Metadata Filter implementation that removes all metadata which have an empty value.",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/dynamic/RfcXmlGenerator.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.dynamic.RfcXmlGenerator",
      "className" : "RfcXmlGenerator",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.dynamic",
      "componentType" : "service",
      "alias" : "sapjco3-rfc-xml-generator",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.sap.jco3.rfc.ConfiguredRfcConnection",
          "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicRfcConnection"
        ],
        "since" : "",
        "summary" : "Helper that generates an XML input file for a SAP RFC",
        "tag" : "service,sap,rfc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Helper that generates an XML input file for a SAP RFC\",\n                  tag=\"service,sap,rfc\",\n                  recommended={ConfiguredRfcConnection.class,DynamicRfcConnection.class})\npublic class RfcXmlGenerator\nextends com.adaptris.core.licensing.LicensedService\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Helper that generates an XML input file for a SAP RFC\",\n                  tag=\"service,sap,rfc\",\n                  recommended={<a href=\"../ConfiguredRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ConfiguredRfcConnection.class</a>,<a href=\"DynamicRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">DynamicRfcConnection.class</a>})\npublic class <span class=\"typeNameLabel\">RfcXmlGenerator</span>\nextends com.adaptris.core.licensing.LicensedService\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Service implementation that generates an XML input file sample for a RFC. This service determines the RFC to invoke based on the the xpath local-name(/*). After querying the configured repository, it generates a sample document that contains all the elements required to execute a RFC. If you map your input file to the generated example, then it will be possible to use DynamicBapiProducer or DynamicRfcProducer as your producer without explicitly configuring any ExportParameter or ImportParameter instances. Input parameters will always be a child of the [RFC_NAME]/INPUT element Output parameters will always be a child of the [RFC_NAME]/OUTPUT element Table parameters will be a child of the [RFC_NAME]/INPUT/TABLES element and also the [RFC_NAME]/OUTPUT/TABLES element as tables could form both a an input and output parameter; how you can have multiple rows for a table parameter should be obvious from the resulting XML. CHANGING parameters are not currently supported. Every element has attribute information for mapping and informational purposes; it is redundant at runtime",
      "descriptionHtml" : "Service implementation that generates an XML input file sample for a RFC. \n<p> This service determines the RFC to invoke based on the the xpath <code>local-name(/*)</code>. After querying the configured repository, it generates a sample document that contains all the elements required to execute a RFC. If you map your input file to the generated example, then it will be possible to use <a href=\"DynamicBapiProducer.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\"><code>DynamicBapiProducer</code></a> or <a href=\"DynamicRfcProducer.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\"><code>DynamicRfcProducer</code></a> as your producer without explicitly configuring any <a href=\"../ExportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\"><code>ExportParameter</code></a> or <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\"><code>ImportParameter</code></a> instances. </p> \n<ul> \n <li>Input parameters will always be a child of the <code>[RFC_NAME]/INPUT</code> element</li> \n <li>Output parameters will always be a child of the <code>[RFC_NAME]/OUTPUT</code> element</li> \n <li>Table parameters will be a child of the <code>[RFC_NAME]/INPUT/TABLES</code> element and also the <code>[RFC_NAME]/OUTPUT/TABLES</code> element as tables could form both a an input and output parameter; how you can have multiple rows for a table parameter should be obvious from the resulting XML.</li> \n <li>CHANGING parameters are not currently supported.</li> \n <li>Every element has attribute information for mapping and informational purposes; it is redundant at runtime</li> \n</ul>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/DirectoryEntityService.html",
      "fullClassName" : "com.adaptris.filesystem.DirectoryEntityService",
      "className" : "DirectoryEntityService",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "service",
      "alias" : "directory-entity-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Get various file metadata info",
        "tag" : "service,directory,stat,file"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Get various file metadata info\",\n                  tag=\"service,directory,stat,file\")\npublic class DirectoryEntityService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Get various file metadata info\",\n                  tag=\"service,directory,stat,file\")\npublic class <span class=\"typeNameLabel\">DirectoryEntityService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Stat a file in a directory.",
      "descriptionHtml" : "Stat a file in a directory.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/translator/SolaceJcsmpBytesMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.translator.SolaceJcsmpBytesMessageTranslator",
      "className" : "SolaceJcsmpBytesMessageTranslator",
      "packageName" : "com.adaptris.core.jcsmp.solace.translator",
      "componentType" : "object",
      "alias" : "solace-jcsmp-bytes-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "A Solace native JCSMP bytes message translator.",
        "tag" : "solace,jcsmp,translator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP bytes message translator.\",\n                  tag=\"solace,jcsmp,translator\",\n                  since=\"3.11.0\")\npublic class SolaceJcsmpBytesMessageTranslator\nextends SolaceJcsmpBaseTranslatorImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP bytes message translator.\",\n                  tag=\"solace,jcsmp,translator\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">SolaceJcsmpBytesMessageTranslator</span>\nextends <a href=\"SolaceJcsmpBaseTranslatorImp.html\" title=\"class in com.adaptris.core.jcsmp.solace.translator\" target=\"_new\">SolaceJcsmpBaseTranslatorImp</a>",
      "description" : "A bytes message translator specifically for Solace's JCSMP API. See SolaceJcsmpBaseTranslatorImp for further details.",
      "descriptionHtml" : "<p> A bytes message translator specifically for Solace's JCSMP API. </p> \n<p> See <a href=\"SolaceJcsmpBaseTranslatorImp.html\" title=\"class in com.adaptris.core.jcsmp.solace.translator\" target=\"_new\"><code>SolaceJcsmpBaseTranslatorImp</code></a> for further details. </p>",
      "inheritance" : [
        {
          "name" : "SolaceJcsmpBaseTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/translator/SolaceJcsmpBaseTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/DefaultMailConsumer.html",
      "fullClassName" : "com.adaptris.core.mail.DefaultMailConsumer",
      "className" : "DefaultMailConsumer",
      "packageName" : "com.adaptris.core.mail",
      "componentType" : "consumer",
      "alias" : "default-mail-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "emailmessageid",
          "emailtotalattachments",
          "emailattachmentfilename",
          "emailattachmentcontenttype"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from a email account parsing the MIME message",
        "tag" : "consumer,email"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from a email account parsing the MIME message\",\n                  tag=\"consumer,email\",\n                  metadata={\"emailmessageid\",\"emailtotalattachments\",\"emailattachmentfilename\",\"emailattachmentcontenttype\"},\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class DefaultMailConsumer\nextends ParsingMailConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from a email account parsing the MIME message\",\n                  tag=\"consumer,email\",\n                  metadata={\"emailmessageid\",\"emailtotalattachments\",\"emailattachmentfilename\",\"emailattachmentcontenttype\"},\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">DefaultMailConsumer</span>\nextends <a href=\"ParsingMailConsumerImpl.html\" title=\"class in com.adaptris.core.mail\" target=\"_new\">ParsingMailConsumerImpl</a>",
      "description" : "Default Email implementation of the AdaptrisMessageConsumer interface. Each Mime part of the incoming email message will become a separate AdaptrisMessage; attachments are processed separately from the mail body itself.",
      "descriptionHtml" : "Default Email implementation of the AdaptrisMessageConsumer interface. \n<p> Each Mime part of the incoming email message will become a separate AdaptrisMessage; attachments are processed separately from the mail body itself. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        },
        {
          "name" : "MailConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/MailConsumerImp.html"
        },
        {
          "name" : "ParsingMailConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/ParsingMailConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/SimpleSequenceNumberService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.SimpleSequenceNumberService",
      "className" : "SimpleSequenceNumberService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "simple-sequence-number-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Generate a sequence number from a simple text file",
        "tag" : "service,sequence"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Generate a sequence number from a simple text file\",\n                  tag=\"service,sequence\")\npublic class SimpleSequenceNumberService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Generate a sequence number from a simple text file\",\n                  tag=\"service,sequence\")\npublic class <span class=\"typeNameLabel\">SimpleSequenceNumberService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Simple sequence number generator that uses a file to store the next sequence number. Rather than using a database to store sequence numbers (c.f. MetadataIdentitySequenceNumberService or StaticIdentitySequenceNumberService) , this service uses a a plain text file to store the sequence number. Multiple instances of this service should use different files; behaviour is undefined if multiple instances use the same file. The sequence number file consists of a simple key value pair SimpleSequenceNumberService.next=[the next sequence number] which is accessed using a Properties object. If the property does not exist, then it is defaulted to 1. If you wish to manually modify the file, then the value should always be the next sequence number. If the file does not exist, then a new file is created (using File.createNewFile() , and the sequence number defaulted to 1.",
      "descriptionHtml" : "Simple sequence number generator that uses a file to store the next sequence number. \n<p> Rather than using a database to store sequence numbers (c.f. <a href=\"../jdbc/MetadataIdentitySequenceNumberService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>MetadataIdentitySequenceNumberService</code></a> or <a href=\"../jdbc/StaticIdentitySequenceNumberService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>StaticIdentitySequenceNumberService</code></a>) , this service uses a a plain text file to store the sequence number. Multiple instances of this service should use different files; behaviour is undefined if multiple instances use the same file. </p> \n<p> The sequence number file consists of a simple key value pair <code>SimpleSequenceNumberService.next=[the next sequence number]</code> which is accessed using a <code>Properties</code> object. If the property does not exist, then it is defaulted to 1. If you wish to manually modify the file, then the value should always be the next sequence number. If the file does not exist, then a new file is created (using <code>File.createNewFile()</code> , and the sequence number defaulted to 1. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/Base64DecodeMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.Base64DecodeMetadataService",
      "className" : "Base64DecodeMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-base64-decode",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Base64 decode an item of metadata",
        "tag" : "service,metadata,base64"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Base64 decode an item of metadata\",\n                  tag=\"service,metadata,base64\")\npublic class Base64DecodeMetadataService\nextends Base64MetadataService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Base64 decode an item of metadata\",\n                  tag=\"service,metadata,base64\")\npublic class <span class=\"typeNameLabel\">Base64DecodeMetadataService</span>\nextends <a href=\"Base64MetadataService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">Base64MetadataService</a>",
      "description" : "Base64 decods an item of metadata. Each matching metadata key from ReformatMetadata.getMetadataKeyRegexp() will be decoded, and the value overwitten with the bytes after translating it into a String with the specified InterlokMessage.getContentEncoding()",
      "descriptionHtml" : "Base64 decods an item of metadata. \n<p> Each matching metadata key from <a href=\"ReformatMetadata.html#getMetadataKeyRegexp()\" target=\"_new\"><code>ReformatMetadata.getMetadataKeyRegexp()</code></a> will be decoded, and the value overwitten with the bytes after translating it into a String with the specified <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#getContentEncoding()\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.getContentEncoding()</code></a> </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        },
        {
          "name" : "Base64MetadataService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/Base64MetadataService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/BranchingServiceEnabler.html",
      "fullClassName" : "com.adaptris.core.services.BranchingServiceEnabler",
      "className" : "BranchingServiceEnabler",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "branching-service-enabler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Wraps another service, performing a branch based on its success",
        "tag" : "service, branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Wraps another service, performing a branch based on its success\",\n                  tag=\"service, branching\",\n                  branchSelector=true)\npublic class BranchingServiceEnabler\nextends BranchingServiceImp\nimplements EventHandlerAware, ServiceWrapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Wraps another service, performing a branch based on its success\",\n                  tag=\"service, branching\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">BranchingServiceEnabler</span>\nextends <a href=\"../BranchingServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">BranchingServiceImp</a>\nimplements <a href=\"../EventHandlerAware.html\" title=\"interface in com.adaptris.core\" target=\"_new\">EventHandlerAware</a>, <a href=\"../ServiceWrapper.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ServiceWrapper</a>",
      "description" : "Service that wraps other services allowing them to be branching. This is somewhat analogous to ExceptionHandlingServiceWrapper but fits a more generalised use case. In the event of an Exception; getFailureId() is always set as the AdaptrisMessage.setNextServiceId(String). In the event of a successfull execution then if the wrapped service is already branching then AdaptrisMessage.setNextServiceId(String) is untouched; otherwise getSuccessId() is used.",
      "descriptionHtml" : "Service that wraps other services allowing them to be branching. \n<p> This is somewhat analogous to <a href=\"exception/ExceptionHandlingServiceWrapper.html\" title=\"class in com.adaptris.core.services.exception\" target=\"_new\"><code>ExceptionHandlingServiceWrapper</code></a> but fits a more generalised use case. In the event of an Exception; <a href=\"#getFailureId()\" target=\"_new\"><code>getFailureId()</code></a> is always set as the <a href=\"../AdaptrisMessage.html#setNextServiceId(java.lang.String)\" target=\"_new\"><code>AdaptrisMessage.setNextServiceId(String)</code></a>. In the event of a successfull execution then if the wrapped service is already branching then <a href=\"../AdaptrisMessage.html#setNextServiceId(java.lang.String)\" target=\"_new\"><code>AdaptrisMessage.setNextServiceId(String)</code></a> is untouched; otherwise <a href=\"#getSuccessId()\" target=\"_new\"><code>getSuccessId()</code></a> is used. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "BranchingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/BranchingServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/SendEmail.html",
      "fullClassName" : "com.adaptris.core.mail.SendEmail",
      "className" : "SendEmail",
      "packageName" : "com.adaptris.core.mail",
      "componentType" : "producer",
      "alias" : "send-email",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Send an email",
        "tag" : "email,smtp,mail"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Send an email\",\n                  tag=\"email,smtp,mail\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class SendEmail\nextends MailProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Send an email\",\n                  tag=\"email,smtp,mail\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">SendEmail</span>\nextends <a href=\"MailProducer.html\" title=\"class in com.adaptris.core.mail\" target=\"_new\">MailProducer</a>",
      "description" : "Replaces DefaultSmtpProducer if you just want to send an email.",
      "descriptionHtml" : "Replaces DefaultSmtpProducer if you just want to send an email.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        },
        {
          "name" : "MailProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/core/mail/MailProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/xml/tagnames/BasicOutputXMLTagnames.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.xml.tagnames.BasicOutputXMLTagnames",
      "className" : "BasicOutputXMLTagnames",
      "packageName" : "com.adaptris.adapter.edistream.parser.xml.tagnames",
      "componentType" : "object",
      "alias" : "edi-basic-xml-tag-names",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicOutputXMLTagnames\nextends DefaultXMLTagnames",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicOutputXMLTagnames</span>\nextends <a href=\"DefaultXMLTagnames.html\" title=\"class in com.adaptris.adapter.edistream.parser.xml.tagnames\" target=\"_new\">DefaultXMLTagnames</a>",
      "description" : "This class defines the xml tags that are used to read in an xml files that was produced by the original Adaptris EdiXMLService, ie an xml encoded edi message.",
      "descriptionHtml" : "This class defines the xml tags that are used to read in an xml files that was produced by the original Adaptris EdiXMLService, ie an xml encoded edi message.",
      "inheritance" : [
        {
          "name" : "DefaultXMLTagnames",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/xml/tagnames/DefaultXMLTagnames.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ActiveJmsConnectionErrorHandler.html",
      "fullClassName" : "com.adaptris.core.jms.ActiveJmsConnectionErrorHandler",
      "className" : "ActiveJmsConnectionErrorHandler",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "active-jms-connection-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ActiveJmsConnectionErrorHandler\nextends JmsConnectionErrorHandlerImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ActiveJmsConnectionErrorHandler</span>\nextends <a href=\"JmsConnectionErrorHandlerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnectionErrorHandlerImpl</a>",
      "description" : "ConnectionErrorHandler implementation that actively attempts messages via JMS to detect outages. Implementation of ConnectionErrorHandler which tests the connection every getCheckInterval() interval (default is 5 second) and if the test fails then restarts the Connection's owner and stops the testing thread.",
      "descriptionHtml" : "<a href=\"../ConnectionErrorHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ConnectionErrorHandler</code></a> implementation that actively attempts messages via JMS to detect outages. \n<p> Implementation of <a href=\"../ConnectionErrorHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ConnectionErrorHandler</code></a> which tests the connection every <a href=\"#getCheckInterval()\" target=\"_new\"><code>getCheckInterval()</code></a> interval (default is 5 second) and if the test fails then restarts the Connection's owner and stops the testing thread. </p>",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html"
        },
        {
          "name" : "JmsConnectionErrorHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnectionErrorHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/ResponseHeadersAsMetadata.html",
      "fullClassName" : "com.adaptris.core.http.client.net.ResponseHeadersAsMetadata",
      "className" : "ResponseHeadersAsMetadata",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-response-headers-as-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ResponseHeadersAsMetadata\nextends MetadataResponseHeaderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ResponseHeadersAsMetadata</span>\nextends <a href=\"MetadataResponseHeaderImpl.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\">MetadataResponseHeaderImpl</a>",
      "description" : "Concrete implementation of ResponseHeaderHandler which adds all the HTTP headers from the response as metadata to the AdaptrisMessage. Because HttpURLConnection exposes headers as a List<String>; #setMetadataSeparator(String) is used as a separator between multiple items in the list to flatten the list into a single metadata value. The default value is the tab character (\"\\t\"). This will include header fields where the key is null; this will end up as the string \"null\". HttpURLConnection exposes the HTTP status line (e.g. 200 HTTP/1.1 OK as a header field with no key so this will generally be what is associated with \"null\".",
      "descriptionHtml" : "Concrete implementation of \n<a href=\"../ResponseHeaderHandler.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>ResponseHeaderHandler</code></a> which adds all the HTTP headers from the response as metadata to the \n<a href=\"../../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>. \n<p>Because <code>HttpURLConnection</code> exposes headers as a <code>List&lt;String&gt;</code>; <code>#setMetadataSeparator(String)</code> is used as a separator between multiple items in the list to flatten the list into a single metadata value. The default value is the tab character (\"\\t\").</p> \n<p>This will include header fields where the key is <code>null</code>; this will end up as the string <code>\"null\"</code>. <code>HttpURLConnection</code> exposes the HTTP status line (e.g. <code>200 HTTP/1.1 OK</code> as a header field with no key so this will generally be what is associated with <code>\"null\"</code>. </p>",
      "inheritance" : [
        {
          "name" : "MetadataResponseHeaderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/MetadataResponseHeaderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionAnd.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.ConditionAnd",
      "className" : "ConditionAnd",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "and",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Allows you to test multiple conditions, where all must return true.",
        "tag" : "condition"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Allows you to test multiple conditions, where all must return true.\",\n                  tag=\"condition\")\npublic class ConditionAnd\nextends ConditionListImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Allows you to test multiple conditions, where all must return true.\",\n                  tag=\"condition\")\npublic class <span class=\"typeNameLabel\">ConditionAnd</span>\nextends <a href=\"ConditionListImpl.html\" title=\"class in com.adaptris.core.services.conditional.conditions\" target=\"_new\">ConditionListImpl</a>",
      "description" : "This Condition allows you to configure a list of child Condition's where all must evaluate to \"true\".",
      "descriptionHtml" : "<p> This <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> allows you to configure a list of child <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a>'s where all must evaluate to \"true\". </p>",
      "inheritance" : [
        {
          "name" : "ConditionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionImpl.html"
        },
        {
          "name" : "ConditionListImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionListImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/PerMessageSession.html",
      "fullClassName" : "com.adaptris.kie.services.PerMessageSession",
      "className" : "PerMessageSession",
      "packageName" : "com.adaptris.kie.services",
      "componentType" : "object",
      "alias" : "kie-per-message-session",
      "deprecated" : false,
      "jarFileName" : "interlok-kie.jar",
      "profile" : { },
      "annotationDetails" : "public class PerMessageSession\nextends SessionManagementImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PerMessageSession</span>\nextends <a href=\"SessionManagementImpl.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">SessionManagementImpl</a>",
      "description" : "Create a new session each time get(KieBase, AdaptrisMessage) is invoked.",
      "descriptionHtml" : "Create a new session each time \n<a href=\"#get(org.kie.api.KieBase,com.adaptris.core.AdaptrisMessage)\" target=\"_new\"><code>get(KieBase, AdaptrisMessage)</code></a> is invoked.",
      "inheritance" : [
        {
          "name" : "SessionManagementImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/SessionManagementImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/KIE",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kie",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MultiPayloadMessageFactory.html",
      "fullClassName" : "com.adaptris.core.MultiPayloadMessageFactory",
      "className" : "MultiPayloadMessageFactory",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "multi-payload-message-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MultiPayloadMessageFactory\nextends AdaptrisMessageFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultiPayloadMessageFactory</span>\nextends <a href=\"AdaptrisMessageFactory.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdaptrisMessageFactory</a>",
      "description" : "The multi-payload message factory which returns an implementations of MultiPayloadAdaptrisMessage. \n <message-factory class=\"multi-payload-message-factory\">\n   <default-char-encoding>UTF-8</default-char-encoding>\n   <default-payload-id>payload-1</default-payload-id>\n </message-factory>",
      "descriptionHtml" : "The multi-payload message factory which returns an implementations of \n<code>MultiPayloadAdaptrisMessage</code>. \n<pre><code>\n &lt;message-factory class=\"multi-payload-message-factory\"&gt;\n   &lt;default-char-encoding&gt;UTF-8&lt;/default-char-encoding&gt;\n   &lt;default-payload-id&gt;payload-1&lt;/default-payload-id&gt;\n &lt;/message-factory&gt;\n </code></pre>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageFactory",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageFactory.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/cache/RetryingCacheProxy.html",
      "fullClassName" : "com.adaptris.core.cache.RetryingCacheProxy",
      "className" : "RetryingCacheProxy",
      "packageName" : "com.adaptris.core.cache",
      "componentType" : "object",
      "alias" : "retrying-cache-proxy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RetryingCacheProxy\nextends java.lang.Object\nimplements Cache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RetryingCacheProxy</span>\nextends java.lang.Object\nimplements <a href=\"Cache.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\">Cache</a>",
      "description" : "Implementation of Cache that proxies another Cache instance. The usecase for this cache proxy is to periodically \"retry\" a get(String) operation in the event that a timing issue causes the cache not to have been populated when an attempt to get a value is made. If not explicitly configured, then there are 2 retries spaced 2 seconds apart. Other than this behaviour, everything else is delegated to the proxied cache implementation.",
      "descriptionHtml" : "Implementation of \n<a href=\"Cache.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\"><code>Cache</code></a> that proxies another \n<a href=\"Cache.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\"><code>Cache</code></a> instance. \n<p> The usecase for this cache proxy is to periodically \"retry\" a <a href=\"#get(java.lang.String)\" target=\"_new\"><code>get(String)</code></a> operation in the event that a timing issue causes the cache not to have been populated when an attempt to get a value is made. If not explicitly configured, then there are 2 retries spaced 2 seconds apart. Other than this behaviour, everything else is delegated to the proxied cache implementation. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/VarSubPreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.VarSubPreprocessor",
      "className" : "VarSubPreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "variable-substitution-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class VarSubPreprocessor\nextends java.lang.Object\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">VarSubPreprocessor</span>\nextends java.lang.Object\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionExpression.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.ConditionExpression",
      "className" : "ConditionExpression",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "expression",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests a static algorithm for a boolean result.",
        "tag" : "condition"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests a static algorithm for a boolean result.\",\n                  tag=\"condition\")\npublic class ConditionExpression\nextends ConditionImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests a static algorithm for a boolean result.\",\n                  tag=\"condition\")\npublic class <span class=\"typeNameLabel\">ConditionExpression</span>\nextends <a href=\"ConditionImpl.html\" title=\"class in com.adaptris.core.services.conditional.conditions\" target=\"_new\">ConditionImpl</a>",
      "description" : "This Condition allows you to specify a boolean evaluated expression, with static values and resolved metadata values. If your expression evaluates to \"true\", then this condition passes. Static values mixed with metadata values allow you to create boolean expressions, such as; Example description Example Expression Is the metadata value identified by key \"myKey\" equal to the value 1 %message{myKey} == 1 Is the metadata value identified by key \"myKey\" equal to the metadata item \"myOtherKey\" %message{myKey} == %message{myOtherKey} Is the metadata value identified by key \"myKey\" greater than \"myOtherKey\" plus 100 %message{myKey} > (%message{myOtherKey} + 100)",
      "descriptionHtml" : "<p> This <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> allows you to specify a boolean evaluated expression, with static values and resolved metadata values. </p> \n<p> If your expression evaluates to \"true\", then this condition passes. </p> \n<p> Static values mixed with metadata values allow you to create boolean expressions, such as; <br> </p>\n<table> \n <tbody>\n  <tr> \n   <th>Example description</th> \n   <th>Example Expression</th> \n  </tr> \n  <tr> \n   <td>Is the metadata value identified by key \"myKey\" equal to the value 1</td> \n   <td>%message{myKey} == 1</td> \n  </tr> \n  <tr> \n   <td>Is the metadata value identified by key \"myKey\" equal to the metadata item \"myOtherKey\"</td> \n   <td>%message{myKey} == %message{myOtherKey}</td> \n  </tr> \n  <tr> \n   <td>Is the metadata value identified by key \"myKey\" greater than \"myOtherKey\" plus 100</td> \n   <td>%message{myKey} &gt; (%message{myOtherKey} + 100)</td> \n  </tr> \n </tbody>\n</table> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ConditionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/AggregatingFtpConsumeService.html",
      "fullClassName" : "com.adaptris.core.ftp.AggregatingFtpConsumeService",
      "className" : "AggregatingFtpConsumeService",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "service",
      "alias" : "aggregating-ftp-consume-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.ftp.FileTransferConnection"
        ],
        "since" : "",
        "summary" : "Allows you to aggregate messages from an FTP server",
        "tag" : "service,aggregation,ftp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Allows you to aggregate messages from an FTP server\",\n                  tag=\"service,aggregation,ftp\",\n                  recommended=FileTransferConnection.class)\npublic class AggregatingFtpConsumeService\nextends AggregatingConsumeServiceImpl<FileTransferConnection>\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Allows you to aggregate messages from an FTP server\",\n                  tag=\"service,aggregation,ftp\",\n                  recommended=<a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FileTransferConnection.class</a>)\npublic class <span class=\"typeNameLabel\">AggregatingFtpConsumeService</span>\nextends <a href=\"../services/aggregator/AggregatingConsumeServiceImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">AggregatingConsumeServiceImpl</a>&lt;<a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FileTransferConnection</a>&gt;\nimplements <a href=\"../ConnectedService.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ConnectedService</a>",
      "description" : "Implentation of AggregatingConsumeService that allows you to consume a related message via FTP based on some criteria.",
      "descriptionHtml" : "Implentation of \n<a href=\"../services/aggregator/AggregatingConsumeService.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>AggregatingConsumeService</code></a> that allows you to consume a related message via FTP based on some criteria.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "AggregatingConsumeServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/AggregatingConsumeServiceImpl.html"
        },
        {
          "name" : "FileTransferConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FileTransferConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/ThenService.html",
      "fullClassName" : "com.adaptris.core.services.conditional.ThenService",
      "className" : "ThenService",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "object",
      "alias" : "then",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A service/list that should be executed after conditions have been met. ",
        "tag" : "service, conditional"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A service/list that should be executed after conditions have been met. \",\n                  tag=\"service, conditional\")\npublic class ThenService\nextends java.lang.Object\nimplements ComponentLifecycle, ComponentLifecycleExtension",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A service/list that should be executed after conditions have been met. \",\n                  tag=\"service, conditional\")\npublic class <span class=\"typeNameLabel\">ThenService</span>\nextends java.lang.Object\nimplements <a href=\"../../ComponentLifecycle.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycle</a>, <a href=\"../../ComponentLifecycleExtension.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycleExtension</a>",
      "description" : "This service holder is used to hold the service or list of services that will be executed by logical expressions, such as IfElse and While, should configured Condition's pass.",
      "descriptionHtml" : "<p> This service holder is used to hold the service or list of services that will be executed by logical expressions, such as <a href=\"IfElse.html\" title=\"class in com.adaptris.core.services.conditional\" target=\"_new\"><code>IfElse</code></a> and <a href=\"While.html\" title=\"class in com.adaptris.core.services.conditional\" target=\"_new\"><code>While</code></a>, should configured <a href=\"Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a>'s pass. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/ExecuteUpdateCallableStatementExecutor.html",
      "fullClassName" : "com.adaptris.jdbc.ExecuteUpdateCallableStatementExecutor",
      "className" : "ExecuteUpdateCallableStatementExecutor",
      "packageName" : "com.adaptris.jdbc",
      "componentType" : "object",
      "alias" : "execute-update-callable-statement-executor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ExecuteUpdateCallableStatementExecutor\nextends CallableStatementExecutorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExecuteUpdateCallableStatementExecutor</span>\nextends <a href=\"CallableStatementExecutorImpl.html\" title=\"class in com.adaptris.jdbc\" target=\"_new\">CallableStatementExecutorImpl</a>",
      "description" : "Implementation of CallableStatementExecutor will use the PreparedStatement.executeUpdate() method. Depending on the database vendor, using execute(), executeUpdate() or executeQuery() will deliver your results in a different way. This implementation will not create a ResultSet.",
      "descriptionHtml" : "Implementation of CallableStatementExecutor will use the \n<code>PreparedStatement.executeUpdate()</code> method. \n<p> Depending on the database vendor, using execute(), executeUpdate() or executeQuery() will deliver your results in a different way. This implementation will not create a ResultSet. </p>",
      "inheritance" : [
        {
          "name" : "CallableStatementExecutorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/jdbc/CallableStatementExecutorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MessageMetricsInterceptor.html",
      "fullClassName" : "com.adaptris.core.interceptor.MessageMetricsInterceptor",
      "className" : "MessageMetricsInterceptor",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "message-metrics-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that captures the total number of messages passing through the workflow",
        "tag" : "interceptor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that captures the total number of messages passing through the workflow\",\n                  tag=\"interceptor\")\npublic class MessageMetricsInterceptor\nextends MessageMetricsInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that captures the total number of messages passing through the workflow\",\n                  tag=\"interceptor\")\npublic class <span class=\"typeNameLabel\">MessageMetricsInterceptor</span>\nextends <a href=\"MessageMetricsInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">MessageMetricsInterceptorImpl</a>",
      "description" : "WorkflowInterceptor implementation that exposes metrics via JMX. This workflow interceptor captures the total number of messages that passed through this workflow, and captures the size of messages entering the workflow (but not the total size of messages exiting the workflow); and also the number of messages that had an error condition at the end of the workflow.",
      "descriptionHtml" : "WorkflowInterceptor implementation that exposes metrics via JMX. \n<p> This workflow interceptor captures the total number of messages that passed through this workflow, and captures the size of messages entering the workflow (but not the total size of messages exiting the workflow); and also the number of messages that had an error condition at the end of the workflow. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        },
        {
          "name" : "MetricsInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetricsInterceptorImpl.html"
        },
        {
          "name" : "MessageStatistic",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MessageStatistic.html"
        },
        {
          "name" : "MessageMetricsInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MessageMetricsInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/core/tibrv/StandardRendezvousTranslator.html",
      "fullClassName" : "com.adaptris.core.tibrv.StandardRendezvousTranslator",
      "className" : "StandardRendezvousTranslator",
      "packageName" : "com.adaptris.core.tibrv",
      "componentType" : "object",
      "alias" : "tibrv-standard-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-tibco.jar",
      "profile" : { },
      "annotationDetails" : "public class StandardRendezvousTranslator\nextends java.lang.Object\nimplements RendezvousTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StandardRendezvousTranslator</span>\nextends java.lang.Object\nimplements <a href=\"RendezvousTranslator.html\" title=\"interface in com.adaptris.core.tibrv\" target=\"_new\">RendezvousTranslator</a>",
      "description" : "Implementation of RendezvousTranslator which stores AdaptrisMessage's payload against a TibrvMsg field of type TibrvMsg.OPAQUE, and unique ID and char encoding against fields of type TibrvMsg.STRING. AdaptrisMessage metadata is store in a child TibrvMsg as Tibrv.STRINGs using the metadata key as the 'name. The names against which these elements are stored / expected to be found in TibrvMsg are configurable and defaulted in the constructor.",
      "descriptionHtml" : "<p> Implementation of <code>RendezvousTranslator</code> which stores <code>AdaptrisMessage</code>'s payload against a <code>TibrvMsg</code> field of type <code>TibrvMsg.OPAQUE</code>, and unique ID and char encoding against fields of type <code>TibrvMsg.STRING</code>. <code>AdaptrisMessage</code> metadata is store in a child <code>TibrvMsg</code> as <code>Tibrv.STRING</code>s using the metadata key as the 'name. </p> \n<p> The names against which these elements are stored / expected to be found in <code>TibrvMsg</code> are configurable and defaulted in the constructor. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Tibco",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-tibco",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/transform/CsvToXml.html",
      "fullClassName" : "com.adaptris.csv.transform.CsvToXml",
      "className" : "CsvToXml",
      "packageName" : "com.adaptris.csv.transform",
      "componentType" : "service",
      "alias" : "csv-to-xml-transform",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.0",
        "summary" : "Transform a document from CSV to XML",
        "tag" : "service,transform,csv,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform a document from CSV to XML\",\n                  tag=\"service,transform,csv,xml\",\n                  since=\"3.11.0\")\npublic class CsvToXml\nextends CsvToXmlServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform a document from CSV to XML\",\n                  tag=\"service,transform,csv,xml\",\n                  since=\"3.11.0\")\npublic class <span class=\"typeNameLabel\">CsvToXml</span>\nextends <a href=\"CsvToXmlServiceImpl.html\" title=\"class in com.adaptris.csv.transform\" target=\"_new\">CsvToXmlServiceImpl</a>",
      "description" : "CSV to XML using net.sf.supercsv:super-csv replacing com.adaptris.core.transform.csv.SimpleCsvToXmlTransformService. This transformation uses net.sf.supercsv:super-csv as the parsing engine for a CSV file to write each row as part of an XML document. If setElementNamesFromFirstRecord(Boolean) is true, then the first record is used to generate the element names; otherwise names are auto-generated based on the count of fields in the first row. Results are undefined if subsequent record contains more fields than the first record. If the first row contains a blank field then the blank is used as the element name. Note that if your header rows contains characters that would not be allowed in an standard XML element name then it will be replaced with an '_', so \"Order Date\" becomes \"Order_Date\". For example, given an input document :  \n Event Name,Order Date,Ticket Type,Date Attending,Total Paid\n Glastonbury,\"Sep 15, 2012\",Free entry,\"Jun 26, 2014 at 6:00 PM\",0\n Reading Festival,\"Sep 16, 2012\",Free entry,\"Aug 30, 2014 at 6:00 PM\",0\n \n Then the output (without a header row, and with unique-record-names=true) would be  \n <csv-xml>\n   <record-1>\n     <csv-field-1>Event Name</csv-field-1>\n     <csv-field-2>Order Date</csv-field-2>\n     <csv-field-3>Ticket Type</csv-field-3>\n     <csv-field-4>Date Attending</csv-field-4>\n     <csv-field-5>Total Paid</csv-field-5>\n   </record-1>\n   <record-2>\n     <csv-field-1>Glastonbury</csv-field-1>\n     <csv-field-2>Sep 15, 2012</csv-field-2>\n     <csv-field-3>Free entry</csv-field-3>\n     <csv-field-4>Jun 26, 2014 at 6:00 PM</csv-field-4>\n     <csv-field-5>0</csv-field-5>\n   </record-2>\n   <record-3>\n     <csv-field-1>Reading Festival</csv-field-1>\n     <csv-field-2>Sep 16, 2012</csv-field-2>\n     <csv-field-3>Free entry</csv-field-3>\n     <csv-field-4>Aug 30, 2014 at 6:00 PM</csv-field-4>\n     <csv-field-5>0</csv-field-5>\n   </record-3>\n \n And with a header row specified (and unique-record-names = true):  \n <csv-xml>\n   <record-1>\n     <Event_Name>Glastonbury</Event_Name>\n     <Order_Date>Sep 15, 2012</Order_Date>\n     <Ticket_Type>Free entry</Ticket_Type>\n     <Date_Attending>Jun 26, 2014 at 6:00 PM</Date_Attending>\n     <Total_Paid>0</Total_Paid>\n   </record-1>\n   <record-2>\n     <Event_Name>Reading Festival</Event_Name>\n     <Order_Date>Sep 16, 2012</Order_Date>\n     <Ticket_Type>Free entry</Ticket_Type>\n     <Date_Attending>Aug 30, 2014 at 6:00 PM</Date_Attending>\n     <Total_Paid>0</Total_Paid>\n   </record-2>",
      "descriptionHtml" : "CSV to XML using \n<code>net.sf.supercsv:super-csv</code> replacing \n<code>com.adaptris.core.transform.csv.SimpleCsvToXmlTransformService</code>. \n<p> This transformation uses <code>net.sf.supercsv:super-csv</code> as the parsing engine for a CSV file to write each row as part of an XML document. </p>\n<p> If <a href=\"#setElementNamesFromFirstRecord(java.lang.Boolean)\" target=\"_new\"><code>setElementNamesFromFirstRecord(Boolean)</code></a> is true, then the first record is used to generate the element names; otherwise names are auto-generated based on the count of fields in the first row. Results are undefined if subsequent record contains more fields than the first record. If the first row contains a blank field then the <code>blank</code> is used as the element name. Note that if your header rows contains characters that would not be allowed in an standard XML element name then it will be replaced with an '_', so \"Order Date\" becomes \"Order_Date\". </p> \n<p> For example, given an input document : </p>\n<pre> <code>\n Event Name,Order Date,Ticket Type,Date Attending,Total Paid\n Glastonbury,\"Sep 15, 2012\",Free entry,\"Jun 26, 2014 at 6:00 PM\",0\n Reading Festival,\"Sep 16, 2012\",Free entry,\"Aug 30, 2014 at 6:00 PM\",0\n </code>\n </pre> Then the output (without a header row, and with unique-record-names=true) would be \n<pre> <code>\n &lt;csv-xml&gt;\n   &lt;record-1&gt;\n     &lt;csv-field-1&gt;Event Name&lt;/csv-field-1&gt;\n     &lt;csv-field-2&gt;Order Date&lt;/csv-field-2&gt;\n     &lt;csv-field-3&gt;Ticket Type&lt;/csv-field-3&gt;\n     &lt;csv-field-4&gt;Date Attending&lt;/csv-field-4&gt;\n     &lt;csv-field-5&gt;Total Paid&lt;/csv-field-5&gt;\n   &lt;/record-1&gt;\n   &lt;record-2&gt;\n     &lt;csv-field-1&gt;Glastonbury&lt;/csv-field-1&gt;\n     &lt;csv-field-2&gt;Sep 15, 2012&lt;/csv-field-2&gt;\n     &lt;csv-field-3&gt;Free entry&lt;/csv-field-3&gt;\n     &lt;csv-field-4&gt;Jun 26, 2014 at 6:00 PM&lt;/csv-field-4&gt;\n     &lt;csv-field-5&gt;0&lt;/csv-field-5&gt;\n   &lt;/record-2&gt;\n   &lt;record-3&gt;\n     &lt;csv-field-1&gt;Reading Festival&lt;/csv-field-1&gt;\n     &lt;csv-field-2&gt;Sep 16, 2012&lt;/csv-field-2&gt;\n     &lt;csv-field-3&gt;Free entry&lt;/csv-field-3&gt;\n     &lt;csv-field-4&gt;Aug 30, 2014 at 6:00 PM&lt;/csv-field-4&gt;\n     &lt;csv-field-5&gt;0&lt;/csv-field-5&gt;\n   &lt;/record-3&gt;\n </code>\n </pre> And with a header row specified (and unique-record-names = true): \n<pre> <code>\n &lt;csv-xml&gt;\n   &lt;record-1&gt;\n     &lt;Event_Name&gt;Glastonbury&lt;/Event_Name&gt;\n     &lt;Order_Date&gt;Sep 15, 2012&lt;/Order_Date&gt;\n     &lt;Ticket_Type&gt;Free entry&lt;/Ticket_Type&gt;\n     &lt;Date_Attending&gt;Jun 26, 2014 at 6:00 PM&lt;/Date_Attending&gt;\n     &lt;Total_Paid&gt;0&lt;/Total_Paid&gt;\n   &lt;/record-1&gt;\n   &lt;record-2&gt;\n     &lt;Event_Name&gt;Reading Festival&lt;/Event_Name&gt;\n     &lt;Order_Date&gt;Sep 16, 2012&lt;/Order_Date&gt;\n     &lt;Ticket_Type&gt;Free entry&lt;/Ticket_Type&gt;\n     &lt;Date_Attending&gt;Aug 30, 2014 at 6:00 PM&lt;/Date_Attending&gt;\n     &lt;Total_Paid&gt;0&lt;/Total_Paid&gt;\n   &lt;/record-2&gt;\n </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CsvXmlTransformImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/transform/CsvXmlTransformImpl.html"
        },
        {
          "name" : "CsvToXmlServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/transform/CsvToXmlServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/HeartbeatEvent.html",
      "fullClassName" : "com.adaptris.core.HeartbeatEvent",
      "className" : "HeartbeatEvent",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "heartbeat-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class HeartbeatEvent\nextends AdapterLifecycleEvent\nimplements LoggableEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">HeartbeatEvent</span>\nextends <a href=\"AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdapterLifecycleEvent</a>\nimplements <a href=\"LoggableEvent.html\" title=\"interface in com.adaptris.core\" target=\"_new\">LoggableEvent</a>",
      "description" : "Standard Adapter heartbeat event. This class may be sub-classed to meet solution-specific heartbeat information requirements. In the adapter configuration file this class is aliased as heartbeat-event which is the preferred alternative to the fully qualified classname when building your configuration.",
      "descriptionHtml" : "<p> Standard <code>Adapter</code> heartbeat event. This class may be sub-classed to meet solution-specific heartbeat information requirements. </p> \n<p> In the adapter configuration file this class is aliased as <b>heartbeat-event</b> which is the preferred alternative to the fully qualified classname when building your configuration. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/WriteMetadataToFilesystem.html",
      "fullClassName" : "com.adaptris.core.services.metadata.WriteMetadataToFilesystem",
      "className" : "WriteMetadataToFilesystem",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "write-metadata-to-filesystem",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Write the current set of metadata to the filesystem",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Write the current set of metadata to the filesystem\",\n                  tag=\"service,metadata\")\npublic class WriteMetadataToFilesystem\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Write the current set of metadata to the filesystem\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">WriteMetadataToFilesystem</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Implementation of Service that writes metadata to the filesystem. Used in conjunction with ReadMetadataFromFilesystem to allow preservation of metadata across integration points that make use of the filesystem.",
      "descriptionHtml" : "<p> Implementation of <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> that writes metadata to the filesystem. </p> \n<p> Used in conjunction with <a href=\"ReadMetadataFromFilesystem.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ReadMetadataFromFilesystem</code></a> to allow preservation of metadata across integration points that make use of the filesystem. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/Copy.html",
      "fullClassName" : "com.adaptris.jclouds.blobstore.Copy",
      "className" : "Copy",
      "packageName" : "com.adaptris.jclouds.blobstore",
      "componentType" : "object",
      "alias" : "jclouds-blobstore-copy",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-blobstore.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Copy a blob to a different location in the same provider",
        "tag" : "jclouds"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Copy a blob to a different location in the same provider\",\n                  since=\"3.9.2\",\n                  tag=\"jclouds\")\npublic class Copy\nextends OperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Copy a blob to a different location in the same provider\",\n                  since=\"3.9.2\",\n                  tag=\"jclouds\")\npublic class <span class=\"typeNameLabel\">Copy</span>\nextends <a href=\"OperationImpl.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\">OperationImpl</a>",
      "description" : "Copy a blob to a different location in the same provider",
      "descriptionHtml" : "Copy a blob to a different location in the same provider",
      "inheritance" : [
        {
          "name" : "ContainerOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/ContainerOperation.html"
        },
        {
          "name" : "OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/OperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Blobstore",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-blobstore",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/activemq/BlobMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.activemq.BlobMessageTranslator",
      "className" : "BlobMessageTranslator",
      "packageName" : "com.adaptris.core.jms.activemq",
      "componentType" : "object",
      "alias" : "activemq-blob-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public final class BlobMessageTranslator\nextends MessageTypeTranslatorImp",
      "annotationDetailsHtml" : "public final class <span class=\"typeNameLabel\">BlobMessageTranslator</span>\nextends <a href=\"../MessageTypeTranslatorImp.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MessageTypeTranslatorImp</a>",
      "description" : "Translates between AdaptrisMessage and BlobMessage. In outbound scenarios (i.e. writing to ActiveMQ), there are two ways in which this translator works with the AdaptrisMessage. If setMetadataUrlKey(String) has been set, then the value associated with that metadata key is used to create a URL object so that ActiveMQSession.createBlobMessage(URL) can be used. If you are intending to use this, then the data will already have been written to this URL (by the adapter or otherwise). If the metadata key does not exist, then it assumes the next scenario. If setMetadataUrlKey(String) has not been set, then the contents of the AdaptrisMessage object are used to form the BlobMessage, either by using ActiveMQSession.createBlobMessage(java.io.File) or ActiveMQSession.createBlobMessage(InputStream) depending on the underlying type of AdaptrisMessage. If you are intending to use this, then you will have already configured ActiveMQ / underlying OS platform (e.g. for WebDAV/FTP) appropriately for handling out of band transfers. For inbound scenarios, BlobMessage.getInputStream() is used, this may create additional connections to remote servers from the machine where the adapter is running.",
      "descriptionHtml" : "<p> Translates between <a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> and <code>BlobMessage</code>. </p> \n<p> In outbound scenarios (i.e. writing to ActiveMQ), there are two ways in which this translator works with the <a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>. </p> \n<ol> \n <li>If <a href=\"#setMetadataUrlKey(java.lang.String)\" target=\"_new\"><code>setMetadataUrlKey(String)</code></a> <strong>has been set</strong>, then the value associated with that metadata key is used to create a URL object so that <code>ActiveMQSession.createBlobMessage(URL)</code> can be used. If you are intending to use this, then the data will already have been written to this URL (by the adapter or otherwise). If the metadata key does not exist, then it assumes the next scenario.</li> \n <li>If <a href=\"#setMetadataUrlKey(java.lang.String)\" target=\"_new\"><code>setMetadataUrlKey(String)</code></a> <strong>has not been set</strong>, then the contents of the AdaptrisMessage object are used to form the BlobMessage, either by using <code>ActiveMQSession.createBlobMessage(java.io.File)</code> or <code>ActiveMQSession.createBlobMessage(InputStream)</code> depending on the underlying type of AdaptrisMessage. If you are intending to use this, then you will have already configured ActiveMQ / underlying OS platform (e.g. for WebDAV/FTP) appropriately for handling out of band transfers. </li> \n</ol> \n<p> For inbound scenarios, <code>BlobMessage.getInputStream()</code> is used, this may create additional connections to remote servers from the machine where the adapter is running. </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/Test.html",
      "fullClassName" : "com.adaptris.tester.runtime.Test",
      "className" : "Test",
      "packageName" : "com.adaptris.tester.runtime",
      "componentType" : "object",
      "alias" : "test",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class Test\nextends java.lang.Object\nimplements UniqueIdAwareTestComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Test</span>\nextends java.lang.Object\nimplements <a href=\"UniqueIdAwareTestComponent.html\" title=\"interface in com.adaptris.tester.runtime\" target=\"_new\">UniqueIdAwareTestComponent</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedConnection.html",
      "fullClassName" : "com.adaptris.core.SharedConnection",
      "className" : "SharedConnection",
      "packageName" : "com.adaptris.core",
      "componentType" : "connection",
      "alias" : "shared-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Connection that refers to another connection configured elsewhere",
        "tag" : "connections,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Connection that refers to another connection configured elsewhere\",\n                  tag=\"connections,base\")\npublic class SharedConnection\nextends SharedComponent\nimplements AdaptrisConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Connection that refers to another connection configured elsewhere\",\n                  tag=\"connections,base\")\npublic class <span class=\"typeNameLabel\">SharedConnection</span>\nextends <a href=\"SharedComponent.html\" title=\"class in com.adaptris.core\" target=\"_new\">SharedComponent</a>\nimplements <a href=\"AdaptrisConnection.html\" title=\"interface in com.adaptris.core\" target=\"_new\">AdaptrisConnection</a>",
      "description" : "A connection instance that references a connection made available via SharedComponentList.",
      "descriptionHtml" : "A connection instance that references a connection made available via \n<a href=\"SharedComponentList.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>SharedComponentList</code></a>.",
      "inheritance" : [
        {
          "name" : "SharedComponent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedComponent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/MessageCountRestartStrategy.html",
      "fullClassName" : "com.adaptris.core.services.MessageCountRestartStrategy",
      "className" : "MessageCountRestartStrategy",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "object",
      "alias" : "message-count-restart-strategy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MessageCountRestartStrategy\nextends java.lang.Object\nimplements RestartStrategy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MessageCountRestartStrategy</span>\nextends java.lang.Object\nimplements <a href=\"RestartStrategy.html\" title=\"interface in com.adaptris.core.services\" target=\"_new\">RestartStrategy</a>",
      "description" : "This RestartStrategy monitors the number of messages processed and if this number passes our maximum threshold, then this strategy will return true upon requiresRestart(). Finally upon calling requiresRestart, should we return true, we will also reset the internal number of messages processed count back down to zero. The default max-messages-count is set to 50.",
      "descriptionHtml" : "<p> This RestartStrategy monitors the number of messages processed and if this number passes our maximum threshold, then this strategy will return true upon requiresRestart(). Finally upon calling requiresRestart, should we return true, we will also reset the internal number of messages processed count back down to zero. </p> \n<p> The default max-messages-count is set to 50. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/ServiceTest.html",
      "fullClassName" : "com.adaptris.tester.runtime.ServiceTest",
      "className" : "ServiceTest",
      "packageName" : "com.adaptris.tester.runtime",
      "componentType" : "object",
      "alias" : "service-test",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class ServiceTest\nextends java.lang.Object\nimplements UniqueIdAwareTestComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ServiceTest</span>\nextends java.lang.Object\nimplements <a href=\"UniqueIdAwareTestComponent.html\" title=\"interface in com.adaptris.tester.runtime\" target=\"_new\">UniqueIdAwareTestComponent</a>",
      "description" : "Main class for service tester. Use other components from tester package to define tests execution. The client class TestExecutor create and manage instances of this class.",
      "descriptionHtml" : "Main class for service tester. Use other components from \n<code>tester</code> package to define tests execution. The client class \n<a href=\"../runners/TestExecutor.html\" title=\"class in com.adaptris.tester.runners\" target=\"_new\"><code>TestExecutor</code></a> create and manage instances of this class.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/SimpleDocumentBuilder.html",
      "fullClassName" : "com.adaptris.core.elastic.SimpleDocumentBuilder",
      "className" : "SimpleDocumentBuilder",
      "packageName" : "com.adaptris.core.elastic",
      "componentType" : "object",
      "alias" : "elastic-simple-document-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Build a document for elasticsearch using the raw payload and metadata",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Build a document for elasticsearch using the raw payload and metadata\",\n                  since=\"3.9.1\")\npublic class SimpleDocumentBuilder\nextends java.lang.Object\nimplements ElasticDocumentBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Build a document for elasticsearch using the raw payload and metadata\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">SimpleDocumentBuilder</span>\nextends java.lang.Object\nimplements <a href=\"ElasticDocumentBuilder.html\" title=\"interface in com.adaptris.core.elastic\" target=\"_new\">ElasticDocumentBuilder</a>",
      "description" : "Builds a simple document for elastic search. The simple document that is created contains the following characteristics content contains the message payload (as a String) metadata all the metadata (removing illegal values, such as metadata keys with '.' in them) date contains the current date/time The message's uniqueID is used as the ID of the document.",
      "descriptionHtml" : "Builds a simple document for elastic search. \n<p> The simple document that is created contains the following characteristics </p>\n<ul> \n <li><code>content</code> contains the message payload (as a String)</li> \n <li><code>metadata</code> all the metadata (removing illegal values, such as metadata keys with '.' in them)</li> \n <li><code>date</code> contains the current date/time</li> \n <li>The message's uniqueID is used as the ID of the document. </li>\n</ul> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.MockMessageConsumer",
      "className" : "MockMessageConsumer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/StringPayload.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.StringPayload",
      "className" : "StringPayload",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-string-payload",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class StringPayload\nextends PayloadParameter\nimplements ImportParameter, ExportParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StringPayload</span>\nextends <a href=\"PayloadParameter.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">PayloadParameter</a>\nimplements <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ImportParameter</a>, <a href=\"../ExportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ExportParameter</a>",
      "description" : "Allows the use of the AdaptrisMessage Payload as a String based parameter to a given RFC Call.",
      "descriptionHtml" : "Allows the use of the AdaptrisMessage Payload as a String based parameter to a given RFC Call.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        },
        {
          "name" : "PayloadParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/PayloadParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/BatchedJsonArraySplitter.html",
      "fullClassName" : "com.adaptris.core.services.splitter.json.BatchedJsonArraySplitter",
      "className" : "BatchedJsonArraySplitter",
      "packageName" : "com.adaptris.core.services.splitter.json",
      "componentType" : "object",
      "alias" : "batched-json-array-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Split a JSON Array into a smaller subset of arrays",
        "tag" : "json,splitting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a JSON Array into a smaller subset of arrays\",\n                  tag=\"json,splitting\")\npublic class BatchedJsonArraySplitter\nextends LargeJsonArraySplitter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a JSON Array into a smaller subset of arrays\",\n                  tag=\"json,splitting\")\npublic class <span class=\"typeNameLabel\">BatchedJsonArraySplitter</span>\nextends <a href=\"LargeJsonArraySplitter.html\" title=\"class in com.adaptris.core.services.splitter.json\" target=\"_new\">LargeJsonArraySplitter</a>",
      "description" : "Split an arbitrarily large JSON array into smaller batches. This is a extension to LargeJsonArraySplitter; each resulting message is still a JSON array, it just contains slightly fewer elements than the original message. For instance given the following JSON Array;  \n[\n{\"colour\": \"red\",\"value\": \"#f00\"},\n{\"colour\": \"green\",\"value\": \"#0f0\"},\n{\"colour\": \"blue\",\"value\": \"#00f\"},\n{\"colour\": \"black\",\"value\": \"#000\"}\n]\n   \n with a batchSize of 2 then we would expect to split messages; each a JSON array containing two elements. e.g. : [{ \"colour\": \"red\", \"value\": \"#f00\" }, { \"colour\": \"green\", \"value\": \"#0f0\"}] and [{ \"colour\": \"blue\",\"value\": \"#00f\"}, { \"colour\": \"black\", \"value\": \"#000\"}]",
      "descriptionHtml" : "Split an arbitrarily large JSON array into smaller batches. \n<p> This is a extension to <a href=\"LargeJsonArraySplitter.html\" title=\"class in com.adaptris.core.services.splitter.json\" target=\"_new\"><code>LargeJsonArraySplitter</code></a>; each resulting message is <strong>still a JSON array</strong>, it just contains slightly fewer elements than the original message. </p> \n<p> For instance given the following JSON Array; </p>\n<pre> <code>\n[\n{\"colour\": \"red\",\"value\": \"#f00\"},\n{\"colour\": \"green\",\"value\": \"#0f0\"},\n{\"colour\": \"blue\",\"value\": \"#00f\"},\n{\"colour\": \"black\",\"value\": \"#000\"}\n]\n   </code>\n </pre> with a batchSize of \n<code>2</code> then we would expect to split messages; each a JSON array containing two elements. e.g. : \n<code>[{ \"colour\": \"red\", \"value\": \"#f00\" }, { \"colour\": \"green\", \"value\": \"#0f0\"}] </code> and \n<code>[{ \"colour\": \"blue\",\"value\": \"#00f\"}, { \"colour\": \"black\", \"value\": \"#000\"}] </code>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        },
        {
          "name" : "LargeJsonArraySplitter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/json/LargeJsonArraySplitter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/TestList.html",
      "fullClassName" : "com.adaptris.tester.runtime.TestList",
      "className" : "TestList",
      "packageName" : "com.adaptris.tester.runtime",
      "componentType" : "object",
      "alias" : "test-list",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class TestList\nextends java.util.AbstractCollection<Test>\nimplements UniqueIdAwareTestComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TestList</span>\nextends java.util.AbstractCollection&lt;<a href=\"Test.html\" title=\"class in com.adaptris.tester.runtime\" target=\"_new\">Test</a>&gt;\nimplements <a href=\"UniqueIdAwareTestComponent.html\" title=\"interface in com.adaptris.tester.runtime\" target=\"_new\">UniqueIdAwareTestComponent</a>",
      "inheritance" : [
        {
          "name" : "Test",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/Test.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/jdbc/InsertJsonObject.html",
      "fullClassName" : "com.adaptris.core.json.jdbc.InsertJsonObject",
      "className" : "InsertJsonObject",
      "packageName" : "com.adaptris.core.json.jdbc",
      "componentType" : "service",
      "alias" : "json-jdbc-insert",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.5",
        "summary" : "Insert a JSON object into a database",
        "tag" : "service,json,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Insert a JSON object into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class InsertJsonObject\nextends JdbcMapInsert",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Insert a JSON object into a database\",\n                  tag=\"service,json,jdbc\",\n                  since=\"3.6.5\")\npublic class <span class=\"typeNameLabel\">InsertJsonObject</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapInsert.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\">JdbcMapInsert</a>",
      "description" : "Convenience service for inserting a JSON object into a database. Creates an insert statement based on the contents of the JSON object inside the array. { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" } will effectively execute the following statement INSERT INTO table (firstname,lastname,dob) VALUES (?,?,?). Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so { \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}} would still be 3 parameters, the address parameter will be '{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'",
      "descriptionHtml" : "Convenience service for inserting a JSON object into a database. \n<p> Creates an insert statement based on the contents of the JSON object inside the array. <code>{ \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }</code> will effectively execute the following statement <code>INSERT INTO table (firstname,lastname,dob) VALUES (?,?,?)</code>. </p> \n<p> Note that no parsing/assertion of the column names will be done, so if they are invalid SQL columns then it's going to be fail. Additionally, nested JSON objects will be rendered as strings before being passed into the appropriate statement; so <code>{ \"firstname\":\"alice\", \"lastname\":\"smith\", \"address\": { \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}}</code> would still be 3 parameters, the address parameter will be <code>'{ \"address\" : \"Buckingham Palace\", \"postcode\":\"SW1A 1AA\"}'</code> </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html?is-external=true"
        },
        {
          "name" : "JdbcMapInsert",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcMapInsert.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/actions/MappedAction.html",
      "fullClassName" : "com.adaptris.core.elastic.actions.MappedAction",
      "className" : "MappedAction",
      "packageName" : "com.adaptris.core.elastic.actions",
      "componentType" : "object",
      "alias" : "elastic-mapped-action",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Wraps a ActionExtractor implementation which is then mapped onto a different action",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Wraps a ActionExtractor implementation which is then mapped onto a different action\",\n                  since=\"3.9.1\")\npublic class MappedAction\nextends java.lang.Object\nimplements ActionExtractor",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Wraps a ActionExtractor implementation which is then mapped onto a different action\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">MappedAction</span>\nextends java.lang.Object\nimplements <a href=\"ActionExtractor.html\" title=\"interface in com.adaptris.core.elastic.actions\" target=\"_new\">ActionExtractor</a>",
      "description" : "Wraps a ActionExtractor implementation which is then mapped onto a different action.",
      "descriptionHtml" : "Wraps a ActionExtractor implementation which is then mapped onto a different action.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ResponseHeadersAsMetadata.html",
      "fullClassName" : "com.adaptris.core.http.apache.ResponseHeadersAsMetadata",
      "className" : "ResponseHeadersAsMetadata",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-response-headers-as-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class ResponseHeadersAsMetadata\nextends java.lang.Object\nimplements ResponseHeaderHandler<org.apache.http.HttpResponse>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ResponseHeadersAsMetadata</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">ResponseHeaderHandler</a>&lt;org.apache.http.HttpResponse&gt;",
      "description" : "Concrete implementation of ResponseHeaderHandler which adds all the HTTP headers from the response as metadata to the AdaptrisMessage.",
      "descriptionHtml" : "Concrete implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/ResponseHeaderHandler.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>ResponseHeaderHandler</code></a> which adds all the HTTP headers from the response as metadata to the \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/SlowMessageNotification.html",
      "fullClassName" : "com.adaptris.core.interceptor.SlowMessageNotification",
      "className" : "SlowMessageNotification",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "slow-message-notification",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that issues a JMX notification if a message took too long",
        "tag" : "interceptor,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that issues a JMX notification if a message took too long\",\n                  tag=\"interceptor,jmx\")\npublic class SlowMessageNotification\nextends NotifyingInterceptor",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that issues a JMX notification if a message took too long\",\n                  tag=\"interceptor,jmx\")\npublic class <span class=\"typeNameLabel\">SlowMessageNotification</span>\nextends <a href=\"NotifyingInterceptor.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">NotifyingInterceptor</a>",
      "description" : "Interceptor that emits a Notification if a message has exceeded the specified threshold for processing within a workflow. The Notification.setUserData(Object) part of the notification is a Properties object containing information about the message that exceeded the interceptors threshold. Note that notifications are emitted whenever a message is deemed to have exceeded the threshold; you might get multiple notifications if a message exceeds the threshold, fails and is automatically retried (which again exceeds the threshold). A cleanup thread is also started as part of this interceptor which purges internal data on a periodic basis; this period is calculated based on the notification threshold (+1 minute) and any messages that are outstanding will have a notification emitted for it, and removed. Because of this, it will be possible to be notified before the message formally exits the workflow, but the notification will still be after the threshold has been exceeded. If this occurs, then the endTime and timeTaken markers are set to -1",
      "descriptionHtml" : "Interceptor that emits a \n<code>Notification</code> if a message has exceeded the specified threshold for processing within a workflow. \n<p> The <code>Notification.setUserData(Object)</code> part of the notification is a <code>Properties</code> object containing information about the message that exceeded the interceptors threshold. Note that notifications are emitted whenever a message is deemed to have exceeded the threshold; you might get multiple notifications if a message exceeds the threshold, fails and is automatically retried (which again exceeds the threshold). </p> \n<p> A cleanup thread is also started as part of this interceptor which purges internal data on a periodic basis; this period is calculated based on the notification threshold (+1 minute) and any messages that are outstanding will have a notification emitted for it, and removed. Because of this, it will be possible to be notified before the message formally exits the workflow, but the notification will still be after the threshold has been exceeded. If this occurs, then the endTime and timeTaken markers are set to <code>-1</code> </p>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        },
        {
          "name" : "NotifyingInterceptor",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/NotifyingInterceptor.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RaiseExceptionOutOfStateHandler.html",
      "fullClassName" : "com.adaptris.core.RaiseExceptionOutOfStateHandler",
      "className" : "RaiseExceptionOutOfStateHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "raise-exception-out-of-state-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RaiseExceptionOutOfStateHandler\nextends OutOfStateHandlerImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RaiseExceptionOutOfStateHandler</span>\nextends <a href=\"OutOfStateHandlerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">OutOfStateHandlerImp</a>",
      "description" : "This implementation of the OutOfStateHandler will simply throw an OutOfStateException every time when a StateManagedComponent is not in the correct/expected state. Example configuration:  \n <raise-exception-out-of-state-handler>\n    <correct-state>STARTED</correct-state>\n </raise-exception-out-of-state-handler>",
      "descriptionHtml" : "<p> This implementation of the <a href=\"OutOfStateHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>OutOfStateHandler</code></a> will simply throw an <a href=\"OutOfStateException.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>OutOfStateException</code></a> every time when a <a href=\"StateManagedComponent.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>StateManagedComponent</code></a> is not in the correct/expected state. </p> \n<p> Example configuration: </p>\n<pre> <code>\n &lt;raise-exception-out-of-state-handler&gt;\n    &lt;correct-state&gt;STARTED&lt;/correct-state&gt;\n &lt;/raise-exception-out-of-state-handler&gt;\n </code>\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "OutOfStateHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/OutOfStateHandlerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairSet.html",
      "fullClassName" : "com.adaptris.util.KeyValuePairSet",
      "className" : "KeyValuePairSet",
      "packageName" : "com.adaptris.util",
      "componentType" : "object",
      "alias" : "key-value-pair-set",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class KeyValuePairSet\nextends KeyValuePairBag\nimplements java.util.Set<KeyValuePair>, java.io.Serializable",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">KeyValuePairSet</span>\nextends <a href=\"KeyValuePairBag.html\" title=\"class in com.adaptris.util\" target=\"_new\">KeyValuePairBag</a>\nimplements java.util.Set&lt;<a href=\"KeyValuePair.html\" title=\"class in com.adaptris.util\" target=\"_new\">KeyValuePair</a>&gt;, java.io.Serializable",
      "description" : "A Set of KeyValuePair instances.",
      "descriptionHtml" : "<p> A Set of <code>KeyValuePair</code> instances. </p>",
      "inheritance" : [
        {
          "name" : "KeyValuePair",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePair.html"
        },
        {
          "name" : "KeyValuePairBag",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/KeyValuePairBag.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/MetadataRecipient.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.MetadataRecipient",
      "className" : "MetadataRecipient",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-metadata-recipient",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataRecipient\nextends Recipient",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataRecipient</span>\nextends <a href=\"Recipient.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">Recipient</a>",
      "description" : "AQjmsAgent that can be derived from metadata.",
      "descriptionHtml" : "AQjmsAgent that can be derived from metadata.",
      "inheritance" : [
        {
          "name" : "Recipient",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/Recipient.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-triggered/4.0.0B1-RELEASE/com/adaptris/core/triggered/OneTimePoller.html",
      "fullClassName" : "com.adaptris.core.triggered.OneTimePoller",
      "className" : "OneTimePoller",
      "packageName" : "com.adaptris.core.triggered",
      "componentType" : "object",
      "alias" : "triggered-one-time-poller",
      "deprecated" : false,
      "jarFileName" : "interlok-triggered.jar",
      "profile" : { },
      "annotationDetails" : "public class OneTimePoller\nextends PollerImp\nimplements LicensedComponent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">OneTimePoller</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PollerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">PollerImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Implementation of Poller which only polls once upon start and never again.",
      "descriptionHtml" : "<p> Implementation of <code>Poller</code> which only polls once upon start and never again. </p>",
      "inheritance" : [
        {
          "name" : "PollerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/PollerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Misc/Triggered",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-triggered",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertXpathEquals.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertXpathEquals",
      "className" : "AssertXpathEquals",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-xpath-equals",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertXpathEquals\nextends XpathCommon\nimplements Assertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertXpathEquals</span>\nextends <a href=\"../../XpathCommon.html\" title=\"class in com.adaptris.tester.runtime\" target=\"_new\">XpathCommon</a>\nimplements <a href=\"Assertion.html\" title=\"interface in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">Assertion</a>",
      "description" : "Checks if result of XpathCommon.getXpath() from TestMessage.getPayload() equals getValue(). Example: Payload: <root><key>value</key></root> Xpath: /root/key Value: value",
      "descriptionHtml" : "Checks if result of \n<a href=\"../../XpathCommon.html#getXpath()\" target=\"_new\"><code>XpathCommon.getXpath()</code></a> from \n<a href=\"../TestMessage.html#getPayload()\" target=\"_new\"><code>TestMessage.getPayload()</code></a> equals \n<a href=\"#getValue()\" target=\"_new\"><code>getValue()</code></a>. \n<p><b>Example:</b></p> \n<p>Payload:<br> <code>&lt;root&gt;&lt;key&gt;value&lt;/key&gt;&lt;/root&gt; </code> </p> \n<p>Xpath:<br> <code>/root/key</code> </p> \n<p>Value:<br> <code>value</code> </p>",
      "inheritance" : [
        {
          "name" : "XpathCommon",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/XpathCommon.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/ApacheTikaFileProbe.html",
      "fullClassName" : "com.adaptris.filesystem.ApacheTikaFileProbe",
      "className" : "ApacheTikaFileProbe",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "object",
      "alias" : "apache-tika-file-probe",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : { },
      "annotationDetails" : "public class ApacheTikaFileProbe\nextends java.lang.Object\nimplements ReadFileService.ContentTypeProbe",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ApacheTikaFileProbe</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/ReadFileService.ContentTypeProbe.html?is-external=true\" title=\"class or interface in com.adaptris.core.services\" class=\"externalLink\" target=\"_new\">ReadFileService.ContentTypeProbe</a>",
      "description" : "File probe based on Apache Tika. Since Files.probeContentType(java.nio.file.Path) is OS and implementation dependent (by default it returns null on a Mac; this is provided for behaviour consistency using a third party package. It uses Tika#detect(java.nio.file.Path) to probe the content type of the file. You can optionally include org.apache.tika:tika-parsers in your dependency tree for parsing based on the actual content for additional file type. If you are including tika-parsers then you may need to explicitly include a STaX2 parser implementation in your dependency tree; org.apache.cxf:cxf-rt-rs-client has a dependency on woodstox which will cause XStream to use STaX2.",
      "descriptionHtml" : "File probe based on \n<a href=\"http://tika.apache.org/\" target=\"_new\">Apache Tika</a>. \n<p> Since <code>Files.probeContentType(java.nio.file.Path)</code> is OS and implementation dependent (by default it returns <code>null</code> on a Mac; this is provided for behaviour consistency using a third party package. It uses <code>Tika#detect(java.nio.file.Path)</code> to probe the content type of the file. </p> \n<p> You can optionally include <code>org.apache.tika:tika-parsers</code> in your dependency tree for parsing based on the actual content for additional file type. If you are including <code>tika-parsers</code> then you may need to explicitly include a STaX2 parser implementation in your dependency tree; <code>org.apache.cxf:cxf-rt-rs-client</code> has a dependency on woodstox which will cause XStream to use STaX2. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/runtime/LruBoundedMessageCache.html",
      "fullClassName" : "com.adaptris.core.runtime.LruBoundedMessageCache",
      "className" : "LruBoundedMessageCache",
      "packageName" : "com.adaptris.core.runtime",
      "componentType" : "object",
      "alias" : "lru-bounded-message-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LruBoundedMessageCache\nextends java.lang.Object\nimplements MessageCache",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LruBoundedMessageCache</span>\nextends java.lang.Object\nimplements <a href=\"MessageCache.html\" title=\"interface in com.adaptris.core.runtime\" target=\"_new\">MessageCache</a>",
      "description" : "A MessageCache implementation that uses an ArrayBlockingQueue to hold the messages. Once the internal queue reaches it's limit, the oldest message will be removed and the newer message added. You can control the limit of the internal queue by configuring \"max-messages\".",
      "descriptionHtml" : "<p> A <a href=\"MessageCache.html\" title=\"interface in com.adaptris.core.runtime\" target=\"_new\"><code>MessageCache</code></a> implementation that uses an <code>ArrayBlockingQueue</code> to hold the messages. </p> \n<p> Once the internal queue reaches it's limit, the oldest message will be removed and the newer message added. </p> \n<p> You can control the limit of the internal queue by configuring \"max-messages\". </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/TraversingFsConsumer.html",
      "fullClassName" : "com.adaptris.core.fs.TraversingFsConsumer",
      "className" : "TraversingFsConsumer",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "consumer",
      "alias" : "traversing-fs-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "originalname",
          "fsFileSize",
          "lastmodified",
          "fsConsumeDir",
          "_interlokMessageConsumedFrom",
          "fsParentDir"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from the filesystem; traversing sub-directories",
        "tag" : "consumer,fs,filesystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from the filesystem; traversing sub-directories\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=NullConnection.class)\npublic class TraversingFsConsumer\nextends FsConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from the filesystem; traversing sub-directories\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">TraversingFsConsumer</span>\nextends <a href=\"FsConsumer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\">FsConsumer</a>",
      "description" : "Extension of the standard FsConsumer that traverses all subdirectories for files that match the filter expression.",
      "descriptionHtml" : "<p> Extension of the standard FsConsumer that traverses all subdirectories for files that match the filter expression. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "FsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsConsumerImpl.html"
        },
        {
          "name" : "FsConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsConsumer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/XpathSyntaxIdentifier.html",
      "fullClassName" : "com.adaptris.core.services.routing.XpathSyntaxIdentifier",
      "className" : "XpathSyntaxIdentifier",
      "packageName" : "com.adaptris.core.services.routing",
      "componentType" : "object",
      "alias" : "routing-xpath-syntax-identifier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathSyntaxIdentifier\nextends XmlSyntaxIdentifierImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathSyntaxIdentifier</span>\nextends <a href=\"XmlSyntaxIdentifierImpl.html\" title=\"class in com.adaptris.core.services.routing\" target=\"_new\">XmlSyntaxIdentifierImpl</a>",
      "description" : "SyntaxIdentifier implementation using XPATH. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. Since 3.10.0 this class implements Condition which means that it can be used as part of the conditional services; if used in such a manner, then configuration is contextual, get/setDestination will be ignored (but may still have to be configured due to validation",
      "descriptionHtml" : "SyntaxIdentifier implementation using XPATH. \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p> \n<p> Since <strong>3.10.0</strong> this class implements <a href=\"../conditional/Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> which means that it can be used as part of the conditional services; if used in such a manner, then configuration is contextual, get/setDestination will be ignored (but may still have to be configured due to validation </p>",
      "inheritance" : [
        {
          "name" : "SyntaxIdentifierBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierBase.html"
        },
        {
          "name" : "SyntaxIdentifierImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/SyntaxIdentifierImpl.html"
        },
        {
          "name" : "XmlSyntaxIdentifierImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/routing/XmlSyntaxIdentifierImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.DefectiveMessageFactory",
      "className" : "DefectiveMessageFactory",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "object",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/helpers/StaticPortProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.helpers.StaticPortProvider",
      "className" : "StaticPortProvider",
      "packageName" : "com.adaptris.tester.runtime.helpers",
      "componentType" : "object",
      "alias" : "static-port-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class StaticPortProvider\nextends java.lang.Object\nimplements PortProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">StaticPortProvider</span>\nextends java.lang.Object\nimplements <a href=\"PortProvider.html\" title=\"interface in com.adaptris.tester.runtime.helpers\" target=\"_new\">PortProvider</a>",
      "description" : "Implementation of PortProvider that returns the value set using setPort(int) as the port.",
      "descriptionHtml" : "Implementation of \n<a href=\"PortProvider.html\" title=\"interface in com.adaptris.tester.runtime.helpers\" target=\"_new\"><code>PortProvider</code></a> that returns the value set using \n<a href=\"#setPort(int)\" target=\"_new\"><code>setPort(int)</code></a> as the port.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/HttpRequestService.html",
      "fullClassName" : "com.adaptris.core.http.apache.HttpRequestService",
      "className" : "HttpRequestService",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "service",
      "alias" : "apache-http-request-service",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : {
        "author" : "Adaptris Ltd",
        "branchSelector" : "false",
        "metadata" : [
          "adphttpresponse"
        ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Make a HTTP(s) request to a remote server using the Apache HTTP Client",
        "tag" : "service,http,https"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Make a HTTP(s) request to a remote server using the Apache HTTP Client\",\n                  tag=\"service,http,https\",\n                  metadata=\"adphttpresponse\",\n                  author=\"Adaptris Ltd\")\npublic class HttpRequestService\nextends HttpRequestServiceImpl\nimplements DynamicPollingTemplate.TemplateProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Make a HTTP(s) request to a remote server using the Apache HTTP Client\",\n                  tag=\"service,http,https\",\n                  metadata=\"adphttpresponse\",\n                  author=\"Adaptris Ltd\")\npublic class <span class=\"typeNameLabel\">HttpRequestService</span>\nextends <a href=\"HttpRequestServiceImpl.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\">HttpRequestServiceImpl</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DynamicPollingTemplate.TemplateProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">DynamicPollingTemplate.TemplateProvider</a>",
      "description" : "Direct HTTP support as a service rather wrapped via StandaloneProducer or StandaloneRequestor. Note that this service just wraps a ApacheHttpProducer instance but doesn't expose all the possible settings available for the normal ApacheHttpProducer. If you need those features, than continue using the producer wrapped as a StandaloneProducer or StandaloneRequestor. String parameters in this service will use the InterlokMessage.resolve(String) which allows you to specify metadata values as part of a constant string e.g. setUrl(\"%message{http_url}\") will use the metadata value associated with the key http_url.",
      "descriptionHtml" : "Direct HTTP support as a service rather wrapped via \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneProducer</code></a> or \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneRequestor.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneRequestor</code></a>. \n<p> Note that this service just wraps a <a href=\"ApacheHttpProducer.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\"><code>ApacheHttpProducer</code></a> instance but doesn't expose all the possible settings available for the normal <a href=\"ApacheHttpProducer.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\"><code>ApacheHttpProducer</code></a>. If you need those features, than continue using the producer wrapped as a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneProducer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneProducer</code></a> or <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneRequestor.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneRequestor</code></a>. </p> \n<p> String parameters in this service will use the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#resolve(java.lang.String)\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.resolve(String)</code></a> which allows you to specify metadata values as part of a constant string e.g. <code>setUrl(\"%message{http_url}\")</code> will use the metadata value associated with the key <code>http_url</code>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "HttpRequestServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/HttpRequestServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/WaitService.html",
      "fullClassName" : "com.adaptris.core.services.WaitService",
      "className" : "WaitService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "wait-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Delay processing",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Delay processing\",\n                  tag=\"service\")\npublic class WaitService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Delay processing\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">WaitService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Implementation of Service for testing which sleeps for a configurable period.",
      "descriptionHtml" : "<p> Implementation of <code>Service</code> for testing which sleeps for a configurable period. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/edi/TradacomsSeparatorSet.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.edi.TradacomsSeparatorSet",
      "className" : "TradacomsSeparatorSet",
      "packageName" : "com.adaptris.adapter.edistream.parser.edi",
      "componentType" : "object",
      "alias" : "edi-tradacoms-separators",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class TradacomsSeparatorSet\nextends AbstractSeparatorSet\nimplements IEdiSeparatorSet",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TradacomsSeparatorSet</span>\nextends <a href=\"AbstractSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\">AbstractSeparatorSet</a>\nimplements <a href=\"IEdiSeparatorSet.html\" title=\"interface in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\">IEdiSeparatorSet</a>",
      "description" : "Defines typical separators used for Tradacom messages",
      "descriptionHtml" : "Defines typical separators used for Tradacom messages",
      "inheritance" : [
        {
          "name" : "AbstractSeparatorSet",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/edi/AbstractSeparatorSet.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.StubEventHandler",
      "className" : "StubEventHandler",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "object",
      "alias" : "dummy-event-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/NonDeletingFsConsumer.html",
      "fullClassName" : "com.adaptris.core.fs.NonDeletingFsConsumer",
      "className" : "NonDeletingFsConsumer",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "consumer",
      "alias" : "non-deleting-fs-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [
          "originalname",
          "fsFileSize",
          "lastmodified",
          "fsConsumeDir",
          "_interlokMessageConsumedFrom",
          "fsParentDir"
        ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from the filesystem without deleting them afterwards",
        "tag" : "consumer,fs,filesystem"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from the filesystem without deleting them afterwards\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=NullConnection.class)\npublic class NonDeletingFsConsumer\nextends FsConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from the filesystem without deleting them afterwards\",\n                  tag=\"consumer,fs,filesystem\",\n                  metadata={\"originalname\",\"fsFileSize\",\"lastmodified\",\"fsConsumeDir\",\"_interlokMessageConsumedFrom\",\"fsParentDir\"},\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">NonDeletingFsConsumer</span>\nextends <a href=\"FsConsumerImpl.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\">FsConsumerImpl</a>",
      "description" : "File system implementation of AdaptrisMessageConsumer based on the com.adaptris.fs package. This differs from the standard implementation of FsConsumer in that it processes the file 'in-situ' and does not delete the file after processing. To avoid constantly re-processing the same file over and over again, you can configure a ProcessedItemCache which stores the last modified timestamp of the file and only re-processes the file if it changes. The configured Destination may return a string in one of two formats If a file based url is used. e.g. file:///c:/path/to/my/directory or file:////path/to/my/directory then the patch is considered to be fully qualified If just a path is returned, then it is considered to be relative to the current working directory. e.g. if /opt/fred is used, and the adapter is installed to /opt/adapter, then the fully qualified name is /opt/adapter/opt/fred. On windows based platforms, you should always use a file based url.",
      "descriptionHtml" : "<p> File system implementation of <code>AdaptrisMessageConsumer</code> based on the <code>com.adaptris.fs</code> package. </p> \n<p> This differs from the standard implementation of <a href=\"FsConsumer.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\">FsConsumer</a> in that it processes the file 'in-situ' and does not delete the file after processing. To avoid constantly re-processing the same file over and over again, you can configure a <a href=\"ProcessedItemCache.html\" title=\"interface in com.adaptris.core.fs\" target=\"_new\">ProcessedItemCache</a> which stores the last modified timestamp of the file and only re-processes the file if it changes. </p> \n<p> The configured <code>Destination</code> may return a string in one of two formats </p> \n<ul> \n <li>If a <code>file</code> based url is used. e.g. file:///c:/path/to/my/directory or file:////path/to/my/directory then the patch is considered to be fully qualified</li> \n <li>If just a path is returned, then it is considered to be relative to the current working directory. e.g. if /opt/fred is used, and the adapter is installed to /opt/adapter, then the fully qualified name is /opt/adapter/opt/fred.</li> \n</ul> \n<p> On windows based platforms, you should always use a file based url. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "FsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/FsConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsAsyncProducer.html",
      "fullClassName" : "com.adaptris.core.jms.JmsAsyncProducer",
      "className" : "JmsAsyncProducer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "producer",
      "alias" : "jms-async-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Place message on a JMS queue or topic asynchronously",
        "tag" : "producer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Place message on a JMS queue or topic asynchronously\",\n                  tag=\"producer,jms\",\n                  recommended=JmsConnection.class)\npublic class JmsAsyncProducer\nextends JmsProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Place message on a JMS queue or topic asynchronously\",\n                  tag=\"producer,jms\",\n                  recommended=<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JmsAsyncProducer</span>\nextends <a href=\"JmsProducer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsProducer</a>",
      "description" : "JMS 2.0 Producer implementation that extends all features of JmsProducer, but allows us to send messages asynchronously. Be aware, you must have a JMS 2.0 compatible broker, this producer is not backward compatible to JMS 1.1 Essentially the producer sending the message to the JMS provider will not wait for a response that would normally confirm the message has been received and persisted. Instead the producer sends the JMS message in a \"fire-and-forget\" manner. At some future point in time, the JMS provider will call us back with confirmation or inform us of an error for each sent message. One of the benefits to sending messages asynchronously simply comes down to processing speed. During any producer, it is generally the time waiting for the JMS provider to return control back to the client after the client submits a message that takes the most time. With asynchronous message producing, we no longer have to wait for the JMS provider, allowing us to move onto the next message.",
      "descriptionHtml" : "JMS 2.0 Producer implementation that extends all features of \n<a href=\"JmsProducer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>JmsProducer</code></a>, but allows us to send messages asynchronously. \n<br> Be aware, you must have a JMS 2.0 compatible broker, this producer is not backward compatible to JMS 1.1 \n<p> Essentially the producer sending the message to the JMS provider will not wait for a response that would normally confirm the message has been received and persisted. Instead the producer sends the JMS message in a \"fire-and-forget\" manner. <br> At some future point in time, the JMS provider will call us back with confirmation or inform us of an error for each sent message. </p> \n<p> One of the benefits to sending messages asynchronously simply comes down to processing speed. During any producer, it is generally the time waiting for the JMS provider to return control back to the client after the client submits a message that takes the most time. With asynchronous message producing, we no longer have to wait for the JMS provider, allowing us to move onto the next message. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html"
        },
        {
          "name" : "JmsProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducerImpl.html"
        },
        {
          "name" : "JmsProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/GoogleCloudPubSubConnectionErrorHandler.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.GoogleCloudPubSubConnectionErrorHandler",
      "className" : "GoogleCloudPubSubConnectionErrorHandler",
      "packageName" : "com.adaptris.google.cloud.pubsub",
      "componentType" : "object",
      "alias" : "google-cloud-pubsub-connection-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Google pubsub specific error handler",
        "tag" : "connections,gcloud"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Google pubsub specific error handler\",\n                  tag=\"connections,gcloud\")\npublic class GoogleCloudPubSubConnectionErrorHandler\nextends ConnectionErrorHandlerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Google pubsub specific error handler\",\n                  tag=\"connections,gcloud\")\npublic class <span class=\"typeNameLabel\">GoogleCloudPubSubConnectionErrorHandler</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectionErrorHandlerImp</a>",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/XpathString.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.XpathString",
      "className" : "XpathString",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-xpath-string",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathString\nextends Parameter\nimplements ImportParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathString</span>\nextends <a href=\"Parameter.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">Parameter</a>\nimplements <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ImportParameter</a>",
      "description" : "Allows the use of an XPath which is resolved from the payload to be used as an Import paramter for an RFC Call.",
      "descriptionHtml" : "Allows the use of an XPath which is resolved from the payload to be used as an Import paramter for an RFC Call.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/EqualsValueMatcher.html",
      "fullClassName" : "com.adaptris.core.services.metadata.EqualsValueMatcher",
      "className" : "EqualsValueMatcher",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "object",
      "alias" : "equals-value-matcher",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class EqualsValueMatcher\nextends java.lang.Object\nimplements MetadataValueMatcher",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EqualsValueMatcher</span>\nextends java.lang.Object\nimplements <a href=\"MetadataValueMatcher.html\" title=\"interface in com.adaptris.core.services.metadata\" target=\"_new\">MetadataValueMatcher</a>",
      "description" : "Exact value match implementation of MetadataValueMatcher for MetadataValueBranchingService.",
      "descriptionHtml" : "Exact value match implementation of MetadataValueMatcher for \n<a href=\"MetadataValueBranchingService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>MetadataValueBranchingService</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/fields/ToLowerCaseFieldNameMapper.html",
      "fullClassName" : "com.adaptris.core.elastic.fields.ToLowerCaseFieldNameMapper",
      "className" : "ToLowerCaseFieldNameMapper",
      "packageName" : "com.adaptris.core.elastic.fields",
      "componentType" : "object",
      "alias" : "elastic-lowercase-field-name-mapper",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Map a fieldname to its lowercase variant",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Map a fieldname to its lowercase variant\",\n                  since=\"3.9.1\")\npublic class ToLowerCaseFieldNameMapper\nextends java.lang.Object\nimplements FieldNameMapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Map a fieldname to its lowercase variant\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">ToLowerCaseFieldNameMapper</span>\nextends java.lang.Object\nimplements <a href=\"FieldNameMapper.html\" title=\"interface in com.adaptris.core.elastic.fields\" target=\"_new\">FieldNameMapper</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/jdbc/ConfiguredColumnFilter.html",
      "fullClassName" : "com.adaptris.csv.jdbc.ConfiguredColumnFilter",
      "className" : "ConfiguredColumnFilter",
      "packageName" : "com.adaptris.csv.jdbc",
      "componentType" : "object",
      "alias" : "csv-configured-column-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.0",
        "summary" : "Filter CSV column output based on configuration",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Filter CSV column output based on configuration\",\n                  since=\"3.8.0\")\npublic class ConfiguredColumnFilter\nextends java.lang.Object\nimplements ColumnFilter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Filter CSV column output based on configuration\",\n                  since=\"3.8.0\")\npublic class <span class=\"typeNameLabel\">ConfiguredColumnFilter</span>\nextends java.lang.Object\nimplements <a href=\"ColumnFilter.html\" title=\"interface in com.adaptris.csv.jdbc\" target=\"_new\">ColumnFilter</a>",
      "description" : "ColumnFilter implementation that allows you to filter columns based on configuration.",
      "descriptionHtml" : "<a href=\"ColumnFilter.html\" title=\"interface in com.adaptris.csv.jdbc\" target=\"_new\"><code>ColumnFilter</code></a> implementation that allows you to filter columns based on configuration.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/xml/tagnames/EdiReaderXMLTagnames.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.xml.tagnames.EdiReaderXMLTagnames",
      "className" : "EdiReaderXMLTagnames",
      "packageName" : "com.adaptris.adapter.edistream.parser.xml.tagnames",
      "componentType" : "object",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class EdiReaderXMLTagnames\nextends DefaultXMLTagnames",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EdiReaderXMLTagnames</span>\nextends <a href=\"DefaultXMLTagnames.html\" title=\"class in com.adaptris.adapter.edistream.parser.xml.tagnames\" target=\"_new\">DefaultXMLTagnames</a>",
      "description" : "Based on XML Edi message output as defined by the EdiReader from Berryworks. Added to demonstrate alternate xml parsing input.",
      "descriptionHtml" : "Based on XML Edi message output as defined by the EdiReader from Berryworks. Added to demonstrate alternate xml parsing input.",
      "inheritance" : [
        {
          "name" : "DefaultXMLTagnames",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/xml/tagnames/DefaultXMLTagnames.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-rest/4.0.0B1-RELEASE/com/adaptris/core/elastic/rest/ElasticRequestBuilder.html",
      "fullClassName" : "com.adaptris.core.elastic.rest.ElasticRequestBuilder",
      "className" : "ElasticRequestBuilder",
      "packageName" : "com.adaptris.core.elastic.rest",
      "componentType" : "object",
      "alias" : "elastic-request-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-rest.jar",
      "profile" : { },
      "annotationDetails" : "public class ElasticRequestBuilder\nextends java.lang.Object\nimplements RequestBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ElasticRequestBuilder</span>\nextends java.lang.Object\nimplements <a href=\"RequestBuilder.html\" title=\"interface in com.adaptris.core.elastic.rest\" target=\"_new\">RequestBuilder</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: REST Client",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-rest",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/HexToStringService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.HexToStringService",
      "className" : "HexToStringService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "hex-to-string-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Turn a hex encoded string into a java string using the specified character encoding",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Turn a hex encoded string into a java string using the specified character encoding\",\n                  tag=\"service,metadata\")\npublic class HexToStringService\nextends ReformatMetadata",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Turn a hex encoded string into a java string using the specified character encoding\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">HexToStringService</span>\nextends <a href=\"ReformatMetadata.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadata</a>",
      "description" : "This class will decode hex encoded metadata value(s) using the specified character encoding",
      "descriptionHtml" : "This class will decode hex encoded metadata value(s) using the specified character encoding",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/NoExceptionIfWorkDone.html",
      "fullClassName" : "com.adaptris.core.services.splitter.NoExceptionIfWorkDone",
      "className" : "NoExceptionIfWorkDone",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "no-exception-if-work-done",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "No exceptions if pooled-split-join-service recorded 'some work'",
        "tag" : "service,splitjoin"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"No exceptions if pooled-split-join-service recorded \\'some work\\'\",\n                  since=\"3.11.1\",\n                  tag=\"service,splitjoin\")\npublic class NoExceptionIfWorkDone\nextends ServiceExceptionHandler",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"No exceptions if pooled-split-join-service recorded \\'some work\\'\",\n                  since=\"3.11.1\",\n                  tag=\"service,splitjoin\")\npublic class <span class=\"typeNameLabel\">NoExceptionIfWorkDone</span>\nextends <a href=\"ServiceExceptionHandler.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">ServiceExceptionHandler</a>",
      "description" : "Ignores exception so long as some messages were considered successful based on a metadata key. This strategy is useful if messages within a split-join are transient, and can be ignored provided some of them work; it allows you to ignore exceptions processing individual mesages provided one or more messages have set a specific metadata to the value true | 1. There are some caveats to using this class as part of a PooledSplitJoinService If your aggregator is sensitive to payload structure (e.g you're aggregating as a JSON ARRAY, but because of failures, the message to be aggregated is in fact XML) then you have to use a Condition to filter the message somehow. Presumably via the same metadata flag that you've set here. If your aggregator isn't sensitive to payloads (e.g. an AppendingMessageAggregator then you may still end up with a mix of JSON/XML Exceptions may still be thrown by the aggregator, and they will be propagated to the service; this only ignores exceptions that come from the service-list executed as part of the splitter.",
      "descriptionHtml" : "Ignores exception so long as some messages were considered successful based on a metadata key. \n<p> This strategy is useful if messages within a split-join are transient, and can be ignored provided some of them work; it allows you to ignore exceptions processing individual mesages provided one or more messages have set a specific metadata to the value <code>true | 1</code>. </p> \n<p> There are some caveats to using this class as part of a <a href=\"PooledSplitJoinService.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\"><code>PooledSplitJoinService</code></a> </p>\n<ul> \n <li>If your aggregator is sensitive to payload structure (e.g you're aggregating as a JSON ARRAY, but because of failures, the message to be aggregated is in fact XML) then you have to use a <code>Condition</code> to filter the message somehow. Presumably via the same metadata flag that you've set here.</li> \n <li>If your aggregator isn't sensitive to payloads (e.g. an <a href=\"../aggregator/AppendingMessageAggregator.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\"><code>AppendingMessageAggregator</code></a> then you may still end up with a mix of JSON/XML</li> \n <li>Exceptions may still be thrown by the aggregator, and they will be propagated to the service; this only ignores exceptions that come from the service-list executed as part of the <code>splitter</code>.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceExceptionHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/ServiceExceptionHandler.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/Resolver.html",
      "fullClassName" : "com.adaptris.util.text.xml.Resolver",
      "className" : "Resolver",
      "packageName" : "com.adaptris.util.text.xml",
      "componentType" : "object",
      "alias" : "simple-entity-resolver",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class Resolver\nextends java.lang.Object\nimplements org.xml.sax.EntityResolver, javax.xml.transform.URIResolver",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">Resolver</span>\nextends java.lang.Object\nimplements org.xml.sax.EntityResolver, javax.xml.transform.URIResolver",
      "description" : "Simple resolver that caches URLs that it has previously encountered.",
      "descriptionHtml" : "Simple resolver that caches URLs that it has previously encountered.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/StandardKafkaProducer.html",
      "fullClassName" : "com.adaptris.kafka.StandardKafkaProducer",
      "className" : "StandardKafkaProducer",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "producer",
      "alias" : "standard-apache-kafka-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.kafka.KafkaConnection"
        ],
        "since" : "",
        "summary" : "Deliver messages via Apache Kafka",
        "tag" : "producer,kafka"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Deliver messages via Apache Kafka\",\n                  tag=\"producer,kafka\",\n                  recommended=KafkaConnection.class)\npublic class StandardKafkaProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Deliver messages via Apache Kafka\",\n                  tag=\"producer,kafka\",\n                  recommended=<a href=\"KafkaConnection.html\" title=\"class in com.adaptris.kafka\" target=\"_new\">KafkaConnection.class</a>)\npublic class <span class=\"typeNameLabel\">StandardKafkaProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "Wrapper around KafkaProducer.",
      "descriptionHtml" : "Wrapper around \n<code>KafkaProducer</code>.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataKeyToCapitalCase.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataKeyToCapitalCase",
      "className" : "MetadataKeyToCapitalCase",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-key-to-capital-case",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Changes matching metadata keys to capital case",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Changes matching metadata keys to capital case\",\n                  tag=\"service,metadata\")\npublic class MetadataKeyToCapitalCase\nextends ReformatMetadataKey",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Changes matching metadata keys to capital case\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataKeyToCapitalCase</span>\nextends <a href=\"ReformatMetadataKey.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">ReformatMetadataKey</a>",
      "description" : "Implementation of ReformatMetadataKey that uses WordUtils.capitalizeFully(String) to capitalize each word in the key.",
      "descriptionHtml" : "Implementation of \n<a href=\"ReformatMetadataKey.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>ReformatMetadataKey</code></a> that uses \n<code>WordUtils.capitalizeFully(String)</code> to capitalize each word in the key.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        },
        {
          "name" : "ReformatMetadataKey",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/ReformatMetadataKey.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/FileBackedMimeEncoder.html",
      "fullClassName" : "com.adaptris.core.lms.FileBackedMimeEncoder",
      "className" : "FileBackedMimeEncoder",
      "packageName" : "com.adaptris.core.lms",
      "componentType" : "object",
      "alias" : "file-backed-mime-encoder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FileBackedMimeEncoder\nextends MimeEncoderImpl<java.io.File,​java.io.File>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FileBackedMimeEncoder</span>\nextends <a href=\"../MimeEncoderImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">MimeEncoderImpl</a>&lt;java.io.File,​java.io.File&gt;",
      "description" : "Implementation of AdaptrisMessageEncoder that stores payload and metadata as a mime-encoded multipart message. The expected use case for this is within a LargeFsConsumer or LargeFsProducer so that you can capture the metadata along with any exceptions in addition to the payload. Since the data may be arbitrarily large, this implementation works only with files.",
      "descriptionHtml" : "Implementation of \n<code>AdaptrisMessageEncoder</code> that stores payload and metadata as a mime-encoded multipart message. \n<p> The expected use case for this is within a <a href=\"LargeFsConsumer.html\" title=\"class in com.adaptris.core.lms\" target=\"_new\"><code>LargeFsConsumer</code></a> or <a href=\"LargeFsProducer.html\" title=\"class in com.adaptris.core.lms\" target=\"_new\"><code>LargeFsProducer</code></a> so that you can capture the metadata along with any exceptions in addition to the payload. Since the data may be arbitrarily large, this implementation works <strong>only with files</strong>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageEncoderImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageEncoderImp.html"
        },
        {
          "name" : "MimeEncoderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MimeEncoderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/TimestampColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.TimestampColumnTranslator",
      "className" : "TimestampColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-timestamp-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class TimestampColumnTranslator\nextends DateColumnTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimestampColumnTranslator</span>\nextends <a href=\"DateColumnTranslator.html\" title=\"class in com.adaptris.core.services.jdbc.types\" target=\"_new\">DateColumnTranslator</a>",
      "description" : "Column Translator implementation for handling timestamp types",
      "descriptionHtml" : "Column Translator implementation for handling timestamp types",
      "inheritance" : [
        {
          "name" : "DateColumnTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/DateColumnTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/splitter/CsvMetadataSplitter.html",
      "fullClassName" : "com.adaptris.csv.splitter.CsvMetadataSplitter",
      "className" : "CsvMetadataSplitter",
      "packageName" : "com.adaptris.csv.splitter",
      "componentType" : "object",
      "alias" : "csv-metadata-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.2",
        "summary" : "Split a CSV file line by line, immediately adding as metadata",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a CSV file line by line, immediately adding as metadata\",\n                  since=\"3.8.2\")\npublic class CsvMetadataSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a CSV file line by line, immediately adding as metadata\",\n                  since=\"3.8.2\")\npublic class <span class=\"typeNameLabel\">CsvMetadataSplitter</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.splitter\" class=\"externalLink\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "MessageSplitter implementation that splits a CSV file line by line adding all CSV columns as metadata in the split message.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitter.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.splitter\" class=\"externalLink\" target=\"_new\"><code>MessageSplitter</code></a> implementation that splits a CSV file line by line adding all CSV columns as metadata in the split message.",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/mime/InlineMimePartBuilder.html",
      "fullClassName" : "com.adaptris.core.services.mime.InlineMimePartBuilder",
      "className" : "InlineMimePartBuilder",
      "packageName" : "com.adaptris.core.services.mime",
      "componentType" : "object",
      "alias" : "inline-mime-body-part-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "Builds a MIME Body part using a byte array",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Builds a MIME Body part using a byte array\",\n                  since=\"3.9.0\")\npublic class InlineMimePartBuilder\nextends java.lang.Object\nimplements MimePartBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Builds a MIME Body part using a byte array\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">InlineMimePartBuilder</span>\nextends java.lang.Object\nimplements <a href=\"MimePartBuilder.html\" title=\"interface in com.adaptris.core.services.mime\" target=\"_new\">MimePartBuilder</a>",
      "description" : "Builds a MIME Body part by rendering a byte array as the content of the part. Used as part of a MultipartMessageBuilder service; this constructs a MimeBodyPart from the configured body configuration. Depending on your use case you might opt to use ByteArrayFromPayload or ByteArrayFromMetadata to generate the actual contents for the part. You can also specify the various headers that will be associated with the MimeBodyPart such as the Content-ID, Content-Type or Content-Transfer-Encoding. Additional non standard headers can be added by configuring a setPartHeaderFilter(MetadataFilter) to filter out metadata to include as part of the MimeBodyPart headers.",
      "descriptionHtml" : "Builds a MIME Body part by rendering a byte array as the content of the part. \n<p> Used as part of a <a href=\"MultipartMessageBuilder.html\" title=\"class in com.adaptris.core.services.mime\" target=\"_new\"><code>MultipartMessageBuilder</code></a> service; this constructs a <code>MimeBodyPart</code> from the configured <code>body</code> configuration. Depending on your use case you might opt to use <a href=\"../../common/ByteArrayFromPayload.html\" title=\"class in com.adaptris.core.common\" target=\"_new\"><code>ByteArrayFromPayload</code></a> or <a href=\"../../common/ByteArrayFromMetadata.html\" title=\"class in com.adaptris.core.common\" target=\"_new\"><code>ByteArrayFromMetadata</code></a> to generate the actual contents for the part. </p> \n<p> You can also specify the various headers that will be associated with the <code>MimeBodyPart</code> such as the <code>Content-ID</code>, <code>Content-Type</code> or <code>Content-Transfer-Encoding</code>. Additional non standard headers can be added by configuring a <a href=\"#setPartHeaderFilter(com.adaptris.core.metadata.MetadataFilter)\" target=\"_new\"><code>setPartHeaderFilter(MetadataFilter)</code></a> to filter out metadata to include as part of the MimeBodyPart headers. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/MultiItemConfiguredXpathQuery.html",
      "fullClassName" : "com.adaptris.core.services.metadata.xpath.MultiItemConfiguredXpathQuery",
      "className" : "MultiItemConfiguredXpathQuery",
      "packageName" : "com.adaptris.core.services.metadata.xpath",
      "componentType" : "object",
      "alias" : "multi-item-configured-xpath-query",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MultiItemConfiguredXpathQuery\nextends ConfiguredXpathQueryImpl\nimplements XpathQuery",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultiItemConfiguredXpathQuery</span>\nextends <a href=\"ConfiguredXpathQueryImpl.html\" title=\"class in com.adaptris.core.services.metadata.xpath\" target=\"_new\">ConfiguredXpathQueryImpl</a>\nimplements <a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a>",
      "description" : "XpathQuery implementation that retuns a multiple text items from the configured xpath.",
      "descriptionHtml" : "<a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a> implementation that retuns a multiple text items from the configured xpath.",
      "inheritance" : [
        {
          "name" : "XpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/XpathQueryImpl.html"
        },
        {
          "name" : "ConfiguredXpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/ConfiguredXpathQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/DefaultJsonSchemaLoader.html",
      "fullClassName" : "com.adaptris.core.json.schema.DefaultJsonSchemaLoader",
      "className" : "DefaultJsonSchemaLoader",
      "packageName" : "com.adaptris.core.json.schema",
      "componentType" : "object",
      "alias" : "default-json-schema-loader",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : { },
      "annotationDetails" : "public class DefaultJsonSchemaLoader\nextends java.lang.Object\nimplements JsonSchemaLoader",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DefaultJsonSchemaLoader</span>\nextends java.lang.Object\nimplements <a href=\"JsonSchemaLoader.html\" title=\"interface in com.adaptris.core.json.schema\" target=\"_new\">JsonSchemaLoader</a>",
      "description" : "JsonSchemaLoader implementation uses the default loader settings.",
      "descriptionHtml" : "<a href=\"JsonSchemaLoader.html\" title=\"interface in com.adaptris.core.json.schema\" target=\"_new\"><code>JsonSchemaLoader</code></a> implementation uses the default loader settings.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/TimeoutAction.html",
      "fullClassName" : "com.adaptris.core.http.jetty.TimeoutAction",
      "className" : "TimeoutAction",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-http-timeout-action",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class TimeoutAction\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimeoutAction</span>\nextends java.lang.Object",
      "description" : "Configure the behaviour that should occur when the max mait time is exceeded",
      "descriptionHtml" : "Configure the behaviour that should occur when the max mait time is exceeded",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-streaming/4.0.0B1-RELEASE/com/adaptris/core/json/streaming/JsonStreamingSplitter.html",
      "fullClassName" : "com.adaptris.core.json.streaming.JsonStreamingSplitter",
      "className" : "JsonStreamingSplitter",
      "packageName" : "com.adaptris.core.json.streaming",
      "componentType" : "object",
      "alias" : "json-streaming-splitter",
      "deprecated" : false,
      "jarFileName" : "interlok-json-streaming.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.2",
        "summary" : "",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.8.2\")\npublic class JsonStreamingSplitter\nextends MessageSplitterImp",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.8.2\")\npublic class <span class=\"typeNameLabel\">JsonStreamingSplitter</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.splitter\" class=\"externalLink\" target=\"_new\">MessageSplitterImp</a>",
      "description" : "Splitter implementation that splits based on JSON streaming events. Note that this is only a pseudo-xpath evaluator as it only allows simple element traversal and not any XPath functions. /path/to/repeating/element would be fine, but //repeating/element would not. It works based on XMLEventReader and navigates based on StartElement events only.",
      "descriptionHtml" : "Splitter implementation that splits based on JSON streaming events. \n<p> Note that this is only a pseudo-xpath evaluator as it only allows simple element traversal and not any XPath functions. <code>/path/to/repeating/element</code> would be fine, but <code>//repeating/element</code> would not. It works based on <code>XMLEventReader</code> and navigates based on <code>StartElement</code> events only. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON Streaming",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-streaming",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv/4.0.0B1-RELEASE/com/adaptris/csv/CustomPreferenceBuilder.html",
      "fullClassName" : "com.adaptris.csv.CustomPreferenceBuilder",
      "className" : "CustomPreferenceBuilder",
      "packageName" : "com.adaptris.csv",
      "componentType" : "object",
      "alias" : "csv-custom-preference-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-csv.jar",
      "profile" : { },
      "annotationDetails" : "public class CustomPreferenceBuilder\nextends java.lang.Object\nimplements PreferenceBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CustomPreferenceBuilder</span>\nextends java.lang.Object\nimplements <a href=\"PreferenceBuilder.html\" title=\"interface in com.adaptris.csv\" target=\"_new\">PreferenceBuilder</a>",
      "description" : "Implementation of PreferenceBuilder that allows for custom csv formats.",
      "descriptionHtml" : "Implementation of \n<a href=\"PreferenceBuilder.html\" title=\"interface in com.adaptris.csv\" target=\"_new\"><code>PreferenceBuilder</code></a> that allows for custom csv formats.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/idoc/IdocConsumer.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.idoc.IdocConsumer",
      "className" : "IdocConsumer",
      "packageName" : "com.adaptris.core.sap.jco3.idoc",
      "componentType" : "consumer",
      "alias" : "sapjco3-idoc-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.sap.jco3.idoc.IdocConsumeConnection"
        ],
        "since" : "",
        "summary" : "Receive an IDoc from SAP",
        "tag" : "consumer,sap,idoc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Receive an IDoc from SAP\",\n                  tag=\"consumer,sap,idoc\",\n                  recommended=IdocConsumeConnection.class)\npublic class IdocConsumer\nextends AdaptrisMessageConsumerImp\nimplements IdocContext, com.adaptris.core.licensing.LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Receive an IDoc from SAP\",\n                  tag=\"consumer,sap,idoc\",\n                  recommended=<a href=\"IdocConsumeConnection.html\" title=\"class in com.adaptris.core.sap.jco3.idoc\" target=\"_new\">IdocConsumeConnection.class</a>)\npublic class <span class=\"typeNameLabel\">IdocConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisMessageConsumerImp</a>\nimplements <a href=\"IdocContext.html\" title=\"interface in com.adaptris.core.sap.jco3.idoc\" target=\"_new\">IdocContext</a>, com.adaptris.core.licensing.LicensedComponent",
      "description" : "Implementation of AdaptrisMessageConsumer based on SAP JCO libraries. In order to use these classes you will have previously downloaded, installed and configured SAP Java Connector and SAP Java Connector IDoc Class Library. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. Note : The classes here were compiled against SAP Java Connector3 3.0.3, SAP IDoc Class Library 3.0.1 They will not work with SAP Java Connector 2.x and SAP Java Connector IDoc Class Library 1.x The connection associated with this Consumer must be IdocConnection Only provides minimal TransactionId support, in that the JCoIDocServer functions of checkTID and confirmTID are implemented only. Calls to onCommit and onRollback are ignored, but logged. checkTID returns true only if the TID supplied by SAP is not in the configured transaction id repository",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageConsumer</code> based on SAP <code>JCO</code> libraries. </p> \n<p> In order to use these classes you will have previously downloaded, installed and configured SAP Java Connector and SAP Java Connector IDoc Class Library. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. </p> \n<p> <b>Note : The classes here were compiled against SAP Java Connector3 3.0.3, SAP IDoc Class Library 3.0.1 They will not work with SAP Java Connector 2.x and SAP Java Connector IDoc Class Library 1.x</b> </p> \n<ul> \n <li>The connection associated with this Consumer must be IdocConnection</li> \n <li>Only provides minimal TransactionId support, in that the JCoIDocServer functions of checkTID and confirmTID are implemented only. Calls to onCommit and onRollback are ignored, but logged. checkTID returns true only if the TID supplied by SAP is not in the configured transaction id repository</li> \n</ul>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ChannelRestartProduceExceptionHandler.html",
      "fullClassName" : "com.adaptris.core.ChannelRestartProduceExceptionHandler",
      "className" : "ChannelRestartProduceExceptionHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "channel-restart-produce-exception-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ChannelRestartProduceExceptionHandler\nextends ProduceExceptionHandlerImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ChannelRestartProduceExceptionHandler</span>\nextends <a href=\"ProduceExceptionHandlerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ProduceExceptionHandlerImp</a>",
      "description" : "Implementation of ProduceExceptionHandler which attempts to restart the parent Channel of the Workflow that had the failure.",
      "descriptionHtml" : "Implementation of \n<a href=\"ProduceExceptionHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ProduceExceptionHandler</code></a> which attempts to restart the parent \n<a href=\"Channel.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>Channel</code></a> of the \n<code>Workflow</code> that had the failure.",
      "inheritance" : [
        {
          "name" : "ProduceExceptionHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceExceptionHandlerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ConfiguredAuthorizationHeader.html",
      "fullClassName" : "com.adaptris.core.http.apache.ConfiguredAuthorizationHeader",
      "className" : "ConfiguredAuthorizationHeader",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-configured-authorization-header",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredAuthorizationHeader\nextends java.lang.Object\nimplements ApacheRequestAuthenticator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredAuthorizationHeader</span>\nextends java.lang.Object\nimplements <a href=\"ApacheRequestAuthenticator.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\">ApacheRequestAuthenticator</a>",
      "description" : "Build an HttpConstants.AUTHORIZATION header from static data.",
      "descriptionHtml" : "Build an \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/HttpConstants.html?is-external=true#AUTHORIZATION\" title=\"class or interface in com.adaptris.core.http\" class=\"externalLink\" target=\"_new\"><code>HttpConstants.AUTHORIZATION</code></a> header from static data.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-monitor-agent/4.0.0B1-RELEASE/com/adaptris/monitor/agent/UDPProfilerConsumer.html",
      "fullClassName" : "com.adaptris.monitor.agent.UDPProfilerConsumer",
      "className" : "UDPProfilerConsumer",
      "packageName" : "com.adaptris.monitor.agent",
      "componentType" : "consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-monitor-agent.jar",
      "profile" : { },
      "annotationDetails" : "public class UDPProfilerConsumer\nextends AdaptrisPollingConsumer",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">UDPProfilerConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisPollingConsumer</a>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Profiling/Monitor",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-monitor-agent",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RestartProduceExceptionHandler.html",
      "fullClassName" : "com.adaptris.core.RestartProduceExceptionHandler",
      "className" : "RestartProduceExceptionHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "restart-produce-exception-handler",
      "deprecated" : true,
      "removalVersion" : "4.0.0",
      "removalMessage" : "If you need restarting capability use channel-restart-produce-exception-handler or wrap your producer into a standalone-producer and set restart services on failure.",
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "@Deprecated\n@ConfigDeprecated(message=\"If you need restarting capability use channel-restart-produce-exception-handler or wrap your producer into a standalone-producer and set restart services on failure.\",\n                  removalVersion=\"4.0.0\",\n                  groups=java.lang.Deprecated.class)\npublic class RestartProduceExceptionHandler\nextends ProduceExceptionHandlerImp",
      "annotationDetailsHtml" : "@Deprecated\n@ConfigDeprecated(message=\"If you need restarting capability use channel-restart-produce-exception-handler or wrap your producer into a standalone-producer and set restart services on failure.\",\n                  removalVersion=\"4.0.0\",\n                  groups=java.lang.Deprecated.class)\npublic class <span class=\"typeNameLabel\">RestartProduceExceptionHandler</span>\nextends <a href=\"ProduceExceptionHandlerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ProduceExceptionHandlerImp</a>",
      "description" : "Implementation of ProduceExceptionHandler which attempts to restart the Workflow that had the failure.",
      "descriptionHtml" : "Implementation of \n<a href=\"ProduceExceptionHandler.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ProduceExceptionHandler</code></a> which attempts to restart the \n<a href=\"Workflow.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Workflow</code></a> that had the failure.",
      "inheritance" : [
        {
          "name" : "ProduceExceptionHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceExceptionHandlerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/MetadataRequestMethodProvider.html",
      "fullClassName" : "com.adaptris.core.http.client.MetadataRequestMethodProvider",
      "className" : "MetadataRequestMethodProvider",
      "packageName" : "com.adaptris.core.http.client",
      "componentType" : "object",
      "alias" : "http-metadata-request-method",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataRequestMethodProvider\nextends java.lang.Object\nimplements RequestMethodProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataRequestMethodProvider</span>\nextends java.lang.Object\nimplements <a href=\"RequestMethodProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\">RequestMethodProvider</a>",
      "description" : "Implementation of RequestMethodProvider that can derive the method from AdaptrisMessage metadata. If the configured metadata key does not exist, then getDefaultMethod() is used to provide the request method.",
      "descriptionHtml" : "Implementation of \n<a href=\"RequestMethodProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>RequestMethodProvider</code></a> that can derive the method from \n<a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata. \n<p>If the configured metadata key does not exist, then <a href=\"#getDefaultMethod()\" target=\"_new\"><code>getDefaultMethod()</code></a> is used to provide the request method. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MetadataCollection.html",
      "fullClassName" : "com.adaptris.core.MetadataCollection",
      "className" : "MetadataCollection",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "metadata-collection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataCollection\nextends java.util.ArrayList<MetadataElement>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataCollection</span>\nextends java.util.ArrayList&lt;<a href=\"MetadataElement.html\" title=\"class in com.adaptris.core\" target=\"_new\">MetadataElement</a>&gt;",
      "description" : "A container class for handling a Collection of MetadataElement instance.",
      "descriptionHtml" : "A container class for handling a \n<code>Collection</code> of \n<a href=\"MetadataElement.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>MetadataElement</code></a> instance.",
      "inheritance" : [
        {
          "name" : "MetadataElement",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MetadataElement.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/NoOpMetadataFilter.html",
      "fullClassName" : "com.adaptris.core.metadata.NoOpMetadataFilter",
      "className" : "NoOpMetadataFilter",
      "packageName" : "com.adaptris.core.metadata",
      "componentType" : "object",
      "alias" : "no-op-metadata-filter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoOpMetadataFilter\nextends MetadataFilterImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoOpMetadataFilter</span>\nextends <a href=\"MetadataFilterImpl.html\" title=\"class in com.adaptris.core.metadata\" target=\"_new\">MetadataFilterImpl</a>",
      "description" : "Metadata Filter implementation that does no filtering.",
      "descriptionHtml" : "Metadata Filter implementation that does no filtering.",
      "inheritance" : [
        {
          "name" : "MetadataFilterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/metadata/MetadataFilterImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/TextMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.TextMessageTranslator",
      "className" : "TextMessageTranslator",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "text-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public final class TextMessageTranslator\nextends MessageTypeTranslatorImp",
      "annotationDetailsHtml" : "public final class <span class=\"typeNameLabel\">TextMessageTranslator</span>\nextends <a href=\"MessageTypeTranslatorImp.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MessageTypeTranslatorImp</a>",
      "description" : "Translates between AdaptrisMessage and javax.jms.TextMessages. Assumes default platform encoding. In the adapter configuration file this class is aliased as text-message-translator which is the preferred alternative to the fully qualified classname when building your configuration.",
      "descriptionHtml" : "<p> Translates between <code>AdaptrisMessage</code> and <code>javax.jms.TextMessages</code>. Assumes default platform encoding. </p> \n<p> In the adapter configuration file this class is aliased as <b>text-message-translator</b> which is the preferred alternative to the fully qualified classname when building your configuration. </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/StaticCredentialsBuilder.html",
      "fullClassName" : "com.adaptris.aws.StaticCredentialsBuilder",
      "className" : "StaticCredentialsBuilder",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-static-credentials-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Create a static set of credentials",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Create a static set of credentials\",\n                  since=\"3.9.1\")\npublic class StaticCredentialsBuilder\nextends java.lang.Object\nimplements AWSCredentialsProviderBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Create a static set of credentials\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">StaticCredentialsBuilder</span>\nextends java.lang.Object\nimplements <a href=\"AWSCredentialsProviderBuilder.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">AWSCredentialsProviderBuilder</a>",
      "description" : "A static set of credentials for AWS.",
      "descriptionHtml" : "A static set of credentials for AWS.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/server/RawStatusProvider.html",
      "fullClassName" : "com.adaptris.core.http.server.RawStatusProvider",
      "className" : "RawStatusProvider",
      "packageName" : "com.adaptris.core.http.server",
      "componentType" : "object",
      "alias" : "http-raw-status",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RawStatusProvider\nextends java.lang.Object\nimplements HttpStatusProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RawStatusProvider</span>\nextends java.lang.Object\nimplements <a href=\"HttpStatusProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\">HttpStatusProvider</a>",
      "description" : "Static implementation of HttpStatusProvider that allows a numeric status code.",
      "descriptionHtml" : "Static implementation of \n<a href=\"HttpStatusProvider.html\" title=\"interface in com.adaptris.core.http.server\" target=\"_new\"><code>HttpStatusProvider</code></a> that allows a numeric status code.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/runtime/JmxSubmitMessageInterceptor.html",
      "fullClassName" : "com.adaptris.core.runtime.JmxSubmitMessageInterceptor",
      "className" : "JmxSubmitMessageInterceptor",
      "packageName" : "com.adaptris.core.runtime",
      "componentType" : "interceptor",
      "alias" : "jmx-submit-message-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor for ensuring JMX submissions are handled correctly",
        "tag" : "interceptor,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor for ensuring JMX submissions are handled correctly\",\n                  tag=\"interceptor,jmx\")\npublic class JmxSubmitMessageInterceptor\nextends java.lang.Object\nimplements WorkflowInterceptor",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor for ensuring JMX submissions are handled correctly\",\n                  tag=\"interceptor,jmx\")\npublic class <span class=\"typeNameLabel\">JmxSubmitMessageInterceptor</span>\nextends java.lang.Object\nimplements <a href=\"../WorkflowInterceptor.html\" title=\"interface in com.adaptris.core\" target=\"_new\">WorkflowInterceptor</a>",
      "description" : "A WorkflowInterceptor that simply caches all messages that have completed running through the workflow. This implementation uses a MessageCache which is defaulted to LruBoundedMessageCache.",
      "descriptionHtml" : "<p> A <a href=\"../WorkflowInterceptor.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>WorkflowInterceptor</code></a> that simply caches all messages that have completed running through the workflow. </p> \n<p> This implementation uses a <a href=\"MessageCache.html\" title=\"interface in com.adaptris.core.runtime\" target=\"_new\"><code>MessageCache</code></a> which is defaulted to <a href=\"LruBoundedMessageCache.html\" title=\"class in com.adaptris.core.runtime\" target=\"_new\"><code>LruBoundedMessageCache</code></a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/BasicAuthenticatorFactory.html",
      "fullClassName" : "com.adaptris.core.http.jetty.BasicAuthenticatorFactory",
      "className" : "BasicAuthenticatorFactory",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "object",
      "alias" : "jetty-basic-authenticator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicAuthenticatorFactory\nextends java.lang.Object\nimplements JettyAuthenticatorFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicAuthenticatorFactory</span>\nextends java.lang.Object\nimplements <a href=\"JettyAuthenticatorFactory.html\" title=\"interface in com.adaptris.core.http.jetty\" target=\"_new\">JettyAuthenticatorFactory</a>",
      "description" : "Factory which will return an instance of org.eclipse.jetty.security.authentication.BasicAuthenticator",
      "descriptionHtml" : "Factory which will return an instance of org.eclipse.jetty.security.authentication.BasicAuthenticator",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/runtime/StandardMessageErrorDigester.html",
      "fullClassName" : "com.adaptris.core.runtime.StandardMessageErrorDigester",
      "className" : "StandardMessageErrorDigester",
      "packageName" : "com.adaptris.core.runtime",
      "componentType" : "object",
      "alias" : "standard-message-error-digester",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "The default message error digester that exposes some minimum metrics via JMX",
        "tag" : "error-handling,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"The default message error digester that exposes some minimum metrics via JMX\",\n                  tag=\"error-handling,base\")\npublic class StandardMessageErrorDigester\nextends MessageErrorDigesterImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"The default message error digester that exposes some minimum metrics via JMX\",\n                  tag=\"error-handling,base\")\npublic class <span class=\"typeNameLabel\">StandardMessageErrorDigester</span>\nextends <a href=\"MessageErrorDigesterImp.html\" title=\"class in com.adaptris.core.runtime\" target=\"_new\">MessageErrorDigesterImp</a>",
      "description" : "Record any error'd adaptris messages and make these available through JMX.",
      "descriptionHtml" : "Record any error'd adaptris messages and make these available through JMX.",
      "inheritance" : [
        {
          "name" : "MessageErrorDigesterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/runtime/MessageErrorDigesterImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataAppenderService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataAppenderService",
      "className" : "MetadataAppenderService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-appender-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Concatenate various metadata values into one",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Concatenate various metadata values into one\",\n                  tag=\"service,metadata\")\npublic class MetadataAppenderService\nextends MetadataServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Concatenate various metadata values into one\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">MetadataAppenderService</span>\nextends <a href=\"MetadataServiceImpl.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataServiceImpl</a>",
      "description" : "Service to append multiple metadata keys together to form a new key. If any value associated with a metadata key is null, then that value will be ignored.",
      "descriptionHtml" : "Service to append multiple metadata keys together to form a new key. \n<p> If any value associated with a metadata key is null, then that value will be ignored. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MetadataServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/DateColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.DateColumnTranslator",
      "className" : "DateColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-date-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DateColumnTranslator\nextends java.lang.Object\nimplements ColumnTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DateColumnTranslator</span>\nextends java.lang.Object\nimplements <a href=\"ColumnTranslator.html\" title=\"interface in com.adaptris.core.services.jdbc.types\" target=\"_new\">ColumnTranslator</a>",
      "description" : "Column Translator implementation for handling date types",
      "descriptionHtml" : "Column Translator implementation for handling date types",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Channel.html",
      "fullClassName" : "com.adaptris.core.Channel",
      "className" : "Channel",
      "packageName" : "com.adaptris.core",
      "componentType" : "channel",
      "alias" : "channel",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Channels bind two connections together for workflows to do their work",
        "tag" : "base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Channels bind two connections together for workflows to do their work\",\n                  tag=\"base\")\npublic class Channel\nextends java.lang.Object\nimplements ComponentLifecycleExtension, StateManagedComponentContainer, EventHandlerAware, ConfigComment",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Channels bind two connections together for workflows to do their work\",\n                  tag=\"base\")\npublic class <span class=\"typeNameLabel\">Channel</span>\nextends java.lang.Object\nimplements <a href=\"ComponentLifecycleExtension.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ComponentLifecycleExtension</a>, <a href=\"StateManagedComponentContainer.html\" title=\"interface in com.adaptris.core\" target=\"_new\">StateManagedComponentContainer</a>, <a href=\"EventHandlerAware.html\" title=\"interface in com.adaptris.core\" target=\"_new\">EventHandlerAware</a>, <a href=\"ConfigComment.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ConfigComment</a>",
      "description" : "Links two AdaptrisConnection implementations and has a WorkflowList",
      "descriptionHtml" : "<p> Links two <a href=\"AdaptrisConnection.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisConnection</code></a> implementations and has a <a href=\"WorkflowList.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>WorkflowList</code></a> </p> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-activemq/4.0.0B1-RELEASE/com/adaptris/xa/jms/activemq/AdvancedActiveMqXAImplementation.html",
      "fullClassName" : "com.adaptris.xa.jms.activemq.AdvancedActiveMqXAImplementation",
      "className" : "AdvancedActiveMqXAImplementation",
      "packageName" : "com.adaptris.xa.jms.activemq",
      "componentType" : "object",
      "alias" : "advanced-active-mq-xa-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-activemq.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedActiveMqXAImplementation\nextends BasicActiveMqXAImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedActiveMqXAImplementation</span>\nextends <a href=\"BasicActiveMqXAImplementation.html\" title=\"class in com.adaptris.xa.jms.activemq\" target=\"_new\">BasicActiveMqXAImplementation</a>",
      "description" : "ActiveMQ implementation of XAVendorImplementation. This vendor implementation class directly exposes almost all the getter and setters that are available in the ConnectionFactory for maximum flexibility in configuration. The key from the connection-factory-properties element should match the name of the underlying ActiveMQ ConnectionFactory property.  \n   <connection-factory-properties>\n     <key-value-pair>\n        <key>AlwaysSessionAsync</key>\n        <value>true</value>\n     </key-value-pair>\n   </connection-factory-properties>\n \n will invoke ActiveMQConnectionFactory.setAlwaysSessionAsync(boolean), setting the AlwaysSessionAsync property to true. This was built against ActiveMQ 5.9.0",
      "descriptionHtml" : "<p> ActiveMQ implementation of <code>XAVendorImplementation</code>. </p> \n<p> This vendor implementation class directly exposes almost all the getter and setters that are available in the ConnectionFactory for maximum flexibility in configuration. </p> \n<p> The key from the <code>connection-factory-properties</code> element should match the name of the underlying ActiveMQ ConnectionFactory property. </p>\n<pre> <code>\n   &lt;connection-factory-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;AlwaysSessionAsync&lt;/key&gt;\n        &lt;value&gt;true&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/connection-factory-properties&gt;\n </code>\n </pre> will invoke \n<code>ActiveMQConnectionFactory.setAlwaysSessionAsync(boolean)</code>, setting the AlwaysSessionAsync property to true. \n<p></p> \n<p> <b>This was built against ActiveMQ 5.9.0</b> </p> \n<p></p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "BasicActiveMqXAImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-activemq/4.0.0B1-RELEASE/com/adaptris/xa/jms/activemq/BasicActiveMqXAImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/ActiveMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-activemq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/SSL.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.SSL",
      "className" : "SSL",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-ssl",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class SSL\nextends java.lang.Object\nimplements Parameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SSL</span>\nextends java.lang.Object\nimplements <a href=\"Parameter.html\" title=\"interface in com.adaptris.core.jms.solace.parameters\" target=\"_new\">Parameter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/services/RfcServiceList.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.services.RfcServiceList",
      "className" : "RfcServiceList",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.services",
      "componentType" : "service-collection",
      "alias" : "sapjco3-rfc-service-list",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.sap.jco3.rfc.ConfiguredRfcConnection",
          "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicRfcConnection"
        ],
        "since" : "",
        "summary" : "Wrap a RFC Connection for use by embedded services",
        "tag" : "service,sap,rfc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Wrap a RFC Connection for use by embedded services\",\n                  tag=\"service,sap,rfc\",\n                  recommended={ConfiguredRfcConnection.class,DynamicRfcConnection.class})\npublic class RfcServiceList\nextends ServiceList\nimplements com.adaptris.core.licensing.LicensedComponent, ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Wrap a RFC Connection for use by embedded services\",\n                  tag=\"service,sap,rfc\",\n                  recommended={<a href=\"../ConfiguredRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ConfiguredRfcConnection.class</a>,<a href=\"../dynamic/DynamicRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">DynamicRfcConnection.class</a>})\npublic class <span class=\"typeNameLabel\">RfcServiceList</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceList.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceList</a>\nimplements com.adaptris.core.licensing.LicensedComponent, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Implementation of ServiceCollection that creates a JCoDestination instance at the start of the execution of the service list and stores it in object metadata. Other than the creation of the JCoDestination at the start of execution, all other behaviour is the same as ServiceList which this class extends. The rationale behind this service collection implementation is to allow multiple producers that share the same underlying RFC configuration. Embedded StandaloneProducer and StandaloneRequestor implementations do not need to have RfcConnections associated with them as they will be able to use the JCoDestination from metadata. For a stateful RFC call sequence you can then configure the first and last services in this service list to be StatefulSessionStart and StatefulSessionEnd respectively. Between StatefulSessionStart and StatefulSessionEnd the same underlying connection will be used for all function calls.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceCollection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ServiceCollection</code></a> that creates a JCoDestination instance at the start of the execution of the service list and stores it in object metadata. \n<p> Other than the creation of the JCoDestination at the start of execution, all other behaviour is the same as <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceList.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>ServiceList</code></a> which this class extends. </p> \n<p> The rationale behind this service collection implementation is to allow multiple producers that share the same underlying RFC configuration. Embedded StandaloneProducer and StandaloneRequestor implementations do not need to have RfcConnections associated with them as they will be able to use the JCoDestination from metadata. For a stateful RFC call sequence you can then configure the first and last services in this service list to be <a href=\"StatefulSessionStart.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.services\" target=\"_new\"><code>StatefulSessionStart</code></a> and <a href=\"StatefulSessionEnd.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.services\" target=\"_new\"><code>StatefulSessionEnd</code></a> respectively. Between <a href=\"StatefulSessionStart.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.services\" target=\"_new\"><code>StatefulSessionStart</code></a> and <a href=\"StatefulSessionEnd.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.services\" target=\"_new\"><code>StatefulSessionEnd</code></a> the same underlying connection will be used for all function calls. </p>",
      "inheritance" : [
        {
          "name" : "Service",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Service.html?is-external=true"
        },
        {
          "name" : "ServiceCollectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceCollectionImp.html?is-external=true"
        },
        {
          "name" : "ServiceListBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceListBase.html?is-external=true"
        },
        {
          "name" : "ServiceList",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceList.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/clients/LocalTestClient.html",
      "fullClassName" : "com.adaptris.tester.runtime.clients.LocalTestClient",
      "className" : "LocalTestClient",
      "packageName" : "com.adaptris.tester.runtime.clients",
      "componentType" : "object",
      "alias" : "local-jmx-test-client",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class LocalTestClient\nextends JMXTestClient",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LocalTestClient</span>\nextends <a href=\"JMXTestClient.html\" title=\"class in com.adaptris.tester.runtime.clients\" target=\"_new\">JMXTestClient</a>",
      "description" : "Implementation of JMXTestClient that uses JmxHelper.findMBeanServer() to get test client.",
      "descriptionHtml" : "Implementation of \n<a href=\"JMXTestClient.html\" title=\"class in com.adaptris.tester.runtime.clients\" target=\"_new\"><code>JMXTestClient</code></a> that uses \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/util/JmxHelper.html?is-external=true#findMBeanServer()\" title=\"class or interface in com.adaptris.core.util\" class=\"externalLink\" target=\"_new\"><code>JmxHelper.findMBeanServer()</code></a> to get test client.",
      "inheritance" : [
        {
          "name" : "JMXTestClient",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/clients/JMXTestClient.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonArrayTransformationDriver.html",
      "fullClassName" : "com.adaptris.core.transform.json.JsonArrayTransformationDriver",
      "className" : "JsonArrayTransformationDriver",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "object",
      "alias" : "json-array-transformation-driver",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.0.4",
        "summary" : "JSON/XML Transformation driver, supports top level JSON arrays",
        "tag" : "json,xml,transformation"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"JSON/XML Transformation driver, supports top level JSON arrays\",\n                  since=\"3.0.4\",\n                  tag=\"json,xml,transformation\")\npublic class JsonArrayTransformationDriver\nextends JsonlibTransformationDriver",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"JSON/XML Transformation driver, supports top level JSON arrays\",\n                  since=\"3.0.4\",\n                  tag=\"json,xml,transformation\")\npublic class <span class=\"typeNameLabel\">JsonArrayTransformationDriver</span>\nextends <a href=\"JsonlibTransformationDriver.html\" title=\"class in com.adaptris.core.transform.json\" target=\"_new\">JsonlibTransformationDriver</a>",
      "description" : "Transformation driver that uses JSONArray.fromObject(Object) instead of JSONObject.fromObject(Object).",
      "descriptionHtml" : "Transformation driver that uses \n<code>JSONArray.fromObject(Object)</code> instead of \n<code>JSONObject.fromObject(Object)</code>.",
      "inheritance" : [
        {
          "name" : "JsonTransformationDriverImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonTransformationDriverImpl.html"
        },
        {
          "name" : "JsonlibTransformationDriver",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonlibTransformationDriver.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/CompositeRequestHeaders.html",
      "fullClassName" : "com.adaptris.core.http.apache.CompositeRequestHeaders",
      "className" : "CompositeRequestHeaders",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-composite-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class CompositeRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<org.apache.http.client.methods.HttpRequestBase>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CompositeRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">RequestHeaderProvider</a>&lt;org.apache.http.client.methods.HttpRequestBase&gt;",
      "description" : "Implementation of RequestHeaderProvider that uses its own configured handlers to add headers. This implementation is primarily so that you can mix and match both static and metadata driven headers; the order in which you configure them determines what is actually present as headers.",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>RequestHeaderProvider</code></a> that uses its own configured handlers to add headers. \n<p> This implementation is primarily so that you can mix and match both static and metadata driven headers; the order in which you configure them determines what is actually present as headers. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-sonicmq/4.0.0B1-RELEASE/com/adaptris/core/jms/sonic/MultipartMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.sonic.MultipartMessageTranslator",
      "className" : "MultipartMessageTranslator",
      "packageName" : "com.adaptris.core.jms.sonic",
      "componentType" : "object",
      "alias" : "sonic-multipart-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-sonicmq.jar",
      "profile" : { },
      "annotationDetails" : "public class MultipartMessageTranslator\nextends MessageTypeTranslatorImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MultipartMessageTranslator</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">MessageTypeTranslatorImp</a>",
      "description" : "Translates between AdaptrisMessage and progress.message.jclient.MultipartMessage. When translating to an AdaptrisMessage, If no multipart-index is specified then each Part of the progress.message.jclient.MultipartMessage is taken and stored as a MimeBodyPart in the resulting AdaptrisMessage. If a multipart-index is specified, then only that Part is taken to form the body of the AdaptrisMessage. The other parts will be discarded. All the header information associated with each part carried-over will either be stored as metadata on the AdaptrisMessage or as headers on the MimeBodyPart. In addition to handling progress.message.jclient.MultipartMessage, this translator delegates ByteMessage, ObjectMessage, TextMessage and XMLMessage (defaults only for XMLMessage) to the appropriate translator When translating to a progress.message.jclient.MultipartMessage, if the AdaptrisMessage object is considered MIME Encoded ( CoreConstants.MSG_MIME_ENCODED) then each part is added as a separate part to progress.message.jclient.MultipartMessage. Header information on each MimeBodyPart will be carried over. If the AdaptrisMessage is not considered MIME Encoded, then it is added as a single part to the progress.message.jclient.MultipartMessage.",
      "descriptionHtml" : "<p> Translates between <code>AdaptrisMessage</code> and <code>progress.message.jclient.MultipartMessage</code>. </p> \n<p> When translating to an AdaptrisMessage, If no multipart-index is specified then each Part of the <code>progress.message.jclient.MultipartMessage</code> is taken and stored as a MimeBodyPart in the resulting AdaptrisMessage. If a multipart-index is specified, then only that Part is taken to form the body of the AdaptrisMessage. <b>The other parts will be discarded</b>. All the header information associated with each part carried-over will either be stored as metadata on the AdaptrisMessage or as headers on the MimeBodyPart. </p> \n<p> In addition to handling <code>progress.message.jclient.MultipartMessage</code>, this translator delegates ByteMessage, ObjectMessage, TextMessage and XMLMessage (defaults only for XMLMessage) to the appropriate translator </p> \n<p> When translating to a <code>progress.message.jclient.MultipartMessage</code>, if the AdaptrisMessage object is considered MIME Encoded ( <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/CoreConstants.html?is-external=true#MSG_MIME_ENCODED\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>CoreConstants.MSG_MIME_ENCODED</code></a>) then each part is added as a separate part to <code>progress.message.jclient.MultipartMessage</code>. Header information on each MimeBodyPart will be carried over. If the AdaptrisMessage is not considered MIME Encoded, then it is added as a single part to the <code>progress.message.jclient.MultipartMessage</code>. </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/SonicMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-sonicmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/RetryNotFoundPolicyFactory.html",
      "fullClassName" : "com.adaptris.aws.RetryNotFoundPolicyFactory",
      "className" : "RetryNotFoundPolicyFactory",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-retry-not-found-policy-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : { },
      "annotationDetails" : "public class RetryNotFoundPolicyFactory\nextends java.lang.Object\nimplements RetryPolicyFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RetryNotFoundPolicyFactory</span>\nextends java.lang.Object\nimplements <a href=\"RetryPolicyFactory.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">RetryPolicyFactory</a>",
      "description" : "Allows you to configure additional HTTP codes that determine whether a retry should be attempted or not. Sometimes you end up in a situation where you get a 404 exception even though the file exists (and invocations merely a few seconds later are successful). This may well be down to a timing issue and/or issues with a transparent proxy configuration. Use this builder to allow you automatically retry operations based on a 404.",
      "descriptionHtml" : "Allows you to configure additional HTTP codes that determine whether a retry should be attempted or not. \n<p> Sometimes you end up in a situation where you get a 404 exception even though the file exists (and invocations merely a few seconds later are successful). This may well be down to a timing issue and/or issues with a transparent proxy configuration. Use this builder to allow you automatically retry operations based on a 404. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/BranchingHttpRequestService.html",
      "fullClassName" : "com.adaptris.core.http.client.net.BranchingHttpRequestService",
      "className" : "BranchingHttpRequestService",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "service",
      "alias" : "branching-http-request-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [
          "adphttpresponse"
        ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Make a HTTP request to a remote server using standard JRE components",
        "tag" : "service,http,https,branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Make a HTTP request to a remote server using standard JRE components\",\n                  tag=\"service,http,https,branching\",\n                  branchSelector=true,\n                  metadata=\"adphttpresponse\")\npublic class BranchingHttpRequestService\nextends HttpRequestServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Make a HTTP request to a remote server using standard JRE components\",\n                  tag=\"service,http,https,branching\",\n                  branchSelector=true,\n                  metadata=\"adphttpresponse\")\npublic class <span class=\"typeNameLabel\">BranchingHttpRequestService</span>\nextends <a href=\"HttpRequestServiceImpl.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\">HttpRequestServiceImpl</a>",
      "description" : "Branch support for HTTP via interrogation of the HTTP status. This service allows you to branch based on the HTTP status code returned by the web server. Use a specific StatusEvaluator to determine the appropriate value for AdaptrisMessage.setNextServiceId(String). It differs from wrapping HttpRequestService with a BranchingServiceEnabler as it allows you more fine-grained control based on HTTP status codes. Note that this service just wraps a StandardHttpProducer instance but doesn't expose all the possible settings available for the normal StandardHttpProducer. If you need those features, than continue using the producer wrapped as a StandaloneProducer or StandaloneRequestor. String parameters in this service will use the InterlokMessage.resolve(String) which allows you to specify metadata values as part of a constant string e.g. setUrl(\"%message{http_url}\") will use the metadata value associated with the key http_url.",
      "descriptionHtml" : "Branch support for HTTP via interrogation of the HTTP status. \n<p> This service allows you to branch based on the <code>HTTP status code</code> returned by the web server. Use a specific <a href=\"../StatusEvaluator.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>StatusEvaluator</code></a> to determine the appropriate value for <a href=\"../../../AdaptrisMessage.html#setNextServiceId(java.lang.String)\" target=\"_new\"><code>AdaptrisMessage.setNextServiceId(String)</code></a>. It differs from wrapping <a href=\"HttpRequestService.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>HttpRequestService</code></a> with a <a href=\"../../../services/BranchingServiceEnabler.html\" title=\"class in com.adaptris.core.services\" target=\"_new\"><code>BranchingServiceEnabler</code></a> as it allows you more fine-grained control based on HTTP status codes. </p> \n<p> Note that this service just wraps a <a href=\"StandardHttpProducer.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>StandardHttpProducer</code></a> instance but doesn't expose all the possible settings available for the normal <a href=\"StandardHttpProducer.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>StandardHttpProducer</code></a>. If you need those features, than continue using the producer wrapped as a <a href=\"../../../StandaloneProducer.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneProducer</code></a> or <a href=\"../../../StandaloneRequestor.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>StandaloneRequestor</code></a>. </p> \n<p> String parameters in this service will use the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#resolve(java.lang.String)\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.resolve(String)</code></a> which allows you to specify metadata values as part of a constant string e.g. <code>setUrl(\"%message{http_url}\")</code> will use the metadata value associated with the key <code>http_url</code>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "HttpRequestServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/HttpRequestServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/retry/RetryFromJetty.html",
      "fullClassName" : "com.adaptris.core.http.jetty.retry.RetryFromJetty",
      "className" : "RetryFromJetty",
      "packageName" : "com.adaptris.core.http.jetty.retry",
      "componentType" : "object",
      "alias" : "retry-via-jetty",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.http.jetty.EmbeddedConnection",
          "com.adaptris.core.http.jetty.JettyConnection"
        ],
        "since" : "3.11.1",
        "summary" : "Listen for HTTP traffic on the specified URI and retry messages",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for HTTP traffic on the specified URI and retry messages\",\n                  recommended={EmbeddedConnection.class,JettyConnection.class},\n                  since=\"3.11.1\")\npublic class RetryFromJetty\nextends FailedMessageRetrierImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for HTTP traffic on the specified URI and retry messages\",\n                  recommended={<a href=\"../EmbeddedConnection.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">EmbeddedConnection.class</a>,<a href=\"../JettyConnection.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\">JettyConnection.class</a>},\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">RetryFromJetty</span>\nextends <a href=\"../../../FailedMessageRetrierImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">FailedMessageRetrierImp</a>",
      "description" : "FailedMessageRetrier implementation that retries upon demand. This implementation listens on the specified jetty endpoint(s) and allows you to retry failed message by ID and list the contents of the data store that contains failed messages. Sometimes we can't rely on standard error handlers/retriers to retry failed messages. This is intended to codify some of the concepts discussed here into a simpler configuration chain. This jetty implementation allows two modes of operation. Listing the failed messages, retrying a message, deleting messages from the store. curl -XGET http://localhost:8080/api/failed/list gives you a list of message ids that are listed in the store curl -XPOST http://localhost:8080/api/retry/[msgId] will attempt to resubmit the message to the appropriate workflow; returning a 202 upon success curl -XDELETE http://localhost:8080/api/failed/delete/[msgId] will attempt to delete the message from the store While DELETE is available, this implementation doesn't make any checks that the messages that you have retried have been retried successfuly. It is expected that you have separate tooling that allows you to verify that retried-messages are ultimately sucessfully before triggering the delete. If you ask for a message to be deleted from the store, then that is what happens.",
      "descriptionHtml" : "<a href=\"../../../FailedMessageRetrier.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>FailedMessageRetrier</code></a> implementation that retries upon demand. \n<p> This implementation listens on the specified jetty endpoint(s) and allows you to retry failed message by ID and list the contents of the data store that contains failed messages. Sometimes we can't rely on standard error handlers/retriers to retry failed messages. This is intended to codify some of the concepts discussed <a href=\"https://interlok.adaptris.net/blog/2017/10/19/interlok-s3-error-store.html\" target=\"_new\">here</a> into a simpler configuration chain. </p> \n<p> This jetty implementation allows two modes of operation. Listing the failed messages, retrying a message, deleting messages from the store. </p>\n<ul> \n <li><code>curl -XGET http://localhost:8080/api/failed/list</code> gives you a list of message ids that are listed in the store</li> \n <li><code>curl -XPOST http://localhost:8080/api/retry/[msgId]</code> will attempt to resubmit the message to the appropriate workflow; returning a 202 upon success</li> \n <li><code>curl -XDELETE http://localhost:8080/api/failed/delete/[msgId]</code> will attempt to delete the message from the store</li> \n <ul> \n  <p></p> \n  <p> While DELETE is available, this implementation doesn't make any checks that the messages that you have retried have been retried successfuly. It is expected that you have separate tooling that allows you to verify that retried-messages are ultimately sucessfully before triggering the delete. If you ask for a message to be deleted from the store, then that is what happens. </p>\n </ul>\n</ul>",
      "inheritance" : [
        {
          "name" : "FailedMessageRetrierImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/FailedMessageRetrierImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/SprayDirectoryToThor.html",
      "fullClassName" : "com.adaptris.hpcc.SprayDirectoryToThor",
      "className" : "SprayDirectoryToThor",
      "packageName" : "com.adaptris.hpcc",
      "componentType" : "producer",
      "alias" : "spray-directory-to-thor",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.hpcc.DfuplusConnection"
        ],
        "since" : "",
        "summary" : "Spray a directory into HPCC via dfuplus",
        "tag" : "producer,hpcc,dfuplus"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Spray a directory into HPCC via dfuplus\",\n                  tag=\"producer,hpcc,dfuplus\",\n                  recommended=DfuplusConnection.class)\npublic class SprayDirectoryToThor\nextends SprayToThorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Spray a directory into HPCC via dfuplus\",\n                  tag=\"producer,hpcc,dfuplus\",\n                  recommended=<a href=\"DfuplusConnection.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">DfuplusConnection.class</a>)\npublic class <span class=\"typeNameLabel\">SprayDirectoryToThor</span>\nextends <a href=\"SprayToThorImpl.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">SprayToThorImpl</a>",
      "description" : "Spray the contents of a directory to Thor. Note that this producer ignores the current message contents and just sprays the contents of the directory specified by #getSourceDirectoryKey() using the configured dfuplus command. Effectively, the program executed is going to similar to  \n      dfuplus action=spray srcfile=/path/to/dir/*\n        dstcluster=mythor dstname=~zzlc:json:data overwrite=1 PREFIX=FILENAME,FILESIZE\n        server= nosplit=1 username= password=\n   \n Be aware that nosplit=1 is always added, as well as the \"/*\". The adapter also needs a running dfuplus action=dafilesrv instance on the machine where the adapter is hosted. Thor will connect to this instance for file delivery.",
      "descriptionHtml" : "Spray the contents of a directory to Thor. \n<p> Note that this producer <strong>ignores</strong> the current message contents and just sprays the contents of the directory specified by <code>#getSourceDirectoryKey()</code> using the configured dfuplus command. </p> \n<p> Effectively, the program executed is going to similar to </p>\n<pre> <code>\n      dfuplus action=spray srcfile=/path/to/dir/*\n        dstcluster=mythor dstname=~zzlc:json:data overwrite=1 PREFIX=FILENAME,FILESIZE\n        server= nosplit=1 username= password=\n   </code>\n </pre> Be aware that nosplit=1 is always added, as well as the \"/*\". \n<p></p> \n<p> The adapter also needs a running <code>dfuplus action=dafilesrv</code> instance on the machine where the adapter is hosted. Thor will connect to this instance for file delivery. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "DfuPlusWrapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/DfuPlusWrapper.html"
        },
        {
          "name" : "SprayToThorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/SprayToThorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/params/NamedParameterApplicator.html",
      "fullClassName" : "com.adaptris.core.cassandra.params.NamedParameterApplicator",
      "className" : "NamedParameterApplicator",
      "packageName" : "com.adaptris.core.cassandra.params",
      "componentType" : "object",
      "alias" : "cassandra-named-parameter-applicator",
      "deprecated" : false,
      "jarFileName" : "interlok-cassandra.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Helps to use named parameters in CQL statements",
        "tag" : "cassandra"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Helps to use named parameters in CQL statements\",\n                  tag=\"cassandra\")\npublic class NamedParameterApplicator\nextends AbstractCassandraParameterApplicator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Helps to use named parameters in CQL statements\",\n                  tag=\"cassandra\")\npublic class <span class=\"typeNameLabel\">NamedParameterApplicator</span>\nextends <a href=\"AbstractCassandraParameterApplicator.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\">AbstractCassandraParameterApplicator</a>",
      "description" : "CassandraParameterApplicator implementation that allows referencing by name. Using a NamedParameterApplicator implementation means that you can modify your CQL statement to reference named statement parameters making it no longer depending on declaration order. For instance:  SELECT * FROM mytable WHERE field1=#param1 AND field2=#param2 AND field3=#param3 AND field4=#param4 AND field5=#param5\n If you then named your statement parameters as param1, param2, param3, param4, param5 using NamedStatementParameter.setName(String) then the order of parameters as they appear in configuration no longer matters.",
      "descriptionHtml" : "<a href=\"CassandraParameterApplicator.html\" title=\"interface in com.adaptris.core.cassandra.params\" target=\"_new\"><code>CassandraParameterApplicator</code></a> implementation that allows referencing by name. \n<p> Using a <a href=\"NamedParameterApplicator.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>NamedParameterApplicator</code></a> implementation means that you can modify your CQL statement to reference named statement parameters making it no longer depending on declaration order. </p> \n<p> For instance: </p>\n<pre> <code>SELECT * FROM mytable WHERE field1=#param1 AND field2=#param2 AND field3=#param3 AND field4=#param4 AND field5=#param5</code>\n </pre> If you then named your statement parameters as \n<code>param1, param2, param3, param4, param5</code> using \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html?is-external=true#setName(java.lang.String)\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>NamedStatementParameter.setName(String)</code></a> then the order of parameters as they appear in configuration no longer matters. \n<p></p>",
      "inheritance" : [
        {
          "name" : "AbstractCassandraParameterApplicator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/params/AbstractCassandraParameterApplicator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Cassandra",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-cassandra",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FtpConnection.html",
      "fullClassName" : "com.adaptris.core.ftp.FtpConnection",
      "className" : "FtpConnection",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "connection",
      "alias" : "ftp-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a FTP server using a username and password",
        "tag" : "connections,ftp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a FTP server using a username and password\",\n                  tag=\"connections,ftp\")\npublic class FtpConnection\nextends FtpConnectionImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a FTP server using a username and password\",\n                  tag=\"connections,ftp\")\npublic class <span class=\"typeNameLabel\">FtpConnection</span>\nextends <a href=\"FtpConnectionImp.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FtpConnectionImp</a>",
      "description" : "Class containing configuration for both FTP Consumers and producers.",
      "descriptionHtml" : "Class containing configuration for both FTP Consumers and producers.",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "NoOpConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NoOpConnection.html"
        },
        {
          "name" : "FileTransferConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FileTransferConnection.html"
        },
        {
          "name" : "FileTransferConnectionUsingPassword",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FileTransferConnectionUsingPassword.html"
        },
        {
          "name" : "FtpConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FtpConnectionImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-datalake/4.0.0B1-RELEASE/com/adaptris/interlok/azure/datalake/DataLakeUploadService.html",
      "fullClassName" : "com.adaptris.interlok.azure.datalake.DataLakeUploadService",
      "className" : "DataLakeUploadService",
      "packageName" : "com.adaptris.interlok.azure.datalake",
      "componentType" : "service",
      "alias" : "azure-data-lake-upload-service",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-datalake.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.interlok.azure.DataLakeConnection"
        ],
        "since" : "",
        "summary" : "Put data into a Azure Data Lake",
        "tag" : "service,azure,data lake,data,lake"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Put data into a Azure Data Lake\",\n                  tag=\"service,azure,data lake,data,lake\",\n                  recommended=com.adaptris.interlok.azure.DataLakeConnection.class)\npublic class DataLakeUploadService\nextends ServiceImp\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Put data into a Azure Data Lake\",\n                  tag=\"service,azure,data lake,data,lake\",\n                  recommended=com.adaptris.interlok.azure.DataLakeConnection.class)\npublic class <span class=\"typeNameLabel\">DataLakeUploadService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Upload files to Microsoft Data Lake.",
      "descriptionHtml" : "Upload files to Microsoft Data Lake.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/DataLake",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-datalake",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/PayloadHashingService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.PayloadHashingService",
      "className" : "PayloadHashingService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "payload-hashing-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Hash the payload and store the hash against a metadata key",
        "tag" : "service,metadata"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Hash the payload and store the hash against a metadata key\",\n                  tag=\"service,metadata\")\npublic class PayloadHashingService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Hash the payload and store the hash against a metadata key\",\n                  tag=\"service,metadata\")\npublic class <span class=\"typeNameLabel\">PayloadHashingService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Create a hash of the payload based on the configurable algorithm and stores it as metadata.",
      "descriptionHtml" : "Create a hash of the payload based on the configurable algorithm and stores it as metadata.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcStoredProcedureProducer.html",
      "fullClassName" : "com.adaptris.core.jdbc.JdbcStoredProcedureProducer",
      "className" : "JdbcStoredProcedureProducer",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "producer",
      "alias" : "jdbc-stored-procedure-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jdbc.DatabaseConnection"
        ],
        "since" : "",
        "summary" : "Execute a stored procedure via JDBC",
        "tag" : "producer,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a stored procedure via JDBC\",\n                  tag=\"producer,jdbc\",\n                  recommended=DatabaseConnection.class)\npublic class JdbcStoredProcedureProducer\nextends RequestReplyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a stored procedure via JDBC\",\n                  tag=\"producer,jdbc\",\n                  recommended=<a href=\"DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">DatabaseConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JdbcStoredProcedureProducer</span>\nextends <a href=\"../RequestReplyProducerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">RequestReplyProducerImp</a>",
      "description" : "StoredProcedure Producer implementation; executes a stored procedure within your chosen database vendor. To specify your chosen database vendor, you will set the CallableStatementCreator to one of the following implementations; MysqlStatementCreator or OracleStatementCreator, other types of database can be directly supported by using ConfiguredStatementCreator. You may also set parameters (In, Out and InOut) for your Stored Procedure. Both the \"In\" and the \"InOut\" parameters will retrieve their data from the AdaptrisMessage and that data will be passed into the stored procedure. Both the \"Out\" and \"InOut\" parameters will have the result from the Stored Procedure re-applied back into the AdaptrisMessage. The method with which these parameters get or apply their values to and from the AdaptrisMessage will depend on the parameter implementation chosen, see the sub classes of AbstractParameter To set the parameters for your Stored Procedure configure the following; - InParameters - OutParameters - InOutParameters Each parameter you set, must include one of either the Order or the Name. The name of the parameter is mapped the parameter name of the Stored Procedure, the Order will define the order.Stored Procedures, as well as returning data through Out and InOut parameters, may also return data through a ResultSet. In fact, Stored Procedures may return multiple ResultSet's. ResultSet's may also be applied back into the AdaptrisMessage To define the behaviour of applying ResultSet's back into the AdaptrisMessage set the translator for this producer, see ResultSetTranslator Note; if your Stored Procedure returns multiple result sets, each will be applied back into your AdaptrisMessage using the ResultSetTranslator configured. If you plan on using this producer for Microsoft SQL Server, we recommend using a driver that is fully JDBC 3.0 compliant. The standard Microsoft JDBC driver does not support multiple open result sets, therefore if your stored procedure returns multiple result sets, we recommend using a fully compliant JDBC 3.0 driver such as the JTDS driver. Finally, the default timeout set for the database operation is 0 (i.e. no timeout). You can override this by configuring the \"timeout\" field with a TimeInterval",
      "descriptionHtml" : "StoredProcedure Producer implementation; executes a stored procedure within your chosen database vendor. \n<p> To specify your chosen database vendor, you will set the <a href=\"../../jdbc/CallableStatementCreator.html\" title=\"interface in com.adaptris.jdbc\" target=\"_new\"><code>CallableStatementCreator</code></a> to one of the following implementations; <a href=\"../../jdbc/MysqlStatementCreator.html\" title=\"class in com.adaptris.jdbc\" target=\"_new\"><code>MysqlStatementCreator</code></a> or <a href=\"../../jdbc/OracleStatementCreator.html\" title=\"class in com.adaptris.jdbc\" target=\"_new\"><code>OracleStatementCreator</code></a>, other types of database can be directly supported by using <a href=\"../../jdbc/ConfiguredStatementCreator.html\" title=\"class in com.adaptris.jdbc\" target=\"_new\"><code>ConfiguredStatementCreator</code></a>. </p> \n<p> You may also set parameters (In, Out and InOut) for your Stored Procedure. Both the \"In\" and the \"InOut\" parameters will retrieve their data from the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> and that data will be passed into the stored procedure. Both the \"Out\" and \"InOut\" parameters will have the result from the Stored Procedure re-applied back into the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a>. The method with which these parameters get or apply their values to and from the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> will depend on the parameter implementation chosen, see the sub classes of <a href=\"AbstractParameter.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>AbstractParameter</code></a> To set the parameters for your Stored Procedure configure the following; - <a href=\"InParameters.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>InParameters</code></a> - <a href=\"OutParameters.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>OutParameters</code></a> - <a href=\"InOutParameters.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>InOutParameters</code></a> </p> \n<p> Each parameter you set, must include one of either the Order or the Name. The name of the parameter is mapped the parameter name of the Stored Procedure, the Order will define the order.Stored Procedures, as well as returning data through Out and InOut parameters, may also return data through a <code>ResultSet</code>. In fact, Stored Procedures may return multiple <code>ResultSet</code>'s. <code>ResultSet</code>'s may also be applied back into the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> To define the behaviour of applying <code>ResultSet</code>'s back into the <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> set the translator for this producer, see <a href=\"../services/jdbc/ResultSetTranslator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\"><code>ResultSetTranslator</code></a> Note; if your Stored Procedure returns multiple result sets, each will be applied back into your <a href=\"../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> using the <a href=\"../services/jdbc/ResultSetTranslator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\"><code>ResultSetTranslator</code></a> configured. </p> \n<p> If you plan on using this producer for Microsoft SQL Server, we recommend using a driver that is fully JDBC 3.0 compliant. The standard Microsoft JDBC driver does not support multiple open result sets, therefore if your stored procedure returns multiple result sets, we recommend using a fully compliant JDBC 3.0 driver such as the JTDS driver. </p> \n<p> Finally, the default timeout set for the database operation is 0 (i.e. no timeout). You can override this by configuring the \"timeout\" field with a <a href=\"../../util/TimeInterval.html\" title=\"class in com.adaptris.util\" target=\"_new\"><code>TimeInterval</code></a> </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/Equals.html",
      "fullClassName" : "com.adaptris.core.services.conditional.operator.Equals",
      "className" : "Equals",
      "packageName" : "com.adaptris.core.services.conditional.operator",
      "componentType" : "object",
      "alias" : "equals",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a configured value equals the supplied value.",
        "tag" : "conditional,operator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a configured value equals the supplied value.\",\n                  tag=\"conditional,operator\")\npublic class Equals\nextends java.lang.Object\nimplements Operator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a configured value equals the supplied value.\",\n                  tag=\"conditional,operator\")\npublic class <span class=\"typeNameLabel\">Equals</span>\nextends java.lang.Object\nimplements <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Operator</a>",
      "description" : "This Operator simply tests two values for equality. The first value used in the equality test is the Condition that this Operator is configured for; which could be the message payload or a metadata item for example. The second value is the static value configured for this operator. The static value can be a literal value; \"myValue\" or can be metadata resolved for example;   %message{myKey}\n The above will test the metadata value identified by the metadata key \"myKey\".",
      "descriptionHtml" : "<p> This <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> simply tests two values for equality. </p> \n<p> The first value used in the equality test is the <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> that this <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> is configured for; which could be the message payload or a metadata item for example. <br> The second value is the static value configured for this operator. </p> \n<p> The static value can be a literal value; \"myValue\" or can be metadata resolved for example; <br> </p>\n<pre>  \n <value>\n  %message{myKey}\n </value>\n </pre> The above will test the metadata value identified by the metadata key \"myKey\". \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/csv/CustomFormatBuilder.html",
      "fullClassName" : "com.adaptris.core.elastic.csv.CustomFormatBuilder",
      "className" : "CustomFormatBuilder",
      "packageName" : "com.adaptris.core.elastic.csv",
      "componentType" : "object",
      "alias" : "csv-custom-format",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : { },
      "annotationDetails" : "public class CustomFormatBuilder\nextends java.lang.Object\nimplements FormatBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CustomFormatBuilder</span>\nextends java.lang.Object\nimplements <a href=\"FormatBuilder.html\" title=\"interface in com.adaptris.core.elastic.csv\" target=\"_new\">FormatBuilder</a>",
      "description" : "Implementation of FormatBuilder that allows for custom csv formats. Note that this was lifted from the com.adaptris:interlok-csv project and will eventually be deprecated so that we switch to using a net.supercsv based implementations instead. It is not marked as deprecated just yet.",
      "descriptionHtml" : "Implementation of \n<a href=\"FormatBuilder.html\" title=\"interface in com.adaptris.core.elastic.csv\" target=\"_new\"><code>FormatBuilder</code></a> that allows for custom csv formats. \n<p> Note that this was lifted from the <code>com.adaptris:interlok-csv</code> project and will eventually be deprecated so that we switch to using a net.supercsv based implementations instead. It is not marked as deprecated just yet. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.interlok.junit.scaffolding.ExampleServiceConfig",
      "className" : "ExampleServiceConfig",
      "packageName" : "com.adaptris.interlok.junit.scaffolding",
      "componentType" : "object",
      "alias" : "placeholder-service-element",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/PoolingMessageSplitterService.html",
      "fullClassName" : "com.adaptris.core.services.splitter.PoolingMessageSplitterService",
      "className" : "PoolingMessageSplitterService",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "service",
      "alias" : "pooling-message-splitter-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.7.1",
        "summary" : "Split a message and execute an arbitary number of services on the split message",
        "tag" : "service,splitter"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Split a message and execute an arbitary number of services on the split message\",\n                  tag=\"service,splitter\",\n                  since=\"3.7.1\")\npublic class PoolingMessageSplitterService\nextends AdvancedMessageSplitterService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Split a message and execute an arbitary number of services on the split message\",\n                  tag=\"service,splitter\",\n                  since=\"3.7.1\")\npublic class <span class=\"typeNameLabel\">PoolingMessageSplitterService</span>\nextends <a href=\"AdvancedMessageSplitterService.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">AdvancedMessageSplitterService</a>",
      "description" : "Extension to AdvancedMessageSplitterService that uses a underlying thread and object pool to execute the service on each split message. Note that using this splitter may mean that messages become un-ordered; if the order of the split messages is critical, then you probably shouldn't use this service. Additionally, individual split-message failures will only be reported on after all the split messages have been processed, so unlike AdvancedMessageSplitterService; MessageSplitterServiceImp.setIgnoreSplitMessageFailures(Boolean) will not halt the processing of the subsequent split messages",
      "descriptionHtml" : "Extension to \n<a href=\"AdvancedMessageSplitterService.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\"><code>AdvancedMessageSplitterService</code></a> that uses a underlying thread and object pool to execute the service on each split message. \n<p> Note that using this splitter may mean that messages become un-ordered; if the order of the split messages is critical, then you probably shouldn't use this service. Additionally, individual split-message failures will only be reported on after all the split messages have been processed, so unlike <a href=\"AdvancedMessageSplitterService.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\"><code>AdvancedMessageSplitterService</code></a>; <a href=\"MessageSplitterServiceImp.html#setIgnoreSplitMessageFailures(java.lang.Boolean)\" target=\"_new\"><code>MessageSplitterServiceImp.setIgnoreSplitMessageFailures(Boolean)</code></a> will not halt the processing of the subsequent split messages </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "MessageSplitterServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterServiceImp.html"
        },
        {
          "name" : "AdvancedMessageSplitterService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/AdvancedMessageSplitterService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/FailoverJdbcConnection.html",
      "fullClassName" : "com.adaptris.core.jdbc.FailoverJdbcConnection",
      "className" : "FailoverJdbcConnection",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "connection",
      "alias" : "failover-jdbc-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect using a database using a JDBC driver supporting database failover in a vendor neutral fashion",
        "tag" : "connections,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect using a database using a JDBC driver supporting database failover in a vendor neutral fashion\",\n                  tag=\"connections,jdbc\")\npublic class FailoverJdbcConnection\nextends DatabaseConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect using a database using a JDBC driver supporting database failover in a vendor neutral fashion\",\n                  tag=\"connections,jdbc\")\npublic class <span class=\"typeNameLabel\">FailoverJdbcConnection</span>\nextends <a href=\"DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">DatabaseConnection</a>",
      "description" : "An AdaptrisConnection implementation for a failover database connection. This class simply proxies com.adaptris.jdbc.connection.FailoverConnection with the required AdaptrisConnection methods.",
      "descriptionHtml" : "<p> An <code>AdaptrisConnection</code> implementation for a failover database connection. </p> \n<p> This class simply proxies <code>com.adaptris.jdbc.connection.FailoverConnection</code> with the required AdaptrisConnection methods. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html"
        },
        {
          "name" : "DatabaseConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DatabaseConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/WrapInServiceCollectionPreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.WrapInServiceCollectionPreprocessor",
      "className" : "WrapInServiceCollectionPreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "wrap-in-sc-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class WrapInServiceCollectionPreprocessor\nextends java.lang.Object\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">WrapInServiceCollectionPreprocessor</span>\nextends java.lang.Object\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/CassandraExecuteService.html",
      "fullClassName" : "com.adaptris.core.cassandra.CassandraExecuteService",
      "className" : "CassandraExecuteService",
      "packageName" : "com.adaptris.core.cassandra",
      "componentType" : "service",
      "alias" : "cassandra-execute-service",
      "deprecated" : false,
      "jarFileName" : "interlok-cassandra.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.cassandra.CassandraConnection"
        ],
        "since" : "",
        "summary" : "Execute CQL to insert and delete rows in the databases tables",
        "tag" : "cassandra"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute CQL to insert and delete rows in the databases tables\",\n                  recommended=CassandraConnection.class,\n                  tag=\"cassandra\")\npublic class CassandraExecuteService\nextends CassandraServiceImp\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute CQL to insert and delete rows in the databases tables\",\n                  recommended=<a href=\"CassandraConnection.html\" title=\"class in com.adaptris.core.cassandra\" target=\"_new\">CassandraConnection.class</a>,\n                  tag=\"cassandra\")\npublic class <span class=\"typeNameLabel\">CassandraExecuteService</span>\nextends <a href=\"CassandraServiceImp.html\" title=\"class in com.adaptris.core.cassandra\" target=\"_new\">CassandraServiceImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectedService.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectedService</a>",
      "description" : "Built for Cassandra version 3.0+ This service allows us to fire CQL (Cassandra Query Language) statements at a Cassandra cluster. Typical uses will be for inserting and deleting rows the databases tables. Specify the source of the CQL statement by configuring a DataInputParameter. Note that the CQL statement can contain parameters in one of 2 forms; the standard SQL form, using the character \"?\", or you can use named parameters. If you configure any parameters, using the standard SQL form, then you will need to configure a SequentialParameterApplicator, or should you wish to name your parameters for ease of configuration, especially when statements contain many parameters, then you will need to configure a NamedParameterApplicator. To configure the values of the parameters configure a StatementParameterList. You may also configure a StatementPrimer. Statement Primers are used to prepare a CQL statement before it is executed. Especially useful may be the CachedStatementPrimer. The default value for this service is the NullStatementPrimer. Finally there are expected to be no results for any CQL statement executed, therefore any results are ignored.",
      "descriptionHtml" : "<p> Built for Cassandra version 3.0+ </p> \n<p> This service allows us to fire CQL (Cassandra Query Language) statements at a Cassandra cluster. <br> Typical uses will be for inserting and deleting rows the databases tables. </p> \n<p> Specify the source of the CQL statement by configuring a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataInputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\"><code>DataInputParameter</code></a>. Note that the CQL statement can contain parameters in one of 2 forms; the standard SQL form, using the character \"?\", or you can use named parameters. <br> If you configure any parameters, using the standard SQL form, then you will need to configure a <a href=\"params/SequentialParameterApplicator.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>SequentialParameterApplicator</code></a>, or should you wish to name your parameters for ease of configuration, especially when statements contain many parameters, then you will need to configure a <a href=\"params/NamedParameterApplicator.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>NamedParameterApplicator</code></a>. </p> \n<p> To configure the values of the parameters configure a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterList.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.jdbc\" class=\"externalLink\" target=\"_new\"><code>StatementParameterList</code></a>. </p> \n<p> You may also configure a <a href=\"params/StatementPrimer.html\" title=\"interface in com.adaptris.core.cassandra.params\" target=\"_new\"><code>StatementPrimer</code></a>. Statement Primers are used to prepare a CQL statement before it is executed. <br> Especially useful may be the <a href=\"params/CachedStatementPrimer.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>CachedStatementPrimer</code></a>. The default value for this service is the <a href=\"params/NullStatementPrimer.html\" title=\"class in com.adaptris.core.cassandra.params\" target=\"_new\"><code>NullStatementPrimer</code></a>. </p> \n<p> Finally there are expected to be no results for any CQL statement executed, therefore any results are ignored. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CassandraServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/CassandraServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Cassandra",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-cassandra",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/oauth/GetAndCacheOauthToken.html",
      "fullClassName" : "com.adaptris.core.http.oauth.GetAndCacheOauthToken",
      "className" : "GetAndCacheOauthToken",
      "packageName" : "com.adaptris.core.http.oauth",
      "componentType" : "service",
      "alias" : "get-and-cache-oauth-token",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.10.1",
        "summary" : "Get a cached OAUTH token or get a token and cache it",
        "tag" : "service,http,https,oauth"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Get a cached OAUTH token or get a token and cache it\",\n                  since=\"3.10.1\",\n                  tag=\"service,http,https,oauth\",\n                  recommended=CacheConnection.class)\npublic class GetAndCacheOauthToken\nextends OauthTokenGetter\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Get a cached OAUTH token or get a token and cache it\",\n                  since=\"3.10.1\",\n                  tag=\"service,http,https,oauth\",\n                  recommended=<a href=\"../../services/cache/CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">GetAndCacheOauthToken</span>\nextends <a href=\"OauthTokenGetter.html\" title=\"class in com.adaptris.core.http.oauth\" target=\"_new\">OauthTokenGetter</a>\nimplements <a href=\"../../ConnectedService.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ConnectedService</a>",
      "description" : "Variation of GetOauthToken that automatically caches the AccessToken in the cache of your choosing. If the 'key' exists in the cache, then that is retrieved, and used. If it does not, then the configured AccessTokenBuilder is used to generate the access token; which is cached against the specified key. If an expiry is available, then that's used to as the expiry for the token within the cache. Bear in mind that not all caches support a per-item-expiry; ExpiringMapCache does and by default a CacheConnection with this configured will be used. Note that previously you would have composed a chain of services to achieve the same thing (probably involving CheckCacheService or similar); this just simplifies that chain into a single step since you almost certainly want to cache the access token.",
      "descriptionHtml" : "Variation of \n<a href=\"GetOauthToken.html\" title=\"class in com.adaptris.core.http.oauth\" target=\"_new\"><code>GetOauthToken</code></a> that automatically caches the \n<a href=\"AccessToken.html\" title=\"class in com.adaptris.core.http.oauth\" target=\"_new\"><code>AccessToken</code></a> in the cache of your choosing. \n<p> If the 'key' exists in the cache, then that is retrieved, and used. If it does not, then the configured <a href=\"AccessTokenBuilder.html\" title=\"interface in com.adaptris.core.http.oauth\" target=\"_new\"><code>AccessTokenBuilder</code></a> is used to generate the access token; which is cached against the specified key. If an expiry is available, then that's used to as the expiry for the token within the cache. Bear in mind that not all caches support a per-item-expiry; <a href=\"../../cache/ExpiringMapCache.html\" title=\"class in com.adaptris.core.cache\" target=\"_new\"><code>ExpiringMapCache</code></a> does and by default a <a href=\"../../services/cache/CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>CacheConnection</code></a> with this configured will be used. </p> \n<p> Note that previously you would have composed a chain of services to achieve the same thing (probably involving <a href=\"../../services/cache/CheckCacheService.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\"><code>CheckCacheService</code></a> or similar); this just simplifies that chain into a single step since you almost certainly want to cache the access token. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "OauthTokenGetter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/oauth/OauthTokenGetter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/AWSKMSConnection.html",
      "fullClassName" : "com.adaptris.aws.kms.AWSKMSConnection",
      "className" : "AWSKMSConnection",
      "packageName" : "com.adaptris.aws.kms",
      "componentType" : "connection",
      "alias" : "aws-kms-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-kms.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.1",
        "summary" : "Connection for supporting connectivity to Amazon KMS",
        "tag" : "connections,amazon,aws,kms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection for supporting connectivity to Amazon KMS\",\n                  tag=\"connections,amazon,aws,kms\",\n                  since=\"3.10.1\")\npublic class AWSKMSConnection\nextends com.adaptris.aws.AWSConnection\nimplements ClientWrapper<com.amazonaws.services.kms.AWSKMSClient>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection for supporting connectivity to Amazon KMS\",\n                  tag=\"connections,amazon,aws,kms\",\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">AWSKMSConnection</span>\nextends com.adaptris.aws.AWSConnection\nimplements <a href=\"ClientWrapper.html\" title=\"interface in com.adaptris.aws.kms\" target=\"_new\">ClientWrapper</a>&lt;com.amazonaws.services.kms.AWSKMSClient&gt;",
      "description" : "AdaptrisConnection implementation for Amazon KMS This class directly exposes almost all the getter and setters that are available in ClientConfiguration via the AWSConnection.getClientConfiguration() property for maximum flexibility in configuration. The key from the client-configuration element should match the name of the underlying ClientConfiguration property; so if you wanted to control the user-agent you would do :  \n   <client-configuration>\n     <key-value-pair>\n        <key>UserAgent</key>\n        <value>My User Agent</value>\n     </key-value-pair>\n   </client-configuration>",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnection</a> implementation for Amazon KMS \n<p> This class directly exposes almost all the getter and setters that are available in <code>ClientConfiguration</code> via the <code>AWSConnection.getClientConfiguration()</code> property for maximum flexibility in configuration. </p> \n<p> The key from the <code>client-configuration</code> element should match the name of the underlying ClientConfiguration property; so if you wanted to control the user-agent you would do : </p> \n<pre> <code>\n   &lt;client-configuration&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;UserAgent&lt;/key&gt;\n        &lt;value&gt;My User Agent&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/client-configuration&gt;\n </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/KMS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-kms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/SymmetricKeyCryptographyService.html",
      "fullClassName" : "com.adaptris.core.security.SymmetricKeyCryptographyService",
      "className" : "SymmetricKeyCryptographyService",
      "packageName" : "com.adaptris.core.security",
      "componentType" : "service",
      "alias" : "symmetric-key-cryptography-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Encrypts or Decrypts payload using key and initial vector",
        "tag" : "service,cryptography"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Encrypts or Decrypts payload using key and initial vector\",\n                  tag=\"service,cryptography\")\npublic class SymmetricKeyCryptographyService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Encrypts or Decrypts payload using key and initial vector\",\n                  tag=\"service,cryptography\")\npublic class <span class=\"typeNameLabel\">SymmetricKeyCryptographyService</span>\nextends <a href=\"../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lifecycle/FilteredSharedComponentStart.html",
      "fullClassName" : "com.adaptris.core.lifecycle.FilteredSharedComponentStart",
      "className" : "FilteredSharedComponentStart",
      "packageName" : "com.adaptris.core.lifecycle",
      "componentType" : "object",
      "alias" : "filtered-shared-component-start",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FilteredSharedComponentStart\nextends java.lang.Object\nimplements SharedComponentLifecycleStrategy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FilteredSharedComponentStart</span>\nextends java.lang.Object\nimplements <a href=\"../SharedComponentLifecycleStrategy.html\" title=\"interface in com.adaptris.core\" target=\"_new\">SharedComponentLifecycleStrategy</a>",
      "description" : "Filtered start strategy for SharedComponentList In a standard Adapter lifecycle; all shared connections are started before any channels are started. If a connection is referenced by a Channel that is not set to auto-start; then this can cause a connection to be made which would waste resources. Use this strategy to only start specific named connections. In any event, if a connection is not started when a channel or service that requires it is started, it will be started. All the includes are processed first to generate a subset of connections that is then used to process any exclusions. The include-connection-id and exclude-connection-id should be a String that will be treated as a regular expression format. If you do not specify any includes, then this implicitly means all elements are included. If you do not specify any excludes then nothing is excluded from the inclusion subset. Typically, you shouldn't need both includes and excludes because your skill with regular expressions mean that you can handle everything you need in either block. It is processed this way for completeness.",
      "descriptionHtml" : "Filtered start strategy for \n<a href=\"../SharedComponentList.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>SharedComponentList</code></a> \n<p> In a standard Adapter lifecycle; all shared connections are started before any channels are started. If a connection is referenced by a Channel that is not set to auto-start; then this can cause a connection to be made which would waste resources. Use this strategy to only start specific named connections. In any event, if a connection is not started when a channel or service that requires it is started, it will be started. </p> \n<p> All the includes are processed first to generate a subset of connections that is then used to process any exclusions. The <code>include-connection-id</code> and <code>exclude-connection-id</code> should be a String that will be treated as a regular expression format. If you do not specify any includes, then this implicitly means all elements are included. If you do not specify any excludes then nothing is excluded from the inclusion subset. </p> \n<p> Typically, you shouldn't need both includes and excludes because your skill with regular expressions mean that you can handle everything you need in either block. It is processed this way for completeness. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/ReplaceNode.html",
      "fullClassName" : "com.adaptris.util.text.xml.ReplaceNode",
      "className" : "ReplaceNode",
      "packageName" : "com.adaptris.util.text.xml",
      "componentType" : "object",
      "alias" : "xml-replace-node",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ReplaceNode\nextends XpathMergeImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ReplaceNode</span>\nextends <a href=\"XpathMergeImpl.html\" title=\"class in com.adaptris.util.text.xml\" target=\"_new\">XpathMergeImpl</a>",
      "description" : "Merge implementation that replaces a node derived from an Xpath. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Merge implementation that replaces a node derived from an Xpath. \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "XpathMergeImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/XpathMergeImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/credentials/NoCredentialsProvider.html",
      "fullClassName" : "com.adaptris.google.cloud.pubsub.credentials.NoCredentialsProvider",
      "className" : "NoCredentialsProvider",
      "packageName" : "com.adaptris.google.cloud.pubsub.credentials",
      "componentType" : "object",
      "alias" : "no-credentials-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-gcloud-pubsub.jar",
      "profile" : { },
      "annotationDetails" : "public class NoCredentialsProvider\nextends CredentialsProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoCredentialsProvider</span>\nextends <a href=\"CredentialsProvider.html\" title=\"class in com.adaptris.google.cloud.pubsub.credentials\" target=\"_new\">CredentialsProvider</a>",
      "inheritance" : [
        {
          "name" : "CredentialsProvider",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-gcloud-pubsub/4.0.0B1-RELEASE/com/adaptris/google/cloud/pubsub/credentials/CredentialsProvider.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Google/GCloud PubSub",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-gcloud-pubsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/edi/EdifactSeparatorSet.html",
      "fullClassName" : "com.adaptris.adapter.edistream.parser.edi.EdifactSeparatorSet",
      "className" : "EdifactSeparatorSet",
      "packageName" : "com.adaptris.adapter.edistream.parser.edi",
      "componentType" : "object",
      "alias" : "edi-edifact-separators",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-stream.jar",
      "profile" : { },
      "annotationDetails" : "public class EdifactSeparatorSet\nextends AbstractSeparatorSet\nimplements IEdiSeparatorSet",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">EdifactSeparatorSet</span>\nextends <a href=\"AbstractSeparatorSet.html\" title=\"class in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\">AbstractSeparatorSet</a>\nimplements <a href=\"IEdiSeparatorSet.html\" title=\"interface in com.adaptris.adapter.edistream.parser.edi\" target=\"_new\">IEdiSeparatorSet</a>",
      "description" : "This class represents the special separators used in EDI, but is also the base class for other versions. This class is based on the EDIFACT UNA segment for the listing of the separators. This class has a total of 7 separators: component data element separator (:) data element separator (+) decimal notification (.) release character (?) reserved, must be a space segment terminator (') X12 segment id separator (+), X12 differs from EDIFACT in that the first data element separator in a segment is different from the rest.",
      "descriptionHtml" : "This class represents the special separators used in EDI, but is also the base class for other versions.\n<br> This class is based on the EDIFACT UNA segment for the listing of the separators.\n<br> This class has a total of 7 separators: \n<ol> \n <li>component data element separator (:)</li> \n <li>data element separator (+)</li> \n <li>decimal notification (.)</li> \n <li>release character (?)</li> \n <li>reserved, must be a space</li> \n <li>segment terminator (')</li> \n <li>X12 segment id separator (+), X12 differs from EDIFACT in that the first data element separator in a segment is different from the rest.</li> \n</ol>",
      "inheritance" : [
        {
          "name" : "AbstractSeparatorSet",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-stream/4.0.0B1-RELEASE/com/adaptris/adapter/edistream/parser/edi/AbstractSeparatorSet.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-stream",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltQueryToMetadata.html",
      "fullClassName" : "com.adaptris.core.json.jslt.JsltQueryToMetadata",
      "className" : "JsltQueryToMetadata",
      "packageName" : "com.adaptris.core.json.jslt",
      "componentType" : "object",
      "alias" : "jslt-to-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-jslt.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.12.0",
        "summary" : "Execute a JSLT expression rendering the result as a string and store as metadata.",
        "tag" : "jslt,transform,json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a JSLT expression rendering the result as a string and store as metadata.\",\n                  tag=\"jslt,transform,json\",\n                  since=\"3.12.0\")\npublic class JsltQueryToMetadata\nextends JsltQueryImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a JSLT expression rendering the result as a string and store as metadata.\",\n                  tag=\"jslt,transform,json\",\n                  since=\"3.12.0\")\npublic class <span class=\"typeNameLabel\">JsltQueryToMetadata</span>\nextends <a href=\"JsltQueryImpl.html\" title=\"class in com.adaptris.core.json.jslt\" target=\"_new\">JsltQueryImpl</a>",
      "description" : "Evaluate a JSLT expression rendering the result as a string and store as metadata.",
      "descriptionHtml" : "Evaluate a JSLT expression rendering the result as a string and store as metadata.",
      "inheritance" : [
        {
          "name" : "JsltQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jslt/4.0.0B1-RELEASE/com/adaptris/core/json/jslt/JsltQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSLT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jslt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-cosmosdb/4.0.0B1-RELEASE/com/adaptris/interlok/azure/cosmosdb/CosmosAuthorizationHeader.html",
      "fullClassName" : "com.adaptris.interlok.azure.cosmosdb.CosmosAuthorizationHeader",
      "className" : "CosmosAuthorizationHeader",
      "packageName" : "com.adaptris.interlok.azure.cosmosdb",
      "componentType" : "service",
      "alias" : "cosmosdb-authorization-header",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-cosmosdb.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Builds an authorization header for Azure CosmosDB",
        "tag" : "azure,cosmosdb,cosmos"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Builds an authorization header for Azure CosmosDB\",\n                  since=\"3.9.2\",\n                  tag=\"azure,cosmosdb,cosmos\")\npublic class CosmosAuthorizationHeader\nextends CosmosAuthorizationHeaderImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Builds an authorization header for Azure CosmosDB\",\n                  since=\"3.9.2\",\n                  tag=\"azure,cosmosdb,cosmos\")\npublic class <span class=\"typeNameLabel\">CosmosAuthorizationHeader</span>\nextends <a href=\"CosmosAuthorizationHeaderImpl.html\" title=\"class in com.adaptris.interlok.azure.cosmosdb\" target=\"_new\">CosmosAuthorizationHeaderImpl</a>",
      "description" : "Builds an authorization header for Azure CosmosDB from an explicit ResourceID / ResourceType Builds an authorization header using master keys based on the CosmosDB documentation. Once the key is built, then you can send it as your Authorization header. Under the covers we actually use com.microsoft.azure.documentdb.internal.BaseAuthorizationTokenProvider from the Cosmos Java SDK; but effectively what we do is this (you could do this in an EmbeddedScriptingService or similar).  \n    verb = \"GET\";\n    resourceType = \"the resource type\";\n    resourceId = \"the resource id\"; \n    // From java.time\n    date = DateTimeFormatter.RFC_1123_DATE_TIME.format(ZonedDateTime.now(ZoneId.of(\"GMT\"));\n    key = \"The key\";\n    keyType = \"master\";\n    tokenVersion = \"1.0\";\n    stringToSign = verb.toLowerCase() + \"\\n\" \n          + resourceType.toLowerCase() + \"\\n\" \n          + resourceId\n          + \"\\n\" + date.toLowerCase() + \"\\n\" \n          + \"\" + \"\\n\";\n    // From org.apache.commons.codec, unbase64 the key, and use it to hmac, then back to base64 again.\n    sigBytes = new HmacUtils(HmacAlgorithms.HMAC_SHA_256, Base64.decodeBase64(key))\n            .hmac(stringToSign.getBytes(\"UTF-8\"));\n    signature = Base64.encodeBase64String(sigBytes);\n    // from java.net\n    authorization = URLEncoder.encode(\"type=\" + keyType + \"&ver=\" + tokenVersion + \"&sig=\" + signature, \"UTF-8\");\n \n Since the date is also part of the signed data, it will also add the date it used against the key \"x-ms-date\" so that you can send it as a HTTP request header.",
      "descriptionHtml" : "Builds an authorization header for Azure CosmosDB from an explicit ResourceID / ResourceType \n<p> Builds an authorization header using master keys based on the <a href=\"https://docs.microsoft.com/en-us/rest/api/cosmos-db/access-control-on-cosmosdb-resources\" target=\"_new\">CosmosDB documentation</a>. Once the key is built, then you can send it as your <code>Authorization</code> header. Under the covers we actually use <code>com.microsoft.azure.documentdb.internal.BaseAuthorizationTokenProvider</code> from the Cosmos Java SDK; but effectively what we do is this (you could do this in an <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/EmbeddedScriptingService.html?is-external=true\" title=\"class or interface in com.adaptris.core.services\" class=\"externalLink\" target=\"_new\"><code>EmbeddedScriptingService</code></a> or similar). </p> \n<pre> <code>\n    verb = \"GET\";\n    resourceType = \"the resource type\";\n    resourceId = \"the resource id\"; \n    // From java.time\n    date = DateTimeFormatter.RFC_1123_DATE_TIME.format(ZonedDateTime.now(ZoneId.of(\"GMT\"));\n    key = \"The key\";\n    keyType = \"master\";\n    tokenVersion = \"1.0\";\n    stringToSign = verb.toLowerCase() + \"\\n\" \n          + resourceType.toLowerCase() + \"\\n\" \n          + resourceId\n          + \"\\n\" + date.toLowerCase() + \"\\n\" \n          + \"\" + \"\\n\";\n    // From org.apache.commons.codec, unbase64 the key, and use it to hmac, then back to base64 again.\n    sigBytes = new HmacUtils(HmacAlgorithms.HMAC_SHA_256, Base64.decodeBase64(key))\n            .hmac(stringToSign.getBytes(\"UTF-8\"));\n    signature = Base64.encodeBase64String(sigBytes);\n    // from java.net\n    authorization = URLEncoder.encode(\"type=\" + keyType + \"&amp;ver=\" + tokenVersion + \"&amp;sig=\" + signature, \"UTF-8\");\n </code>\n </pre> \n<p> Since the date is also part of the signed data, it will also add the date it used against the key <code>\"x-ms-date\"</code> so that you can send it as a HTTP request header. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CosmosAuthorizationHeaderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-cosmosdb/4.0.0B1-RELEASE/com/adaptris/interlok/azure/cosmosdb/CosmosAuthorizationHeaderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/CosmosDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-cosmosdb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/XpathToStructure.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.XpathToStructure",
      "className" : "XpathToStructure",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-xpath-to-structure",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathToStructure\nextends Parameter\nimplements ImportParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathToStructure</span>\nextends <a href=\"Parameter.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">Parameter</a>\nimplements <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ImportParameter</a>",
      "description" : "Allows the use of an XPath which is resolved from the payload to be used as an Import paramter for an RFC Call.",
      "descriptionHtml" : "Allows the use of an XPath which is resolved from the payload to be used as an Import paramter for an RFC Call.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/fs/NioWorker.html",
      "fullClassName" : "com.adaptris.fs.NioWorker",
      "className" : "NioWorker",
      "packageName" : "com.adaptris.fs",
      "componentType" : "object",
      "alias" : "fs-nio-worker",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NioWorker\nextends StandardWorker",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NioWorker</span>\nextends <a href=\"StandardWorker.html\" title=\"class in com.adaptris.fs\" target=\"_new\">StandardWorker</a>",
      "description" : "Implementation of FsWorker that uses java.nio to perform put and get operations.",
      "descriptionHtml" : "Implementation of \n<a href=\"FsWorker.html\" title=\"interface in com.adaptris.fs\" target=\"_new\"><code>FsWorker</code></a> that uses java.nio to perform put and get operations.",
      "inheritance" : [
        {
          "name" : "StandardWorker",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/fs/StandardWorker.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/ConfiguredRequestHeaders.html",
      "fullClassName" : "com.adaptris.core.http.client.net.ConfiguredRequestHeaders",
      "className" : "ConfiguredRequestHeaders",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-configured-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<java.net.HttpURLConnection>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"../RequestHeaderProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\">RequestHeaderProvider</a>&lt;java.net.HttpURLConnection&gt;",
      "description" : "Implementation of RequestHeaderProvider that applies configured values as headers to a HttpURLConnection.",
      "descriptionHtml" : "Implementation of \n<a href=\"../RequestHeaderProvider.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>RequestHeaderProvider</code></a> that applies configured values as headers to a \n<code>HttpURLConnection</code>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NoOpResultSetTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.NoOpResultSetTranslator",
      "className" : "NoOpResultSetTranslator",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-noop-result-set-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoOpResultSetTranslator\nextends ResultSetTranslatorBase",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoOpResultSetTranslator</span>\nextends <a href=\"ResultSetTranslatorBase.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">ResultSetTranslatorBase</a>",
      "description" : "Ignores the result set completely.",
      "descriptionHtml" : "Ignores the result set completely.",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TimeStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.TimeStatementParameter",
      "className" : "TimeStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-time-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class TimeStatementParameter\nextends DatetimeStatementParameter<java.sql.Time>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimeStatementParameter</span>\nextends <a href=\"DatetimeStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">DatetimeStatementParameter</a>&lt;java.sql.Time&gt;",
      "description" : "Time extension to StatementParameter. This ignores the query-class configuration, and always attempts to format the string into a java.sql.Time using the configured date formatter; if convert-null is true, then empty/blank/whitespace only values will be substituted by System.currentTimeMillis().",
      "descriptionHtml" : "<code>Time</code> extension to StatementParameter. \n<p> This ignores the query-class configuration, and always attempts to format the string into a java.sql.Time using the configured date formatter; if <code>convert-null</code> is true, then empty/blank/whitespace only values will be substituted by <code>System.currentTimeMillis()</code>. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        },
        {
          "name" : "DatetimeStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/DatetimeStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-edi-legacy/4.0.0B1-RELEASE/com/adaptris/edi/ConfigurableCharacterSet.html",
      "fullClassName" : "com.adaptris.edi.ConfigurableCharacterSet",
      "className" : "ConfigurableCharacterSet",
      "packageName" : "com.adaptris.edi",
      "componentType" : "object",
      "alias" : "edi-configurable-character-set",
      "deprecated" : false,
      "jarFileName" : "interlok-edi-legacy.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfigurableCharacterSet\nextends java.lang.Object\nimplements CharacterSet",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfigurableCharacterSet</span>\nextends java.lang.Object\nimplements <a href=\"CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\">CharacterSet</a>",
      "description" : "CharacterSet implementation that allows configuration.",
      "descriptionHtml" : "<a href=\"CharacterSet.html\" title=\"interface in com.adaptris.edi\" target=\"_new\"><code>CharacterSet</code></a> implementation that allows configuration.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/EDI legacy",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-edi-legacy",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertXpathBoolean.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertXpathBoolean",
      "className" : "AssertXpathBoolean",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-xpath-boolean",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertXpathBoolean\nextends XpathCommon\nimplements Assertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertXpathBoolean</span>\nextends <a href=\"../../XpathCommon.html\" title=\"class in com.adaptris.tester.runtime\" target=\"_new\">XpathCommon</a>\nimplements <a href=\"Assertion.html\" title=\"interface in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">Assertion</a>",
      "description" : "Checks boolean result of XpathCommon.getXpath() against TestMessage.getPayload(). Example: Payload: <root><key>value</key></root> Xpath: count(/root/key) = 1",
      "descriptionHtml" : "Checks boolean result of \n<a href=\"../../XpathCommon.html#getXpath()\" target=\"_new\"><code>XpathCommon.getXpath()</code></a> against \n<a href=\"../TestMessage.html#getPayload()\" target=\"_new\"><code>TestMessage.getPayload()</code></a>. \n<p><b>Example:</b></p> \n<p>Payload:<br> <code>&lt;root&gt;&lt;key&gt;value&lt;/key&gt;&lt;/root&gt; </code> </p> \n<p>Xpath:<br> <code>count(/root/key) = 1</code> </p>",
      "inheritance" : [
        {
          "name" : "XpathCommon",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/XpathCommon.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/sources/DefaultConfigSource.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.sources.DefaultConfigSource",
      "className" : "DefaultConfigSource",
      "packageName" : "com.adaptris.tester.runtime.services.sources",
      "componentType" : "object",
      "alias" : "default-config-file-source",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(since=\"3.9.3\")\npublic class DefaultConfigSource\nextends FileSource",
      "annotationDetailsHtml" : "@ComponentProfile(since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">DefaultConfigSource</span>\nextends <a href=\"FileSource.html\" title=\"class in com.adaptris.tester.runtime.services.sources\" target=\"_new\">FileSource</a>",
      "description" : "Extension of FileSource that simply defaults to file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml.",
      "descriptionHtml" : "Extension of \n<a href=\"FileSource.html\" title=\"class in com.adaptris.tester.runtime.services.sources\" target=\"_new\"><code>FileSource</code></a> that simply defaults to \n<code>file:///${service.tester.working.directory}/src/main/interlok/config/adapter.xml</code>.",
      "inheritance" : [
        {
          "name" : "FileSource",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/sources/FileSource.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/services/preprocessor/RemoveNodePreprocessor.html",
      "fullClassName" : "com.adaptris.tester.runtime.services.preprocessor.RemoveNodePreprocessor",
      "className" : "RemoveNodePreprocessor",
      "packageName" : "com.adaptris.tester.runtime.services.preprocessor",
      "componentType" : "object",
      "alias" : "remove-node-preprocessor",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class RemoveNodePreprocessor\nextends XpathCommon\nimplements Preprocessor",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RemoveNodePreprocessor</span>\nextends <a href=\"../../XpathCommon.html\" title=\"class in com.adaptris.tester.runtime\" target=\"_new\">XpathCommon</a>\nimplements <a href=\"Preprocessor.html\" title=\"interface in com.adaptris.tester.runtime.services.preprocessor\" target=\"_new\">Preprocessor</a>",
      "description" : "Removes node from XML at XpathCommon.getXpath().",
      "descriptionHtml" : "Removes node from XML at \n<a href=\"../../XpathCommon.html#getXpath()\" target=\"_new\"><code>XpathCommon.getXpath()</code></a>.",
      "inheritance" : [
        {
          "name" : "XpathCommon",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/XpathCommon.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/CharsetByteTranslator.html",
      "fullClassName" : "com.adaptris.util.text.CharsetByteTranslator",
      "className" : "CharsetByteTranslator",
      "packageName" : "com.adaptris.util.text",
      "componentType" : "object",
      "alias" : "charset-byte-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class CharsetByteTranslator\nextends ByteTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">CharsetByteTranslator</span>\nextends <a href=\"ByteTranslator.html\" title=\"class in com.adaptris.util.text\" target=\"_new\">ByteTranslator</a>",
      "description" : "Simply convert bytes into strings using the configured encoding.",
      "descriptionHtml" : "Simply convert bytes into strings using the configured encoding.",
      "inheritance" : [
        {
          "name" : "ByteTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/ByteTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/LongValueConverter.html",
      "fullClassName" : "com.adaptris.core.mongodb.LongValueConverter",
      "className" : "LongValueConverter",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "object",
      "alias" : "mongodb-long-value-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : { },
      "annotationDetails" : "public class LongValueConverter\nextends ValueConverter<java.lang.Long>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LongValueConverter</span>\nextends <a href=\"ValueConverter.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">ValueConverter</a>&lt;java.lang.Long&gt;",
      "inheritance" : [
        {
          "name" : "ValueConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/ValueConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-nats/4.0.0B1-RELEASE/com/adaptris/interlok/nats/NatsConsumer.html",
      "fullClassName" : "com.adaptris.interlok.nats.NatsConsumer",
      "className" : "NatsConsumer",
      "packageName" : "com.adaptris.interlok.nats",
      "componentType" : "consumer",
      "alias" : "nats-standard-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-nats.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.3",
        "summary" : "Consumer implementation for NATS.io",
        "tag" : "nats.io, nats"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Consumer implementation for NATS.io\",\n                  tag=\"nats.io, nats\",\n                  since=\"3.9.3\")\npublic class NatsConsumer\nextends AdaptrisMessageConsumerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Consumer implementation for NATS.io\",\n                  tag=\"nats.io, nats\",\n                  since=\"3.9.3\")\npublic class <span class=\"typeNameLabel\">NatsConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisMessageConsumerImp</a>",
      "description" : "Consumer implementation for NATS.io. This uses the NATS core API, and as a result does not offer anything similar to JMS Topic durable susbscribers; NATS core offers an at most once quality of service. If a subscriber is not listening on the subject (no subject match), or is not active when the message is sent, the message is not received. This is the same level of guarantee that TCP/IP provides. By default, NATS is a fire-and-forget messaging system. When the consumer is stopped; then we automatically unsubscribe from the subscription",
      "descriptionHtml" : "Consumer implementation for NATS.io. \n<p> This uses the NATS core API, and as a result does not offer anything similar to JMS Topic durable susbscribers; NATS core offers an at most once quality of service. If a subscriber is not listening on the subject (no subject match), or is not active when the message is sent, the message is not received. This is the same level of guarantee that TCP/IP provides. By default, NATS is a fire-and-forget messaging system. </p> \n<p> <strong>When the consumer is stopped; then we automatically unsubscribe from the subscription</strong> </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/NATS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-nats",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/SftpKeyAuthentication.html",
      "fullClassName" : "com.adaptris.core.ftp.SftpKeyAuthentication",
      "className" : "SftpKeyAuthentication",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "object",
      "alias" : "sftp-key-authentication",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SftpKeyAuthentication\nextends java.lang.Object\nimplements SftpAuthenticationProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SftpKeyAuthentication</span>\nextends java.lang.Object\nimplements <a href=\"SftpAuthenticationProvider.html\" title=\"interface in com.adaptris.core.ftp\" target=\"_new\">SftpAuthenticationProvider</a>",
      "description" : "SftpAuthenticationProvider using keys. It has the following behaviour : If the private key is not accepted by the target server, then an exception will be thrown. Multiple private keys are supported, provided you specify a ConfigBuilder implementation that allows it. Specifying the username+password in the destination (e.g. sftp://lchan:myPassword@1.2.3.4:22//opt/sftp), will override the username used to login but no other credentials. The only valid authentication is via the specified private key. The private key and known_hosts file are expected to be in OpenSSH format",
      "descriptionHtml" : "<a href=\"SftpAuthenticationProvider.html\" title=\"interface in com.adaptris.core.ftp\" target=\"_new\"><code>SftpAuthenticationProvider</code></a> using keys. \n<p> It has the following behaviour : </p>\n<ul> \n <li>If the private key is not accepted by the target server, then an exception will be thrown.</li> \n <li>Multiple private keys are supported, provided you specify a <a href=\"../../sftp/ConfigBuilder.html\" title=\"interface in com.adaptris.sftp\" target=\"_new\"><code>ConfigBuilder</code></a> implementation that allows it.</li> \n <li>Specifying the username+password in the destination (e.g. <code>sftp://lchan:myPassword@1.2.3.4:22//opt/sftp</code>), will override the username used to login but no other credentials. The only valid authentication is via the specified private key.</li> \n <li>The private key and known_hosts file are expected to be in OpenSSH format</li> \n</ul> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MessageMetricsInterceptorByMetadata.html",
      "fullClassName" : "com.adaptris.core.interceptor.MessageMetricsInterceptorByMetadata",
      "className" : "MessageMetricsInterceptorByMetadata",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "message-metrics-interceptor-by-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that collates message counts based on metadata",
        "tag" : "interceptor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that collates message counts based on metadata\",\n                  tag=\"interceptor\")\npublic class MessageMetricsInterceptorByMetadata\nextends MessageMetricsInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that collates message counts based on metadata\",\n                  tag=\"interceptor\")\npublic class <span class=\"typeNameLabel\">MessageMetricsInterceptorByMetadata</span>\nextends <a href=\"MessageMetricsInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">MessageMetricsInterceptorImpl</a>",
      "description" : "WorkflowInterceptor implementation that captures metrics about messages that match a given metadata criteria. This captures information about a message where that message contains the specified key and and value combination, the value portion may be a regular expression. If the message metadata matches that configured, then it captures the total number of messages that passed through this workflow, and captures the size of messages entering the workflow (but not the total size of messages exiting the workflow); and also the number of messages that had an error condition at the end of the workflow.",
      "descriptionHtml" : "WorkflowInterceptor implementation that captures metrics about messages that match a given metadata criteria. \n<p> This captures information about a message where that message contains the specified key and and value combination, the value portion may be a regular expression. If the message metadata matches that configured, then it captures the total number of messages that passed through this workflow, and captures the size of messages entering the workflow (but not the total size of messages exiting the workflow); and also the number of messages that had an error condition at the end of the workflow. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        },
        {
          "name" : "MetricsInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetricsInterceptorImpl.html"
        },
        {
          "name" : "MessageStatistic",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MessageStatistic.html"
        },
        {
          "name" : "MessageMetricsInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MessageMetricsInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/duplicate/DuplicateMessageRoutingService.html",
      "fullClassName" : "com.adaptris.core.services.duplicate.DuplicateMessageRoutingService",
      "className" : "DuplicateMessageRoutingService",
      "packageName" : "com.adaptris.core.services.duplicate",
      "componentType" : "service",
      "alias" : "duplicate-message-routing-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Set Metadata based on whether the message is considered a duplicate or not",
        "tag" : "service,duplicate"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Set Metadata based on whether the message is considered a duplicate or not\",\n                  tag=\"service,duplicate\")\npublic class DuplicateMessageRoutingService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Set Metadata based on whether the message is considered a duplicate or not\",\n                  tag=\"service,duplicate\")\npublic class <span class=\"typeNameLabel\">DuplicateMessageRoutingService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Class which checks the value of a configured metadata key against a list of previously received values. If the value appears in the list, the value of getDuplicateDestination is stored against the value of getDestinationKey, if it does not the value of getUniqueDestination is used. This class should really just set an isDuplicate metadata key to true and leave the destination selection to MetadataBranchingService.",
      "descriptionHtml" : "<p> Class which checks the value of a configured metadata key against a list of previously received values. If the value appears in the list, the value of <code>getDuplicateDestination</code> is stored against the value of <code>getDestinationKey</code>, if it does not the value of <code>getUniqueDestination</code> is used. </p> \n<p> This class should really just set an <code>isDuplicate</code> metadata key to true and leave the destination selection to <code>MetadataBranchingService</code>. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jruby/4.0.0B1-RELEASE/com/adaptris/jruby/AdvancedBuilder.html",
      "fullClassName" : "com.adaptris.jruby.AdvancedBuilder",
      "className" : "AdvancedBuilder",
      "packageName" : "com.adaptris.jruby",
      "componentType" : "object",
      "alias" : "jruby-advanced-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-jruby.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedBuilder\nextends ContainerBuilderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedBuilder</span>\nextends <a href=\"ContainerBuilderImpl.html\" title=\"class in com.adaptris.jruby\" target=\"_new\">ContainerBuilderImpl</a>",
      "description" : "Build a ScriptingContainer that is configured with a list of directories from which to load gems / add to the load path.",
      "descriptionHtml" : "Build a \n<code>ScriptingContainer</code> that is configured with a list of directories from which to load gems / add to the load path.",
      "inheritance" : [
        {
          "name" : "ContainerBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jruby/4.0.0B1-RELEASE/com/adaptris/jruby/ContainerBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Scripting/JRuby",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jruby",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/operator/IsNull.html",
      "fullClassName" : "com.adaptris.core.services.conditional.operator.IsNull",
      "className" : "IsNull",
      "packageName" : "com.adaptris.core.services.conditional.operator",
      "componentType" : "object",
      "alias" : "is-null",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Tests that a value does not exists (is null).",
        "tag" : "conditional,operator"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Tests that a value does not exists (is null).\",\n                  tag=\"conditional,operator\")\npublic class IsNull\nextends java.lang.Object\nimplements Operator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Tests that a value does not exists (is null).\",\n                  tag=\"conditional,operator\")\npublic class <span class=\"typeNameLabel\">IsNull</span>\nextends java.lang.Object\nimplements <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Operator</a>",
      "description" : "This Operator simply tests a single value is null. The value used in the null test is the Condition that this Operator is configured for; which could be the message payload or a metadata item for example.",
      "descriptionHtml" : "<p> This <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> simply tests a single value is null. </p> \n<p> The value used in the null test is the <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> that this <a href=\"../Operator.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Operator</code></a> is configured for; which could be the message payload or a metadata item for example. <br> </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/AggregatingFtpConsumer.html",
      "fullClassName" : "com.adaptris.core.ftp.AggregatingFtpConsumer",
      "className" : "AggregatingFtpConsumer",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "object",
      "alias" : "aggregating-ftp-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AggregatingFtpConsumer\nextends AggregatingConsumerImpl<AggregatingFtpConsumeService>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AggregatingFtpConsumer</span>\nextends <a href=\"../services/aggregator/AggregatingConsumerImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">AggregatingConsumerImpl</a>&lt;<a href=\"AggregatingFtpConsumeService.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">AggregatingFtpConsumeService</a>&gt;",
      "description" : "AggregatingConsumer implementation that allows you to read a separate message from an FTP filesystem that is correlated in some way to the current message. If a filter-expression of the generated is available, then this works as a true aggregator; it will trigger the use of a FileFilter, and ultimately cause multiple files to be read and passed to the configured message aggregator. Note that no decision is made about the resulting size of the message, all messages that match the filter-expression will be aggregated; if there a 2000 files sitting on the filesystem that match the filter-expression, then that is how many will be picked up.",
      "descriptionHtml" : "<a href=\"../services/aggregator/AggregatingConsumer.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>AggregatingConsumer</code></a> implementation that allows you to read a separate message from an FTP filesystem that is correlated in some way to the current message. \n<p> If a filter-expression of the generated is available, then this works as a true aggregator; it will trigger the use of a FileFilter, and ultimately cause multiple files to be read and passed to the configured message aggregator. Note that no decision is made about the resulting size of the message, all messages that match the filter-expression will be aggregated; if there a 2000 files sitting on the filesystem that match the filter-expression, then that is how many will be picked up. </p>",
      "inheritance" : [
        {
          "name" : "AggregatingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/AggregatingConsumerImpl.html"
        },
        {
          "name" : "AggregatingFtpConsumeService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/AggregatingFtpConsumeService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-varsub/4.0.0B1-RELEASE/com/adaptris/core/varsub/XStreamMarshaller.html",
      "fullClassName" : "com.adaptris.core.varsub.XStreamMarshaller",
      "className" : "XStreamMarshaller",
      "packageName" : "com.adaptris.core.varsub",
      "componentType" : "object",
      "alias" : "xstream-varsub-marshaller",
      "deprecated" : false,
      "jarFileName" : "interlok-varsub.jar",
      "profile" : { },
      "annotationDetails" : "public class XStreamMarshaller\nextends XStreamMarshaller",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XStreamMarshaller</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshaller.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">XStreamMarshaller</a>",
      "description" : "XStream version of AdaptrisMarshaller that supports variable substitutions when unmarshalling. If the variable-properties-url is configured as file:///.//path/to/my/variables.properties and that contains  \n broker.url=tcp://localhost:2506\n broker.backup.url=tcp://my.host:2507\n \n Then all instances of${broker.url} and ${broker.backup.url} will be replaced as the input is read in, but before the unmarshalling occurs.",
      "descriptionHtml" : "XStream version of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMarshaller.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMarshaller</code></a> that supports variable substitutions when unmarshalling. \n<p> If the <code>variable-properties-url</code> is configured as <code>file:///.//path/to/my/variables.properties</code> and that contains </p>\n<pre> <code>\n broker.url=tcp://localhost:2506\n broker.backup.url=tcp://my.host:2507\n </code>\n </pre> Then all instances of\n<code>${broker.url}</code> and \n<code>${broker.backup.url}</code> will be replaced as the input is read in, but before the unmarshalling occurs. \n<p></p>",
      "inheritance" : [
        {
          "name" : "AbstractMarshaller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AbstractMarshaller.html?is-external=true"
        },
        {
          "name" : "XStreamMarshallerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshallerImpl.html?is-external=true"
        },
        {
          "name" : "XStreamMarshaller",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/XStreamMarshaller.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Config/variable substitutions",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-varsub",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/PasPollingConsumer.html",
      "fullClassName" : "com.adaptris.core.jms.PasPollingConsumer",
      "className" : "PasPollingConsumer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "consumer",
      "alias" : "jms-topic-poller",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from a JMS Topic by actively polling for them",
        "tag" : "consumer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from a JMS Topic by actively polling for them\",\n                  tag=\"consumer,jms\",\n                  recommended=NullConnection.class)\npublic class PasPollingConsumer\nextends JmsPollingConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from a JMS Topic by actively polling for them\",\n                  tag=\"consumer,jms\",\n                  recommended=<a href=\"../NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">PasPollingConsumer</span>\nextends <a href=\"JmsPollingConsumerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsPollingConsumerImpl</a>",
      "description" : "PAS implementation of JmsPollingConsumer. The consumer created by this class is always durable and thus requires the clientID and subscriptionId to be set. It is up to the user to ensure that these are set such that this consumer is uniquely identified in the context of the broker's other consumers.",
      "descriptionHtml" : "<p> PAS implementation of <code>JmsPollingConsumer</code>. The consumer created by this class is always durable and thus requires the clientID and subscriptionId to be set. It is up to the user to ensure that these are set such that this consumer is uniquely identified in the context of the broker's other consumers. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "BaseJmsPollingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/BaseJmsPollingConsumerImpl.html"
        },
        {
          "name" : "JmsPollingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsPollingConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/EncryptService.html",
      "fullClassName" : "com.adaptris.aws.kms.EncryptService",
      "className" : "EncryptService",
      "packageName" : "com.adaptris.aws.kms",
      "componentType" : "service",
      "alias" : "aws-kms-encrypt-data",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-kms.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.kms.AWSKMSConnection"
        ],
        "since" : "3.10.1",
        "summary" : "Encrypt data using AWS KMS",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Encrypt data using AWS KMS\",\n                  recommended=AWSKMSConnection.class,\n                  since=\"3.10.1\")\npublic class EncryptService\nextends EncryptDecrypt",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Encrypt data using AWS KMS\",\n                  recommended=<a href=\"AWSKMSConnection.html\" title=\"class in com.adaptris.aws.kms\" target=\"_new\">AWSKMSConnection.class</a>,\n                  since=\"3.10.1\")\npublic class <span class=\"typeNameLabel\">EncryptService</span>\nextends <a href=\"EncryptDecrypt.html\" title=\"class in com.adaptris.aws.kms\" target=\"_new\">EncryptDecrypt</a>",
      "description" : "Encrypt data using AWS KMS",
      "descriptionHtml" : "Encrypt data using AWS KMS",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "AWSKMSServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/AWSKMSServiceImpl.html"
        },
        {
          "name" : "EncryptDecrypt",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-kms/4.0.0B1-RELEASE/com/adaptris/aws/kms/EncryptDecrypt.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/KMS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-kms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ShortStatementParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.ShortStatementParameter",
      "className" : "ShortStatementParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-short-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ShortStatementParameter\nextends TypedStatementParameter<java.lang.Short>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ShortStatementParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.lang.Short&gt;",
      "description" : "Short Statement Parameter. If convert-null is true, then empty/blank/whitespace only values will default to 0.",
      "descriptionHtml" : "<code>Short</code> Statement Parameter. \n<p> If <code>convert-null</code> is true, then empty/blank/whitespace only values will default to 0. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/PayloadValueTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jmx.PayloadValueTranslator",
      "className" : "PayloadValueTranslator",
      "packageName" : "com.adaptris.core.services.jmx",
      "componentType" : "object",
      "alias" : "jmx-payload-value-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PayloadValueTranslator\nextends ValueTranslatorImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PayloadValueTranslator</span>\nextends <a href=\"ValueTranslatorImp.html\" title=\"class in com.adaptris.core.services.jmx\" target=\"_new\">ValueTranslatorImp</a>",
      "description" : "This implementation of ValueTranslator will pull the string payload value from the AdaptrisMessage to be used as a Jmx operation parameter. Conversely we can also take a string result from a Jmx operation call and overwrite the payload with the new value.",
      "descriptionHtml" : "<p> This implementation of <a href=\"ValueTranslator.html\" title=\"interface in com.adaptris.core.services.jmx\" target=\"_new\"><code>ValueTranslator</code></a> will pull the string payload value from the <a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> to be used as a Jmx operation parameter. Conversely we can also take a string result from a Jmx operation call and overwrite the payload with the new value. </p>",
      "inheritance" : [
        {
          "name" : "ValueTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jmx/ValueTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/report/junit/JUnitReportProperty.html",
      "fullClassName" : "com.adaptris.tester.report.junit.JUnitReportProperty",
      "className" : "JUnitReportProperty",
      "packageName" : "com.adaptris.tester.report.junit",
      "componentType" : "object",
      "alias" : "property",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class JUnitReportProperty\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JUnitReportProperty</span>\nextends java.lang.Object",
      "description" : "Child of JUnitReportTestSuite for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML.",
      "descriptionHtml" : "Child of \n<a href=\"JUnitReportTestSuite.html\" title=\"class in com.adaptris.tester.report.junit\" target=\"_new\"><code>JUnitReportTestSuite</code></a> for storing results. The intention of class and classes in the hierarchy is to produce JUnit style XML.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetadataCountInterceptor.html",
      "fullClassName" : "com.adaptris.core.interceptor.MetadataCountInterceptor",
      "className" : "MetadataCountInterceptor",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "metadata-count-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that increments a counter based on some metadata value",
        "tag" : "interceptor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that increments a counter based on some metadata value\",\n                  tag=\"interceptor\")\npublic class MetadataCountInterceptor\nextends MetadataMetricsInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that increments a counter based on some metadata value\",\n                  tag=\"interceptor\")\npublic class <span class=\"typeNameLabel\">MetadataCountInterceptor</span>\nextends <a href=\"MetadataMetricsInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">MetadataMetricsInterceptorImpl</a>",
      "description" : "WorkflowInterceptor implementation that exposes metrics about metadata values via JMX. Each message that passes through the interceptor will be queried in turn for the configured key (getMetadataKey()). The string value associated with that key will be added to the existing total for that value within the given time period. Effectively this interceptor counts the number of times a given metadata value is processed by the workflow within a given time period.",
      "descriptionHtml" : "WorkflowInterceptor implementation that exposes metrics about metadata values via JMX. \n<p> Each message that passes through the interceptor will be queried in turn for the configured key (<a href=\"#getMetadataKey()\" target=\"_new\"><code>getMetadataKey()</code></a>). The string value associated with that key will be added to the existing total for that value within the given time period. Effectively this interceptor counts the number of times a given metadata value is processed by the workflow within a given time period. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        },
        {
          "name" : "MetricsInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetricsInterceptorImpl.html"
        },
        {
          "name" : "MetadataStatistic",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetadataStatistic.html"
        },
        {
          "name" : "MetadataMetricsInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MetadataMetricsInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/SimpleByteTranslator.html",
      "fullClassName" : "com.adaptris.util.text.SimpleByteTranslator",
      "className" : "SimpleByteTranslator",
      "packageName" : "com.adaptris.util.text",
      "componentType" : "object",
      "alias" : "simple-byte-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleByteTranslator\nextends ByteTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleByteTranslator</span>\nextends <a href=\"ByteTranslator.html\" title=\"class in com.adaptris.util.text\" target=\"_new\">ByteTranslator</a>",
      "description" : "Simply convert using the default platform encoding.",
      "descriptionHtml" : "Simply convert using the default platform encoding.",
      "inheritance" : [
        {
          "name" : "ByteTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/ByteTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/IgnoreAllExceptions.html",
      "fullClassName" : "com.adaptris.core.services.splitter.IgnoreAllExceptions",
      "className" : "IgnoreAllExceptions",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "ignoring-service-exception-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Ignore all exceptions from pooled-split-join-service",
        "tag" : "service,splitjoin"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Ignore all exceptions from pooled-split-join-service\",\n                  since=\"3.11.1\",\n                  tag=\"service,splitjoin\")\npublic class IgnoreAllExceptions\nextends java.lang.Object\nimplements ServiceErrorHandler",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Ignore all exceptions from pooled-split-join-service\",\n                  since=\"3.11.1\",\n                  tag=\"service,splitjoin\")\npublic class <span class=\"typeNameLabel\">IgnoreAllExceptions</span>\nextends java.lang.Object\nimplements <a href=\"ServiceErrorHandler.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\">ServiceErrorHandler</a>",
      "description" : "Ignore all exceptions coming nested services, including Timeouts This is included for completeness, since there are some obvious gotchas this class as part of a PooledSplitJoinService If your aggregator is sensitive to payload structure (e.g you're aggregating as a JSON ARRAY, but because of failures, the message to be aggregated is in fact XML) then you have to use a Condition to filter the message somehow If your aggregator isn't sensitive to payloads (e.g. an AppendingMessageAggregator then you may still end up with a mix of JSON/XML Exceptions may still be thrown by the aggregator, and they will be propagated to the service; this only ignores exceptions that come from the service-list executed as part of the splitter.",
      "descriptionHtml" : "Ignore all exceptions coming nested services, including Timeouts \n<p> This is included for completeness, since there are some obvious gotchas this class as part of a <a href=\"PooledSplitJoinService.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\"><code>PooledSplitJoinService</code></a> </p>\n<ul> \n <li>If your aggregator is sensitive to payload structure (e.g you're aggregating as a JSON ARRAY, but because of failures, the message to be aggregated is in fact XML) then you have to use a <code>Condition</code> to filter the message somehow</li> \n <li>If your aggregator isn't sensitive to payloads (e.g. an <a href=\"../aggregator/AppendingMessageAggregator.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\"><code>AppendingMessageAggregator</code></a> then you may still end up with a mix of JSON/XML</li> \n <li>Exceptions may still be thrown by the aggregator, and they will be propagated to the service; this only ignores exceptions that come from the service-list executed as part of the <code>splitter</code>.</li> \n</ul> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/DirectoryExtractionMode.html",
      "fullClassName" : "com.adaptris.filesystem.DirectoryExtractionMode",
      "className" : "DirectoryExtractionMode",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "object",
      "alias" : "directory-extraction-mode",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : { },
      "annotationDetails" : "public class DirectoryExtractionMode\nextends java.lang.Object\nimplements ExtractionMode",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DirectoryExtractionMode</span>\nextends java.lang.Object\nimplements <a href=\"ExtractionMode.html\" title=\"interface in com.adaptris.filesystem\" target=\"_new\">ExtractionMode</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.EventHandlerAwareProducer",
      "className" : "EventHandlerAwareProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/ListOperation.html",
      "fullClassName" : "com.adaptris.aws.s3.ListOperation",
      "className" : "ListOperation",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "object",
      "alias" : "amazon-s3-list",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "List of files based on S3 key",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"List of files based on S3 key\",\n                  since=\"3.9.1\")\npublic class ListOperation\nextends S3OperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"List of files based on S3 key\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">ListOperation</span>\nextends <a href=\"S3OperationImpl.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">S3OperationImpl</a>",
      "description" : "List of files based on S3 key.",
      "descriptionHtml" : "List of files based on S3 key.",
      "inheritance" : [
        {
          "name" : "S3OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3OperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/SprayToThor.html",
      "fullClassName" : "com.adaptris.hpcc.SprayToThor",
      "className" : "SprayToThor",
      "packageName" : "com.adaptris.hpcc",
      "componentType" : "producer",
      "alias" : "spray-to-thor",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.hpcc.DfuplusConnection"
        ],
        "since" : "",
        "summary" : "Spray the current message into HPCC via dfuplus",
        "tag" : "producer,hpcc,dfuplus"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Spray the current message into HPCC via dfuplus\",\n                  tag=\"producer,hpcc,dfuplus\",\n                  recommended=DfuplusConnection.class)\npublic class SprayToThor\nextends SprayToThorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Spray the current message into HPCC via dfuplus\",\n                  tag=\"producer,hpcc,dfuplus\",\n                  recommended=<a href=\"DfuplusConnection.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">DfuplusConnection.class</a>)\npublic class <span class=\"typeNameLabel\">SprayToThor</span>\nextends <a href=\"SprayToThorImpl.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">SprayToThorImpl</a>",
      "description" : "Spray the contents of the current message into Thor. The adapter also needs a running dfuplus action=dafilesrv instance on the machine where the adapter is hosted. Thor will connect to this instance for file delivery.",
      "descriptionHtml" : "Spray the contents of the current message into Thor. \n<p> The adapter also needs a running <code>dfuplus action=dafilesrv</code> instance on the machine where the adapter is hosted. Thor will connect to this instance for file delivery. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "DfuPlusWrapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/DfuPlusWrapper.html"
        },
        {
          "name" : "SprayToThorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/SprayToThorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/DeleteFromThor.html",
      "fullClassName" : "com.adaptris.hpcc.DeleteFromThor",
      "className" : "DeleteFromThor",
      "packageName" : "com.adaptris.hpcc",
      "componentType" : "producer",
      "alias" : "delete-from-thor",
      "deprecated" : false,
      "jarFileName" : "interlok-hpcc.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.hpcc.DfuplusConnection"
        ],
        "since" : "",
        "summary" : "Delete a specific file from HPCC",
        "tag" : "producer,hpcc,dfuplus,thor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Delete a specific file from HPCC\",\n                  tag=\"producer,hpcc,dfuplus,thor\",\n                  recommended=DfuplusConnection.class)\npublic class DeleteFromThor\nextends SingleFileRequest",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Delete a specific file from HPCC\",\n                  tag=\"producer,hpcc,dfuplus,thor\",\n                  recommended=<a href=\"DfuplusConnection.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">DfuplusConnection.class</a>)\npublic class <span class=\"typeNameLabel\">DeleteFromThor</span>\nextends <a href=\"SingleFileRequest.html\" title=\"class in com.adaptris.hpcc\" target=\"_new\">SingleFileRequest</a>",
      "description" : "Delete a logical file from Thor. Note that although this is an implementation of AdaptrisMessageProducerImp the AdaptrisMessageProducer#produce() methods will throw a UnsupportedOperationException. It should be used as part of a StandaloneRequestor where the SingleFileRequest.getLogicalFilename() returns the logical filename mask of the file(s) that you wish to retrieve.",
      "descriptionHtml" : "Delete a logical file from Thor. \n<p> Note that although this is an implementation of <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageProducerImp</code></a> the <code>AdaptrisMessageProducer#produce()</code> methods will throw a <code>UnsupportedOperationException</code>. It should be used as part of a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandaloneRequestor.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>StandaloneRequestor</code></a> where the <a href=\"SingleFileRequest.html#getLogicalFilename()\" target=\"_new\"><code>SingleFileRequest.getLogicalFilename()</code></a> returns the logical filename mask of the file(s) that you wish to retrieve. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "DfuPlusWrapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/DfuPlusWrapper.html"
        },
        {
          "name" : "RequestOnlyImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/RequestOnlyImpl.html"
        },
        {
          "name" : "SingleFileRequest",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-hpcc/4.0.0B1-RELEASE/com/adaptris/hpcc/SingleFileRequest.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HPCC/dfuplus",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-hpcc",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullMessageConsumer.html",
      "fullClassName" : "com.adaptris.core.NullMessageConsumer",
      "className" : "NullMessageConsumer",
      "packageName" : "com.adaptris.core",
      "componentType" : "consumer",
      "alias" : "null-message-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Default NO-OP consumer implementation",
        "tag" : "consumer,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Default NO-OP consumer implementation\",\n                  tag=\"consumer,base\",\n                  recommended=NullConnection.class)\npublic class NullMessageConsumer\nextends AdaptrisMessageConsumerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Default NO-OP consumer implementation\",\n                  tag=\"consumer,base\",\n                  recommended=<a href=\"NullConnection.html\" title=\"class in com.adaptris.core\" target=\"_new\">NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">NullMessageConsumer</span>\nextends <a href=\"AdaptrisMessageConsumerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdaptrisMessageConsumerImp</a>",
      "description" : "Null implementation of AdaptrisMessageConsumer.",
      "descriptionHtml" : "<p> Null implementation of <code>AdaptrisMessageConsumer</code>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ConfiguredSQLStatement.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.ConfiguredSQLStatement",
      "className" : "ConfiguredSQLStatement",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-configured-sql-statement",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredSQLStatement\nextends java.lang.Object\nimplements JdbcStatementCreator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredSQLStatement</span>\nextends java.lang.Object\nimplements <a href=\"JdbcStatementCreator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\">JdbcStatementCreator</a>",
      "description" : "Build an SQL Statement for JdbcDataQueryService from static configuration.",
      "descriptionHtml" : "Build an SQL Statement for \n<a href=\"JdbcDataQueryService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataQueryService</code></a> from static configuration.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-mail/4.0.0B1-RELEASE/com/adaptris/interlok/azure/mail/O365MailConsumer.html",
      "fullClassName" : "com.adaptris.interlok.azure.mail.O365MailConsumer",
      "className" : "O365MailConsumer",
      "packageName" : "com.adaptris.interlok.azure.mail",
      "componentType" : "consumer",
      "alias" : "azure-office-365-mail-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-mail.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Pickup email from a Microsoft Office 365 account using the Microsoft Graph API",
        "tag" : "consumer,email,o365,microsoft,office,outlook,365"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup email from a Microsoft Office 365 account using the Microsoft Graph API\",\n                  tag=\"consumer,email,o365,microsoft,office,outlook,365\")\npublic class O365MailConsumer\nextends AdaptrisPollingConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup email from a Microsoft Office 365 account using the Microsoft Graph API\",\n                  tag=\"consumer,email,o365,microsoft,office,outlook,365\")\npublic class <span class=\"typeNameLabel\">O365MailConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisPollingConsumer</a>",
      "description" : "Implementation of an email consumer that is geared towards Microsoft Office 365, using their Graph API and OAuth2.",
      "descriptionHtml" : "Implementation of an email consumer that is geared towards Microsoft Office 365, using their Graph API and OAuth2.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/Outlook",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/CommonsCompressUnzipService.html",
      "fullClassName" : "com.adaptris.filesystem.CommonsCompressUnzipService",
      "className" : "CommonsCompressUnzipService",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "service",
      "alias" : "commons-compress-unzip-service",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Unzip the contents of the message",
        "tag" : "service,zip,unzip"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Unzip the contents of the message\",\n                  tag=\"service,zip,unzip\")\npublic class CommonsCompressUnzipService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Unzip the contents of the message\",\n                  tag=\"service,zip,unzip\")\npublic class <span class=\"typeNameLabel\">CommonsCompressUnzipService</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Unzip message payload using commons-compress. NOTE: To use this service the message must be a FileBackedMessage, if this is not the case the service will do nothing. If no filenameMatcher is provided then the service will set the payload of the message to be the first entry found in the zip file. When filenameMatcher is set the service will traverse the zip checking each entry against the matcher. If it does not match anything within the zip, the payload will be left untouched (zipped).",
      "descriptionHtml" : "<p>Unzip message payload using commons-compress.</p> \n<p>NOTE: To use this service the message must be a FileBackedMessage, if this is not the case the service will do nothing.</p> \n<p>If no filenameMatcher is provided then the service will set the payload of the message to be the first entry found in the zip file. When filenameMatcher is set the service will traverse the zip checking each entry against the matcher. If it does not match anything within the zip, the payload will be left untouched (zipped).</p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/TimedSession.html",
      "fullClassName" : "com.adaptris.kie.services.TimedSession",
      "className" : "TimedSession",
      "packageName" : "com.adaptris.kie.services",
      "componentType" : "object",
      "alias" : "kie-timed-session",
      "deprecated" : false,
      "jarFileName" : "interlok-kie.jar",
      "profile" : { },
      "annotationDetails" : "public class TimedSession\nextends SessionManagementImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimedSession</span>\nextends <a href=\"SessionManagementImpl.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">SessionManagementImpl</a>",
      "description" : "Session management strategy that retains the same session for a configurable length of time. The KieBase is created upon the first invocation of get(KieBase, AdaptrisMessage) and is disposed when the interval between calls to get(KieBase, AdaptrisMessage) exceeds the configured interval.",
      "descriptionHtml" : "Session management strategy that retains the same session for a configurable length of time. \n<p> The <code>KieBase</code> is created upon the first invocation of <a href=\"#get(org.kie.api.KieBase,com.adaptris.core.AdaptrisMessage)\" target=\"_new\"><code>get(KieBase, AdaptrisMessage)</code></a> and is disposed when the interval between calls to <a href=\"#get(org.kie.api.KieBase,com.adaptris.core.AdaptrisMessage)\" target=\"_new\"><code>get(KieBase, AdaptrisMessage)</code></a> exceeds the configured interval. </p>",
      "inheritance" : [
        {
          "name" : "SessionManagementImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/SessionManagementImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/KIE",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kie",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/ViolationsAsObjectMetadata.html",
      "fullClassName" : "com.adaptris.core.transform.schema.ViolationsAsObjectMetadata",
      "className" : "ViolationsAsObjectMetadata",
      "packageName" : "com.adaptris.core.transform.schema",
      "componentType" : "object",
      "alias" : "schema-violations-as-object-metadata",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.10.2",
        "summary" : "Render an XML representation of the schema violations as object metadata",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Render an XML representation of the schema violations as object metadata\",\n                  since=\"3.10.2\")\npublic class ViolationsAsObjectMetadata\nextends ViolationHandlerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Render an XML representation of the schema violations as object metadata\",\n                  since=\"3.10.2\")\npublic class <span class=\"typeNameLabel\">ViolationsAsObjectMetadata</span>\nextends <a href=\"ViolationHandlerImpl.html\" title=\"class in com.adaptris.core.transform.schema\" target=\"_new\">ViolationHandlerImpl</a>",
      "description" : "Uses SchemaViolations and adds it as object metadata.",
      "descriptionHtml" : "Uses \n<a href=\"SchemaViolations.html\" title=\"class in com.adaptris.core.transform.schema\" target=\"_new\"><code>SchemaViolations</code></a> and adds it as object metadata.",
      "inheritance" : [
        {
          "name" : "ViolationHandlerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/ViolationHandlerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/aggregator/JsonMergeAggregator.html",
      "fullClassName" : "com.adaptris.core.json.aggregator.JsonMergeAggregator",
      "className" : "JsonMergeAggregator",
      "packageName" : "com.adaptris.core.json.aggregator",
      "componentType" : "object",
      "alias" : "json-merge-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Merge each message into an existing JSON object.",
        "tag" : "json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Merge each message into an existing JSON object.\",\n                  tag=\"json\")\npublic class JsonMergeAggregator\nextends JsonAggregatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Merge each message into an existing JSON object.\",\n                  tag=\"json\")\npublic class <span class=\"typeNameLabel\">JsonMergeAggregator</span>\nextends <a href=\"JsonAggregatorImpl.html\" title=\"class in com.adaptris.core.json.aggregator\" target=\"_new\">JsonAggregatorImpl</a>",
      "description" : "MessageAggregator implementation that merges each message to a JSON object or array. The payloads from the collection are assumed to be JSON objects, and will be aggregated into the pre-split message be it an object or array. Messages that are not JSON objects will be ignored but an error will be thrown should the pre-split message not be valid.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregator.html?is-external=true\" title=\"class or interface in com.adaptris.core.services.aggregator\" class=\"externalLink\" target=\"_new\"><code>MessageAggregator</code></a> implementation that merges each message to a JSON object or array. \n<p> The payloads from the collection are assumed to be JSON objects, and will be aggregated into the pre-split message be it an object or array. Messages that are not JSON objects will be ignored but an error will be thrown should the pre-split message not be valid. </p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html?is-external=true"
        },
        {
          "name" : "JsonAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/aggregator/JsonAggregatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/IntegerMetadataConverter.html",
      "fullClassName" : "com.adaptris.core.jms.IntegerMetadataConverter",
      "className" : "IntegerMetadataConverter",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-integer-metadata-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class IntegerMetadataConverter\nextends MetadataConverter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IntegerMetadataConverter</span>\nextends <a href=\"MetadataConverter.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MetadataConverter</a>",
      "description" : "MetadataElement key and value set as property of javax.jms.Message using setIntProperty(String key, int value).",
      "descriptionHtml" : "<p> <code>MetadataElement</code> key and value set as property of <code>javax.jms.Message</code> using <code>setIntProperty(String key, int value)</code>. </p>",
      "inheritance" : [
        {
          "name" : "MetadataConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MetadataConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/DirectoryListingProviderDefault.html",
      "fullClassName" : "com.adaptris.filesystem.DirectoryListingProviderDefault",
      "className" : "DirectoryListingProviderDefault",
      "packageName" : "com.adaptris.filesystem",
      "componentType" : "object",
      "alias" : "default-directory-listing-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : { },
      "annotationDetails" : "public class DirectoryListingProviderDefault\nextends java.lang.Object\nimplements DirectoryListingProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DirectoryListingProviderDefault</span>\nextends java.lang.Object\nimplements <a href=\"DirectoryListingProvider.html\" title=\"interface in com.adaptris.filesystem\" target=\"_new\">DirectoryListingProvider</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/security/LegacyPrivateKeyPasswordProvider.html",
      "fullClassName" : "com.adaptris.core.security.LegacyPrivateKeyPasswordProvider",
      "className" : "LegacyPrivateKeyPasswordProvider",
      "packageName" : "com.adaptris.core.security",
      "componentType" : "object",
      "alias" : "legacy-private-key-password-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class LegacyPrivateKeyPasswordProvider\nextends java.lang.Object\nimplements PrivateKeyPasswordProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">LegacyPrivateKeyPasswordProvider</span>\nextends java.lang.Object\nimplements <a href=\"PrivateKeyPasswordProvider.html\" title=\"interface in com.adaptris.core.security\" target=\"_new\">PrivateKeyPasswordProvider</a>",
      "description" : "Legacy private key password provider based on the property file 'security.properties'. The private key password for your local KeyEntry certificate is not stored in the runtime configuration. It is instead sourced from a file security.properties that is expected to be in the classpath. This file only needs to contain a single entry: \n adaptris.privatekey.password=[private key password]",
      "descriptionHtml" : "Legacy private key password provider based on the property file 'security.properties'. \n<p> The private key password for your local KeyEntry certificate is not stored in the runtime configuration. It is instead sourced from a file <code>security.properties</code> that is expected to be in the classpath. </p> \n<p> This file only needs to contain a single entry: </p>\n<pre><code>\n adaptris.privatekey.password=[private key password]\n </code></pre> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ContentLanguage.html",
      "fullClassName" : "com.adaptris.aws.s3.meta.S3ContentLanguage",
      "className" : "S3ContentLanguage",
      "packageName" : "com.adaptris.aws.s3.meta",
      "componentType" : "object",
      "alias" : "s3-content-language",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : { },
      "annotationDetails" : "public class S3ContentLanguage\nextends S3ObjectMetadata",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">S3ContentLanguage</span>\nextends <a href=\"S3ObjectMetadata.html\" title=\"class in com.adaptris.aws.s3.meta\" target=\"_new\">S3ObjectMetadata</a>",
      "inheritance" : [
        {
          "name" : "S3ObjectMetadata",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/meta/S3ObjectMetadata.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcEscapedTimeParameter.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.JdbcEscapedTimeParameter",
      "className" : "JdbcEscapedTimeParameter",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-escaped-time-statement-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class JdbcEscapedTimeParameter\nextends TypedStatementParameter<java.sql.Time>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JdbcEscapedTimeParameter</span>\nextends <a href=\"TypedStatementParameter.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">TypedStatementParameter</a>&lt;java.sql.Time&gt;",
      "description" : "A Time extension to StatementParameter. This ignores the query-class configuration, and always attempts to format the string into a java.sql.Time using Time.valueOf(String); if convert-null is true, then empty/blank/whitespace only values will be substituted by System.currentTimeMillis().",
      "descriptionHtml" : "A \n<code>Time</code> extension to StatementParameter. \n<p> This ignores the query-class configuration, and always attempts to format the string into a java.sql.Time using <code>Time.valueOf(String)</code>; if <code>convert-null</code> is true, then empty/blank/whitespace only values will be substituted by <code>System.currentTimeMillis()</code>. </p>",
      "inheritance" : [
        {
          "name" : "NamedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/NamedStatementParameter.html"
        },
        {
          "name" : "StatementParameterImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StatementParameterImpl.html"
        },
        {
          "name" : "TypedStatementParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/TypedStatementParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataValueBranchingService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.MetadataValueBranchingService",
      "className" : "MetadataValueBranchingService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "metadata-value-branching-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Perform a branch based on a match of a metadata value",
        "tag" : "service,branching"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Perform a branch based on a match of a metadata value\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class MetadataValueBranchingService\nextends MetadataBranchingServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Perform a branch based on a match of a metadata value\",\n                  tag=\"service,branching\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">MetadataValueBranchingService</span>\nextends <a href=\"MetadataBranchingServiceImp.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\">MetadataBranchingServiceImp</a>",
      "description" : "Implementation of Service which sets the unique ID of the next Service to apply based on values of AdaptrisMessage metadata. It concatenates the values stored against the keys in MetadataBranchingServiceImp.getMetadataKeys() and uses this String as a key to look up the Service to apply in getMetadataToServiceIdMappings(). In most use cases you would only configure a single metadata key to branch on rather than multiple keys.",
      "descriptionHtml" : "<p> Implementation of <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> which sets the unique ID of the next <code>Service</code> to apply based on values of <a href=\"../../AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> metadata. </p> \n<p> It concatenates the values stored against the keys in <a href=\"MetadataBranchingServiceImp.html#getMetadataKeys()\" target=\"_new\"><code>MetadataBranchingServiceImp.getMetadataKeys()</code></a> and uses this String as a key to look up the <a href=\"../../Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> to apply in <a href=\"#getMetadataToServiceIdMappings()\" target=\"_new\"><code>getMetadataToServiceIdMappings()</code></a>. In most use cases you would only configure a single metadata key to branch on rather than multiple keys. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "BranchingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/BranchingServiceImp.html"
        },
        {
          "name" : "MetadataBranchingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/MetadataBranchingServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.DummyMessageProducer",
      "className" : "DummyMessageProducer",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "producer",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DynamicSharedService.html",
      "fullClassName" : "com.adaptris.core.DynamicSharedService",
      "className" : "DynamicSharedService",
      "packageName" : "com.adaptris.core",
      "componentType" : "service",
      "alias" : "dynamic-shared-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A Service that refers to another Service configured elsewhere",
        "tag" : "service"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Service that refers to another Service configured elsewhere\",\n                  tag=\"service\")\npublic class DynamicSharedService\nextends SharedServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Service that refers to another Service configured elsewhere\",\n                  tag=\"service\")\npublic class <span class=\"typeNameLabel\">DynamicSharedService</span>\nextends <a href=\"SharedServiceImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">SharedServiceImpl</a>",
      "description" : "A Service instance that references a Service made available via SharedComponentList.getServices(). This differs from a normal SharedService in that it allows you to resolve the lookup name using InterlokMessage.resolve(String). This reference will then be looked up and used for processing. A small cache (currently 16 items) is used to avoid excessive lifecycle overhead for looked up services.",
      "descriptionHtml" : "<p> A Service instance that references a Service made available via <a href=\"SharedComponentList.html#getServices()\" target=\"_new\"><code>SharedComponentList.getServices()</code></a>. </p> \n<p> This differs from a normal <a href=\"SharedService.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>SharedService</code></a> in that it allows you to <code>resolve</code> the lookup name using <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/InterlokMessage.html?is-external=true#resolve(java.lang.String)\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>InterlokMessage.resolve(String)</code></a>. This reference will then be looked up and used for processing. A small cache (currently 16 items) is used to avoid excessive lifecycle overhead for looked up services. </p>",
      "inheritance" : [
        {
          "name" : "SharedComponent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedComponent.html"
        },
        {
          "name" : "SharedServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/SharedServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MimeAggregator.html",
      "fullClassName" : "com.adaptris.core.services.aggregator.MimeAggregator",
      "className" : "MimeAggregator",
      "packageName" : "com.adaptris.core.services.aggregator",
      "componentType" : "object",
      "alias" : "mime-aggregator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Aggregator implementation that creates a new mime part for each message that needs to be joined up",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Aggregator implementation that creates a new mime part for each message that needs to be joined up\")\npublic class MimeAggregator\nextends MessageAggregatorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Aggregator implementation that creates a new mime part for each message that needs to be joined up\")\npublic class <span class=\"typeNameLabel\">MimeAggregator</span>\nextends <a href=\"MessageAggregatorImpl.html\" title=\"class in com.adaptris.core.services.aggregator\" target=\"_new\">MessageAggregatorImpl</a>",
      "description" : "MessageAggregator implementation that creates a new mime part for each message that needs to be joined up. The pre-split message is always treated as the first part of the resulting multipart message; the payloads from the split messages form the second and subsequent parts. f an explicit Content-Id (expression or otherwise) has been specified then this will be resolved and used as that parts Content-ID otherwise the split message's unique-id will be used. If the same Content-ID is re-used for multiple split messages then results are undefined. The most likely situation is that parts will be lost and only one preserved. Note that the first part's Content-Id will always be the original messages unique-id. Also, if the original message was a Multipart message, then this will be added as a single part to the resulting multipart message (giving you a nested multipart as the first part). As a result of this join operation, the message will be marked as MIME encoded using CoreConstants.MSG_MIME_ENCODED metadata.",
      "descriptionHtml" : "<a href=\"MessageAggregator.html\" title=\"interface in com.adaptris.core.services.aggregator\" target=\"_new\"><code>MessageAggregator</code></a> implementation that creates a new mime part for each message that needs to be joined up. \n<p> The pre-split message is always treated as the first part of the resulting multipart message; the payloads from the split messages form the second and subsequent parts. f an explicit Content-Id (expression or otherwise) has been specified then this will be resolved and used as that parts <code>Content-ID</code> otherwise the split message's unique-id will be used. If the same <code>Content-ID</code> is re-used for multiple split messages then results are undefined. The most likely situation is that parts will be lost and only one preserved. </p> \n<p> Note that the first part's <code>Content-Id</code> will always be the original messages unique-id. Also, if the original message was a Multipart message, then this will be added as a single part to the resulting multipart message (giving you a nested multipart as the first part). </p> \n<p> As a result of this join operation, the message will be marked as MIME encoded using <a href=\"../../CoreConstants.html#MSG_MIME_ENCODED\" target=\"_new\"><code>CoreConstants.MSG_MIME_ENCODED</code></a> metadata. </p>",
      "inheritance" : [
        {
          "name" : "MessageAggregatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/aggregator/MessageAggregatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/async/XAJmsConsumerAsync.html",
      "fullClassName" : "com.adaptris.xa.jms.async.XAJmsConsumerAsync",
      "className" : "XAJmsConsumerAsync",
      "packageName" : "com.adaptris.xa.jms.async",
      "componentType" : "consumer",
      "alias" : "xa-jms-consumer-async",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-atomikos.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.xa.jms.XAJmsConnection"
        ],
        "since" : "",
        "summary" : "Listen for JMS messages on the specified queue or topic, with XA transactions.",
        "tag" : "consumer,jms,xa,async"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue or topic, with XA transactions.\",\n                  tag=\"consumer,jms,xa,async\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class XAJmsConsumerAsync\nextends XAJmsConsumer\nimplements AsyncConsumerAware",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for JMS messages on the specified queue or topic, with XA transactions.\",\n                  tag=\"consumer,jms,xa,async\",\n                  recommended=com.adaptris.xa.jms.XAJmsConnection.class)\npublic class <span class=\"typeNameLabel\">XAJmsConsumerAsync</span>\nextends <a href=\"../XAJmsConsumer.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\">XAJmsConsumer</a>\nimplements <a href=\"AsyncConsumerAware.html\" title=\"interface in com.adaptris.xa.jms.async\" target=\"_new\">AsyncConsumerAware</a>",
      "description" : "A JMS consumer that extends the base functionality of the XAJmsConsumer This differs from the standard XAJmsConsumer by providing support for JMS 2.0 asynchronous callbacks. This consumer is designed to work with the XAWorkflowAsync and the XAJmsProducerAsync. The async producer will send messages to your JMS endpoint but will not wait for the acknowledgement before continuing. At some point in the future this JMS consumer will receive an notification for each produced message, indicating if the message has indeed been acknowledged or not. Once we have consumed/processed the max-batch number of messages, we will then wait for all successful notifications before committing the transaction. Should any of the notifications come back as an error, we will rollback the entire transaction. Additionally if we wait longer than the configured max-wait-for-batch-callbacks before receiving all successful notifications, then again the entire transaction is rolled back.",
      "descriptionHtml" : "A JMS consumer that extends the base functionality of the \n<a href=\"../XAJmsConsumer.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\"><code>XAJmsConsumer</code></a> \n<p> This differs from the standard <a href=\"../XAJmsConsumer.html\" title=\"class in com.adaptris.xa.jms\" target=\"_new\"><code>XAJmsConsumer</code></a> by providing support for JMS 2.0 asynchronous callbacks. </p> This consumer is designed to work with the \n<a href=\"XAWorkflowAsync.html\" title=\"class in com.adaptris.xa.jms.async\" target=\"_new\"><code>XAWorkflowAsync</code></a> and the \n<a href=\"XAJmsProducerAsync.html\" title=\"class in com.adaptris.xa.jms.async\" target=\"_new\"><code>XAJmsProducerAsync</code></a>. \n<p></p> \n<p> The async producer will send messages to your JMS endpoint but will not wait for the acknowledgement before continuing. At some point in the future this JMS consumer will receive an notification for each produced message, indicating if the message has indeed been acknowledged or not. </p> \n<p> Once we have consumed/processed the max-batch number of messages, we will then wait for all successful notifications before committing the transaction. Should any of the notifications come back as an error, we will rollback the entire transaction. Additionally if we wait longer than the configured max-wait-for-batch-callbacks before receiving all successful notifications, then again the entire transaction is rolled back. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "XAJmsConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsConsumerImpl.html"
        },
        {
          "name" : "XAJmsConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-atomikos/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJmsConsumer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Atomikos",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-atomikos",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonArrayToJsonLines.html",
      "fullClassName" : "com.adaptris.core.transform.json.JsonArrayToJsonLines",
      "className" : "JsonArrayToJsonLines",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "service",
      "alias" : "json-array-to-lines-transform",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Transform from a JSON Array to JSON lines",
        "tag" : "json,transform"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform from a JSON Array to JSON lines\",\n                  tag=\"json,transform\",\n                  since=\"3.11.1\")\npublic class JsonArrayToJsonLines\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform from a JSON Array to JSON lines\",\n                  tag=\"json,transform\",\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">JsonArrayToJsonLines</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Transform from a JSON Array to JSON lines.",
      "descriptionHtml" : "Transform from a JSON Array to JSON lines.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/DoubleValueConverter.html",
      "fullClassName" : "com.adaptris.core.mongodb.DoubleValueConverter",
      "className" : "DoubleValueConverter",
      "packageName" : "com.adaptris.core.mongodb",
      "componentType" : "object",
      "alias" : "mongodb-double-value-converter",
      "deprecated" : false,
      "jarFileName" : "interlok-mongodb.jar",
      "profile" : { },
      "annotationDetails" : "public class DoubleValueConverter\nextends ValueConverter<java.lang.Double>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DoubleValueConverter</span>\nextends <a href=\"ValueConverter.html\" title=\"class in com.adaptris.core.mongodb\" target=\"_new\">ValueConverter</a>&lt;java.lang.Double&gt;",
      "inheritance" : [
        {
          "name" : "ValueConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mongodb/4.0.0B1-RELEASE/com/adaptris/core/mongodb/ValueConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/MongoDB",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mongodb",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-jms/4.0.0B1-RELEASE/com/adaptris/xa/jms/exception/XAActiveJmsConnectionErrorHandler.html",
      "fullClassName" : "com.adaptris.xa.jms.exception.XAActiveJmsConnectionErrorHandler",
      "className" : "XAActiveJmsConnectionErrorHandler",
      "packageName" : "com.adaptris.xa.jms.exception",
      "componentType" : "object",
      "alias" : "xa-active-jms-connection-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-jms.jar",
      "profile" : { },
      "annotationDetails" : "public class XAActiveJmsConnectionErrorHandler\nextends ConnectionErrorHandlerImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XAActiveJmsConnectionErrorHandler</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ConnectionErrorHandlerImp</a>",
      "inheritance" : [
        {
          "name" : "ConnectionErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ConnectionErrorHandlerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-jms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-cassandra/4.0.0B1-RELEASE/com/adaptris/core/cassandra/params/CachedStatementPrimer.html",
      "fullClassName" : "com.adaptris.core.cassandra.params.CachedStatementPrimer",
      "className" : "CachedStatementPrimer",
      "packageName" : "com.adaptris.core.cassandra.params",
      "componentType" : "object",
      "alias" : "cached-statement-primer",
      "deprecated" : false,
      "jarFileName" : "interlok-cassandra.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Cache a number of CQL statements",
        "tag" : "cassandra,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Cache a number of CQL statements\",\n                  tag=\"cassandra,cache\")\npublic class CachedStatementPrimer\nextends java.lang.Object\nimplements StatementPrimer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Cache a number of CQL statements\",\n                  tag=\"cassandra,cache\")\npublic class <span class=\"typeNameLabel\">CachedStatementPrimer</span>\nextends java.lang.Object\nimplements <a href=\"StatementPrimer.html\" title=\"interface in com.adaptris.core.cassandra.params\" target=\"_new\">StatementPrimer</a>",
      "description" : "This StatementPrimer will cache a number of CQL statements, therefore not needing to prepare a statement that has already been prepared. Use this StatementPrimer when you know you will execute identical statements over and over. Finally you can configure the number of cached statements (the default being 50) by configuring the \"cache-limit\";  \n <cached-statement-primer>\n   <cache-limit>50</cache-limit>\n </cached-statement-primer>",
      "descriptionHtml" : "<p> This <a href=\"StatementPrimer.html\" title=\"interface in com.adaptris.core.cassandra.params\" target=\"_new\"><code>StatementPrimer</code></a> will cache a number of CQL statements, therefore not needing to prepare a statement that has already been prepared. </p> \n<p> Use this StatementPrimer when you know you will execute identical statements over and over. </p> \n<p> Finally you can configure the number of cached statements (the default being 50) by configuring the \"cache-limit\"; </p>\n<pre> <code>\n &lt;cached-statement-primer&gt;\n   &lt;cache-limit&gt;50&lt;/cache-limit&gt;\n &lt;/cached-statement-primer&gt;\n </code>\n </pre> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Cassandra",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-cassandra",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/PerHostConfigBuilder.html",
      "fullClassName" : "com.adaptris.sftp.PerHostConfigBuilder",
      "className" : "PerHostConfigBuilder",
      "packageName" : "com.adaptris.sftp",
      "componentType" : "object",
      "alias" : "sftp-per-host-config-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class PerHostConfigBuilder\nextends ConfigBuilderImpl\nimplements com.jcraft.jsch.ConfigRepository",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">PerHostConfigBuilder</span>\nextends <a href=\"ConfigBuilderImpl.html\" title=\"class in com.adaptris.sftp\" target=\"_new\">ConfigBuilderImpl</a>\nimplements com.jcraft.jsch.ConfigRepository",
      "description" : "A statically configured SSH ConfigRepository that supports different configuration on a per host basis. If a host is not configured then we build default configuration from getDefaultConfiguration()",
      "descriptionHtml" : "A statically configured SSH \n<code>ConfigRepository</code> that supports different configuration on a per host basis. \n<p> If a host is not configured then we build default configuration from <a href=\"#getDefaultConfiguration()\" target=\"_new\"><code>getDefaultConfiguration()</code></a> </p>",
      "inheritance" : [
        {
          "name" : "ConfigBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/ConfigBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/event/AdapterShutdownEvent.html",
      "fullClassName" : "com.adaptris.core.event.AdapterShutdownEvent",
      "className" : "AdapterShutdownEvent",
      "packageName" : "com.adaptris.core.event",
      "componentType" : "object",
      "alias" : "adapter-shutdown-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AdapterShutdownEvent\nextends AdapterLifecycleEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdapterShutdownEvent</span>\nextends <a href=\"../AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdapterLifecycleEvent</a>",
      "description" : "AdapterLifecycleEvent indicating that ShutdownHandler has been invoked.",
      "descriptionHtml" : "<p> <code>AdapterLifecycleEvent</code> indicating that <code>ShutdownHandler</code> has been invoked. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/XpathToTable.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.params.XpathToTable",
      "className" : "XpathToTable",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.params",
      "componentType" : "object",
      "alias" : "sapjco3-xpath-to-table",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathToTable\nextends Parameter\nimplements ImportParameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathToTable</span>\nextends <a href=\"Parameter.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.params\" target=\"_new\">Parameter</a>\nimplements <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ImportParameter</a>",
      "description" : "Allows the use of an XPath which is resolved from the payload to be used as an Import paramter for an RFC Call.",
      "descriptionHtml" : "Allows the use of an XPath which is resolved from the payload to be used as an Import paramter for an RFC Call.",
      "inheritance" : [
        {
          "name" : "Parameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/params/Parameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/fs/ProcessedItemList.html",
      "fullClassName" : "com.adaptris.core.fs.ProcessedItemList",
      "className" : "ProcessedItemList",
      "packageName" : "com.adaptris.core.fs",
      "componentType" : "object",
      "alias" : "processed-item-list",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ProcessedItemList\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ProcessedItemList</span>\nextends java.lang.Object",
      "description" : "Used by MarshallingItemCache to persist ProcessedItem entries to disk.",
      "descriptionHtml" : "Used by \n<a href=\"MarshallingItemCache.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\"><code>MarshallingItemCache</code></a> to persist \n<a href=\"ProcessedItem.html\" title=\"class in com.adaptris.core.fs\" target=\"_new\"><code>ProcessedItem</code></a> entries to disk.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/sftp/NoProxy.html",
      "fullClassName" : "com.adaptris.sftp.NoProxy",
      "className" : "NoProxy",
      "packageName" : "com.adaptris.sftp",
      "componentType" : "object",
      "alias" : "sftp-no-proxy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NoProxy\nextends java.lang.Object\nimplements ProxyBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoProxy</span>\nextends java.lang.Object\nimplements <a href=\"ProxyBuilder.html\" title=\"interface in com.adaptris.sftp\" target=\"_new\">ProxyBuilder</a>",
      "description" : "No Proxy connection.",
      "descriptionHtml" : "No Proxy connection.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcConnection.html",
      "fullClassName" : "com.adaptris.core.jdbc.JdbcConnection",
      "className" : "JdbcConnection",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "connection",
      "alias" : "jdbc-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to a database using a JDBC driver",
        "tag" : "connections,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to a database using a JDBC driver\",\n                  tag=\"connections,jdbc\")\npublic class JdbcConnection\nextends DatabaseConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to a database using a JDBC driver\",\n                  tag=\"connections,jdbc\")\npublic class <span class=\"typeNameLabel\">JdbcConnection</span>\nextends <a href=\"DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">DatabaseConnection</a>",
      "description" : "Implementation of AdaptrisConnectionImp for JDBC.",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisConnectionImp</code> for JDBC. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        },
        {
          "name" : "AllowsRetriesConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AllowsRetriesConnection.html"
        },
        {
          "name" : "DatabaseConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/DatabaseConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ExistsInCache.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.ExistsInCache",
      "className" : "ExistsInCache",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "exists-in-cache",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.9.1",
        "summary" : "Check the cache for a key",
        "tag" : "condition,cache"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Check the cache for a key\",\n                  tag=\"condition,cache\",\n                  since=\"3.9.1\",\n                  recommended=CacheConnection.class)\npublic class ExistsInCache\nextends java.lang.Object\nimplements Condition",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Check the cache for a key\",\n                  tag=\"condition,cache\",\n                  since=\"3.9.1\",\n                  recommended=<a href=\"../../cache/CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>)\npublic class <span class=\"typeNameLabel\">ExistsInCache</span>\nextends java.lang.Object\nimplements <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">Condition</a>",
      "description" : "Condition that checks whether a key exists in a Cache",
      "descriptionHtml" : "Condition that checks whether a key exists in a \n<a href=\"../../../cache/Cache.html\" title=\"interface in com.adaptris.core.cache\" target=\"_new\"><code>Cache</code></a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/ExtendedXmlSchemaValidator.html",
      "fullClassName" : "com.adaptris.core.transform.schema.ExtendedXmlSchemaValidator",
      "className" : "ExtendedXmlSchemaValidator",
      "packageName" : "com.adaptris.core.transform.schema",
      "componentType" : "object",
      "alias" : "extended-xml-schema-validator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.services.cache.CacheConnection"
        ],
        "since" : "3.10.2",
        "summary" : "Validate an XML document against a schema with pluggable behaviour",
        "tag" : "xml,schema"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Validate an XML document against a schema with pluggable behaviour\",\n                  recommended=CacheConnection.class,\n                  since=\"3.10.2\",\n                  tag=\"xml,schema\")\npublic class ExtendedXmlSchemaValidator\nextends BasicXmlSchemaValidator",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Validate an XML document against a schema with pluggable behaviour\",\n                  recommended=<a href=\"../../services/cache/CacheConnection.html\" title=\"class in com.adaptris.core.services.cache\" target=\"_new\">CacheConnection.class</a>,\n                  since=\"3.10.2\",\n                  tag=\"xml,schema\")\npublic class <span class=\"typeNameLabel\">ExtendedXmlSchemaValidator</span>\nextends <a href=\"BasicXmlSchemaValidator.html\" title=\"class in com.adaptris.core.transform.schema\" target=\"_new\">BasicXmlSchemaValidator</a>",
      "description" : "Used with XmlValidationService to validate an XML message against a schema. This differs from BasicXmlSchemaValidator since it allows you to configure pluggable behaviours when a validation error is encountered; if you want schema validation to fail processing, then keep using BasicXmlSchemaValidator as normal. This validates an input XML document against a schema. After first use, it caches the schema for re-use against the URL that was resolved as an expression or from static configuration. This means that until first use, no attempt is made to access the schema URL.",
      "descriptionHtml" : "Used with \n<a href=\"../XmlValidationService.html\" title=\"class in com.adaptris.core.transform\" target=\"_new\"><code>XmlValidationService</code></a> to validate an XML message against a schema. \n<p> This differs from <a href=\"BasicXmlSchemaValidator.html\" title=\"class in com.adaptris.core.transform.schema\" target=\"_new\"><code>BasicXmlSchemaValidator</code></a> since it allows you to configure pluggable behaviours when a validation error is encountered; if you want schema validation to fail processing, then keep using <a href=\"BasicXmlSchemaValidator.html\" title=\"class in com.adaptris.core.transform.schema\" target=\"_new\"><code>BasicXmlSchemaValidator</code></a> as normal. </p> \n<p> This validates an input XML document against a schema. After first use, it caches the schema for re-use against the URL that was resolved as an expression or from static configuration. This means that until first use, no attempt is made to access the schema URL. </p>",
      "inheritance" : [
        {
          "name" : "MessageValidatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/MessageValidatorImpl.html"
        },
        {
          "name" : "XmlSchemaValidatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/XmlSchemaValidatorImpl.html"
        },
        {
          "name" : "BasicXmlSchemaValidator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/transform/schema/BasicXmlSchemaValidator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.interlok.junit.scaffolding.jms.MockJmsConnectionErrorHandler",
      "className" : "MockJmsConnectionErrorHandler",
      "packageName" : "com.adaptris.interlok.junit.scaffolding.jms",
      "componentType" : "object",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ftp/FtpProducer.html",
      "fullClassName" : "com.adaptris.core.ftp.FtpProducer",
      "className" : "FtpProducer",
      "packageName" : "com.adaptris.core.ftp",
      "componentType" : "producer",
      "alias" : "ftp-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.ftp.FileTransferConnection"
        ],
        "since" : "",
        "summary" : "Put a file on a FTP/SFTP server; uses PUT, RNFR and RNTO for atomicity",
        "tag" : "producer,ftp,ftps,sftp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Put a file on a FTP/SFTP server; uses PUT, RNFR and RNTO for atomicity\",\n                  tag=\"producer,ftp,ftps,sftp\",\n                  recommended=FileTransferConnection.class)\npublic class FtpProducer\nextends ProduceOnlyProducerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Put a file on a FTP/SFTP server; uses PUT, RNFR and RNTO for atomicity\",\n                  tag=\"producer,ftp,ftps,sftp\",\n                  recommended=<a href=\"FileTransferConnection.html\" title=\"class in com.adaptris.core.ftp\" target=\"_new\">FileTransferConnection.class</a>)\npublic class <span class=\"typeNameLabel\">FtpProducer</span>\nextends <a href=\"../ProduceOnlyProducerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ProduceOnlyProducerImp</a>",
      "description" : "Ftp implementation of the AdaptrisMessageProducer interface. The connection type for this implementation should always be a concrete subclass of FileTransferConnection such as FtpConnection or SftpConnection The destination returned by the getFtpEndpoint() should be in the URL form dictated by the FileTransferConnection flavour or simply the IP Address / DNS name of the FTP/SFTP Server. If the URL form is used, then it is possible to override the username, password, and port settings of the FTP server, in all other cases the configuration specified in the FileTransferConnection object will be used. The output filename is controlled using the standard FileNameCreator interface. The AdaptrisMessage object is first uploaded to the build-directory and subsequently renamed into the dest-directory. In most FTP Server implementations, the rename can be considered an atomic operation, so using this method reduces the liklehood of file read attempts during the upload.",
      "descriptionHtml" : "Ftp implementation of the AdaptrisMessageProducer interface. \n<p> The connection type for this implementation should always be a concrete subclass of <code>FileTransferConnection</code> such as <code>FtpConnection</code> or <code>SftpConnection</code> </p> \n<p> The destination returned by the <a href=\"#getFtpEndpoint()\" target=\"_new\"><code>getFtpEndpoint()</code></a> should be in the URL form dictated by the <code>FileTransferConnection</code> flavour or simply the IP Address / DNS name of the FTP/SFTP Server. If the URL form is used, then it is possible to override the username, password, and port settings of the FTP server, in all other cases the configuration specified in the <code>FileTransferConnection</code> object will be used. </p> \n<p> The output filename is controlled using the standard FileNameCreator interface. The AdaptrisMessage object is first uploaded to the build-directory and subsequently renamed into the dest-directory. In most FTP Server implementations, the rename can be considered an atomic operation, so using this method reduces the liklehood of file read attempts during the upload. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/LoggingContextWorkflowInterceptor.html",
      "fullClassName" : "com.adaptris.core.interceptor.LoggingContextWorkflowInterceptor",
      "className" : "LoggingContextWorkflowInterceptor",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "logging-context-workflow-interceptor",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that adds Logging Context at the start of a workflow, removes it at the end",
        "tag" : "interceptor"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that adds Logging Context at the start of a workflow, removes it at the end\",\n                  tag=\"interceptor\")\npublic class LoggingContextWorkflowInterceptor\nextends WorkflowInterceptorImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that adds Logging Context at the start of a workflow, removes it at the end\",\n                  tag=\"interceptor\")\npublic class <span class=\"typeNameLabel\">LoggingContextWorkflowInterceptor</span>\nextends <a href=\"WorkflowInterceptorImpl.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">WorkflowInterceptorImpl</a>",
      "description" : "WorkflowInterceptor implementation that adds a mapped diagnostic context via org.slf4j.MDC#put(String, String). An alternative to this interceptor might be AddLoggingContext and RemoveLoggingContext as part of the service execution chain.",
      "descriptionHtml" : "WorkflowInterceptor implementation that adds a mapped diagnostic context via \n<code>org.slf4j.MDC#put(String, String)</code>. \n<p> An alternative to this interceptor might be <a href=\"../services/AddLoggingContext.html\" title=\"class in com.adaptris.core.services\" target=\"_new\"><code>AddLoggingContext</code></a> and <a href=\"../services/RemoveLoggingContext.html\" title=\"class in com.adaptris.core.services\" target=\"_new\"><code>RemoveLoggingContext</code></a> as part of the service execution chain. </p>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-as400/4.0.0B1-RELEASE/com/adaptris/as400/AS400CommandProducer.html",
      "fullClassName" : "com.adaptris.as400.AS400CommandProducer",
      "className" : "AS400CommandProducer",
      "packageName" : "com.adaptris.as400",
      "componentType" : "producer",
      "alias" : "as400-command-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-as400.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A producer that executes a command on an AS400 system.",
        "tag" : "producer,as400"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A producer that executes a command on an AS400 system.\",\n                  tag=\"producer,as400\")\npublic class AS400CommandProducer\nextends ProduceOnlyProducerImp\nimplements LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A producer that executes a command on an AS400 system.\",\n                  tag=\"producer,as400\")\npublic class <span class=\"typeNameLabel\">AS400CommandProducer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ProduceOnlyProducerImp</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "A producer that will execute a configured command on an AS400 system returning the results. Each command you want to execute may require parameters, in which case you can configure \"inputs\"; one of the CommandParameter implementations for each parameter. The results of each invocation are not returned, but may be logged if you set \"log-command-output = true\".",
      "descriptionHtml" : "<p> A producer that will execute a configured command on an AS400 system returning the results. </p> \n<p> Each command you want to execute may require parameters, in which case you can configure \"inputs\"; one of the <a href=\"params/CommandParameter.html\" title=\"class in com.adaptris.as400.params\" target=\"_new\"><code>CommandParameter</code></a> implementations for each parameter. </p> \n<p> The results of each invocation are not returned, but may be logged if you set \"log-command-output = true\". </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "ProduceOnlyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ProduceOnlyProducerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok OS/AS400",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-as400",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-sns/4.0.0B1-RELEASE/com/adaptris/aws/sns/AmazonSNSConnection.html",
      "fullClassName" : "com.adaptris.aws.sns.AmazonSNSConnection",
      "className" : "AmazonSNSConnection",
      "packageName" : "com.adaptris.aws.sns",
      "componentType" : "connection",
      "alias" : "amazon-sns-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-sns.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.sns.NotificationProducer"
        ],
        "since" : "",
        "summary" : "Connection for supporting connectivity to Amazon SNS",
        "tag" : "connections,amazon,sns"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection for supporting connectivity to Amazon SNS\",\n                  tag=\"connections,amazon,sns\",\n                  recommended=NotificationProducer.class)\npublic class AmazonSNSConnection\nextends com.adaptris.aws.AWSConnection",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection for supporting connectivity to Amazon SNS\",\n                  tag=\"connections,amazon,sns\",\n                  recommended=<a href=\"NotificationProducer.html\" title=\"class in com.adaptris.aws.sns\" target=\"_new\">NotificationProducer.class</a>)\npublic class <span class=\"typeNameLabel\">AmazonSNSConnection</span>\nextends com.adaptris.aws.AWSConnection",
      "description" : "AdaptrisConnection implementation for Amazon SNS. This class directly exposes almost all the getter and setters that are available in ClientConfiguration via the AWSConnection.getClientConfiguration() property for maximum flexibility in configuration. The key from the client-configuration element should match the name of the underlying ClientConfiguration property; so if you wanted to control the user-agent you would do :  \n   <client-configuration>\n     <key-value-pair>\n        <key>UserAgent</key>\n        <value>My User Agent</value>\n     </key-value-pair>\n   </client-configuration>",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisConnection</a> implementation for Amazon SNS. \n<p> This class directly exposes almost all the getter and setters that are available in <code>ClientConfiguration</code> via the <code>AWSConnection.getClientConfiguration()</code> property for maximum flexibility in configuration. </p> \n<p> The key from the <code>client-configuration</code> element should match the name of the underlying ClientConfiguration property; so if you wanted to control the user-agent you would do : </p> \n<pre> <code>\n   &lt;client-configuration&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;UserAgent&lt;/key&gt;\n        &lt;value&gt;My User Agent&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/client-configuration&gt;\n </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/SNS",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-sns",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/runtime/NullMessageErrorDigester.html",
      "fullClassName" : "com.adaptris.core.runtime.NullMessageErrorDigester",
      "className" : "NullMessageErrorDigester",
      "packageName" : "com.adaptris.core.runtime",
      "componentType" : "object",
      "alias" : "null-message-error-digester",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "A NO-OP message error digester",
        "tag" : "error-handling,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A NO-OP message error digester\",\n                  tag=\"error-handling,base\")\npublic class NullMessageErrorDigester\nextends MessageErrorDigesterImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A NO-OP message error digester\",\n                  tag=\"error-handling,base\")\npublic class <span class=\"typeNameLabel\">NullMessageErrorDigester</span>\nextends <a href=\"MessageErrorDigesterImp.html\" title=\"class in com.adaptris.core.runtime\" target=\"_new\">MessageErrorDigesterImp</a>",
      "description" : "Default null implementation of MessageErrorDigester.",
      "descriptionHtml" : "Default null implementation of \n<a href=\"MessageErrorDigester.html\" title=\"interface in com.adaptris.core.runtime\" target=\"_new\"><code>MessageErrorDigester</code></a>.",
      "inheritance" : [
        {
          "name" : "MessageErrorDigesterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/runtime/MessageErrorDigesterImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileDataOutputParameter.html",
      "fullClassName" : "com.adaptris.core.common.FileDataOutputParameter",
      "className" : "FileDataOutputParameter",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "file-data-output-parameter",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class FileDataOutputParameter\nextends FileParameter\nimplements DataOutputParameter<java.lang.String>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">FileDataOutputParameter</span>\nextends <a href=\"FileParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">FileParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/config/DataOutputParameter.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.config\" class=\"externalLink\" target=\"_new\">DataOutputParameter</a>&lt;java.lang.String&gt;",
      "description" : "DataInputParameter implementation that writes to a file.",
      "descriptionHtml" : "<code>DataInputParameter</code> implementation that writes to a file.",
      "inheritance" : [
        {
          "name" : "FileParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jms/solace/parameters/SendFlags.html",
      "fullClassName" : "com.adaptris.core.jms.solace.parameters.SendFlags",
      "className" : "SendFlags",
      "packageName" : "com.adaptris.core.jms.solace.parameters",
      "componentType" : "object",
      "alias" : "solace-send-flags",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : { },
      "annotationDetails" : "public class SendFlags\nextends java.lang.Object\nimplements Parameter",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SendFlags</span>\nextends java.lang.Object\nimplements <a href=\"Parameter.html\" title=\"interface in com.adaptris.core.jms.solace.parameters\" target=\"_new\">Parameter</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/TimedInactivityProducerSessionFactory.html",
      "fullClassName" : "com.adaptris.core.jms.TimedInactivityProducerSessionFactory",
      "className" : "TimedInactivityProducerSessionFactory",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-timed-inactivity-producer-session",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class TimedInactivityProducerSessionFactory\nextends ProducerSessionFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimedInactivityProducerSessionFactory</span>\nextends <a href=\"ProducerSessionFactoryImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">ProducerSessionFactoryImpl</a>",
      "description" : "Implementation of ProducerSessionFactory that creates a new session/producer based an inactivity timer. This implementaton refreshes the session based on some on the specified interval between the last message and the current message",
      "descriptionHtml" : "Implementation of \n<a href=\"ProducerSessionFactory.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>ProducerSessionFactory</code></a> that creates a new session/producer based an inactivity timer. \n<p> This implementaton refreshes the session based on some on the specified interval between the last message and the current message </p>",
      "inheritance" : [
        {
          "name" : "ProducerSessionFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ProducerSessionFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/jetty/EmbeddedConnection.html",
      "fullClassName" : "com.adaptris.core.http.jetty.EmbeddedConnection",
      "className" : "EmbeddedConnection",
      "packageName" : "com.adaptris.core.http.jetty",
      "componentType" : "connection",
      "alias" : "jetty-embedded-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connection that uses the embedded Jetty engine management component for requests",
        "tag" : "connections,http,https,jetty"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connection that uses the embedded Jetty engine management component for requests\",\n                  tag=\"connections,http,https,jetty\")\npublic class EmbeddedConnection\nextends AdaptrisConnectionImp\nimplements JettyServletRegistrar",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connection that uses the embedded Jetty engine management component for requests\",\n                  tag=\"connections,http,https,jetty\")\npublic class <span class=\"typeNameLabel\">EmbeddedConnection</span>\nextends <a href=\"../../AdaptrisConnectionImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdaptrisConnectionImp</a>\nimplements <a href=\"JettyServletRegistrar.html\" title=\"interface in com.adaptris.core.http.jetty\" target=\"_new\">JettyServletRegistrar</a>",
      "description" : "The EmbeddedConnection makes use of the existing Jetty Engine that has been enabled as part of the bootstrap process. This is designed to be a replacement for HttpConnection and HttpsConnection and allows you to configure a single jetty instance according to your requirements which can be re-used across many channels. Of course if you have not enabled a global jetty instance, then exceptions will be thrown if you attempt to configure an instance of this class. If you use this connection; you may have to delete ROOT.war from the jetty webapps directory. The default servlet that is registered with the default web application might interfere with the registering of servlets against arbitrary locations; if you get HTTP 404 errors, then enable logging for the org.eclipse.jetty category and check how the request is routed by the Jetty engine.",
      "descriptionHtml" : "The EmbeddedConnection makes use of the existing Jetty Engine that has been enabled as part of the bootstrap process. \n<p> This is designed to be a replacement for <a href=\"HttpConnection.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\"><code>HttpConnection</code></a> and <a href=\"HttpsConnection.html\" title=\"class in com.adaptris.core.http.jetty\" target=\"_new\"><code>HttpsConnection</code></a> and allows you to configure a single jetty instance according to your requirements which can be re-used across many channels. Of course if you have not enabled a global jetty instance, then exceptions will be thrown if you attempt to configure an instance of this class. </p> \n<p> If you use this connection; you may have to delete <code>ROOT.war</code> from the jetty webapps directory. The default servlet that is registered with the default web application might interfere with the registering of servlets against arbitrary locations; if you get HTTP 404 errors, then enable logging for the <code>org.eclipse.jetty</code> category and check how the request is routed by the Jetty engine. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/XpathDocumentCopier.html",
      "fullClassName" : "com.adaptris.core.services.splitter.XpathDocumentCopier",
      "className" : "XpathDocumentCopier",
      "packageName" : "com.adaptris.core.services.splitter",
      "componentType" : "object",
      "alias" : "xpath-document-copier",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XpathDocumentCopier\nextends MessageCopier",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XpathDocumentCopier</span>\nextends <a href=\"MessageCopier.html\" title=\"class in com.adaptris.core.services.splitter\" target=\"_new\">MessageCopier</a>",
      "description" : "Implementation of MessageSplitter which creates multiple instances of the same XML document based on an XPath. The split messages will always contain the entire document, the XPath evaluation simply provides information on how many documents to produce and should always return an integer. Given the following input document  \n <envelope>\n   <document>one</document>\n   <document>two</document>\n   <document>three</document>\n </envelope>\n \n You could use the xpath count(/envelope/document) to split into 3 documents; each of which contains the whole XML document. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "<p> Implementation of <a href=\"MessageSplitter.html\" title=\"interface in com.adaptris.core.services.splitter\" target=\"_new\"><code>MessageSplitter</code></a> which creates multiple instances of the same XML document based on an XPath. </p>\n<p> The split messages will always contain the entire document, the XPath evaluation simply provides information on how many documents to produce and should always return an integer. </p> \n<p> Given the following input document<br> </p>\n<pre> <code>\n &lt;envelope&gt;\n   &lt;document&gt;one&lt;/document&gt;\n   &lt;document&gt;two&lt;/document&gt;\n   &lt;document&gt;three&lt;/document&gt;\n &lt;/envelope&gt;\n </code>\n </pre> \n<p></p> You could use the xpath \n<code>count(/envelope/document)</code> to split into 3 documents; each of which contains the whole XML document. \n<p></p> \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "MessageSplitterImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageSplitterImp.html"
        },
        {
          "name" : "MessageCopier",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/splitter/MessageCopier.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/dynamic/DynamicBapiProducer.html",
      "fullClassName" : "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicBapiProducer",
      "className" : "DynamicBapiProducer",
      "packageName" : "com.adaptris.core.sap.jco3.rfc.dynamic",
      "componentType" : "producer",
      "alias" : "sapjco3-dynamic-bapi-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-sap.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.sap.jco3.rfc.ConfiguredRfcConnection",
          "com.adaptris.core.sap.jco3.rfc.dynamic.DynamicRfcConnection"
        ],
        "since" : "",
        "summary" : "Execute a SAP BAPI where the BAPI is dynamically inferred from the Document",
        "tag" : "producer,sap,bapi"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute a SAP BAPI where the BAPI is dynamically inferred from the Document\",\n                  tag=\"producer,sap,bapi\",\n                  recommended={ConfiguredRfcConnection.class,DynamicRfcConnection.class})\npublic final class DynamicBapiProducer\nextends DynamicProducer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute a SAP BAPI where the BAPI is dynamically inferred from the Document\",\n                  tag=\"producer,sap,bapi\",\n                  recommended={<a href=\"../ConfiguredRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc\" target=\"_new\">ConfiguredRfcConnection.class</a>,<a href=\"DynamicRfcConnection.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">DynamicRfcConnection.class</a>})\npublic final class <span class=\"typeNameLabel\">DynamicBapiProducer</span>\nextends <a href=\"DynamicProducer.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\">DynamicProducer</a>",
      "description" : "Implementation of AdaptrisMessageProducer based on SAP JCO3 libraries. In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. The input file for this producer should be the one generated by BapiXmlGenerator which creates a sample XML document for the given BAPI. If you map your input file to the associated generated sample, then this producer instance can be used to dynamically execute the RFC without having to explicitly configure any ExportParameter or ImportParameter instances. This producer type extends DynamicRfcProducer and provides the additional functionality: If configured, the BapiReturnParser will be used to automatically handle the RETURN export parameter, so there is no requirement to explicitly configure one.",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageProducer</code> based on SAP JCO3 libraries. </p> \n<p> In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. </p> \n<p> In order to use this producer you will have previously downloaded, installed and configured SAP Java Connector. The jar files should be copied into the adapter's lib directory, but any native libraries should be configured as per the SAP Java Connector documentation. </p> \n<p> The input file for this producer should be the one generated by <a href=\"BapiXmlGenerator.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\"><code>BapiXmlGenerator</code></a> which creates a sample XML document for the given BAPI. If you map your input file to the associated generated sample, then this producer instance can be used to dynamically execute the RFC without having to explicitly configure any <a href=\"../ExportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\"><code>ExportParameter</code></a> or <a href=\"../ImportParameter.html\" title=\"interface in com.adaptris.core.sap.jco3.rfc\" target=\"_new\"><code>ImportParameter</code></a> instances. </p> This producer type extends \n<a href=\"DynamicRfcProducer.html\" title=\"class in com.adaptris.core.sap.jco3.rfc.dynamic\" target=\"_new\"><code>DynamicRfcProducer</code></a> and provides the additional functionality: \n<ul> \n <li>If configured, the BapiReturnParser will be used to automatically handle the <code>RETURN</code> export parameter, so there is no requirement to explicitly configure one.</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html?is-external=true"
        },
        {
          "name" : "RequestReplyProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerImp.html?is-external=true"
        },
        {
          "name" : "DynamicProducer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-sap/4.0.0B1-RELEASE/com/adaptris/core/sap/jco3/rfc/dynamic/DynamicProducer.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/SAP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-sap",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/NoOpRequestHeaders.html",
      "fullClassName" : "com.adaptris.core.http.apache.NoOpRequestHeaders",
      "className" : "NoOpRequestHeaders",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-no-request-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class NoOpRequestHeaders\nextends java.lang.Object\nimplements RequestHeaderProvider<org.apache.http.client.methods.HttpRequestBase>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NoOpRequestHeaders</span>\nextends java.lang.Object\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\">RequestHeaderProvider</a>&lt;org.apache.http.client.methods.HttpRequestBase&gt;",
      "description" : "Implementation of RequestHeaderProvider that adds no additional headers",
      "descriptionHtml" : "Implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/RequestHeaderProvider.html?is-external=true\" title=\"class or interface in com.adaptris.core.http.client\" class=\"externalLink\" target=\"_new\"><code>RequestHeaderProvider</code></a> that adds no additional headers",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-jms/4.0.0B1-RELEASE/com/adaptris/xa/jms/XAJndiImplementation.html",
      "fullClassName" : "com.adaptris.xa.jms.XAJndiImplementation",
      "className" : "XAJndiImplementation",
      "packageName" : "com.adaptris.xa.jms",
      "componentType" : "object",
      "alias" : "xa-jndi-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-jms.jar",
      "profile" : { },
      "annotationDetails" : "public class XAJndiImplementation\nextends BaseJndiImplementation\nimplements XAVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XAJndiImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/BaseJndiImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms.jndi\" class=\"externalLink\" target=\"_new\">BaseJndiImplementation</a>\nimplements <a href=\"XAVendorImplementation.html\" title=\"interface in com.adaptris.xa.jms\" target=\"_new\">XAVendorImplementation</a>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "BaseJndiImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/jndi/BaseJndiImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-jms",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MleMarker.html",
      "fullClassName" : "com.adaptris.core.MleMarker",
      "className" : "MleMarker",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "mle-marker",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MleMarker\nextends java.lang.Object\nimplements java.lang.Cloneable, java.io.Serializable",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MleMarker</span>\nextends java.lang.Object\nimplements java.lang.Cloneable, java.io.Serializable",
      "description" : "Records information about activities (generally Service implementations) performed on a AdaptrisMessage during a workflow.",
      "descriptionHtml" : "<p> Records information about activities (generally <a href=\"Service.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Service</code></a> implementations) performed on a <a href=\"AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> during a workflow. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/ProcessCredentialsBuilder.html",
      "fullClassName" : "com.adaptris.aws.ProcessCredentialsBuilder",
      "className" : "ProcessCredentialsBuilder",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-process-credentials-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Credentials provider that can load credentials from an external process",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Credentials provider that can load credentials from an external process\",\n                  since=\"3.9.2\")\npublic class ProcessCredentialsBuilder\nextends java.lang.Object\nimplements AWSCredentialsProviderBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Credentials provider that can load credentials from an external process\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">ProcessCredentialsBuilder</span>\nextends java.lang.Object\nimplements <a href=\"AWSCredentialsProviderBuilder.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">AWSCredentialsProviderBuilder</a>",
      "description" : "Credentials provider that can load credentials from an external process. See https://docs.aws.amazon.com/cli/latest/topic/config-vars.html#sourcing-credentials-from-external-processes for more information",
      "descriptionHtml" : "Credentials provider that can load credentials from an external process. \n<p> See https://docs.aws.amazon.com/cli/latest/topic/config-vars.html#sourcing-credentials-from-external-processes for more information </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileOutputMessageWrapper.html",
      "fullClassName" : "com.adaptris.core.common.FileOutputMessageWrapper",
      "className" : "FileOutputMessageWrapper",
      "packageName" : "com.adaptris.core.common",
      "componentType" : "object",
      "alias" : "file-output-message-wrapper",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "MessageWrapper implementation that wraps as an OutputStream",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MessageWrapper implementation that wraps as an OutputStream\",\n                  since=\"3.9.0\")\npublic class FileOutputMessageWrapper\nextends FileParameter\nimplements MessageWrapper<java.io.OutputStream>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MessageWrapper implementation that wraps as an OutputStream\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">FileOutputMessageWrapper</span>\nextends <a href=\"FileParameter.html\" title=\"class in com.adaptris.core.common\" target=\"_new\">FileParameter</a>\nimplements <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\">MessageWrapper</a>&lt;java.io.OutputStream&gt;",
      "description" : "MessageWrapper implementation that wraps an external file as an OutputStream.",
      "descriptionHtml" : "<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-common/4.0.0B1-RELEASE/com/adaptris/interlok/types/MessageWrapper.html?is-external=true\" title=\"class or interface in com.adaptris.interlok.types\" class=\"externalLink\" target=\"_new\"><code>MessageWrapper</code></a> implementation that wraps an external file as an \n<code>OutputStream</code>.",
      "inheritance" : [
        {
          "name" : "FileParameter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/common/FileParameter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/Upload.html",
      "fullClassName" : "com.adaptris.jclouds.blobstore.Upload",
      "className" : "Upload",
      "packageName" : "com.adaptris.jclouds.blobstore",
      "componentType" : "object",
      "alias" : "jclouds-blobstore-upload",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-blobstore.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Upload a blob",
        "tag" : "jclouds"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Upload a blob\",\n                  tag=\"jclouds\")\npublic class Upload\nextends OperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Upload a blob\",\n                  tag=\"jclouds\")\npublic class <span class=\"typeNameLabel\">Upload</span>\nextends <a href=\"OperationImpl.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\">OperationImpl</a>",
      "description" : "Upload an object.",
      "descriptionHtml" : "Upload an object.",
      "inheritance" : [
        {
          "name" : "ContainerOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/ContainerOperation.html"
        },
        {
          "name" : "OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/OperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Blobstore",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-blobstore",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/MetadataResponseHandlerFactory.html",
      "fullClassName" : "com.adaptris.core.http.apache.MetadataResponseHandlerFactory",
      "className" : "MetadataResponseHandlerFactory",
      "packageName" : "com.adaptris.core.http.apache",
      "componentType" : "object",
      "alias" : "apache-http-metadata-response-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-apache-http.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataResponseHandlerFactory\nextends ResponseHandlerFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataResponseHandlerFactory</span>\nextends <a href=\"ResponseHandlerFactoryImpl.html\" title=\"class in com.adaptris.core.http.apache\" target=\"_new\">ResponseHandlerFactoryImpl</a>",
      "description" : "Implementation ResponseHandlerFactory that writes the response to the named metadata key.",
      "descriptionHtml" : "Implementation \n<a href=\"ResponseHandlerFactory.html\" title=\"interface in com.adaptris.core.http.apache\" target=\"_new\"><code>ResponseHandlerFactory</code></a> that writes the response to the named metadata key.",
      "inheritance" : [
        {
          "name" : "ResponseHandlerFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-apache-http/4.0.0B1-RELEASE/com/adaptris/core/http/apache/ResponseHandlerFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok HTTP/Apache HTTP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-apache-http",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/HikariPoolBuilder.html",
      "fullClassName" : "com.adaptris.core.jdbc.HikariPoolBuilder",
      "className" : "HikariPoolBuilder",
      "packageName" : "com.adaptris.core.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-hikari-pool-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "Build a connection pool using HikariCP",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Build a connection pool using HikariCP\",\n                  since=\"3.9.2\")\npublic class HikariPoolBuilder\nextends java.lang.Object\nimplements ConnectionPoolBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Build a connection pool using HikariCP\",\n                  since=\"3.9.2\")\npublic class <span class=\"typeNameLabel\">HikariPoolBuilder</span>\nextends java.lang.Object\nimplements <a href=\"ConnectionPoolBuilder.html\" title=\"interface in com.adaptris.core.jdbc\" target=\"_new\">ConnectionPoolBuilder</a>",
      "description" : "Constructs a HikariCP connection pool for use with PluggableJdbcPooledConnection.",
      "descriptionHtml" : "Constructs a HikariCP connection pool for use with \n<a href=\"PluggableJdbcPooledConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>PluggableJdbcPooledConnection</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DynamicPollingTemplate.html",
      "fullClassName" : "com.adaptris.core.DynamicPollingTemplate",
      "className" : "DynamicPollingTemplate",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "dynamic-polling-trigger-template",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DynamicPollingTemplate\nextends java.lang.Object\nimplements PollingTrigger.MessageProvider",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DynamicPollingTemplate</span>\nextends java.lang.Object\nimplements <a href=\"PollingTrigger.MessageProvider.html\" title=\"interface in com.adaptris.core\" target=\"_new\">PollingTrigger.MessageProvider</a>",
      "description" : "Provides a template for PollingTrigger. This PollingTrigger.MessageProvider implementation allows you to use an implementation of DynamicPollingTemplate.TemplateProvider to dynamically populate the contents of the message before submitting to a workflow. At the moment only a limited subset of services are enabled for this provider : ScriptingServiceImp JdbcDataQueryService HttpRequestService If you opt to use JdbcDataQueryService or HttpRequestService then there will be some types of configuration that will make no sense in this context such as metadata/xpath driven parameters or use of some ResultSetTranslator implementations (most notably SplittingXmlPayloadTranslator",
      "descriptionHtml" : "Provides a template for \n<a href=\"PollingTrigger.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>PollingTrigger</code></a>. \n<p> This <a href=\"PollingTrigger.MessageProvider.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>PollingTrigger.MessageProvider</code></a> implementation allows you to use an implementation of <a href=\"DynamicPollingTemplate.TemplateProvider.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>DynamicPollingTemplate.TemplateProvider</code></a> to dynamically populate the contents of the message before submitting to a workflow. At the moment only a limited subset of services are enabled for this provider : </p>\n<ul> \n <li><a href=\"services/ScriptingServiceImp.html\" title=\"class in com.adaptris.core.services\" target=\"_new\"><code>ScriptingServiceImp</code></a></li> \n <li><a href=\"services/jdbc/JdbcDataQueryService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataQueryService</code></a></li> \n <li><a href=\"http/client/net/HttpRequestService.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>HttpRequestService</code></a></li> \n <p></p> \n <p> If you opt to use <a href=\"services/jdbc/JdbcDataQueryService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataQueryService</code></a> or <a href=\"http/client/net/HttpRequestService.html\" title=\"class in com.adaptris.core.http.client.net\" target=\"_new\"><code>HttpRequestService</code></a> then there will be some types of configuration that will make no sense in this context such as <strong>metadata/xpath driven parameters</strong> or use of some <a href=\"services/jdbc/ResultSetTranslator.html\" title=\"interface in com.adaptris.core.services.jdbc\" target=\"_new\"><code>ResultSetTranslator</code></a> implementations (most notably <a href=\"services/jdbc/SplittingXmlPayloadTranslator.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>SplittingXmlPayloadTranslator</code></a> </p>\n</ul>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/client/net/DiscardResponseHeaders.html",
      "fullClassName" : "com.adaptris.core.http.client.net.DiscardResponseHeaders",
      "className" : "DiscardResponseHeaders",
      "packageName" : "com.adaptris.core.http.client.net",
      "componentType" : "object",
      "alias" : "http-discard-response-headers",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class DiscardResponseHeaders\nextends java.lang.Object\nimplements ResponseHeaderHandler<java.net.HttpURLConnection>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">DiscardResponseHeaders</span>\nextends java.lang.Object\nimplements <a href=\"../ResponseHeaderHandler.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\">ResponseHeaderHandler</a>&lt;java.net.HttpURLConnection&gt;",
      "description" : "ResponseHeaderHandler implementation that discards the headers from the HTTP response.",
      "descriptionHtml" : "<a href=\"../ResponseHeaderHandler.html\" title=\"interface in com.adaptris.core.http.client\" target=\"_new\"><code>ResponseHeaderHandler</code></a> implementation that discards the headers from the HTTP response.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/transform/json/JsonLinesToJsonArray.html",
      "fullClassName" : "com.adaptris.core.transform.json.JsonLinesToJsonArray",
      "className" : "JsonLinesToJsonArray",
      "packageName" : "com.adaptris.core.transform.json",
      "componentType" : "service",
      "alias" : "json-lines-to-array-transform",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "Transform from JSON lines to a JSON Array",
        "tag" : "json,transform"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transform from JSON lines to a JSON Array\",\n                  tag=\"json,transform\",\n                  since=\"3.11.1\")\npublic class JsonLinesToJsonArray\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transform from JSON lines to a JSON Array\",\n                  tag=\"json,transform\",\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">JsonLinesToJsonArray</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">ServiceImp</a>",
      "description" : "Transform from JSON lines to a JSON Array",
      "descriptionHtml" : "Transform from JSON lines to a JSON Array",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-onedrive/4.0.0B1-RELEASE/com/adaptris/interlok/azure/onedrive/OneDriveConsumer.html",
      "fullClassName" : "com.adaptris.interlok.azure.onedrive.OneDriveConsumer",
      "className" : "OneDriveConsumer",
      "packageName" : "com.adaptris.interlok.azure.onedrive",
      "componentType" : "consumer",
      "alias" : "azure-one-drive-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-onedrive.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Pickup files from a Microsoft Office 365 One Drive account using the Microsoft Graph API",
        "tag" : "consumer,file,o365,microsoft,office,365,one drive"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup files from a Microsoft Office 365 One Drive account using the Microsoft Graph API\",\n                  tag=\"consumer,file,o365,microsoft,office,365,one drive\")\npublic class OneDriveConsumer\nextends AdaptrisPollingConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup files from a Microsoft Office 365 One Drive account using the Microsoft Graph API\",\n                  tag=\"consumer,file,o365,microsoft,office,365,one drive\")\npublic class <span class=\"typeNameLabel\">OneDriveConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisPollingConsumer</a>",
      "description" : "Implementation of a file consumer that can retrieve files from Microsoft One Drive, using their Graph API and OAuth2.",
      "descriptionHtml" : "Implementation of a file consumer that can retrieve files from Microsoft One Drive, using their Graph API and OAuth2.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/OneDrive",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-onedrive",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mail/4.0.0B1-RELEASE/com/adaptris/mail/JavamailReceiverFactory.html",
      "fullClassName" : "com.adaptris.mail.JavamailReceiverFactory",
      "className" : "JavamailReceiverFactory",
      "packageName" : "com.adaptris.mail",
      "componentType" : "object",
      "alias" : "javamail-receiver-factory",
      "deprecated" : false,
      "jarFileName" : "interlok-mail.jar",
      "profile" : { },
      "annotationDetails" : "public class JavamailReceiverFactory\nextends java.lang.Object\nimplements MailReceiverFactory",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JavamailReceiverFactory</span>\nextends java.lang.Object\nimplements <a href=\"MailReceiverFactory.html\" title=\"interface in com.adaptris.mail\" target=\"_new\">MailReceiverFactory</a>",
      "description" : "MailReceiverFactory that uses standard Javamail functionality and supports both POP3 + IMAP",
      "descriptionHtml" : "<a href=\"MailReceiverFactory.html\" title=\"interface in com.adaptris.mail\" target=\"_new\"><code>MailReceiverFactory</code></a> that uses standard Javamail functionality and supports both POP3 + IMAP",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Mail/Javamail",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mail",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/ListOperation.html",
      "fullClassName" : "com.adaptris.jclouds.blobstore.ListOperation",
      "className" : "ListOperation",
      "packageName" : "com.adaptris.jclouds.blobstore",
      "componentType" : "object",
      "alias" : "jclouds-blobstore-list",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-blobstore.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.2",
        "summary" : "List the contents of a remote blob store",
        "tag" : "jclouds"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"List the contents of a remote blob store\",\n                  since=\"3.9.2\",\n                  tag=\"jclouds\")\npublic class ListOperation\nextends ContainerOperation",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"List the contents of a remote blob store\",\n                  since=\"3.9.2\",\n                  tag=\"jclouds\")\npublic class <span class=\"typeNameLabel\">ListOperation</span>\nextends <a href=\"ContainerOperation.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\">ContainerOperation</a>",
      "description" : "List the contents of a remote blob store",
      "descriptionHtml" : "List the contents of a remote blob store",
      "inheritance" : [
        {
          "name" : "ContainerOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/ContainerOperation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Blobstore",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-blobstore",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-datalake/4.0.0B1-RELEASE/com/adaptris/interlok/azure/datalake/DataLakeConsumer.html",
      "fullClassName" : "com.adaptris.interlok.azure.datalake.DataLakeConsumer",
      "className" : "DataLakeConsumer",
      "packageName" : "com.adaptris.interlok.azure.datalake",
      "componentType" : "consumer",
      "alias" : "azure-data-lake-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-datalake.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Pickup data frmo Azure Data Lake",
        "tag" : "consumer,azure,data lake,data,lake"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup data frmo Azure Data Lake\",\n                  tag=\"consumer,azure,data lake,data,lake\")\npublic class DataLakeConsumer\nextends AdaptrisPollingConsumer",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup data frmo Azure Data Lake\",\n                  tag=\"consumer,azure,data lake,data,lake\")\npublic class <span class=\"typeNameLabel\">DataLakeConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisPollingConsumer</a>",
      "description" : "Implementation of a file consumer that can retrieve files from Microsoft Data Lake.",
      "descriptionHtml" : "Implementation of a file consumer that can retrieve files from Microsoft Data Lake.",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/DataLake",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-datalake",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/MessageCountNotification.html",
      "fullClassName" : "com.adaptris.core.interceptor.MessageCountNotification",
      "className" : "MessageCountNotification",
      "packageName" : "com.adaptris.core.interceptor",
      "componentType" : "interceptor",
      "alias" : "message-count-notification",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Interceptor that issues a JMX notification based on a message count boundary",
        "tag" : "interceptor,jmx"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Interceptor that issues a JMX notification based on a message count boundary\",\n                  tag=\"interceptor,jmx\")\npublic class MessageCountNotification\nextends NotifyingInterceptorByCount",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Interceptor that issues a JMX notification based on a message count boundary\",\n                  tag=\"interceptor,jmx\")\npublic class <span class=\"typeNameLabel\">MessageCountNotification</span>\nextends <a href=\"NotifyingInterceptorByCount.html\" title=\"class in com.adaptris.core.interceptor\" target=\"_new\">NotifyingInterceptorByCount</a>",
      "description" : "Interceptor that emits a Notification under based on message count being higher or lower than the given message count. A Notification will be emitted when the message count threshold is first exceeded in the last complete timeslice. Notifications will continue being emitted for as long as the message count is greater than the threshold and getMaxNotifications() has not been exceeded. When the message count dips below the threshold a notification is emitted with a different Notification.getMessage(). The Notification.setUserData(Object) part of the notification is a Properties object containing information about the slice which was the source of the notification. Notifications are only generated based on the last complete timeslice that was recorded when a message enters the workflow. Note that a workflow which does not process any messages within a given timeslice will never rollover the current timeslice so this means that notifications are not generated until the current timeslice rolls over or a message is next processed by the workflow. Any delay in notifications will be based on the spikiness of the traffic and the granularity of your timeslice. Additionally, this interceptor will notify a consecutive maximum of getMaxNotifications() (if not specified, then notifications continue forever) whenever a boundary is breached. For instance, if you have getMaxNotifications() set to 5, then a maximum of 5 notifications will be emitted for an upper boundary breach provided no lower boundary breaches happen in-between. If the configuration is max-notifications=3, message-count=10 then our notifications happen like this:  \n |--Timeslice--|--MsgCount--|--Upper Boundary Notification--|--Lower Boundary Notification--|\n |      01     |    11      | No (no previous timeslice)    |             No                |\n |      02     |    12      | Yes (count = 11)              |             No                |\n |      03     |    13      | Yes (count = 12)              |             No                |\n |      04     |    00      |            No                 |             No                |\n |      05     |    11      | Yes, (13) timeslice changed   |             No                |\n |      06     |    01      |            No                 |             No                |\n |      07     |    11      |            No                 |   Yes (count=1)               |\n |      08     |    12      | Yes (count = 11)              |             No                |\n |      09     |    13      | Yes (count = 12)              |             No                |\n |      10     |    14      | Yes (count = 13)              |             No                |\n |      11     |    01      | No, as max exceeded           |             No                |",
      "descriptionHtml" : "Interceptor that emits a \n<code>Notification</code> under based on message count being higher or lower than the given message count. \n<p> A Notification will be emitted when the message count threshold is first exceeded in the last complete timeslice. Notifications will continue being emitted for as long as the message count is greater than the threshold and <a href=\"#getMaxNotifications()\" target=\"_new\"><code>getMaxNotifications()</code></a> has not been exceeded. When the message count dips below the threshold a notification is emitted with a different <code>Notification.getMessage()</code>. </p> \n<p> The <code>Notification.setUserData(Object)</code> part of the notification is a <code>Properties</code> object containing information about the slice which was the source of the notification. Notifications are only generated based on the last complete timeslice that was recorded when a message enters the workflow. Note that a workflow which does not process any messages within a given timeslice will never rollover the current timeslice so this means that notifications are not generated until the current timeslice rolls over or a message is next processed by the workflow. Any delay in notifications will be based on the spikiness of the traffic and the granularity of your timeslice. </p> \n<p> Additionally, this interceptor will notify a consecutive maximum of <a href=\"#getMaxNotifications()\" target=\"_new\"><code>getMaxNotifications()</code></a> (if not specified, then notifications continue forever) whenever a boundary is breached. For instance, if you have <a href=\"#getMaxNotifications()\" target=\"_new\"><code>getMaxNotifications()</code></a> set to 5, then a maximum of 5 notifications will be emitted for an upper boundary breach provided no lower boundary breaches happen in-between. If the configuration is <code>max-notifications=3, message-count=10</code> then our notifications happen like this: </p> \n<pre> <code>\n |--Timeslice--|--MsgCount--|--Upper Boundary Notification--|--Lower Boundary Notification--|\n |      01     |    11      | No (no previous timeslice)    |             No                |\n |      02     |    12      | Yes (count = 11)              |             No                |\n |      03     |    13      | Yes (count = 12)              |             No                |\n |      04     |    00      |            No                 |             No                |\n |      05     |    11      | Yes, (13) timeslice changed   |             No                |\n |      06     |    01      |            No                 |             No                |\n |      07     |    11      |            No                 |   Yes (count=1)               |\n |      08     |    12      | Yes (count = 11)              |             No                |\n |      09     |    13      | Yes (count = 12)              |             No                |\n |      10     |    14      | Yes (count = 13)              |             No                |\n |      11     |    01      | No, as max exceeded           |             No                |\n </code>\n </pre>",
      "inheritance" : [
        {
          "name" : "WorkflowInterceptorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/WorkflowInterceptorImpl.html"
        },
        {
          "name" : "NotifyingInterceptor",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/NotifyingInterceptor.html"
        },
        {
          "name" : "NotifyingInterceptorByCount",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/interceptor/NotifyingInterceptorByCount.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-elastic-common/4.0.0B1-RELEASE/com/adaptris/core/elastic/fields/NoOpFieldNameMapper.html",
      "fullClassName" : "com.adaptris.core.elastic.fields.NoOpFieldNameMapper",
      "className" : "NoOpFieldNameMapper",
      "packageName" : "com.adaptris.core.elastic.fields",
      "componentType" : "object",
      "alias" : "elastic-noop-field-name-mapper",
      "deprecated" : false,
      "jarFileName" : "interlok-elastic-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "Leave the fieldname as is",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Leave the fieldname as is\",\n                  since=\"3.9.1\")\npublic class NoOpFieldNameMapper\nextends java.lang.Object\nimplements FieldNameMapper",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Leave the fieldname as is\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">NoOpFieldNameMapper</span>\nextends java.lang.Object\nimplements <a href=\"FieldNameMapper.html\" title=\"interface in com.adaptris.core.elastic.fields\" target=\"_new\">FieldNameMapper</a>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Elastic: Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-elastic-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3Service.html",
      "fullClassName" : "com.adaptris.aws.s3.S3Service",
      "className" : "S3Service",
      "packageName" : "com.adaptris.aws.s3",
      "componentType" : "service",
      "alias" : "amazon-s3-service",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-s3.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.aws.s3.AmazonS3Connection"
        ],
        "since" : "",
        "summary" : "Amazon S3 Service",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Amazon S3 Service\",\n                  recommended=AmazonS3Connection.class)\npublic class S3Service\nextends S3ServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Amazon S3 Service\",\n                  recommended=<a href=\"AmazonS3Connection.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">AmazonS3Connection.class</a>)\npublic class <span class=\"typeNameLabel\">S3Service</span>\nextends <a href=\"S3ServiceImpl.html\" title=\"class in com.adaptris.aws.s3\" target=\"_new\">S3ServiceImpl</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "S3ServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-s3/4.0.0B1-RELEASE/com/adaptris/aws/s3/S3ServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/S3",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-s3",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RetryMessageErrorHandler.html",
      "fullClassName" : "com.adaptris.core.RetryMessageErrorHandler",
      "className" : "RetryMessageErrorHandler",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "retry-message-error-handler",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "An exception handler instance that supports automated retries defined by schedule",
        "tag" : "error-handling,base"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"An exception handler instance that supports automated retries defined by schedule\",\n                  tag=\"error-handling,base\")\npublic class RetryMessageErrorHandler\nextends RetryMessageErrorHandlerImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"An exception handler instance that supports automated retries defined by schedule\",\n                  tag=\"error-handling,base\")\npublic class <span class=\"typeNameLabel\">RetryMessageErrorHandler</span>\nextends <a href=\"RetryMessageErrorHandlerImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">RetryMessageErrorHandlerImp</a>",
      "description" : "MessageErrorHandler implementation that allows automatic retries for a problem message. This implementation keeps the AdaptrisMessage that was consumed in memory, and periodically retries the message in the workflow that failed; the retry schedule and maximum number of retries is determined by RetryMessageErrorHandlerImp.setRetryInterval(TimeInterval) and RetryMessageErrorHandlerImp.setRetryLimit(Integer) respectively. If the retry count exceeds the maximum number of retries then the message is deemed to have failed, and passed off to any configured StandardProcessingExceptionHandler.getProcessingExceptionService(). In the event that the AdaptrisComponent that owns this implementation is stopped or closed (using ComponentLifecycle.stop() or ComponentLifecycle.close() then all messages are deemed to have failed, and treated as a message that has failed. Note that messages are not guaranteed to be in order (even if they were originally) once a message has entered retry mode. Also note that if a RetryMessageErrorHandler is configured as a direct child of Channel or Workflow then an exception that causes a restart of the entire channel will force all messages to 'fail' as this implementation will be stopped as part of the parent component restart.",
      "descriptionHtml" : "MessageErrorHandler implementation that allows automatic retries for a problem message. \n<p> This implementation keeps the <a href=\"AdaptrisMessage.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisMessage</code></a> that was consumed in memory, and periodically retries the message in the workflow that failed; the retry schedule and maximum number of retries is determined by <a href=\"RetryMessageErrorHandlerImp.html#setRetryInterval(com.adaptris.util.TimeInterval)\" target=\"_new\"><code>RetryMessageErrorHandlerImp.setRetryInterval(TimeInterval)</code></a> and <a href=\"RetryMessageErrorHandlerImp.html#setRetryLimit(java.lang.Integer)\" target=\"_new\"><code>RetryMessageErrorHandlerImp.setRetryLimit(Integer)</code></a> respectively. If the retry count exceeds the maximum number of retries then the message is deemed to have failed, and passed off to any configured <a href=\"StandardProcessingExceptionHandler.html#getProcessingExceptionService()\" target=\"_new\"><code>StandardProcessingExceptionHandler.getProcessingExceptionService()</code></a>. </p> \n<p> In the event that the <a href=\"AdaptrisComponent.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>AdaptrisComponent</code></a> that owns this implementation is stopped or closed (using <a href=\"ComponentLifecycle.html#stop()\" target=\"_new\"><code>ComponentLifecycle.stop()</code></a> or <a href=\"ComponentLifecycle.html#close()\" target=\"_new\"><code>ComponentLifecycle.close()</code></a> then all messages are deemed to have failed, and treated as a message that has failed. </p> \n<p> Note that messages are not guaranteed to be in order (even if they were originally) once a message has entered retry mode. Also note that if a RetryMessageErrorHandler is configured as a direct child of <a href=\"Channel.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>Channel</code></a> or <a href=\"Workflow.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>Workflow</code></a> then an exception that causes a restart of the entire channel will force all messages to 'fail' as this implementation will be stopped as part of the parent component restart. </p>",
      "inheritance" : [
        {
          "name" : "RootProcessingExceptionHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RootProcessingExceptionHandler.html"
        },
        {
          "name" : "StandardProcessingExceptionHandler",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/StandardProcessingExceptionHandler.html"
        },
        {
          "name" : "RetryMessageErrorHandlerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RetryMessageErrorHandlerImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv-json/4.0.0B1-RELEASE/com/adaptris/core/transform/csvjson/CSVToJson.html",
      "fullClassName" : "com.adaptris.core.transform.csvjson.CSVToJson",
      "className" : "CSVToJson",
      "packageName" : "com.adaptris.core.transform.csvjson",
      "componentType" : "service",
      "alias" : "csv-to-json",
      "deprecated" : false,
      "jarFileName" : "interlok-csv-json.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Transfrom CSV into JSON",
        "tag" : "service,csv,json"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Transfrom CSV into JSON\",\n                  tag=\"service,csv,json\")\npublic class CSVToJson\nextends CSVConverter",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Transfrom CSV into JSON\",\n                  tag=\"service,csv,json\")\npublic class <span class=\"typeNameLabel\">CSVToJson</span>\nextends <a href=\"CSVConverter.html\" title=\"class in com.adaptris.core.transform.csvjson\" target=\"_new\">CSVConverter</a>",
      "description" : "Transform a CSV document into a JSON object of some description. Takes a CSV document and renders as it as JSON, either a standard JSON Array or a jsonlines. If our input document is  \n firstname, lastname, dob\n \"alice\",\"smith\", \"2017-01-01\"\n \"bob\", \"smith\", \"2017-01-02\"\n \"carol\",\"smith\", \"2017-01-03\"\n \n then selecting JSON_ARRAY will effectively render as  \n [\n   { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" },\n   { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" },\n   { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }\n ]\n Selecting JSON_LINES will effectively render as  \n { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" }\n { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" }\n { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }",
      "descriptionHtml" : "Transform a CSV document into a JSON object of some description. \n<p> Takes a CSV document and renders as it as JSON, either a standard JSON Array or a <a href=\"http://jsonlines.org\" target=\"_new\">jsonlines</a>. </p> \n<p> If our input document is </p>\n<pre> <code>\n firstname, lastname, dob\n \"alice\",\"smith\", \"2017-01-01\"\n \"bob\", \"smith\", \"2017-01-02\"\n \"carol\",\"smith\", \"2017-01-03\"\n </code>\n </pre> then selecting JSON_ARRAY will effectively render as \n<pre> <code>\n [\n   { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" },\n   { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" },\n   { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }\n ]</code>\n </pre> Selecting JSON_LINES will effectively render as \n<pre> <code>\n { \"firstname\":\"alice\", \"lastname\":\"smith\", \"dob\":\"2017-01-01\" }\n { \"firstname\":\"bob\", \"lastname\":\"smith\", \"dob\":\"2017-01-02\" }\n { \"firstname\":\"carol\", \"lastname\":\"smith\", \"dob\":\"2017-01-03\" }\n </code>\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "CSVConverter",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-csv-json/4.0.0B1-RELEASE/com/adaptris/core/transform/csvjson/CSVConverter.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON+CSV",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-csv-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/ConfiguredContentTypeProvider.html",
      "fullClassName" : "com.adaptris.core.http.ConfiguredContentTypeProvider",
      "className" : "ConfiguredContentTypeProvider",
      "packageName" : "com.adaptris.core.http",
      "componentType" : "object",
      "alias" : "http-configured-content-type-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ConfiguredContentTypeProvider\nextends ContentTypeProviderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ConfiguredContentTypeProvider</span>\nextends <a href=\"ContentTypeProviderImpl.html\" title=\"class in com.adaptris.core.http\" target=\"_new\">ContentTypeProviderImpl</a>",
      "description" : "Provides a static content type. Note that the content type character set will be derived from AdaptrisMessage.getCharEncoding() so configuring a mime type of text/xml when the message has a char encoding of UTF-8 will return text/xml; charset=UTF-8",
      "descriptionHtml" : "Provides a static content type. \n<p> Note that the content type character set will be derived from <a href=\"../AdaptrisMessage.html#getCharEncoding()\" target=\"_new\"><code>AdaptrisMessage.getCharEncoding()</code></a> so configuring a mime type of <code>text/xml</code> when the message has a char encoding of <code>UTF-8</code> will return <code>text/xml; charset=UTF-8</code> </p>",
      "inheritance" : [
        {
          "name" : "ContentTypeProviderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/ContentTypeProviderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/AssertMetadataContains.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.assertion.AssertMetadataContains",
      "className" : "AssertMetadataContains",
      "packageName" : "com.adaptris.tester.runtime.messages.assertion",
      "componentType" : "object",
      "alias" : "assert-metadata-contains",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class AssertMetadataContains\nextends MetadataAssertion",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AssertMetadataContains</span>\nextends <a href=\"MetadataAssertion.html\" title=\"class in com.adaptris.tester.runtime.messages.assertion\" target=\"_new\">MetadataAssertion</a>",
      "description" : "Checks if all keys and corresponding values set in MetadataAssertion.getMessageHeaders() are present in TestMessage.getMessageHeaders().",
      "descriptionHtml" : "Checks if all keys and corresponding values set in \n<a href=\"MetadataAssertion.html#getMessageHeaders()\" target=\"_new\"><code>MetadataAssertion.getMessageHeaders()</code></a> are present in \n<a href=\"../TestMessage.html#getMessageHeaders()\" target=\"_new\"><code>TestMessage.getMessageHeaders()</code></a>.",
      "inheritance" : [
        {
          "name" : "MetadataAssertion",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/assertion/MetadataAssertion.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/InsertNode.html",
      "fullClassName" : "com.adaptris.util.text.xml.InsertNode",
      "className" : "InsertNode",
      "packageName" : "com.adaptris.util.text.xml",
      "componentType" : "object",
      "alias" : "xml-insert-node",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class InsertNode\nextends XpathMergeImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">InsertNode</span>\nextends <a href=\"XpathMergeImpl.html\" title=\"class in com.adaptris.util.text.xml\" target=\"_new\">XpathMergeImpl</a>",
      "description" : "Merge implementation that appends the result to a parent node derived from an Xpath. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Merge implementation that appends the result to a parent node derived from an Xpath. \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "XpathMergeImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/XpathMergeImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcServiceList.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.JdbcServiceList",
      "className" : "JdbcServiceList",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "service-collection",
      "alias" : "jdbc-service-list",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jdbc.DatabaseConnection"
        ],
        "since" : "",
        "summary" : "A collection of services which has an additional database connection",
        "tag" : "service,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A collection of services which has an additional database connection\",\n                  tag=\"service,jdbc\",\n                  recommended=DatabaseConnection.class)\npublic class JdbcServiceList\nextends ServiceList\nimplements ConnectedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A collection of services which has an additional database connection\",\n                  tag=\"service,jdbc\",\n                  recommended=<a href=\"../../jdbc/DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\">DatabaseConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JdbcServiceList</span>\nextends <a href=\"../../ServiceList.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceList</a>\nimplements <a href=\"../../ConnectedService.html\" title=\"interface in com.adaptris.core\" target=\"_new\">ConnectedService</a>",
      "description" : "Implementation of ServiceCollection that creates a Connection instance at the start of the execution of the service list and stores it in object metadata. Other than the creation of the Connection at the start of execution, all other behaviour is the same as ServiceList which this class extends. The rationale behind this service collection implementation is to allow JdbcService implementations to share the same underlying Connection. Embedded JdbcService implementations do not need to have a DatabaseConnection configured as they can derive the correct DatabaseConnection from object metadata. This also allows the services to participate in a simple transaction if the connection is not set to auto-commit. The event of an exception, the connection is rolledback and then committed. If all services are considered successful then the transaction is committed (note that continue-on-fail=true equates to success). The standard use case for this will be multiple JdbcDataCaptureService or JdbcRawDataCaptureService services that need to be executed but the captured data should only committed to the database at the end. In the event of an exception, all the changes should be discarded ensuring that the database is consistent. Note that only some JdbcService implementations support this behaviour namely concrete AbstractJdbcSequenceNumberService instances, JdbcDataCaptureService, JdbcRawDataCaptureService and JdbcDataQueryService.",
      "descriptionHtml" : "Implementation of \n<a href=\"../../ServiceCollection.html\" title=\"interface in com.adaptris.core\" target=\"_new\"><code>ServiceCollection</code></a> that creates a \n<code>Connection</code> instance at the start of the execution of the service list and stores it in object metadata. \n<p> Other than the creation of the <code>Connection</code> at the start of execution, all other behaviour is the same as <a href=\"../../ServiceList.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>ServiceList</code></a> which this class extends. </p> \n<p> The rationale behind this service collection implementation is to allow <a href=\"../../jdbc/JdbcService.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>JdbcService</code></a> implementations to share the same underlying <code>Connection</code>. Embedded <a href=\"../../jdbc/JdbcService.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>JdbcService</code></a> implementations do not need to have a <a href=\"../../jdbc/DatabaseConnection.html\" title=\"class in com.adaptris.core.jdbc\" target=\"_new\"><code>DatabaseConnection</code></a> configured as they can derive the correct DatabaseConnection from object metadata. This also allows the services to participate in a simple transaction if the connection is not set to auto-commit. The event of an exception, the connection is rolledback and then committed. If all services are considered successful then the transaction is committed (note that continue-on-fail=true equates to success). </p> \n<p> The standard use case for this will be multiple <a href=\"JdbcDataCaptureService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataCaptureService</code></a> or <a href=\"raw/JdbcRawDataCaptureService.html\" title=\"class in com.adaptris.core.services.jdbc.raw\" target=\"_new\"><code>JdbcRawDataCaptureService</code></a> services that need to be executed but the captured data should only committed to the database at the end. In the event of an exception, all the changes should be discarded ensuring that the database is consistent. </p> \n<p> Note that only some JdbcService implementations support this behaviour namely concrete <a href=\"AbstractJdbcSequenceNumberService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>AbstractJdbcSequenceNumberService</code></a> instances, <a href=\"JdbcDataCaptureService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataCaptureService</code></a>, <a href=\"raw/JdbcRawDataCaptureService.html\" title=\"class in com.adaptris.core.services.jdbc.raw\" target=\"_new\"><code>JdbcRawDataCaptureService</code></a> and <a href=\"JdbcDataQueryService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataQueryService</code></a>. </p>",
      "inheritance" : [
        {
          "name" : "Service",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Service.html"
        },
        {
          "name" : "ServiceCollectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceCollectionImp.html"
        },
        {
          "name" : "ServiceListBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceListBase.html"
        },
        {
          "name" : "ServiceList",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceList.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-core/4.0.0B1-RELEASE/com/adaptris/interlok/azure/DataLakeConnection.html",
      "fullClassName" : "com.adaptris.interlok.azure.DataLakeConnection",
      "className" : "DataLakeConnection",
      "packageName" : "com.adaptris.interlok.azure",
      "componentType" : "connection",
      "alias" : "azure-data-lake-connection",
      "deprecated" : false,
      "jarFileName" : "interlok-azure-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Connect to an Azure tenant and access the Data Lake",
        "tag" : "connections,azure,data lake,data,lake"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Connect to an Azure tenant and access the Data Lake\",\n                  tag=\"connections,azure,data lake,data,lake\")\npublic class DataLakeConnection\nextends AzureConnection<com.azure.storage.file.datalake.DataLakeServiceClient>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Connect to an Azure tenant and access the Data Lake\",\n                  tag=\"connections,azure,data lake,data,lake\")\npublic class <span class=\"typeNameLabel\">DataLakeConnection</span>\nextends <a href=\"AzureConnection.html\" title=\"class in com.adaptris.interlok.azure\" target=\"_new\">AzureConnection</a>&lt;com.azure.storage.file.datalake.DataLakeServiceClient&gt;",
      "inheritance" : [
        {
          "name" : "AdaptrisConnectionImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisConnectionImp.html?is-external=true"
        },
        {
          "name" : "AzureConnection",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-azure-core/4.0.0B1-RELEASE/com/adaptris/interlok/azure/AzureConnection.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Azure/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-azure-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/CreateMode.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.CreateMode",
      "className" : "CreateMode",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "object",
      "alias" : "smb-create-mode",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Create the file, failing if it already exists",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Create the file, failing if it already exists\")\npublic class CreateMode\nextends java.lang.Object\nimplements WriteMode",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Create the file, failing if it already exists\")\npublic class <span class=\"typeNameLabel\">CreateMode</span>\nextends java.lang.Object\nimplements <a href=\"WriteMode.html\" title=\"interface in com.adaptris.filesystem.smbj\" target=\"_new\">WriteMode</a>",
      "description" : "The default write mode which assumes that a new file will be created. Uses SMB2CreateDisposition#FILE_CREATE which means that if the file already exists, the operations will fail.",
      "descriptionHtml" : "The default write mode which assumes that a new file will be created. \n<p> Uses <code>SMB2CreateDisposition#FILE_CREATE</code> which means that if the file already exists, the operations will fail. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/KieStatelessService.html",
      "fullClassName" : "com.adaptris.kie.services.KieStatelessService",
      "className" : "KieStatelessService",
      "packageName" : "com.adaptris.kie.services",
      "componentType" : "service",
      "alias" : "kie-stateless-service",
      "deprecated" : false,
      "jarFileName" : "interlok-kie.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.kie.services.KieConnection"
        ],
        "since" : "3.8.2",
        "summary" : "Stateless KIE/Drools Engine execution",
        "tag" : "service,drools,kie"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Stateless KIE/Drools Engine execution\",\n                  tag=\"service,drools,kie\",\n                  since=\"3.8.2\",\n                  recommended=KieConnection.class)\npublic class KieStatelessService\nextends KieServiceImpl<org.kie.api.runtime.StatelessKieSession>",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Stateless KIE/Drools Engine execution\",\n                  tag=\"service,drools,kie\",\n                  since=\"3.8.2\",\n                  recommended=<a href=\"KieConnection.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">KieConnection.class</a>)\npublic class <span class=\"typeNameLabel\">KieStatelessService</span>\nextends <a href=\"KieServiceImpl.html\" title=\"class in com.adaptris.kie.services\" target=\"_new\">KieServiceImpl</a>&lt;org.kie.api.runtime.StatelessKieSession&gt;",
      "description" : "Stateless JBoss Rules Engine execution.",
      "descriptionHtml" : "Stateless JBoss Rules Engine execution.",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "KieServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kie/4.0.0B1-RELEASE/com/adaptris/kie/services/KieServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Application/KIE",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kie",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/system/MetadataCommandArgument.html",
      "fullClassName" : "com.adaptris.core.services.system.MetadataCommandArgument",
      "className" : "MetadataCommandArgument",
      "packageName" : "com.adaptris.core.services.system",
      "componentType" : "object",
      "alias" : "system-command-metadata-argument",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataCommandArgument\nextends java.lang.Object\nimplements CommandArgument",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataCommandArgument</span>\nextends java.lang.Object\nimplements <a href=\"CommandArgument.html\" title=\"interface in com.adaptris.core.services.system\" target=\"_new\">CommandArgument</a>",
      "description" : "Provides the metadata value associated with the specified key as a command line argument",
      "descriptionHtml" : "Provides the metadata value associated with the specified key as a command line argument",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/raw/JdbcRawDataCaptureService.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.raw.JdbcRawDataCaptureService",
      "className" : "JdbcRawDataCaptureService",
      "packageName" : "com.adaptris.core.services.jdbc.raw",
      "componentType" : "service",
      "alias" : "jdbc-raw-data-capture-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Capture data from the message and store it in a database",
        "tag" : "service,jdbc"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Capture data from the message and store it in a database\",\n                  tag=\"service,jdbc\")\npublic class JdbcRawDataCaptureService\nextends JdbcDataCaptureServiceImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Capture data from the message and store it in a database\",\n                  tag=\"service,jdbc\")\npublic class <span class=\"typeNameLabel\">JdbcRawDataCaptureService</span>\nextends <a href=\"../JdbcDataCaptureServiceImpl.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">JdbcDataCaptureServiceImpl</a>",
      "description" : "Capture Data from a AdaptrisMessage and store it in a JDBC-compliant database. JdbcDataCaptureService generally expects text or XML data to be available; this is what is captured and stored in the database. This particular flavour does not make any assumptions about the nature of the payload, and simply allows you to capture metadata and/or the entire payload and insert into into a database.",
      "descriptionHtml" : "Capture Data from a AdaptrisMessage and store it in a JDBC-compliant database. \n<p> <a href=\"../JdbcDataCaptureService.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\"><code>JdbcDataCaptureService</code></a> generally expects text or XML data to be available; this is what is captured and stored in the database. This particular flavour does not make any assumptions about the nature of the payload, and simply allows you to capture metadata and/or the entire payload and insert into into a database. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "JdbcService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jdbc/JdbcService.html"
        },
        {
          "name" : "JdbcServiceWithParameters",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcServiceWithParameters.html"
        },
        {
          "name" : "JdbcDataCaptureServiceImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/JdbcDataCaptureServiceImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json/4.0.0B1-RELEASE/com/adaptris/core/json/schema/AdvancedJsonSchemaLoader.html",
      "fullClassName" : "com.adaptris.core.json.schema.AdvancedJsonSchemaLoader",
      "className" : "AdvancedJsonSchemaLoader",
      "packageName" : "com.adaptris.core.json.schema",
      "componentType" : "object",
      "alias" : "advanced-json-schema-loader",
      "deprecated" : false,
      "jarFileName" : "interlok-json.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedJsonSchemaLoader\nextends java.lang.Object\nimplements JsonSchemaLoader",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedJsonSchemaLoader</span>\nextends java.lang.Object\nimplements <a href=\"JsonSchemaLoader.html\" title=\"interface in com.adaptris.core.json.schema\" target=\"_new\">JsonSchemaLoader</a>",
      "description" : "JsonSchemaLoader implementation that allows for more settings. If you have a schema defined such that supporting files for your schema are only available on the classpath, rather than as a file:// or http:// URL. :  \n    {\n      \"type\": \"array\",\n      \"items\": {\n          \"$ref\": \"classpath://com/adaptris/core/json/schema/test_schema.json\"\n      }\n     }\n \n then you need to enable the classpath aware functionality of the schema builder; this is disabled by default with the expectation that generally either all schemas as self-contained, or they are available explicitly as a standard URL resource.",
      "descriptionHtml" : "<a href=\"JsonSchemaLoader.html\" title=\"interface in com.adaptris.core.json.schema\" target=\"_new\"><code>JsonSchemaLoader</code></a> implementation that allows for more settings. \n<p> If you have a schema defined such that supporting files for your schema are only available on the classpath, rather than as a <code>file://</code> or <code>http://</code> URL. : </p>\n<pre> <code>\n    {\n      \"type\": \"array\",\n      \"items\": {\n          \"$ref\": \"classpath://com/adaptris/core/json/schema/test_schema.json\"\n      }\n     }\n </code>\n </pre> then you need to enable the classpath aware functionality of the schema builder; this is disabled by default with the expectation that generally either all schemas as self-contained, or they are available explicitly as a standard URL resource.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/RegexpValueMatcher.html",
      "fullClassName" : "com.adaptris.core.services.metadata.RegexpValueMatcher",
      "className" : "RegexpValueMatcher",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "object",
      "alias" : "regex-value-matcher",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class RegexpValueMatcher\nextends java.lang.Object\nimplements MetadataValueMatcher",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">RegexpValueMatcher</span>\nextends java.lang.Object\nimplements <a href=\"MetadataValueMatcher.html\" title=\"interface in com.adaptris.core.services.metadata\" target=\"_new\">MetadataValueMatcher</a>",
      "description" : "Match the metadata value against a regular expression for MetadataValueBranchingService. The key portion of the mappings is the regular expression; the value portion is the intended service id.    \n    <metadata-value-branching-service>\n     <unique-id>CheckEmailDomain</unique-id>\n     <metadata-key>MetadataKey_Containing_an_Email</metadata-key>\n     <default-service-id>Not_Google_Apple_Microsoft</default-service-id>\n     <value-matcher class=\"regex-value-matcher\"/>\n     <metadata-to-service-id-mappings>\n      <key-value-pair>\n       <key>.*google.com$</key>\n       <value>FromGmail</value>\n      </key-value-pair>\n      <key-value-pair>\n       <key>.*microsoft.com$</key>\n       <value>FromMicrosoft</value>\n      </key-value-pair>\n      <key-value-pair>\n       <key>.*apple.com$</key>\n       <value>FromApple</value>\n      </key-value-pair>\n     </metadata-to-service-id-mappings>\n    </metadata-value-branching-service>",
      "descriptionHtml" : "Match the metadata value against a regular expression for \n<a href=\"MetadataValueBranchingService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>MetadataValueBranchingService</code></a>. \n<p> The key portion of the mappings is the regular expression; the value portion is the intended service id. </p>\n<pre>   <code>\n    &lt;metadata-value-branching-service&gt;\n     &lt;unique-id&gt;CheckEmailDomain&lt;/unique-id&gt;\n     &lt;metadata-key&gt;MetadataKey_Containing_an_Email&lt;/metadata-key&gt;\n     &lt;default-service-id&gt;Not_Google_Apple_Microsoft&lt;/default-service-id&gt;\n     &lt;value-matcher class=\"regex-value-matcher\"/&gt;\n     &lt;metadata-to-service-id-mappings&gt;\n      &lt;key-value-pair&gt;\n       &lt;key&gt;.*google.com$&lt;/key&gt;\n       &lt;value&gt;FromGmail&lt;/value&gt;\n      &lt;/key-value-pair&gt;\n      &lt;key-value-pair&gt;\n       &lt;key&gt;.*microsoft.com$&lt;/key&gt;\n       &lt;value&gt;FromMicrosoft&lt;/value&gt;\n      &lt;/key-value-pair&gt;\n      &lt;key-value-pair&gt;\n       &lt;key&gt;.*apple.com$&lt;/key&gt;\n       &lt;value&gt;FromApple&lt;/value&gt;\n      &lt;/key-value-pair&gt;\n     &lt;/metadata-to-service-id-mappings&gt;\n    &lt;/metadata-value-branching-service&gt;\n   </code>\n   </pre> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/messages/TestMessageProvider.html",
      "fullClassName" : "com.adaptris.tester.runtime.messages.TestMessageProvider",
      "className" : "TestMessageProvider",
      "packageName" : "com.adaptris.tester.runtime.messages",
      "componentType" : "object",
      "alias" : "test-message-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class TestMessageProvider\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TestMessageProvider</span>\nextends java.lang.Object",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/EmbeddedScriptingService.html",
      "fullClassName" : "com.adaptris.core.services.EmbeddedScriptingService",
      "className" : "EmbeddedScriptingService",
      "packageName" : "com.adaptris.core.services",
      "componentType" : "service",
      "alias" : "embedded-scripting-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "true",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Execute an embedded JSR223 script",
        "tag" : "service,scripting"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Execute an embedded JSR223 script\",\n                  tag=\"service,scripting\",\n                  branchSelector=true)\npublic class EmbeddedScriptingService\nextends ScriptingServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Execute an embedded JSR223 script\",\n                  tag=\"service,scripting\",\n                  branchSelector=true)\npublic class <span class=\"typeNameLabel\">EmbeddedScriptingService</span>\nextends <a href=\"ScriptingServiceImp.html\" title=\"class in com.adaptris.core.services\" target=\"_new\">ScriptingServiceImp</a>",
      "description" : "Supports arbitary scripting languges that are supported by JSR223. You should take care when configuring this class; it can present an audit trail issue when used in combination with DynamicServiceExecutor if your script executes arbitrary system commands. In that situation, all commands will be executed with the current users permissions and may be subject to the virtual machines security manager. The script is executed and the AdaptrisMessage that is due to be processed is bound against the key \"message\" and an instance of org.slf4j.Logger is also bound to key \"log\". These can be used as a standard variable within the script. Note that this class can be used as the selector as part of a BranchingServiceCollection. If used as such, then you need to remember to invoke AdaptrisMessage.setNextServiceId(String) as part of the script and ScriptingServiceImp.setBranchingEnabled(Boolean) should be true.",
      "descriptionHtml" : "Supports arbitary scripting languges that are supported by JSR223. \n<p> You should take care when configuring this class; it can present an audit trail issue when used in combination with <a href=\"dynamic/DynamicServiceExecutor.html\" title=\"class in com.adaptris.core.services.dynamic\" target=\"_new\"><code>DynamicServiceExecutor</code></a> if your script executes arbitrary system commands. In that situation, all commands will be executed with the current users permissions and may be subject to the virtual machines security manager. </p> \n<p> The script is executed and the AdaptrisMessage that is due to be processed is bound against the key \"message\" and an instance of org.slf4j.Logger is also bound to key \"log\". These can be used as a standard variable within the script. </p> \n<p> Note that this class can be used as the selector as part of a <a href=\"../BranchingServiceCollection.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>BranchingServiceCollection</code></a>. If used as such, then you need to remember to invoke <a href=\"../AdaptrisMessage.html#setNextServiceId(java.lang.String)\" target=\"_new\"><code>AdaptrisMessage.setNextServiceId(String)</code></a> as part of the script and <a href=\"ScriptingServiceImp.html#setBranchingEnabled(java.lang.Boolean)\" target=\"_new\"><code>ScriptingServiceImp.setBranchingEnabled(Boolean)</code></a> should be true. </p>\n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        },
        {
          "name" : "ScriptingServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/ScriptingServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/event/AdapterStartEvent.html",
      "fullClassName" : "com.adaptris.core.event.AdapterStartEvent",
      "className" : "AdapterStartEvent",
      "packageName" : "com.adaptris.core.event",
      "componentType" : "object",
      "alias" : "adapter-start-event",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AdapterStartEvent\nextends AdapterLifecycleEvent",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdapterStartEvent</span>\nextends <a href=\"../AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\">AdapterLifecycleEvent</a>",
      "description" : "AdapterLifecycleEvent indicating that start has been invoked.",
      "descriptionHtml" : "<p> <code>AdapterLifecycleEvent</code> indicating that <code>start</code> has been invoked. </p>",
      "inheritance" : [
        {
          "name" : "Event",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/Event.html"
        },
        {
          "name" : "AdapterLifecycleEvent",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdapterLifecycleEvent.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/AnonymousAccess.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.AnonymousAccess",
      "className" : "AnonymousAccess",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "object",
      "alias" : "smb-anonymous-access",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Anonymous access to a SMB share",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Anonymous access to a SMB share\")\npublic class AnonymousAccess\nextends java.lang.Object\nimplements AuthenticationProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Anonymous access to a SMB share\")\npublic class <span class=\"typeNameLabel\">AnonymousAccess</span>\nextends java.lang.Object\nimplements <a href=\"AuthenticationProvider.html\" title=\"interface in com.adaptris.filesystem.smbj\" target=\"_new\">AuthenticationProvider</a>",
      "description" : "Anonymous access to a SMB share.",
      "descriptionHtml" : "Anonymous access to a SMB share.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/util/text/xml/ReplaceOriginal.html",
      "fullClassName" : "com.adaptris.util.text.xml.ReplaceOriginal",
      "className" : "ReplaceOriginal",
      "packageName" : "com.adaptris.util.text.xml",
      "componentType" : "object",
      "alias" : "xml-replace-original",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class ReplaceOriginal\nextends java.lang.Object",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ReplaceOriginal</span>\nextends java.lang.Object",
      "description" : "Merge implementation that simply replaces the original.",
      "descriptionHtml" : "Merge implementation that simply replaces the original.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/XmlPayloadTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.XmlPayloadTranslator",
      "className" : "XmlPayloadTranslator",
      "packageName" : "com.adaptris.core.services.jdbc",
      "componentType" : "object",
      "alias" : "jdbc-xml-payload-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class XmlPayloadTranslator\nextends XmlPayloadTranslatorImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XmlPayloadTranslator</span>\nextends <a href=\"XmlPayloadTranslatorImpl.html\" title=\"class in com.adaptris.core.services.jdbc\" target=\"_new\">XmlPayloadTranslatorImpl</a>",
      "description" : "Translate the ResultSet contents into an XML Payload. The original message can be included in the output message in order to allow consolidation of XML data and SQL data in a subsequent XSLT step. The format of the returned message is as follows:  \n <Results>\n   <OriginalMessage>\n   ...\n   </OriginalMessage>\n   <Row>\n     <column1>...</column1>\n     <column2>...</column2>\n     ...\n   </Row>\n   <Row> ... </Row>\n </Results>\n \n Note that column1, column2, etc. is replaced by the actual column name as returned in the query. As such, the column name must be a valid XML element name. If the actual name (in the database table definition) is not valid, the query should specify an alias name in the query. E.g: SELECT \"col 1\" AS \"col1\" FROM mytable; If you want to see how many rows were processed you can set one/both of the following; Item Description Value result-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query Metadata item name update-count-metadata-item If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement Metadata item name",
      "descriptionHtml" : "Translate the ResultSet contents into an XML Payload. \n<p> The original message can be included in the output message in order to allow consolidation of XML data and SQL data in a subsequent XSLT step. The format of the returned message is as follows: </p>\n<pre> <code>\n &lt;Results&gt;\n   &lt;OriginalMessage&gt;\n   ...\n   &lt;/OriginalMessage&gt;\n   &lt;Row&gt;\n     &lt;column1&gt;...&lt;/column1&gt;\n     &lt;column2&gt;...&lt;/column2&gt;\n     ...\n   &lt;/Row&gt;\n   &lt;Row&gt; ... &lt;/Row&gt;\n &lt;/Results&gt;\n </code>\n </pre> \n<p></p> \n<p> Note that column1, column2, etc. is replaced by the actual column name as returned in the query. As such, the column name must be a valid XML element name. If the actual name (in the database table definition) is not valid, the query should specify an alias name in the query. E.g: <code>SELECT \"col 1\" AS \"col1\" FROM mytable;</code> </p> \n<p> If you want to see how many rows were processed you can set one/both of the following; </p>\n<table> \n <tbody>\n  <tr> \n   <th>Item</th> \n   <th>Description</th> \n   <th>Value</th> \n  </tr> \n  <tr> \n   <td>result-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows returned by your query</td>\n   <td>Metadata item name</td> \n  </tr> \n  <tr> \n   <td>update-count-metadata-item</td>\n   <td>If set to a String metadata item name will specify the metadata item to contain the number of rows updated by your SQL statement</td>\n   <td>Metadata item name</td> \n  </tr> \n </tbody>\n</table> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ResultSetTranslatorBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorBase.html"
        },
        {
          "name" : "StyledResultTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/StyledResultTranslatorImp.html"
        },
        {
          "name" : "ResultSetTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/ResultSetTranslatorImp.html"
        },
        {
          "name" : "XmlPayloadTranslatorImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/XmlPayloadTranslatorImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-streaming/4.0.0B1-RELEASE/com/adaptris/core/json/streaming/JsonStreamingInputFactory.html",
      "fullClassName" : "com.adaptris.core.json.streaming.JsonStreamingInputFactory",
      "className" : "JsonStreamingInputFactory",
      "packageName" : "com.adaptris.core.json.streaming",
      "componentType" : "object",
      "alias" : "json-streaming-input",
      "deprecated" : false,
      "jarFileName" : "interlok-json-streaming.jar",
      "profile" : { },
      "annotationDetails" : "public class JsonStreamingInputFactory\nextends JsonStreamBuilderImpl\nimplements com.adaptris.stax.XmlInputFactoryBuilder",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">JsonStreamingInputFactory</span>\nextends <a href=\"JsonStreamBuilderImpl.html\" title=\"class in com.adaptris.core.json.streaming\" target=\"_new\">JsonStreamBuilderImpl</a>\nimplements com.adaptris.stax.XmlInputFactoryBuilder",
      "description" : "XmlInputFactoryBuilder implementation that allows us to read JSON via standard javax.xml.stream interfaces.",
      "descriptionHtml" : "<code>XmlInputFactoryBuilder</code> implementation that allows us to read JSON via standard \n<code>javax.xml.stream</code> interfaces.",
      "inheritance" : [
        {
          "name" : "JsonStreamBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-json-streaming/4.0.0B1-RELEASE/com/adaptris/core/json/streaming/JsonStreamBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/JSON Streaming",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-json-streaming",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/SimpleType.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.SimpleType",
      "className" : "SimpleType",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-simple-type",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleType\nextends java.lang.Object\nimplements TypeWrapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleType</span>\nextends java.lang.Object\nimplements <a href=\"TypeWrapper.html\" title=\"interface in com.adaptris.core.jms.oracle\" target=\"_new\">TypeWrapper</a>",
      "description" : "Wraps simple types for AdtFieldMapper",
      "descriptionHtml" : "Wraps simple types for AdtFieldMapper",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-mqtt/4.0.0B1-RELEASE/com/adaptris/core/mqtt/MqttConsumer.html",
      "fullClassName" : "com.adaptris.core.mqtt.MqttConsumer",
      "className" : "MqttConsumer",
      "packageName" : "com.adaptris.core.mqtt",
      "componentType" : "consumer",
      "alias" : "mqtt-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-mqtt.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.mqtt.MqttConnection"
        ],
        "since" : "3.5.0",
        "summary" : "Listen for MQTT messages on the specified topic",
        "tag" : "consumer,mqtt"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Listen for MQTT messages on the specified topic\",\n                  tag=\"consumer,mqtt\",\n                  recommended=MqttConnection.class,\n                  since=\"3.5.0\")\npublic class MqttConsumer\nextends AdaptrisMessageConsumerImp\nimplements org.eclipse.paho.client.mqttv3.MqttCallbackExtended",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Listen for MQTT messages on the specified topic\",\n                  tag=\"consumer,mqtt\",\n                  recommended=<a href=\"MqttConnection.html\" title=\"class in com.adaptris.core.mqtt\" target=\"_new\">MqttConnection.class</a>,\n                  since=\"3.5.0\")\npublic class <span class=\"typeNameLabel\">MqttConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisMessageConsumerImp</a>\nimplements org.eclipse.paho.client.mqttv3.MqttCallbackExtended",
      "description" : "Paho MQTT implementation of AdaptrisMessageConsumer.",
      "descriptionHtml" : "<p> Paho MQTT implementation of <code>AdaptrisMessageConsumer</code>. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/MQTT",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-mqtt",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester-wiremock/4.0.0B1-RELEASE/com/adaptris/tester/runtime/helpers/wiremock/WireMockHelper.html",
      "fullClassName" : "com.adaptris.tester.runtime.helpers.wiremock.WireMockHelper",
      "className" : "WireMockHelper",
      "packageName" : "com.adaptris.tester.runtime.helpers.wiremock",
      "componentType" : "object",
      "alias" : "wire-mock-helper",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester-wiremock.jar",
      "profile" : { },
      "annotationDetails" : "public class WireMockHelper\nextends com.adaptris.tester.runtime.helpers.Helper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">WireMockHelper</span>\nextends com.adaptris.tester.runtime.helpers.Helper",
      "description" : "Helper which starts a WireMock server. WireMock (http://wiremock.org/): WireMock is a simulator for HTTP-based APIs. Some might consider it a service virtualization tool or a mock server. It enables you to stay productive when an API you depend on doesn't exist or isn't complete. It supports testing of edge cases and failure modes that the real API won't reliably produce. And because it's fast it can reduce your build time from hours down to minutes.",
      "descriptionHtml" : "Helper which starts a WireMock server. \n<p>WireMock (<a href=\"http://wiremock.org/\" target=\"_new\">http://wiremock.org/</a>):</p> \n<blockquote cite=\"http://wiremock.org/\"> \n <p>WireMock is a simulator for HTTP-based APIs. Some might consider it a service virtualization tool or a mock server.</p> \n <p>It enables you to stay productive when an API you depend on doesn't exist or isn't complete. It supports testing of edge cases and failure modes that the real API won't reliably produce. And because it's fast it can reduce your build time from hours down to minutes.</p> \n</blockquote>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Wiremock",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester-wiremock",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/SimpleConfigBuilder.html",
      "fullClassName" : "com.adaptris.kafka.SimpleConfigBuilder",
      "className" : "SimpleConfigBuilder",
      "packageName" : "com.adaptris.kafka",
      "componentType" : "object",
      "alias" : "kafka-simple-config-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-kafka.jar",
      "profile" : { },
      "annotationDetails" : "public class SimpleConfigBuilder\nextends ConfigBuilderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">SimpleConfigBuilder</span>\nextends <a href=\"ConfigBuilderImpl.html\" title=\"class in com.adaptris.kafka\" target=\"_new\">ConfigBuilderImpl</a>",
      "description" : "Simple implementation of ConfigBuilder for use with KafkaConnection. The simple builder contains configuration marked as high importance in both the Apache Kafka Producer Config Documentation and the Apache Kafka Consumer Config Documentation. Because it caters for both scenarios it will be possible to get some warnings about unused configuration (e.g. you have configured acks on a connection that is used for both producers and consumer). These can be safely ignored or filtered from the logging (filter the classes org.apache.kafka.clients.consumer.ConsumerConfig and {code org.apache.kafka.clients.producer.ProducerConfig}",
      "descriptionHtml" : "Simple implementation of \n<a href=\"ConfigBuilder.html\" title=\"interface in com.adaptris.kafka\" target=\"_new\"><code>ConfigBuilder</code></a> for use with \n<a href=\"KafkaConnection.html\" title=\"class in com.adaptris.kafka\" target=\"_new\"><code>KafkaConnection</code></a>. \n<p> The simple builder contains configuration marked as <strong>high</strong> importance in both <a href=\"http://kafka.apache.org/documentation.html#producerconfigs\" target=\"_new\">the Apache Kafka Producer Config Documentation</a> and <a href=\"http://kafka.apache.org/documentation.html#newconsumerconfigs\" target=\"_new\">the Apache Kafka Consumer Config Documentation</a>. Because it caters for both scenarios it will be possible to get some warnings about unused configuration (e.g. you have configured <code>acks</code> on a connection that is used for both producers and consumer). These can be safely ignored or filtered from the logging (filter the classes <code>org.apache.kafka.clients.consumer.ConsumerConfig</code> and {code org.apache.kafka.clients.producer.ProducerConfig} </p>",
      "inheritance" : [
        {
          "name" : "ConfigBuilderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-kafka/4.0.0B1-RELEASE/com/adaptris/kafka/ConfigBuilderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Kafka",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-kafka",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-solace/4.0.0B1-RELEASE/com/adaptris/core/jcsmp/solace/auth/BasicAuthenticationProvider.html",
      "fullClassName" : "com.adaptris.core.jcsmp.solace.auth.BasicAuthenticationProvider",
      "className" : "BasicAuthenticationProvider",
      "packageName" : "com.adaptris.core.jcsmp.solace.auth",
      "componentType" : "object",
      "alias" : "solace-jcsmp-basic-authentication",
      "deprecated" : false,
      "jarFileName" : "interlok-solace.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.11.1",
        "summary" : "A Solace native JCSMP basic authentication provider.",
        "tag" : "authentication,basic,solace,jcsmp"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"A Solace native JCSMP basic authentication provider.\",\n                  tag=\"authentication,basic,solace,jcsmp\",\n                  since=\"3.11.1\")\npublic class BasicAuthenticationProvider\nextends java.lang.Object\nimplements AuthenticationProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"A Solace native JCSMP basic authentication provider.\",\n                  tag=\"authentication,basic,solace,jcsmp\",\n                  since=\"3.11.1\")\npublic class <span class=\"typeNameLabel\">BasicAuthenticationProvider</span>\nextends java.lang.Object\nimplements <a href=\"AuthenticationProvider.html\" title=\"interface in com.adaptris.core.jcsmp.solace.auth\" target=\"_new\">AuthenticationProvider</a>",
      "description" : "A basic AuthenticationProvider that requires a simple user name and password.",
      "descriptionHtml" : "<p> A basic <a href=\"AuthenticationProvider.html\" title=\"interface in com.adaptris.core.jcsmp.solace.auth\" target=\"_new\"><code>AuthenticationProvider</code></a> that requires a simple user name and password. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Solace",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-solace",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-tibco/4.0.0B1-RELEASE/com/adaptris/core/tibrv/RendezvousConsumer.html",
      "fullClassName" : "com.adaptris.core.tibrv.RendezvousConsumer",
      "className" : "RendezvousConsumer",
      "packageName" : "com.adaptris.core.tibrv",
      "componentType" : "consumer",
      "alias" : "tibrv-rendezvous-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-tibco.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.NullConnection"
        ],
        "since" : "",
        "summary" : "Receive messages from Tibco Rendezvous",
        "tag" : "consumer,tibco"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Receive messages from Tibco Rendezvous\",\n                  tag=\"consumer,tibco\",\n                  recommended=com.adaptris.core.NullConnection.class)\npublic class RendezvousConsumer\nextends AdaptrisMessageConsumerImp\nimplements com.tibco.tibrv.TibrvMsgCallback, LicensedComponent",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Receive messages from Tibco Rendezvous\",\n                  tag=\"consumer,tibco\",\n                  recommended=<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/NullConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">com.adaptris.core.NullConnection.class</a>)\npublic class <span class=\"typeNameLabel\">RendezvousConsumer</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\">AdaptrisMessageConsumerImp</a>\nimplements com.tibco.tibrv.TibrvMsgCallback, <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing/4.0.0B1-RELEASE/com/adaptris/core/licensing/LicensedComponent.html?is-external=true\" title=\"class or interface in com.adaptris.core.licensing\" class=\"externalLink\" target=\"_new\">LicensedComponent</a>",
      "description" : "Implementation of AdaptrisMessageConsumer which handles Tibco Rendezvous messages.",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageConsumer</code> which handles Tibco Rendezvous messages. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html?is-external=true"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/Tibco",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-tibco",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/clients/ExternalJMXTestClient.html",
      "fullClassName" : "com.adaptris.tester.runtime.clients.ExternalJMXTestClient",
      "className" : "ExternalJMXTestClient",
      "packageName" : "com.adaptris.tester.runtime.clients",
      "componentType" : "object",
      "alias" : "external-jmx-test-client",
      "deprecated" : false,
      "jarFileName" : "interlok-service-tester.jar",
      "profile" : { },
      "annotationDetails" : "public class ExternalJMXTestClient\nextends JMXTestClient",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">ExternalJMXTestClient</span>\nextends <a href=\"JMXTestClient.html\" title=\"class in com.adaptris.tester.runtime.clients\" target=\"_new\">JMXTestClient</a>",
      "description" : "Implementation of JMXTestClient that connects to external JMX URL to be used during testing.",
      "descriptionHtml" : "Implementation of \n<a href=\"JMXTestClient.html\" title=\"class in com.adaptris.tester.runtime.clients\" target=\"_new\"><code>JMXTestClient</code></a> that connects to external JMX URL to be used during testing.",
      "inheritance" : [
        {
          "name" : "JMXTestClient",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-service-tester/4.0.0B1-RELEASE/com/adaptris/tester/runtime/clients/JMXTestClient.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Service Tester/Core",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-service-tester",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/fs/AppendingFsWorker.html",
      "fullClassName" : "com.adaptris.fs.AppendingFsWorker",
      "className" : "AppendingFsWorker",
      "packageName" : "com.adaptris.fs",
      "componentType" : "object",
      "alias" : "fs-append-file",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class AppendingFsWorker\nextends StandardWorker",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AppendingFsWorker</span>\nextends <a href=\"StandardWorker.html\" title=\"class in com.adaptris.fs\" target=\"_new\">StandardWorker</a>",
      "description" : "Implementation of FsWorker that appeneds to the file for any write operations.",
      "descriptionHtml" : "Implementation of \n<a href=\"FsWorker.html\" title=\"interface in com.adaptris.fs\" target=\"_new\"><code>FsWorker</code></a> that appeneds to the file for any write operations.",
      "inheritance" : [
        {
          "name" : "StandardWorker",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/fs/StandardWorker.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/util/MinimalMessageLogger.html",
      "fullClassName" : "com.adaptris.core.util.MinimalMessageLogger",
      "className" : "MinimalMessageLogger",
      "packageName" : "com.adaptris.core.util",
      "componentType" : "object",
      "alias" : "message-logging-minimal",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.8.4",
        "summary" : "Log unique-id only",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Log unique-id only\",\n                  since=\"3.8.4\")\npublic class MinimalMessageLogger\nextends MessageLoggerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Log unique-id only\",\n                  since=\"3.8.4\")\npublic class <span class=\"typeNameLabel\">MinimalMessageLogger</span>\nextends <a href=\"../MessageLoggerImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">MessageLoggerImpl</a>",
      "description" : "MessageLogger implementation that that logs unique-id only",
      "descriptionHtml" : "MessageLogger implementation that that logs unique-id only",
      "inheritance" : [
        {
          "name" : "MessageLoggerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MessageLoggerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/MessageIdMapper.html",
      "fullClassName" : "com.adaptris.core.jms.oracle.MessageIdMapper",
      "className" : "MessageIdMapper",
      "packageName" : "com.adaptris.core.jms.oracle",
      "componentType" : "object",
      "alias" : "oracleaq-message-id-mapper",
      "deprecated" : false,
      "jarFileName" : "interlok-jms-oracleaq.jar",
      "profile" : { },
      "annotationDetails" : "public class MessageIdMapper\nextends FieldMapper",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MessageIdMapper</span>\nextends <a href=\"FieldMapper.html\" title=\"class in com.adaptris.core.jms.oracle\" target=\"_new\">FieldMapper</a>",
      "description" : "Map between AdaptrisMessage unique id and a specific field within an AdtMessage.",
      "descriptionHtml" : "Map between AdaptrisMessage unique id and a specific field within an AdtMessage.",
      "inheritance" : [
        {
          "name" : "FieldMapper",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jms-oracleaq/4.0.0B1-RELEASE/com/adaptris/core/jms/oracle/FieldMapper.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/OracleAQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jms-oracleaq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/IgnoresCaseValueMatcher.html",
      "fullClassName" : "com.adaptris.core.services.metadata.IgnoresCaseValueMatcher",
      "className" : "IgnoresCaseValueMatcher",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "object",
      "alias" : "ignores-case-value-matcher",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class IgnoresCaseValueMatcher\nextends java.lang.Object\nimplements MetadataValueMatcher",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">IgnoresCaseValueMatcher</span>\nextends java.lang.Object\nimplements <a href=\"MetadataValueMatcher.html\" title=\"interface in com.adaptris.core.services.metadata\" target=\"_new\">MetadataValueMatcher</a>",
      "description" : "Ignores case match implementation of MetadataValueMatcher for MetadataValueBranchingService.",
      "descriptionHtml" : "Ignores case match implementation of MetadataValueMatcher for \n<a href=\"MetadataValueBranchingService.html\" title=\"class in com.adaptris.core.services.metadata\" target=\"_new\"><code>MetadataValueBranchingService</code></a>.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/XpathObjectMetadataService.html",
      "fullClassName" : "com.adaptris.core.services.metadata.XpathObjectMetadataService",
      "className" : "XpathObjectMetadataService",
      "packageName" : "com.adaptris.core.services.metadata",
      "componentType" : "service",
      "alias" : "xpath-object-metadata-service",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Extract data via XPath and store it as object metadata",
        "tag" : "service,metadata,xml,xpath"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Extract data via XPath and store it as object metadata\",\n                  tag=\"service,metadata,xml,xpath\")\npublic class XpathObjectMetadataService\nextends ServiceImp",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Extract data via XPath and store it as object metadata\",\n                  tag=\"service,metadata,xml,xpath\")\npublic class <span class=\"typeNameLabel\">XpathObjectMetadataService</span>\nextends <a href=\"../../ServiceImp.html\" title=\"class in com.adaptris.core\" target=\"_new\">ServiceImp</a>",
      "description" : "Store values extracted from message payload using XpathQuery as object metadata. If the DocumentBuilderFactoryBuilder has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that //NonNamespaceXpath doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured.",
      "descriptionHtml" : "Store values extracted from message payload using \n<a href=\"xpath/XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\"><code>XpathQuery</code></a> as object metadata. \n<p> If the <code>DocumentBuilderFactoryBuilder</code> has been explicitly set to be not namespace aware and the document does in fact contain namespaces, then Saxon can cause merry havoc in the sense that <code>//NonNamespaceXpath</code> doesn't work if the document has namespaces in it. We have included a shim so that behaviour can be toggled based on what you have configured. </p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducer.html",
      "fullClassName" : "com.adaptris.core.jms.JmsProducer",
      "className" : "JmsProducer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "producer",
      "alias" : "jms-producer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Place message on a JMS queue or topic",
        "tag" : "producer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Place message on a JMS queue or topic\",\n                  tag=\"producer,jms\",\n                  recommended=JmsConnection.class)\npublic class JmsProducer\nextends JmsProducerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Place message on a JMS queue or topic\",\n                  tag=\"producer,jms\",\n                  recommended=<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JmsProducer</span>\nextends <a href=\"JmsProducerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsProducerImpl</a>",
      "description" : "JMS Producer implementation that can target queues or topics via an RFC6167 style destination. This differs from the standard PtpProducer and PasProducer in that it supports a destination that is specified in RFC6167 style. For instance jms:queue:myQueueName will produce to a queue called myQueueName and jms:topic:myTopicName to a topic called myTopicName While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. The standard deliveryMode, timeToLive, priority, replyToName properties are supported. If not specified, then they will be inherited from the producers configuration. For instance you could have the following destinations: jms:queue:MyQueueName jms:topic:MyTopicName jms:queue:MyQueueName?replyToName=StaticReplyTo&priority=1&timeToLive=1234 jms:topic:MyTopicName?replyToName=StaticReplyTo As the RFC6167 string can specify priority, timeToLive and deliveryMode; this producer defaults JmsProducerImpl.getPerMessageProperties() to be true.",
      "descriptionHtml" : "JMS Producer implementation that can target queues or topics via an RFC6167 style destination. \n<p> This differs from the standard <a href=\"PtpProducer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>PtpProducer</code></a> and <a href=\"PasProducer.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\"><code>PasProducer</code></a> in that it supports a destination that is specified in RFC6167 style. For instance <code>jms:queue:myQueueName</code> will produce to a queue called <code>myQueueName</code> and <code>jms:topic:myTopicName</code> to a topic called <code>myTopicName</code> </p> \n<p> While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. The standard deliveryMode, timeToLive, priority, replyToName properties are supported. If not specified, then they will be inherited from the producers configuration. For instance you could have the following destinations: </p>\n<ul> \n <li>jms:queue:MyQueueName</li> \n <li>jms:topic:MyTopicName</li> \n <li>jms:queue:MyQueueName?replyToName=StaticReplyTo&amp;priority=1&amp;timeToLive=1234</li> \n <li>jms:topic:MyTopicName?replyToName=StaticReplyTo</li> \n</ul> \n<p></p> \n<p> As the RFC6167 string can specify priority, timeToLive and deliveryMode; this producer defaults <a href=\"JmsProducerImpl.html#getPerMessageProperties()\" target=\"_new\"><code>JmsProducerImpl.getPerMessageProperties()</code></a> to be true. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageProducerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageProducerImp.html"
        },
        {
          "name" : "RequestReplyProducerBase",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/RequestReplyProducerBase.html"
        },
        {
          "name" : "JmsProducerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsProducerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/Remove.html",
      "fullClassName" : "com.adaptris.jclouds.blobstore.Remove",
      "className" : "Remove",
      "packageName" : "com.adaptris.jclouds.blobstore",
      "componentType" : "object",
      "alias" : "jclouds-blobstore-remove",
      "deprecated" : false,
      "jarFileName" : "interlok-jclouds-blobstore.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Remove a BLOB",
        "tag" : "jclouds"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Remove a BLOB\",\n                  tag=\"jclouds\")\npublic class Remove\nextends OperationImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Remove a BLOB\",\n                  tag=\"jclouds\")\npublic class <span class=\"typeNameLabel\">Remove</span>\nextends <a href=\"OperationImpl.html\" title=\"class in com.adaptris.jclouds.blobstore\" target=\"_new\">OperationImpl</a>",
      "description" : "Remove an object.",
      "descriptionHtml" : "Remove an object.",
      "inheritance" : [
        {
          "name" : "ContainerOperation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/ContainerOperation.html"
        },
        {
          "name" : "OperationImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-jclouds-blobstore/4.0.0B1-RELEASE/com/adaptris/jclouds/blobstore/OperationImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok JClouds/Blobstore",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-jclouds-blobstore",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-aws-common/4.0.0B1-RELEASE/com/adaptris/aws/STSAssumeroleCredentialsBuilder.html",
      "fullClassName" : "com.adaptris.aws.STSAssumeroleCredentialsBuilder",
      "className" : "STSAssumeroleCredentialsBuilder",
      "packageName" : "com.adaptris.aws",
      "componentType" : "object",
      "alias" : "aws-sts-assumerole-credentials-builder",
      "deprecated" : false,
      "jarFileName" : "interlok-aws-common.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "4.0.0",
        "summary" : "Create a set of credentials via STS",
        "tag" : "amazon,aws,sts,assumerole"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Create a set of credentials via STS\",\n                  tag=\"amazon,aws,sts,assumerole\",\n                  since=\"4.0.0\")\npublic class STSAssumeroleCredentialsBuilder\nextends java.lang.Object\nimplements AWSCredentialsProviderBuilder",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Create a set of credentials via STS\",\n                  tag=\"amazon,aws,sts,assumerole\",\n                  since=\"4.0.0\")\npublic class <span class=\"typeNameLabel\">STSAssumeroleCredentialsBuilder</span>\nextends java.lang.Object\nimplements <a href=\"AWSCredentialsProviderBuilder.html\" title=\"interface in com.adaptris.aws\" target=\"_new\">AWSCredentialsProviderBuilder</a>",
      "description" : "AWS credentials that makes use of AWS STS AWS Security Token Service (STS) enables you to request temporary, limited-privilege credentials for AWS Identity and Access Management (IAM) users or for users that you authenticate (federated users). For more information about using this service, see Temporary Security Credentials.",
      "descriptionHtml" : "AWS credentials that makes use of AWS STS \n<p> AWS Security Token Service (STS) enables you to request temporary, limited-privilege credentials for AWS Identity and Access Management (IAM) users or for users that you authenticate (federated users). For more information about using this service, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\" target=\"_new\">Temporary Security Credentials</a>. </p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok AWS/Common",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-aws-common",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/MetadataXpathNodeQuery.html",
      "fullClassName" : "com.adaptris.core.services.metadata.xpath.MetadataXpathNodeQuery",
      "className" : "MetadataXpathNodeQuery",
      "packageName" : "com.adaptris.core.services.metadata.xpath",
      "componentType" : "object",
      "alias" : "metadata-xpath-node-query",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataXpathNodeQuery\nextends MetadataXpathQueryImpl\nimplements XpathObjectQuery",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataXpathNodeQuery</span>\nextends <a href=\"MetadataXpathQueryImpl.html\" title=\"class in com.adaptris.core.services.metadata.xpath\" target=\"_new\">MetadataXpathQueryImpl</a>\nimplements <a href=\"XpathObjectQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathObjectQuery</a>",
      "description" : "XpathQuery implementation that retuns a Node from an xpath derived from metadata.",
      "descriptionHtml" : "<a href=\"XpathQuery.html\" title=\"interface in com.adaptris.core.services.metadata.xpath\" target=\"_new\">XpathQuery</a> implementation that retuns a \n<code>Node</code> from an xpath derived from metadata.",
      "inheritance" : [
        {
          "name" : "XpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/XpathQueryImpl.html"
        },
        {
          "name" : "MetadataXpathQueryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/metadata/xpath/MetadataXpathQueryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lifecycle/NonBlockingChannelStartStrategy.html",
      "fullClassName" : "com.adaptris.core.lifecycle.NonBlockingChannelStartStrategy",
      "className" : "NonBlockingChannelStartStrategy",
      "packageName" : "com.adaptris.core.lifecycle",
      "componentType" : "object",
      "alias" : "non-blocking-channel-start-strategy",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class NonBlockingChannelStartStrategy\nextends DefaultChannelLifecycleStrategy",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">NonBlockingChannelStartStrategy</span>\nextends <a href=\"../DefaultChannelLifecycleStrategy.html\" title=\"class in com.adaptris.core\" target=\"_new\">DefaultChannelLifecycleStrategy</a>",
      "description" : "Non Blocking start strategy for channels. This strategy attempts to start each channel in a non-blocking manner through the use of an ExecutorService for each channel. If this strategy is chosen then it is possible that AdapterLifecycleEvents will be generated that do not accurately reflect the internal state of the Adapter.",
      "descriptionHtml" : "Non Blocking start strategy for channels. \n<p> This strategy attempts to start each channel in a non-blocking manner through the use of an <code>ExecutorService</code> for each channel. </p> \n<p> If this strategy is chosen then it is possible that <a href=\"../AdapterLifecycleEvent.html\" title=\"class in com.adaptris.core\" target=\"_new\"><code>AdapterLifecycleEvent</code></a>s will be generated that do not accurately reflect the internal state of the Adapter. </p>",
      "inheritance" : [
        {
          "name" : "DefaultChannelLifecycleStrategy",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/DefaultChannelLifecycleStrategy.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing-demo/4.0.0B1-RELEASE/com/adaptris/core/licensed/DummyStandardLicensedService.html",
      "fullClassName" : "com.adaptris.core.licensed.DummyStandardLicensedService",
      "className" : "DummyStandardLicensedService",
      "packageName" : "com.adaptris.core.licensed",
      "componentType" : "service",
      "alias" : "dummy-standard-licensed-service",
      "deprecated" : false,
      "jarFileName" : "interlok-licensing-demo.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.0",
        "summary" : "no-op service that simply requires a license (Standard)",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"no-op service that simply requires a license (Standard)\",\n                  since=\"3.9.0\")\npublic class DummyStandardLicensedService\nextends DummyLicensedService",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"no-op service that simply requires a license (Standard)\",\n                  since=\"3.9.0\")\npublic class <span class=\"typeNameLabel\">DummyStandardLicensedService</span>\nextends <a href=\"DummyLicensedService.html\" title=\"class in com.adaptris.core.licensed\" target=\"_new\">DummyLicensedService</a>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "DummyLicensedService",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-licensing-demo/4.0.0B1-RELEASE/com/adaptris/core/licensed/DummyLicensedService.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok License/Examples",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-licensing-demo",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsSyncConsumer.html",
      "fullClassName" : "com.adaptris.core.jms.JmsSyncConsumer",
      "className" : "JmsSyncConsumer",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "consumer",
      "alias" : "jms-sync-consumer",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [
          "com.adaptris.core.jms.JmsConnection"
        ],
        "since" : "",
        "summary" : "Pickup messages from a JMS broker (queue or topic) by actively polling it",
        "tag" : "consumer,jms"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Pickup messages from a JMS broker (queue or topic) by actively polling it\",\n                  tag=\"consumer,jms\",\n                  recommended=JmsConnection.class)\npublic class JmsSyncConsumer\nextends BaseJmsPollingConsumerImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Pickup messages from a JMS broker (queue or topic) by actively polling it\",\n                  tag=\"consumer,jms\",\n                  recommended=<a href=\"JmsConnection.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">JmsConnection.class</a>)\npublic class <span class=\"typeNameLabel\">JmsSyncConsumer</span>\nextends <a href=\"BaseJmsPollingConsumerImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">BaseJmsPollingConsumerImpl</a>",
      "description" : "JMS synchronous consumer implementation that can target queues or topics via an RFC6167 style endpoint. For instance jms:queue:myQueueName will consume from a queue called myQueueName and jms:topic:myTopicName from a topic called myTopicName While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. There is also support for subscriptionId which indicates the subscriptionId that should be used when attaching a subscriber to a topic; jms:topic:MyTopicName?subscriptionId=myId would return a JmsDestination.subscriptionId() of myId. If a subscription ID is not specified, then a durable subscriber is never created; specifying a subscription ID automatically means a durable subscriber. Also supported is the JMS 2.0 sharedConsumerId, should you wish to create a multiple load balancing consumers on a single topic endpoint; jms:topic:MyTopicName?sharedConsumerId=12345 For instance you could have the following destinations: jms:queue:MyQueueName jms:topic:MyTopicName jms:topic:MyTopicName?subscriptionId=mySubscriptionId jms:topic:MyTopicName?sharedConsumerId=mySharedConsumerId jms:topic:MyTopicName?subscriptionId=mySubscriptionId&sharedConsumerId=mySharedConsumerId",
      "descriptionHtml" : "JMS synchronous consumer implementation that can target queues or topics via an RFC6167 style endpoint. \n<p> For instance <code>jms:queue:myQueueName</code> will consume from a queue called <code>myQueueName</code> and <code>jms:topic:myTopicName</code> from a topic called <code>myTopicName</code> </p> \n<p> While RFC6167 defines the ability to use jndi to lookup the (as part of the 'jndi' variant section); this is not supported. There is also support for <code>subscriptionId</code> which indicates the subscriptionId that should be used when attaching a subscriber to a topic; <code>jms:topic:MyTopicName?subscriptionId=myId</code> would return a <a href=\"JmsDestination.html#subscriptionId()\" target=\"_new\"><code>JmsDestination.subscriptionId()</code></a> of <code>myId</code>. If a subscription ID is not specified, then a durable subscriber is never created; specifying a subscription ID automatically means a durable subscriber. </p> \n<p> Also supported is the JMS 2.0 sharedConsumerId, should you wish to create a multiple load balancing consumers on a single topic endpoint; <code>jms:topic:MyTopicName?sharedConsumerId=12345</code> </p> For instance you could have the following destinations: \n<ul> \n <li>jms:queue:MyQueueName</li> \n <li>jms:topic:MyTopicName</li> \n <li>jms:topic:MyTopicName?subscriptionId=mySubscriptionId</li> \n <li>jms:topic:MyTopicName?sharedConsumerId=mySharedConsumerId</li> \n <li>jms:topic:MyTopicName?subscriptionId=mySubscriptionId&amp;sharedConsumerId=mySharedConsumerId</li> \n</ul> \n<p></p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageWorkerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageWorkerImp.html"
        },
        {
          "name" : "AdaptrisMessageConsumerImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageConsumerImp.html"
        },
        {
          "name" : "AdaptrisPollingConsumer",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisPollingConsumer.html"
        },
        {
          "name" : "BaseJmsPollingConsumerImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/BaseJmsPollingConsumerImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/TimeColumnTranslator.html",
      "fullClassName" : "com.adaptris.core.services.jdbc.types.TimeColumnTranslator",
      "className" : "TimeColumnTranslator",
      "packageName" : "com.adaptris.core.services.jdbc.types",
      "componentType" : "object",
      "alias" : "jdbc-type-time-column-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class TimeColumnTranslator\nextends DateColumnTranslator",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">TimeColumnTranslator</span>\nextends <a href=\"DateColumnTranslator.html\" title=\"class in com.adaptris.core.services.jdbc.types\" target=\"_new\">DateColumnTranslator</a>",
      "description" : "Column Translator implementation for handling time types",
      "descriptionHtml" : "Column Translator implementation for handling time types",
      "inheritance" : [
        {
          "name" : "DateColumnTranslator",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/jdbc/types/DateColumnTranslator.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/lms/StaxWriteElement.html",
      "fullClassName" : "com.adaptris.stax.lms.StaxWriteElement",
      "className" : "StaxWriteElement",
      "packageName" : "com.adaptris.stax.lms",
      "componentType" : "service",
      "alias" : "stax-xml-write-element",
      "deprecated" : false,
      "jarFileName" : "interlok-stax.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.6.6",
        "summary" : "Write the current message as XML output via STaX",
        "tag" : "service,transform,xml"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Write the current message as XML output via STaX\",\n                  tag=\"service,transform,xml\",\n                  since=\"3.6.6\")\npublic class StaxWriteElement\nextends StaxXmlOutput",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Write the current message as XML output via STaX\",\n                  tag=\"service,transform,xml\",\n                  since=\"3.6.6\")\npublic class <span class=\"typeNameLabel\">StaxWriteElement</span>\nextends <a href=\"StaxXmlOutput.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\">StaxXmlOutput</a>",
      "description" : "Write the contents of the current message to the output created by StaxStartDocument. For this service to work, the underlying AdaptrisMessageFactory associated with the AdaptrisMessage instance must be a FileBackedMessageFactory and StaxStartDocument must have precede this service and subsequent processing must include StaxEndDocument to commit the output; so effectively your processing chain should be  \n   <stax-xml-start-document/>\n     ... 0 or more instances of <stax-xml-write-element/>\n   <stax-xml-end-document/>",
      "descriptionHtml" : "Write the contents of the current message to the output created by \n<a href=\"StaxStartDocument.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\"><code>StaxStartDocument</code></a>. \n<p> For this service to work, the underlying <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageFactory.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessageFactory</code></a> associated with the <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessage.html?is-external=true\" title=\"class or interface in com.adaptris.core\" class=\"externalLink\" target=\"_new\"><code>AdaptrisMessage</code></a> instance must be a <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/lms/FileBackedMessageFactory.html?is-external=true\" title=\"class or interface in com.adaptris.core.lms\" class=\"externalLink\" target=\"_new\"><code>FileBackedMessageFactory</code></a> and <a href=\"StaxStartDocument.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\"><code>StaxStartDocument</code></a> must have precede this service and subsequent processing must include <a href=\"StaxEndDocument.html\" title=\"class in com.adaptris.stax.lms\" target=\"_new\"><code>StaxEndDocument</code></a> to commit the output; so effectively your processing chain should be </p>\n<pre> <code>\n   &lt;stax-xml-start-document/&gt;\n     ... 0 or more instances of &lt;stax-xml-write-element/&gt;\n   &lt;stax-xml-end-document/&gt;\n </code>\n </pre> \n<p></p>",
      "inheritance" : [
        {
          "name" : "ServiceImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/ServiceImp.html?is-external=true"
        },
        {
          "name" : "StaxXmlOutput",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-stax/4.0.0B1-RELEASE/com/adaptris/stax/lms/StaxXmlOutput.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Transform/STaX",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-stax",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/BasicJavaxJmsMessageTranslator.html",
      "fullClassName" : "com.adaptris.core.jms.BasicJavaxJmsMessageTranslator",
      "className" : "BasicJavaxJmsMessageTranslator",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "basic-javax-jms-message-translator",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicJavaxJmsMessageTranslator\nextends MessageTypeTranslatorImp",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicJavaxJmsMessageTranslator</span>\nextends <a href=\"MessageTypeTranslatorImp.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">MessageTypeTranslatorImp</a>",
      "description" : "Translates between AdaptrisMessage and javax.jms.Messages This implementation should be used as a last resort. It is assumed that you will be translating full implementations such as TextMessage/ObjectMessage/XmlMessage/MultipartMessage, however when that is not possible you can use this implementation that will simply move metadata and headers, no payload translation is performed.",
      "descriptionHtml" : "<p> Translates between <code>AdaptrisMessage</code> and <code>javax.jms.Messages</code> </p> \n<p> This implementation should be used as a last resort. It is assumed that you will be translating full implementations such as TextMessage/ObjectMessage/XmlMessage/MultipartMessage, however when that is not possible you can use this implementation that will simply move metadata and headers, no payload translation is performed. </p>",
      "inheritance" : [
        {
          "name" : "MessageTypeTranslatorImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageTypeTranslatorImp.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionOr.html",
      "fullClassName" : "com.adaptris.core.services.conditional.conditions.ConditionOr",
      "className" : "ConditionOr",
      "packageName" : "com.adaptris.core.services.conditional.conditions",
      "componentType" : "object",
      "alias" : "or",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Allows you to test multiple conditions, where only one has to return true.",
        "tag" : "condition"
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Allows you to test multiple conditions, where only one has to return true.\",\n                  tag=\"condition\")\npublic class ConditionOr\nextends ConditionListImpl",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Allows you to test multiple conditions, where only one has to return true.\",\n                  tag=\"condition\")\npublic class <span class=\"typeNameLabel\">ConditionOr</span>\nextends <a href=\"ConditionListImpl.html\" title=\"class in com.adaptris.core.services.conditional.conditions\" target=\"_new\">ConditionListImpl</a>",
      "description" : "This Condition allows you to configure a list of child Condition's where only one has to evaluate to \"true\".",
      "descriptionHtml" : "<p> This <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a> allows you to configure a list of child <a href=\"../Condition.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>Condition</code></a>'s where only one has to evaluate to \"true\". </p>",
      "inheritance" : [
        {
          "name" : "ConditionImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionImpl.html"
        },
        {
          "name" : "ConditionListImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/conditions/ConditionListImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/MessageSizeProducerSessionFactory.html",
      "fullClassName" : "com.adaptris.core.jms.MessageSizeProducerSessionFactory",
      "className" : "MessageSizeProducerSessionFactory",
      "packageName" : "com.adaptris.core.jms",
      "componentType" : "object",
      "alias" : "jms-message-size-producer-session",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MessageSizeProducerSessionFactory\nextends ProducerSessionFactoryImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MessageSizeProducerSessionFactory</span>\nextends <a href=\"ProducerSessionFactoryImpl.html\" title=\"class in com.adaptris.core.jms\" target=\"_new\">ProducerSessionFactoryImpl</a>",
      "description" : "Implementation of ProducerSessionFactory that creates a new session/producer based on message size. This implementaton refreshes the session based on the total size of the messages produced.",
      "descriptionHtml" : "Implementation of \n<a href=\"ProducerSessionFactory.html\" title=\"interface in com.adaptris.core.jms\" target=\"_new\"><code>ProducerSessionFactory</code></a> that creates a new session/producer based on message size. \n<p> This implementaton refreshes the session based on the total size of the messages produced. </p>",
      "inheritance" : [
        {
          "name" : "ProducerSessionFactoryImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/ProducerSessionFactoryImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/services/conditional/OnMaxStopProcessing.html",
      "fullClassName" : "com.adaptris.core.services.conditional.OnMaxStopProcessing",
      "className" : "OnMaxStopProcessing",
      "packageName" : "com.adaptris.core.services.conditional",
      "componentType" : "object",
      "alias" : "max-loops-stop-processing",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "3.9.1",
        "summary" : "MaxLoopBehaviour implementation that marks a message with 'stop-processing' flags",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"MaxLoopBehaviour implementation that marks a message with \\'stop-processing\\' flags\",\n                  since=\"3.9.1\")\npublic class OnMaxStopProcessing\nextends java.lang.Object\nimplements MaxLoopBehaviour",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"MaxLoopBehaviour implementation that marks a message with \\'stop-processing\\' flags\",\n                  since=\"3.9.1\")\npublic class <span class=\"typeNameLabel\">OnMaxStopProcessing</span>\nextends java.lang.Object\nimplements <a href=\"MaxLoopBehaviour.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\">MaxLoopBehaviour</a>",
      "description" : "MaxLoopBehaviour implementation that marks a message with metadata that stop processing. What happens will be dependent on the parent workflow and parent service collection implementation. But this implementation will mark the message with the metadata keys CoreConstants.STOP_PROCESSING_KEY and CoreConstants.KEY_WORKFLOW_SKIP_PRODUCER.",
      "descriptionHtml" : "<a href=\"MaxLoopBehaviour.html\" title=\"interface in com.adaptris.core.services.conditional\" target=\"_new\"><code>MaxLoopBehaviour</code></a> implementation that marks a message with metadata that stop processing. \n<p> What happens will be dependent on the parent workflow and parent service collection implementation. But this implementation will mark the message with the metadata keys <a href=\"../../CoreConstants.html#STOP_PROCESSING_KEY\" target=\"_new\"><code>CoreConstants.STOP_PROCESSING_KEY</code></a> and <a href=\"../../CoreConstants.html#KEY_WORKFLOW_SKIP_PRODUCER\" target=\"_new\"><code>CoreConstants.KEY_WORKFLOW_SKIP_PRODUCER</code></a>. </p> \n<p></p>",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MimeEncoder.html",
      "fullClassName" : "com.adaptris.core.MimeEncoder",
      "className" : "MimeEncoder",
      "packageName" : "com.adaptris.core",
      "componentType" : "object",
      "alias" : "mime-encoder",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MimeEncoder\nextends MimeEncoderImpl<java.io.OutputStream,​java.io.InputStream>",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MimeEncoder</span>\nextends <a href=\"MimeEncoderImpl.html\" title=\"class in com.adaptris.core\" target=\"_new\">MimeEncoderImpl</a>&lt;java.io.OutputStream,​java.io.InputStream&gt;",
      "description" : "Implementation of AdaptrisMessageEncoder that stores AdaptrisMessage payload and metadata as a mime-encoded multipart message. The metadata is treated as a though it were a set of Properties, therefore using = as part of either the metadata key or data makes the behaviour undefined. By default the data is not encoded, however this behaviour can be overriden through use of the setMetadataEncoding() and setPayloadEncoding() methods.",
      "descriptionHtml" : "<p> Implementation of <code>AdaptrisMessageEncoder</code> that stores <code>AdaptrisMessage</code> payload and metadata as a mime-encoded multipart message. </p> \n<p> The metadata is treated as a though it were a set of Properties, therefore using = as part of either the metadata key or data makes the behaviour undefined. </p> \n<p> By default the data is not encoded, however this behaviour can be overriden through use of the <code>setMetadataEncoding()</code> and <code>setPayloadEncoding()</code> methods. </p>",
      "inheritance" : [
        {
          "name" : "AdaptrisMessageEncoderImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/AdaptrisMessageEncoderImp.html"
        },
        {
          "name" : "MimeEncoderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/MimeEncoderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/rabbitmq/BasicRabbitMqJmsImplementation.html",
      "fullClassName" : "com.adaptris.core.amqp.rabbitmq.BasicRabbitMqJmsImplementation",
      "className" : "BasicRabbitMqJmsImplementation",
      "packageName" : "com.adaptris.core.amqp.rabbitmq",
      "componentType" : "object",
      "alias" : "rabbitmq-basic-jms-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-amqp.jar",
      "profile" : { },
      "annotationDetails" : "public class BasicRabbitMqJmsImplementation\nextends UrlVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">BasicRabbitMqJmsImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\">UrlVendorImplementation</a>",
      "description" : "AMQP 0.9.1 implementation of VendorImplementation using RabbitMQ. Everything required to configure the connection needs to be specified on the URL. If you configure a username and password on the wrapping JmsConnection in which case ConnectionFactory.createConnection(String, String) is used when creating the connection otherwise ConnectionFactory.createConnection() will be used. This was built against com.rabbitmq.jms:rabbitmq-jms:1.6.0 and com.rabbitmq:amqp-client:4.0.2",
      "descriptionHtml" : "AMQP 0.9.1 implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementation</code></a> using RabbitMQ. \n<p> Everything required to configure the connection needs to be specified on the URL. If you configure a username and password on the wrapping <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/JmsConnection.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>JmsConnection</code></a> in which case <code>ConnectionFactory.createConnection(String, String)</code> is used when creating the connection otherwise <code>ConnectionFactory.createConnection()</code> will be used. </p> \n<p> This was built against <code>com.rabbitmq.jms:rabbitmq-jms:1.6.0</code> and <code>com.rabbitmq:amqp-client:4.0.2</code> </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/AMQP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-amqp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/MetadataContentTypeProvider.html",
      "fullClassName" : "com.adaptris.core.http.MetadataContentTypeProvider",
      "className" : "MetadataContentTypeProvider",
      "packageName" : "com.adaptris.core.http",
      "componentType" : "object",
      "alias" : "http-metadata-content-type-provider",
      "deprecated" : false,
      "jarFileName" : "interlok-core.jar",
      "profile" : { },
      "annotationDetails" : "public class MetadataContentTypeProvider\nextends ContentTypeProviderImpl",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">MetadataContentTypeProvider</span>\nextends <a href=\"ContentTypeProviderImpl.html\" title=\"class in com.adaptris.core.http\" target=\"_new\">ContentTypeProviderImpl</a>",
      "description" : "Provides a content type derived from metadata. Note that the content type charset will be derived from AdaptrisMessage.getCharEncoding() so configuring a mime type of text/xml when the message has a char encoding of UTF-8 will return text/xml; charset=\"UTF-8\". No validation is done on the resulting string or on the value that is taken from metadata.",
      "descriptionHtml" : "Provides a content type derived from metadata. \n<p> Note that the content type charset will be derived from <a href=\"../AdaptrisMessage.html#getCharEncoding()\" target=\"_new\"><code>AdaptrisMessage.getCharEncoding()</code></a> so configuring a mime type of <code>text/xml</code> when the message has a char encoding of <code>UTF-8</code> will return <code>text/xml; charset=\"UTF-8\"</code>. No validation is done on the resulting string or on the value that is taken from metadata. </p>",
      "inheritance" : [
        {
          "name" : "ContentTypeProviderImpl",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/http/ContentTypeProviderImpl.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-core",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-filesystem/4.0.0B1-RELEASE/com/adaptris/filesystem/smbj/DefaultConfig.html",
      "fullClassName" : "com.adaptris.filesystem.smbj.DefaultConfig",
      "className" : "DefaultConfig",
      "packageName" : "com.adaptris.filesystem.smbj",
      "componentType" : "object",
      "alias" : "smb-default-config",
      "deprecated" : false,
      "jarFileName" : "interlok-filesystem.jar",
      "profile" : {
        "author" : "",
        "branchSelector" : "false",
        "metadata" : [ ],
        "recommended" : [ ],
        "since" : "",
        "summary" : "Default SMB configuration; probably acceptable in most cases",
        "tag" : ""
      },
      "annotationDetails" : "@ComponentProfile(summary=\"Default SMB configuration; probably acceptable in most cases\")\npublic class DefaultConfig\nextends java.lang.Object\nimplements ConfigProvider",
      "annotationDetailsHtml" : "@ComponentProfile(summary=\"Default SMB configuration; probably acceptable in most cases\")\npublic class <span class=\"typeNameLabel\">DefaultConfig</span>\nextends java.lang.Object\nimplements <a href=\"ConfigProvider.html\" title=\"interface in com.adaptris.filesystem.smbj\" target=\"_new\">ConfigProvider</a>",
      "description" : "Default configuration for SMB share.",
      "descriptionHtml" : "Default configuration for SMB share.",
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Storage/Filesystem",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-filesystem",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-xa-wmq/4.0.0B1-RELEASE/com/adaptris/core/jms/xa/wmq/XaAdvancedMqSeriesImplementation.html",
      "fullClassName" : "com.adaptris.core.jms.xa.wmq.XaAdvancedMqSeriesImplementation",
      "className" : "XaAdvancedMqSeriesImplementation",
      "packageName" : "com.adaptris.core.jms.xa.wmq",
      "componentType" : "object",
      "alias" : "xa-advanced-mq-series-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-xa-wmq.jar",
      "profile" : { },
      "annotationDetails" : "public class XaAdvancedMqSeriesImplementation\nextends AdvancedMqSeriesImplementation\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">XaAdvancedMqSeriesImplementation</span>\nextends <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-webspheremq/4.0.0B1-RELEASE/com/adaptris/core/jms/wmq/AdvancedMqSeriesImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms.wmq\" class=\"externalLink\" target=\"_new\">AdvancedMqSeriesImplementation</a>\nimplements com.adaptris.xa.jms.XAVendorImplementation",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "AdvancedMqSeriesImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-webspheremq/4.0.0B1-RELEASE/com/adaptris/core/jms/wmq/AdvancedMqSeriesImplementation.html?is-external=true"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok XA/WebsphereMQ",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-xa-wmq",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "pageUrl" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/qpid/AdvancedQpidImplementation.html",
      "fullClassName" : "com.adaptris.core.amqp.qpid.AdvancedQpidImplementation",
      "className" : "AdvancedQpidImplementation",
      "packageName" : "com.adaptris.core.amqp.qpid",
      "componentType" : "object",
      "alias" : "qpid-advanced-amqp-implementation",
      "deprecated" : false,
      "jarFileName" : "interlok-amqp.jar",
      "profile" : { },
      "annotationDetails" : "public class AdvancedQpidImplementation\nextends BasicQpidImplementation",
      "annotationDetailsHtml" : "public class <span class=\"typeNameLabel\">AdvancedQpidImplementation</span>\nextends <a href=\"BasicQpidImplementation.html\" title=\"class in com.adaptris.core.amqp.qpid\" target=\"_new\">BasicQpidImplementation</a>",
      "description" : "AMQP 1.0 implementation of VendorImplementation using Apache Qpid. This vendor implementation class directly exposes almost all the setters that are available in the ConnectionFactory for maximum flexibility in configuration. The main difference between this and BasicQpidImplementation is that you do not have to configure all the properties as part of the URL, which is simply a bonus for readability. The Keystore and Truststore passwords may also be encoded using Password.encode(String, String) rather than plain text. The key from the connection-factory-properties element should match the name of the underlying Qpid ConnectionFactory property.    <connection-factory-properties>\n     <key-value-pair>\n        <key>QueuePrefix</key>\n        <value>abc</value>\n     </key-value-pair>\n   </connection-factory-properties>\n will invoke ConnectionFactoryImpl.setQueuePrefix(String), setting the QueuePrefix property to \"abc\". Only explicitly configured properties will invoke the associated setter method; unmatched properties are ignored and property keys are not case sensitive This vendor implementation is suitable for use with Azure AMQP. If you are using a topic consumer then it must be a durable subscriber where the subscriptionID is the same as the subscription created in the Azure portal; the topic name should be [topic-name]/subscriptions/[subscriptionID]. Your mileage may vary but during testing this was the the only destination configuration that seemed to work; the documentation suggests that this might actually pretending to be a queue. This was built against org.apache.qpid:qpid-amqp-1-0-client-jms:0.32.",
      "descriptionHtml" : "AMQP 1.0 implementation of \n<a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementation.html?is-external=true\" title=\"class or interface in com.adaptris.core.jms\" class=\"externalLink\" target=\"_new\"><code>VendorImplementation</code></a> using Apache Qpid. \n<p> This vendor implementation class directly exposes almost all the setters that are available in the ConnectionFactory for maximum flexibility in configuration. The main difference between this and <a href=\"BasicQpidImplementation.html\" title=\"class in com.adaptris.core.amqp.qpid\" target=\"_new\"><code>BasicQpidImplementation</code></a> is that you do not have to configure all the properties as part of the URL, which is simply a bonus for readability. The Keystore and Truststore passwords may also be encoded using <a href=\"https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/security/password/Password.html?is-external=true#encode(java.lang.String,java.lang.String)\" title=\"class or interface in com.adaptris.security.password\" class=\"externalLink\" target=\"_new\"><code>Password.encode(String, String)</code></a> rather than plain text. </p> \n<p> The key from the <code>connection-factory-properties</code> element should match the name of the underlying Qpid ConnectionFactory property. </p>\n<pre>   &lt;connection-factory-properties&gt;\n     &lt;key-value-pair&gt;\n        &lt;key&gt;QueuePrefix&lt;/key&gt;\n        &lt;value&gt;abc&lt;/value&gt;\n     &lt;/key-value-pair&gt;\n   &lt;/connection-factory-properties&gt;\n </pre> will invoke \n<code>ConnectionFactoryImpl.setQueuePrefix(String)</code>, setting the QueuePrefix property to \"abc\". Only explicitly configured properties will invoke the associated setter method; unmatched properties are ignored and property keys are not case sensitive \n<p></p> \n<p> This vendor implementation is suitable for use with Azure AMQP. If you are using a topic consumer then it must be a durable subscriber where the subscriptionID is the same as the subscription created in the Azure portal; the topic name should be <code>[topic-name]/subscriptions/[subscriptionID]</code>. Your mileage may vary but during testing this was the the only destination configuration that seemed to work; the documentation suggests that this might actually pretending to be a <code>queue</code>. </p> \n<p> This was built against <code>org.apache.qpid:qpid-amqp-1-0-client-jms:0.32</code>. </p>",
      "inheritance" : [
        {
          "name" : "VendorImplementationImp",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/VendorImplementationImp.html?is-external=true"
        },
        {
          "name" : "UrlVendorImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-core/4.0.0B1-RELEASE/com/adaptris/core/jms/UrlVendorImplementation.html?is-external=true"
        },
        {
          "name" : "BasicQpidImplementation",
          "url" : "https://nexus.adaptris.net/nexus/content/sites/javadocs/com/adaptris/interlok-amqp/4.0.0B1-RELEASE/com/adaptris/core/amqp/qpid/BasicQpidImplementation.html"
        }
      ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Vendor" : "Adaptris Ltd",
        "Implementation-Title" : "Interlok Messaging/AMQP",
        "Implementation-Version" : "4.0.0B1-RELEASE",
        "Implementation-Id" : "interlok-amqp",
        "Implementation-Vendor-Id" : "com.adaptris"
      }
    },
    {
      "fullClassName" : "com.adaptris.core.stubs.EventHandlerAwareService",
      "className" : "EventHandlerAwareService",
      "packageName" : "com.adaptris.core.stubs",
      "componentType" : "service",
      "deprecated" : false,
      "jarFileName" : "interlok-stubs.jar",
      "profile" : { },
      "inheritance" : [ ],
      "interfaces" : [ ],
      "knownSubclass" : [ ],
      "methods" : { },
      "projectInfo" : {
        "Implementation-Id" : "interlok-stubs"
      }
    }
  ]
}
